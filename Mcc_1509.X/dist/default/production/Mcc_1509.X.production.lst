

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Jun 21 13:05:35 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F1509
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,inline,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,inline,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	psect	text42,local,class=CODE,merge=1,delta=2
    62                           	psect	text43,local,class=CODE,merge=1,delta=2
    63                           	psect	text44,local,class=CODE,merge=1,delta=2
    64                           	psect	text45,local,class=CODE,merge=1,delta=2
    65                           	psect	text46,local,class=CODE,merge=1,inline,delta=2
    66                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    67                           	psect	text48,local,class=CODE,merge=1,inline,delta=2
    68                           	psect	text49,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text51,local,class=CODE,merge=1,inline,delta=2
    71                           	psect	text52,local,class=CODE,merge=1,inline,delta=2
    72                           	psect	text53,local,class=CODE,merge=1,delta=2
    73                           	psect	text54,local,class=CODE,merge=1,delta=2
    74                           	psect	text55,local,class=CODE,merge=1,delta=2
    75                           	psect	text56,local,class=CODE,merge=1,delta=2
    76                           	psect	text57,local,class=CODE,merge=1,delta=2
    77                           	psect	text58,local,class=CODE,merge=1,delta=2
    78                           	psect	text59,local,class=CODE,merge=1,delta=2
    79                           	psect	text60,local,class=CODE,merge=1,delta=2
    80                           	psect	text61,local,class=CODE,merge=1,delta=2
    81                           	psect	text62,local,class=CODE,merge=1,delta=2
    82                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
    83                           	psect	text64,local,class=CODE,merge=1,inline,delta=2
    84                           	psect	text65,local,class=CODE,merge=1,inline,delta=2
    85                           	psect	text66,local,class=CODE,merge=1,delta=2
    86                           	psect	text67,local,class=CODE,merge=1,inline,delta=2
    87                           	psect	text68,local,class=CODE,merge=1,inline,delta=2
    88                           	psect	text69,local,class=CODE,merge=1,inline,delta=2
    89                           	psect	text70,local,class=CODE,merge=1,delta=2
    90                           	psect	text71,local,class=CODE,merge=1,delta=2
    91                           	psect	text72,local,class=CODE,merge=1,delta=2
    92                           	psect	intentry,global,class=CODE,delta=2
    93                           	psect	text74,local,class=CODE,merge=1,delta=2
    94                           	psect	text75,local,class=CODE,merge=1,delta=2
    95                           	psect	text76,local,class=CODE,merge=1,delta=2
    96                           	psect	text77,local,class=CODE,merge=1,delta=2
    97                           	psect	text78,local,class=CODE,merge=1,delta=2
    98                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    99                           	dabs	1,0x7E,2
   100  0000                     
   101                           ; Version 2.20
   102                           ; Generated 12/02/2020 GMT
   103                           ; 
   104                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   105                           ; All rights reserved.
   106                           ; 
   107                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   108                           ; 
   109                           ; Redistribution and use in source and binary forms, with or without modification, are
   110                           ; permitted provided that the following conditions are met:
   111                           ; 
   112                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   113                           ;        conditions and the following disclaimer.
   114                           ; 
   115                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   116                           ;        of conditions and the following disclaimer in the documentation and/or other
   117                           ;        materials provided with the distribution.
   118                           ; 
   119                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   120                           ;        software without specific prior written permission.
   121                           ; 
   122                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   123                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   124                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   125                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   126                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   127                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   128                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   129                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   130                           ; 
   131                           ; 
   132                           ; Code-generator required, PIC16F1509 Definitions
   133                           ; 
   134                           ; SFR Addresses
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  0091                     	;# 
   166  0092                     	;# 
   167  0093                     	;# 
   168  0095                     	;# 
   169  0096                     	;# 
   170  0097                     	;# 
   171  0099                     	;# 
   172  009A                     	;# 
   173  009B                     	;# 
   174  009B                     	;# 
   175  009C                     	;# 
   176  009D                     	;# 
   177  009E                     	;# 
   178  009F                     	;# 
   179  010C                     	;# 
   180  010D                     	;# 
   181  010E                     	;# 
   182  0111                     	;# 
   183  0112                     	;# 
   184  0113                     	;# 
   185  0114                     	;# 
   186  0115                     	;# 
   187  0116                     	;# 
   188  0117                     	;# 
   189  0118                     	;# 
   190  0119                     	;# 
   191  011D                     	;# 
   192  018C                     	;# 
   193  018D                     	;# 
   194  018E                     	;# 
   195  0191                     	;# 
   196  0191                     	;# 
   197  0192                     	;# 
   198  0193                     	;# 
   199  0193                     	;# 
   200  0194                     	;# 
   201  0195                     	;# 
   202  0196                     	;# 
   203  0197                     	;# 
   204  0199                     	;# 
   205  019A                     	;# 
   206  019B                     	;# 
   207  019B                     	;# 
   208  019C                     	;# 
   209  019D                     	;# 
   210  019E                     	;# 
   211  019F                     	;# 
   212  020C                     	;# 
   213  020D                     	;# 
   214  0211                     	;# 
   215  0211                     	;# 
   216  0212                     	;# 
   217  0212                     	;# 
   218  0213                     	;# 
   219  0213                     	;# 
   220  0214                     	;# 
   221  0214                     	;# 
   222  0215                     	;# 
   223  0215                     	;# 
   224  0215                     	;# 
   225  0216                     	;# 
   226  0216                     	;# 
   227  0217                     	;# 
   228  0217                     	;# 
   229  0391                     	;# 
   230  0392                     	;# 
   231  0393                     	;# 
   232  0394                     	;# 
   233  0395                     	;# 
   234  0396                     	;# 
   235  0498                     	;# 
   236  0498                     	;# 
   237  0499                     	;# 
   238  049A                     	;# 
   239  049B                     	;# 
   240  049B                     	;# 
   241  049C                     	;# 
   242  049D                     	;# 
   243  049E                     	;# 
   244  049F                     	;# 
   245  0611                     	;# 
   246  0612                     	;# 
   247  0613                     	;# 
   248  0613                     	;# 
   249  0614                     	;# 
   250  0615                     	;# 
   251  0616                     	;# 
   252  0616                     	;# 
   253  0617                     	;# 
   254  0618                     	;# 
   255  0619                     	;# 
   256  0619                     	;# 
   257  061A                     	;# 
   258  061B                     	;# 
   259  061C                     	;# 
   260  061C                     	;# 
   261  0691                     	;# 
   262  0692                     	;# 
   263  0693                     	;# 
   264  0694                     	;# 
   265  0695                     	;# 
   266  0F0F                     	;# 
   267  0F10                     	;# 
   268  0F11                     	;# 
   269  0F12                     	;# 
   270  0F13                     	;# 
   271  0F14                     	;# 
   272  0F15                     	;# 
   273  0F16                     	;# 
   274  0F17                     	;# 
   275  0F18                     	;# 
   276  0F19                     	;# 
   277  0F1A                     	;# 
   278  0F1B                     	;# 
   279  0F1C                     	;# 
   280  0F1D                     	;# 
   281  0F1E                     	;# 
   282  0F1F                     	;# 
   283  0F20                     	;# 
   284  0F21                     	;# 
   285  0F22                     	;# 
   286  0F23                     	;# 
   287  0F24                     	;# 
   288  0F25                     	;# 
   289  0F26                     	;# 
   290  0F27                     	;# 
   291  0F28                     	;# 
   292  0F29                     	;# 
   293  0F2A                     	;# 
   294  0F2B                     	;# 
   295  0F2C                     	;# 
   296  0F2D                     	;# 
   297  0F2E                     	;# 
   298  0F2F                     	;# 
   299  0F8C                     	;# 
   300  0F8D                     	;# 
   301  0F91                     	;# 
   302  0F95                     	;# 
   303  0F96                     	;# 
   304  0F97                     	;# 
   305  0F9C                     	;# 
   306  0F9D                     	;# 
   307  0F9E                     	;# 
   308  0FE3                     	;# 
   309  0FE4                     	;# 
   310  0FE5                     	;# 
   311  0FE6                     	;# 
   312  0FE7                     	;# 
   313  0FE8                     	;# 
   314  0FE9                     	;# 
   315  0FEA                     	;# 
   316  0FEB                     	;# 
   317  0FED                     	;# 
   318  0FEE                     	;# 
   319  0FEF                     	;# 
   320  0000                     	;# 
   321  0001                     	;# 
   322  0002                     	;# 
   323  0003                     	;# 
   324  0004                     	;# 
   325  0005                     	;# 
   326  0006                     	;# 
   327  0007                     	;# 
   328  0008                     	;# 
   329  0009                     	;# 
   330  000A                     	;# 
   331  000B                     	;# 
   332  000C                     	;# 
   333  000D                     	;# 
   334  000E                     	;# 
   335  0011                     	;# 
   336  0012                     	;# 
   337  0013                     	;# 
   338  0015                     	;# 
   339  0016                     	;# 
   340  0016                     	;# 
   341  0017                     	;# 
   342  0018                     	;# 
   343  0019                     	;# 
   344  001A                     	;# 
   345  001B                     	;# 
   346  001C                     	;# 
   347  008C                     	;# 
   348  008D                     	;# 
   349  008E                     	;# 
   350  0091                     	;# 
   351  0092                     	;# 
   352  0093                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009B                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  010C                     	;# 
   365  010D                     	;# 
   366  010E                     	;# 
   367  0111                     	;# 
   368  0112                     	;# 
   369  0113                     	;# 
   370  0114                     	;# 
   371  0115                     	;# 
   372  0116                     	;# 
   373  0117                     	;# 
   374  0118                     	;# 
   375  0119                     	;# 
   376  011D                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  018E                     	;# 
   380  0191                     	;# 
   381  0191                     	;# 
   382  0192                     	;# 
   383  0193                     	;# 
   384  0193                     	;# 
   385  0194                     	;# 
   386  0195                     	;# 
   387  0196                     	;# 
   388  0197                     	;# 
   389  0199                     	;# 
   390  019A                     	;# 
   391  019B                     	;# 
   392  019B                     	;# 
   393  019C                     	;# 
   394  019D                     	;# 
   395  019E                     	;# 
   396  019F                     	;# 
   397  020C                     	;# 
   398  020D                     	;# 
   399  0211                     	;# 
   400  0211                     	;# 
   401  0212                     	;# 
   402  0212                     	;# 
   403  0213                     	;# 
   404  0213                     	;# 
   405  0214                     	;# 
   406  0214                     	;# 
   407  0215                     	;# 
   408  0215                     	;# 
   409  0215                     	;# 
   410  0216                     	;# 
   411  0216                     	;# 
   412  0217                     	;# 
   413  0217                     	;# 
   414  0391                     	;# 
   415  0392                     	;# 
   416  0393                     	;# 
   417  0394                     	;# 
   418  0395                     	;# 
   419  0396                     	;# 
   420  0498                     	;# 
   421  0498                     	;# 
   422  0499                     	;# 
   423  049A                     	;# 
   424  049B                     	;# 
   425  049B                     	;# 
   426  049C                     	;# 
   427  049D                     	;# 
   428  049E                     	;# 
   429  049F                     	;# 
   430  0611                     	;# 
   431  0612                     	;# 
   432  0613                     	;# 
   433  0613                     	;# 
   434  0614                     	;# 
   435  0615                     	;# 
   436  0616                     	;# 
   437  0616                     	;# 
   438  0617                     	;# 
   439  0618                     	;# 
   440  0619                     	;# 
   441  0619                     	;# 
   442  061A                     	;# 
   443  061B                     	;# 
   444  061C                     	;# 
   445  061C                     	;# 
   446  0691                     	;# 
   447  0692                     	;# 
   448  0693                     	;# 
   449  0694                     	;# 
   450  0695                     	;# 
   451  0F0F                     	;# 
   452  0F10                     	;# 
   453  0F11                     	;# 
   454  0F12                     	;# 
   455  0F13                     	;# 
   456  0F14                     	;# 
   457  0F15                     	;# 
   458  0F16                     	;# 
   459  0F17                     	;# 
   460  0F18                     	;# 
   461  0F19                     	;# 
   462  0F1A                     	;# 
   463  0F1B                     	;# 
   464  0F1C                     	;# 
   465  0F1D                     	;# 
   466  0F1E                     	;# 
   467  0F1F                     	;# 
   468  0F20                     	;# 
   469  0F21                     	;# 
   470  0F22                     	;# 
   471  0F23                     	;# 
   472  0F24                     	;# 
   473  0F25                     	;# 
   474  0F26                     	;# 
   475  0F27                     	;# 
   476  0F28                     	;# 
   477  0F29                     	;# 
   478  0F2A                     	;# 
   479  0F2B                     	;# 
   480  0F2C                     	;# 
   481  0F2D                     	;# 
   482  0F2E                     	;# 
   483  0F2F                     	;# 
   484  0F8C                     	;# 
   485  0F8D                     	;# 
   486  0F91                     	;# 
   487  0F95                     	;# 
   488  0F96                     	;# 
   489  0F97                     	;# 
   490  0F9C                     	;# 
   491  0F9D                     	;# 
   492  0F9E                     	;# 
   493  0FE3                     	;# 
   494  0FE4                     	;# 
   495  0FE5                     	;# 
   496  0FE6                     	;# 
   497  0FE7                     	;# 
   498  0FE8                     	;# 
   499  0FE9                     	;# 
   500  0FEA                     	;# 
   501  0FEB                     	;# 
   502  0FED                     	;# 
   503  0FEE                     	;# 
   504  0FEF                     	;# 
   505  0000                     	;# 
   506  0001                     	;# 
   507  0002                     	;# 
   508  0003                     	;# 
   509  0004                     	;# 
   510  0005                     	;# 
   511  0006                     	;# 
   512  0007                     	;# 
   513  0008                     	;# 
   514  0009                     	;# 
   515  000A                     	;# 
   516  000B                     	;# 
   517  000C                     	;# 
   518  000D                     	;# 
   519  000E                     	;# 
   520  0011                     	;# 
   521  0012                     	;# 
   522  0013                     	;# 
   523  0015                     	;# 
   524  0016                     	;# 
   525  0016                     	;# 
   526  0017                     	;# 
   527  0018                     	;# 
   528  0019                     	;# 
   529  001A                     	;# 
   530  001B                     	;# 
   531  001C                     	;# 
   532  008C                     	;# 
   533  008D                     	;# 
   534  008E                     	;# 
   535  0091                     	;# 
   536  0092                     	;# 
   537  0093                     	;# 
   538  0095                     	;# 
   539  0096                     	;# 
   540  0097                     	;# 
   541  0099                     	;# 
   542  009A                     	;# 
   543  009B                     	;# 
   544  009B                     	;# 
   545  009C                     	;# 
   546  009D                     	;# 
   547  009E                     	;# 
   548  009F                     	;# 
   549  010C                     	;# 
   550  010D                     	;# 
   551  010E                     	;# 
   552  0111                     	;# 
   553  0112                     	;# 
   554  0113                     	;# 
   555  0114                     	;# 
   556  0115                     	;# 
   557  0116                     	;# 
   558  0117                     	;# 
   559  0118                     	;# 
   560  0119                     	;# 
   561  011D                     	;# 
   562  018C                     	;# 
   563  018D                     	;# 
   564  018E                     	;# 
   565  0191                     	;# 
   566  0191                     	;# 
   567  0192                     	;# 
   568  0193                     	;# 
   569  0193                     	;# 
   570  0194                     	;# 
   571  0195                     	;# 
   572  0196                     	;# 
   573  0197                     	;# 
   574  0199                     	;# 
   575  019A                     	;# 
   576  019B                     	;# 
   577  019B                     	;# 
   578  019C                     	;# 
   579  019D                     	;# 
   580  019E                     	;# 
   581  019F                     	;# 
   582  020C                     	;# 
   583  020D                     	;# 
   584  0211                     	;# 
   585  0211                     	;# 
   586  0212                     	;# 
   587  0212                     	;# 
   588  0213                     	;# 
   589  0213                     	;# 
   590  0214                     	;# 
   591  0214                     	;# 
   592  0215                     	;# 
   593  0215                     	;# 
   594  0215                     	;# 
   595  0216                     	;# 
   596  0216                     	;# 
   597  0217                     	;# 
   598  0217                     	;# 
   599  0391                     	;# 
   600  0392                     	;# 
   601  0393                     	;# 
   602  0394                     	;# 
   603  0395                     	;# 
   604  0396                     	;# 
   605  0498                     	;# 
   606  0498                     	;# 
   607  0499                     	;# 
   608  049A                     	;# 
   609  049B                     	;# 
   610  049B                     	;# 
   611  049C                     	;# 
   612  049D                     	;# 
   613  049E                     	;# 
   614  049F                     	;# 
   615  0611                     	;# 
   616  0612                     	;# 
   617  0613                     	;# 
   618  0613                     	;# 
   619  0614                     	;# 
   620  0615                     	;# 
   621  0616                     	;# 
   622  0616                     	;# 
   623  0617                     	;# 
   624  0618                     	;# 
   625  0619                     	;# 
   626  0619                     	;# 
   627  061A                     	;# 
   628  061B                     	;# 
   629  061C                     	;# 
   630  061C                     	;# 
   631  0691                     	;# 
   632  0692                     	;# 
   633  0693                     	;# 
   634  0694                     	;# 
   635  0695                     	;# 
   636  0F0F                     	;# 
   637  0F10                     	;# 
   638  0F11                     	;# 
   639  0F12                     	;# 
   640  0F13                     	;# 
   641  0F14                     	;# 
   642  0F15                     	;# 
   643  0F16                     	;# 
   644  0F17                     	;# 
   645  0F18                     	;# 
   646  0F19                     	;# 
   647  0F1A                     	;# 
   648  0F1B                     	;# 
   649  0F1C                     	;# 
   650  0F1D                     	;# 
   651  0F1E                     	;# 
   652  0F1F                     	;# 
   653  0F20                     	;# 
   654  0F21                     	;# 
   655  0F22                     	;# 
   656  0F23                     	;# 
   657  0F24                     	;# 
   658  0F25                     	;# 
   659  0F26                     	;# 
   660  0F27                     	;# 
   661  0F28                     	;# 
   662  0F29                     	;# 
   663  0F2A                     	;# 
   664  0F2B                     	;# 
   665  0F2C                     	;# 
   666  0F2D                     	;# 
   667  0F2E                     	;# 
   668  0F2F                     	;# 
   669  0F8C                     	;# 
   670  0F8D                     	;# 
   671  0F91                     	;# 
   672  0F95                     	;# 
   673  0F96                     	;# 
   674  0F97                     	;# 
   675  0F9C                     	;# 
   676  0F9D                     	;# 
   677  0F9E                     	;# 
   678  0FE3                     	;# 
   679  0FE4                     	;# 
   680  0FE5                     	;# 
   681  0FE6                     	;# 
   682  0FE7                     	;# 
   683  0FE8                     	;# 
   684  0FE9                     	;# 
   685  0FEA                     	;# 
   686  0FEB                     	;# 
   687  0FED                     	;# 
   688  0FEE                     	;# 
   689  0FEF                     	;# 
   690  0000                     	;# 
   691  0001                     	;# 
   692  0002                     	;# 
   693  0003                     	;# 
   694  0004                     	;# 
   695  0005                     	;# 
   696  0006                     	;# 
   697  0007                     	;# 
   698  0008                     	;# 
   699  0009                     	;# 
   700  000A                     	;# 
   701  000B                     	;# 
   702  000C                     	;# 
   703  000D                     	;# 
   704  000E                     	;# 
   705  0011                     	;# 
   706  0012                     	;# 
   707  0013                     	;# 
   708  0015                     	;# 
   709  0016                     	;# 
   710  0016                     	;# 
   711  0017                     	;# 
   712  0018                     	;# 
   713  0019                     	;# 
   714  001A                     	;# 
   715  001B                     	;# 
   716  001C                     	;# 
   717  008C                     	;# 
   718  008D                     	;# 
   719  008E                     	;# 
   720  0091                     	;# 
   721  0092                     	;# 
   722  0093                     	;# 
   723  0095                     	;# 
   724  0096                     	;# 
   725  0097                     	;# 
   726  0099                     	;# 
   727  009A                     	;# 
   728  009B                     	;# 
   729  009B                     	;# 
   730  009C                     	;# 
   731  009D                     	;# 
   732  009E                     	;# 
   733  009F                     	;# 
   734  010C                     	;# 
   735  010D                     	;# 
   736  010E                     	;# 
   737  0111                     	;# 
   738  0112                     	;# 
   739  0113                     	;# 
   740  0114                     	;# 
   741  0115                     	;# 
   742  0116                     	;# 
   743  0117                     	;# 
   744  0118                     	;# 
   745  0119                     	;# 
   746  011D                     	;# 
   747  018C                     	;# 
   748  018D                     	;# 
   749  018E                     	;# 
   750  0191                     	;# 
   751  0191                     	;# 
   752  0192                     	;# 
   753  0193                     	;# 
   754  0193                     	;# 
   755  0194                     	;# 
   756  0195                     	;# 
   757  0196                     	;# 
   758  0197                     	;# 
   759  0199                     	;# 
   760  019A                     	;# 
   761  019B                     	;# 
   762  019B                     	;# 
   763  019C                     	;# 
   764  019D                     	;# 
   765  019E                     	;# 
   766  019F                     	;# 
   767  020C                     	;# 
   768  020D                     	;# 
   769  0211                     	;# 
   770  0211                     	;# 
   771  0212                     	;# 
   772  0212                     	;# 
   773  0213                     	;# 
   774  0213                     	;# 
   775  0214                     	;# 
   776  0214                     	;# 
   777  0215                     	;# 
   778  0215                     	;# 
   779  0215                     	;# 
   780  0216                     	;# 
   781  0216                     	;# 
   782  0217                     	;# 
   783  0217                     	;# 
   784  0391                     	;# 
   785  0392                     	;# 
   786  0393                     	;# 
   787  0394                     	;# 
   788  0395                     	;# 
   789  0396                     	;# 
   790  0498                     	;# 
   791  0498                     	;# 
   792  0499                     	;# 
   793  049A                     	;# 
   794  049B                     	;# 
   795  049B                     	;# 
   796  049C                     	;# 
   797  049D                     	;# 
   798  049E                     	;# 
   799  049F                     	;# 
   800  0611                     	;# 
   801  0612                     	;# 
   802  0613                     	;# 
   803  0613                     	;# 
   804  0614                     	;# 
   805  0615                     	;# 
   806  0616                     	;# 
   807  0616                     	;# 
   808  0617                     	;# 
   809  0618                     	;# 
   810  0619                     	;# 
   811  0619                     	;# 
   812  061A                     	;# 
   813  061B                     	;# 
   814  061C                     	;# 
   815  061C                     	;# 
   816  0691                     	;# 
   817  0692                     	;# 
   818  0693                     	;# 
   819  0694                     	;# 
   820  0695                     	;# 
   821  0F0F                     	;# 
   822  0F10                     	;# 
   823  0F11                     	;# 
   824  0F12                     	;# 
   825  0F13                     	;# 
   826  0F14                     	;# 
   827  0F15                     	;# 
   828  0F16                     	;# 
   829  0F17                     	;# 
   830  0F18                     	;# 
   831  0F19                     	;# 
   832  0F1A                     	;# 
   833  0F1B                     	;# 
   834  0F1C                     	;# 
   835  0F1D                     	;# 
   836  0F1E                     	;# 
   837  0F1F                     	;# 
   838  0F20                     	;# 
   839  0F21                     	;# 
   840  0F22                     	;# 
   841  0F23                     	;# 
   842  0F24                     	;# 
   843  0F25                     	;# 
   844  0F26                     	;# 
   845  0F27                     	;# 
   846  0F28                     	;# 
   847  0F29                     	;# 
   848  0F2A                     	;# 
   849  0F2B                     	;# 
   850  0F2C                     	;# 
   851  0F2D                     	;# 
   852  0F2E                     	;# 
   853  0F2F                     	;# 
   854  0F8C                     	;# 
   855  0F8D                     	;# 
   856  0F91                     	;# 
   857  0F95                     	;# 
   858  0F96                     	;# 
   859  0F97                     	;# 
   860  0F9C                     	;# 
   861  0F9D                     	;# 
   862  0F9E                     	;# 
   863  0FE3                     	;# 
   864  0FE4                     	;# 
   865  0FE5                     	;# 
   866  0FE6                     	;# 
   867  0FE7                     	;# 
   868  0FE8                     	;# 
   869  0FE9                     	;# 
   870  0FEA                     	;# 
   871  0FEB                     	;# 
   872  0FED                     	;# 
   873  0FEE                     	;# 
   874  0FEF                     	;# 
   875  0000                     	;# 
   876  0001                     	;# 
   877  0002                     	;# 
   878  0003                     	;# 
   879  0004                     	;# 
   880  0005                     	;# 
   881  0006                     	;# 
   882  0007                     	;# 
   883  0008                     	;# 
   884  0009                     	;# 
   885  000A                     	;# 
   886  000B                     	;# 
   887  000C                     	;# 
   888  000D                     	;# 
   889  000E                     	;# 
   890  0011                     	;# 
   891  0012                     	;# 
   892  0013                     	;# 
   893  0015                     	;# 
   894  0016                     	;# 
   895  0016                     	;# 
   896  0017                     	;# 
   897  0018                     	;# 
   898  0019                     	;# 
   899  001A                     	;# 
   900  001B                     	;# 
   901  001C                     	;# 
   902  008C                     	;# 
   903  008D                     	;# 
   904  008E                     	;# 
   905  0091                     	;# 
   906  0092                     	;# 
   907  0093                     	;# 
   908  0095                     	;# 
   909  0096                     	;# 
   910  0097                     	;# 
   911  0099                     	;# 
   912  009A                     	;# 
   913  009B                     	;# 
   914  009B                     	;# 
   915  009C                     	;# 
   916  009D                     	;# 
   917  009E                     	;# 
   918  009F                     	;# 
   919  010C                     	;# 
   920  010D                     	;# 
   921  010E                     	;# 
   922  0111                     	;# 
   923  0112                     	;# 
   924  0113                     	;# 
   925  0114                     	;# 
   926  0115                     	;# 
   927  0116                     	;# 
   928  0117                     	;# 
   929  0118                     	;# 
   930  0119                     	;# 
   931  011D                     	;# 
   932  018C                     	;# 
   933  018D                     	;# 
   934  018E                     	;# 
   935  0191                     	;# 
   936  0191                     	;# 
   937  0192                     	;# 
   938  0193                     	;# 
   939  0193                     	;# 
   940  0194                     	;# 
   941  0195                     	;# 
   942  0196                     	;# 
   943  0197                     	;# 
   944  0199                     	;# 
   945  019A                     	;# 
   946  019B                     	;# 
   947  019B                     	;# 
   948  019C                     	;# 
   949  019D                     	;# 
   950  019E                     	;# 
   951  019F                     	;# 
   952  020C                     	;# 
   953  020D                     	;# 
   954  0211                     	;# 
   955  0211                     	;# 
   956  0212                     	;# 
   957  0212                     	;# 
   958  0213                     	;# 
   959  0213                     	;# 
   960  0214                     	;# 
   961  0214                     	;# 
   962  0215                     	;# 
   963  0215                     	;# 
   964  0215                     	;# 
   965  0216                     	;# 
   966  0216                     	;# 
   967  0217                     	;# 
   968  0217                     	;# 
   969  0391                     	;# 
   970  0392                     	;# 
   971  0393                     	;# 
   972  0394                     	;# 
   973  0395                     	;# 
   974  0396                     	;# 
   975  0498                     	;# 
   976  0498                     	;# 
   977  0499                     	;# 
   978  049A                     	;# 
   979  049B                     	;# 
   980  049B                     	;# 
   981  049C                     	;# 
   982  049D                     	;# 
   983  049E                     	;# 
   984  049F                     	;# 
   985  0611                     	;# 
   986  0612                     	;# 
   987  0613                     	;# 
   988  0613                     	;# 
   989  0614                     	;# 
   990  0615                     	;# 
   991  0616                     	;# 
   992  0616                     	;# 
   993  0617                     	;# 
   994  0618                     	;# 
   995  0619                     	;# 
   996  0619                     	;# 
   997  061A                     	;# 
   998  061B                     	;# 
   999  061C                     	;# 
  1000  061C                     	;# 
  1001  0691                     	;# 
  1002  0692                     	;# 
  1003  0693                     	;# 
  1004  0694                     	;# 
  1005  0695                     	;# 
  1006  0F0F                     	;# 
  1007  0F10                     	;# 
  1008  0F11                     	;# 
  1009  0F12                     	;# 
  1010  0F13                     	;# 
  1011  0F14                     	;# 
  1012  0F15                     	;# 
  1013  0F16                     	;# 
  1014  0F17                     	;# 
  1015  0F18                     	;# 
  1016  0F19                     	;# 
  1017  0F1A                     	;# 
  1018  0F1B                     	;# 
  1019  0F1C                     	;# 
  1020  0F1D                     	;# 
  1021  0F1E                     	;# 
  1022  0F1F                     	;# 
  1023  0F20                     	;# 
  1024  0F21                     	;# 
  1025  0F22                     	;# 
  1026  0F23                     	;# 
  1027  0F24                     	;# 
  1028  0F25                     	;# 
  1029  0F26                     	;# 
  1030  0F27                     	;# 
  1031  0F28                     	;# 
  1032  0F29                     	;# 
  1033  0F2A                     	;# 
  1034  0F2B                     	;# 
  1035  0F2C                     	;# 
  1036  0F2D                     	;# 
  1037  0F2E                     	;# 
  1038  0F2F                     	;# 
  1039  0F8C                     	;# 
  1040  0F8D                     	;# 
  1041  0F91                     	;# 
  1042  0F95                     	;# 
  1043  0F96                     	;# 
  1044  0F97                     	;# 
  1045  0F9C                     	;# 
  1046  0F9D                     	;# 
  1047  0F9E                     	;# 
  1048  0FE3                     	;# 
  1049  0FE4                     	;# 
  1050  0FE5                     	;# 
  1051  0FE6                     	;# 
  1052  0FE7                     	;# 
  1053  0FE8                     	;# 
  1054  0FE9                     	;# 
  1055  0FEA                     	;# 
  1056  0FEB                     	;# 
  1057  0FED                     	;# 
  1058  0FEE                     	;# 
  1059  0FEF                     	;# 
  1060  0000                     	;# 
  1061  0001                     	;# 
  1062  0002                     	;# 
  1063  0003                     	;# 
  1064  0004                     	;# 
  1065  0005                     	;# 
  1066  0006                     	;# 
  1067  0007                     	;# 
  1068  0008                     	;# 
  1069  0009                     	;# 
  1070  000A                     	;# 
  1071  000B                     	;# 
  1072  000C                     	;# 
  1073  000D                     	;# 
  1074  000E                     	;# 
  1075  0011                     	;# 
  1076  0012                     	;# 
  1077  0013                     	;# 
  1078  0015                     	;# 
  1079  0016                     	;# 
  1080  0016                     	;# 
  1081  0017                     	;# 
  1082  0018                     	;# 
  1083  0019                     	;# 
  1084  001A                     	;# 
  1085  001B                     	;# 
  1086  001C                     	;# 
  1087  008C                     	;# 
  1088  008D                     	;# 
  1089  008E                     	;# 
  1090  0091                     	;# 
  1091  0092                     	;# 
  1092  0093                     	;# 
  1093  0095                     	;# 
  1094  0096                     	;# 
  1095  0097                     	;# 
  1096  0099                     	;# 
  1097  009A                     	;# 
  1098  009B                     	;# 
  1099  009B                     	;# 
  1100  009C                     	;# 
  1101  009D                     	;# 
  1102  009E                     	;# 
  1103  009F                     	;# 
  1104  010C                     	;# 
  1105  010D                     	;# 
  1106  010E                     	;# 
  1107  0111                     	;# 
  1108  0112                     	;# 
  1109  0113                     	;# 
  1110  0114                     	;# 
  1111  0115                     	;# 
  1112  0116                     	;# 
  1113  0117                     	;# 
  1114  0118                     	;# 
  1115  0119                     	;# 
  1116  011D                     	;# 
  1117  018C                     	;# 
  1118  018D                     	;# 
  1119  018E                     	;# 
  1120  0191                     	;# 
  1121  0191                     	;# 
  1122  0192                     	;# 
  1123  0193                     	;# 
  1124  0193                     	;# 
  1125  0194                     	;# 
  1126  0195                     	;# 
  1127  0196                     	;# 
  1128  0197                     	;# 
  1129  0199                     	;# 
  1130  019A                     	;# 
  1131  019B                     	;# 
  1132  019B                     	;# 
  1133  019C                     	;# 
  1134  019D                     	;# 
  1135  019E                     	;# 
  1136  019F                     	;# 
  1137  020C                     	;# 
  1138  020D                     	;# 
  1139  0211                     	;# 
  1140  0211                     	;# 
  1141  0212                     	;# 
  1142  0212                     	;# 
  1143  0213                     	;# 
  1144  0213                     	;# 
  1145  0214                     	;# 
  1146  0214                     	;# 
  1147  0215                     	;# 
  1148  0215                     	;# 
  1149  0215                     	;# 
  1150  0216                     	;# 
  1151  0216                     	;# 
  1152  0217                     	;# 
  1153  0217                     	;# 
  1154  0391                     	;# 
  1155  0392                     	;# 
  1156  0393                     	;# 
  1157  0394                     	;# 
  1158  0395                     	;# 
  1159  0396                     	;# 
  1160  0498                     	;# 
  1161  0498                     	;# 
  1162  0499                     	;# 
  1163  049A                     	;# 
  1164  049B                     	;# 
  1165  049B                     	;# 
  1166  049C                     	;# 
  1167  049D                     	;# 
  1168  049E                     	;# 
  1169  049F                     	;# 
  1170  0611                     	;# 
  1171  0612                     	;# 
  1172  0613                     	;# 
  1173  0613                     	;# 
  1174  0614                     	;# 
  1175  0615                     	;# 
  1176  0616                     	;# 
  1177  0616                     	;# 
  1178  0617                     	;# 
  1179  0618                     	;# 
  1180  0619                     	;# 
  1181  0619                     	;# 
  1182  061A                     	;# 
  1183  061B                     	;# 
  1184  061C                     	;# 
  1185  061C                     	;# 
  1186  0691                     	;# 
  1187  0692                     	;# 
  1188  0693                     	;# 
  1189  0694                     	;# 
  1190  0695                     	;# 
  1191  0F0F                     	;# 
  1192  0F10                     	;# 
  1193  0F11                     	;# 
  1194  0F12                     	;# 
  1195  0F13                     	;# 
  1196  0F14                     	;# 
  1197  0F15                     	;# 
  1198  0F16                     	;# 
  1199  0F17                     	;# 
  1200  0F18                     	;# 
  1201  0F19                     	;# 
  1202  0F1A                     	;# 
  1203  0F1B                     	;# 
  1204  0F1C                     	;# 
  1205  0F1D                     	;# 
  1206  0F1E                     	;# 
  1207  0F1F                     	;# 
  1208  0F20                     	;# 
  1209  0F21                     	;# 
  1210  0F22                     	;# 
  1211  0F23                     	;# 
  1212  0F24                     	;# 
  1213  0F25                     	;# 
  1214  0F26                     	;# 
  1215  0F27                     	;# 
  1216  0F28                     	;# 
  1217  0F29                     	;# 
  1218  0F2A                     	;# 
  1219  0F2B                     	;# 
  1220  0F2C                     	;# 
  1221  0F2D                     	;# 
  1222  0F2E                     	;# 
  1223  0F2F                     	;# 
  1224  0F8C                     	;# 
  1225  0F8D                     	;# 
  1226  0F91                     	;# 
  1227  0F95                     	;# 
  1228  0F96                     	;# 
  1229  0F97                     	;# 
  1230  0F9C                     	;# 
  1231  0F9D                     	;# 
  1232  0F9E                     	;# 
  1233  0FE3                     	;# 
  1234  0FE4                     	;# 
  1235  0FE5                     	;# 
  1236  0FE6                     	;# 
  1237  0FE7                     	;# 
  1238  0FE8                     	;# 
  1239  0FE9                     	;# 
  1240  0FEA                     	;# 
  1241  0FEB                     	;# 
  1242  0FED                     	;# 
  1243  0FEE                     	;# 
  1244  0FEF                     	;# 
  1245  0000                     	;# 
  1246  0001                     	;# 
  1247  0002                     	;# 
  1248  0003                     	;# 
  1249  0004                     	;# 
  1250  0005                     	;# 
  1251  0006                     	;# 
  1252  0007                     	;# 
  1253  0008                     	;# 
  1254  0009                     	;# 
  1255  000A                     	;# 
  1256  000B                     	;# 
  1257  000C                     	;# 
  1258  000D                     	;# 
  1259  000E                     	;# 
  1260  0011                     	;# 
  1261  0012                     	;# 
  1262  0013                     	;# 
  1263  0015                     	;# 
  1264  0016                     	;# 
  1265  0016                     	;# 
  1266  0017                     	;# 
  1267  0018                     	;# 
  1268  0019                     	;# 
  1269  001A                     	;# 
  1270  001B                     	;# 
  1271  001C                     	;# 
  1272  008C                     	;# 
  1273  008D                     	;# 
  1274  008E                     	;# 
  1275  0091                     	;# 
  1276  0092                     	;# 
  1277  0093                     	;# 
  1278  0095                     	;# 
  1279  0096                     	;# 
  1280  0097                     	;# 
  1281  0099                     	;# 
  1282  009A                     	;# 
  1283  009B                     	;# 
  1284  009B                     	;# 
  1285  009C                     	;# 
  1286  009D                     	;# 
  1287  009E                     	;# 
  1288  009F                     	;# 
  1289  010C                     	;# 
  1290  010D                     	;# 
  1291  010E                     	;# 
  1292  0111                     	;# 
  1293  0112                     	;# 
  1294  0113                     	;# 
  1295  0114                     	;# 
  1296  0115                     	;# 
  1297  0116                     	;# 
  1298  0117                     	;# 
  1299  0118                     	;# 
  1300  0119                     	;# 
  1301  011D                     	;# 
  1302  018C                     	;# 
  1303  018D                     	;# 
  1304  018E                     	;# 
  1305  0191                     	;# 
  1306  0191                     	;# 
  1307  0192                     	;# 
  1308  0193                     	;# 
  1309  0193                     	;# 
  1310  0194                     	;# 
  1311  0195                     	;# 
  1312  0196                     	;# 
  1313  0197                     	;# 
  1314  0199                     	;# 
  1315  019A                     	;# 
  1316  019B                     	;# 
  1317  019B                     	;# 
  1318  019C                     	;# 
  1319  019D                     	;# 
  1320  019E                     	;# 
  1321  019F                     	;# 
  1322  020C                     	;# 
  1323  020D                     	;# 
  1324  0211                     	;# 
  1325  0211                     	;# 
  1326  0212                     	;# 
  1327  0212                     	;# 
  1328  0213                     	;# 
  1329  0213                     	;# 
  1330  0214                     	;# 
  1331  0214                     	;# 
  1332  0215                     	;# 
  1333  0215                     	;# 
  1334  0215                     	;# 
  1335  0216                     	;# 
  1336  0216                     	;# 
  1337  0217                     	;# 
  1338  0217                     	;# 
  1339  0391                     	;# 
  1340  0392                     	;# 
  1341  0393                     	;# 
  1342  0394                     	;# 
  1343  0395                     	;# 
  1344  0396                     	;# 
  1345  0498                     	;# 
  1346  0498                     	;# 
  1347  0499                     	;# 
  1348  049A                     	;# 
  1349  049B                     	;# 
  1350  049B                     	;# 
  1351  049C                     	;# 
  1352  049D                     	;# 
  1353  049E                     	;# 
  1354  049F                     	;# 
  1355  0611                     	;# 
  1356  0612                     	;# 
  1357  0613                     	;# 
  1358  0613                     	;# 
  1359  0614                     	;# 
  1360  0615                     	;# 
  1361  0616                     	;# 
  1362  0616                     	;# 
  1363  0617                     	;# 
  1364  0618                     	;# 
  1365  0619                     	;# 
  1366  0619                     	;# 
  1367  061A                     	;# 
  1368  061B                     	;# 
  1369  061C                     	;# 
  1370  061C                     	;# 
  1371  0691                     	;# 
  1372  0692                     	;# 
  1373  0693                     	;# 
  1374  0694                     	;# 
  1375  0695                     	;# 
  1376  0F0F                     	;# 
  1377  0F10                     	;# 
  1378  0F11                     	;# 
  1379  0F12                     	;# 
  1380  0F13                     	;# 
  1381  0F14                     	;# 
  1382  0F15                     	;# 
  1383  0F16                     	;# 
  1384  0F17                     	;# 
  1385  0F18                     	;# 
  1386  0F19                     	;# 
  1387  0F1A                     	;# 
  1388  0F1B                     	;# 
  1389  0F1C                     	;# 
  1390  0F1D                     	;# 
  1391  0F1E                     	;# 
  1392  0F1F                     	;# 
  1393  0F20                     	;# 
  1394  0F21                     	;# 
  1395  0F22                     	;# 
  1396  0F23                     	;# 
  1397  0F24                     	;# 
  1398  0F25                     	;# 
  1399  0F26                     	;# 
  1400  0F27                     	;# 
  1401  0F28                     	;# 
  1402  0F29                     	;# 
  1403  0F2A                     	;# 
  1404  0F2B                     	;# 
  1405  0F2C                     	;# 
  1406  0F2D                     	;# 
  1407  0F2E                     	;# 
  1408  0F2F                     	;# 
  1409  0F8C                     	;# 
  1410  0F8D                     	;# 
  1411  0F91                     	;# 
  1412  0F95                     	;# 
  1413  0F96                     	;# 
  1414  0F97                     	;# 
  1415  0F9C                     	;# 
  1416  0F9D                     	;# 
  1417  0F9E                     	;# 
  1418  0FE3                     	;# 
  1419  0FE4                     	;# 
  1420  0FE5                     	;# 
  1421  0FE6                     	;# 
  1422  0FE7                     	;# 
  1423  0FE8                     	;# 
  1424  0FE9                     	;# 
  1425  0FEA                     	;# 
  1426  0FEB                     	;# 
  1427  0FED                     	;# 
  1428  0FEE                     	;# 
  1429  0FEF                     	;# 
  1430  0000                     	;# 
  1431  0001                     	;# 
  1432  0002                     	;# 
  1433  0003                     	;# 
  1434  0004                     	;# 
  1435  0005                     	;# 
  1436  0006                     	;# 
  1437  0007                     	;# 
  1438  0008                     	;# 
  1439  0009                     	;# 
  1440  000A                     	;# 
  1441  000B                     	;# 
  1442  000C                     	;# 
  1443  000D                     	;# 
  1444  000E                     	;# 
  1445  0011                     	;# 
  1446  0012                     	;# 
  1447  0013                     	;# 
  1448  0015                     	;# 
  1449  0016                     	;# 
  1450  0016                     	;# 
  1451  0017                     	;# 
  1452  0018                     	;# 
  1453  0019                     	;# 
  1454  001A                     	;# 
  1455  001B                     	;# 
  1456  001C                     	;# 
  1457  008C                     	;# 
  1458  008D                     	;# 
  1459  008E                     	;# 
  1460  0091                     	;# 
  1461  0092                     	;# 
  1462  0093                     	;# 
  1463  0095                     	;# 
  1464  0096                     	;# 
  1465  0097                     	;# 
  1466  0099                     	;# 
  1467  009A                     	;# 
  1468  009B                     	;# 
  1469  009B                     	;# 
  1470  009C                     	;# 
  1471  009D                     	;# 
  1472  009E                     	;# 
  1473  009F                     	;# 
  1474  010C                     	;# 
  1475  010D                     	;# 
  1476  010E                     	;# 
  1477  0111                     	;# 
  1478  0112                     	;# 
  1479  0113                     	;# 
  1480  0114                     	;# 
  1481  0115                     	;# 
  1482  0116                     	;# 
  1483  0117                     	;# 
  1484  0118                     	;# 
  1485  0119                     	;# 
  1486  011D                     	;# 
  1487  018C                     	;# 
  1488  018D                     	;# 
  1489  018E                     	;# 
  1490  0191                     	;# 
  1491  0191                     	;# 
  1492  0192                     	;# 
  1493  0193                     	;# 
  1494  0193                     	;# 
  1495  0194                     	;# 
  1496  0195                     	;# 
  1497  0196                     	;# 
  1498  0197                     	;# 
  1499  0199                     	;# 
  1500  019A                     	;# 
  1501  019B                     	;# 
  1502  019B                     	;# 
  1503  019C                     	;# 
  1504  019D                     	;# 
  1505  019E                     	;# 
  1506  019F                     	;# 
  1507  020C                     	;# 
  1508  020D                     	;# 
  1509  0211                     	;# 
  1510  0211                     	;# 
  1511  0212                     	;# 
  1512  0212                     	;# 
  1513  0213                     	;# 
  1514  0213                     	;# 
  1515  0214                     	;# 
  1516  0214                     	;# 
  1517  0215                     	;# 
  1518  0215                     	;# 
  1519  0215                     	;# 
  1520  0216                     	;# 
  1521  0216                     	;# 
  1522  0217                     	;# 
  1523  0217                     	;# 
  1524  0391                     	;# 
  1525  0392                     	;# 
  1526  0393                     	;# 
  1527  0394                     	;# 
  1528  0395                     	;# 
  1529  0396                     	;# 
  1530  0498                     	;# 
  1531  0498                     	;# 
  1532  0499                     	;# 
  1533  049A                     	;# 
  1534  049B                     	;# 
  1535  049B                     	;# 
  1536  049C                     	;# 
  1537  049D                     	;# 
  1538  049E                     	;# 
  1539  049F                     	;# 
  1540  0611                     	;# 
  1541  0612                     	;# 
  1542  0613                     	;# 
  1543  0613                     	;# 
  1544  0614                     	;# 
  1545  0615                     	;# 
  1546  0616                     	;# 
  1547  0616                     	;# 
  1548  0617                     	;# 
  1549  0618                     	;# 
  1550  0619                     	;# 
  1551  0619                     	;# 
  1552  061A                     	;# 
  1553  061B                     	;# 
  1554  061C                     	;# 
  1555  061C                     	;# 
  1556  0691                     	;# 
  1557  0692                     	;# 
  1558  0693                     	;# 
  1559  0694                     	;# 
  1560  0695                     	;# 
  1561  0F0F                     	;# 
  1562  0F10                     	;# 
  1563  0F11                     	;# 
  1564  0F12                     	;# 
  1565  0F13                     	;# 
  1566  0F14                     	;# 
  1567  0F15                     	;# 
  1568  0F16                     	;# 
  1569  0F17                     	;# 
  1570  0F18                     	;# 
  1571  0F19                     	;# 
  1572  0F1A                     	;# 
  1573  0F1B                     	;# 
  1574  0F1C                     	;# 
  1575  0F1D                     	;# 
  1576  0F1E                     	;# 
  1577  0F1F                     	;# 
  1578  0F20                     	;# 
  1579  0F21                     	;# 
  1580  0F22                     	;# 
  1581  0F23                     	;# 
  1582  0F24                     	;# 
  1583  0F25                     	;# 
  1584  0F26                     	;# 
  1585  0F27                     	;# 
  1586  0F28                     	;# 
  1587  0F29                     	;# 
  1588  0F2A                     	;# 
  1589  0F2B                     	;# 
  1590  0F2C                     	;# 
  1591  0F2D                     	;# 
  1592  0F2E                     	;# 
  1593  0F2F                     	;# 
  1594  0F8C                     	;# 
  1595  0F8D                     	;# 
  1596  0F91                     	;# 
  1597  0F95                     	;# 
  1598  0F96                     	;# 
  1599  0F97                     	;# 
  1600  0F9C                     	;# 
  1601  0F9D                     	;# 
  1602  0F9E                     	;# 
  1603  0FE3                     	;# 
  1604  0FE4                     	;# 
  1605  0FE5                     	;# 
  1606  0FE6                     	;# 
  1607  0FE7                     	;# 
  1608  0FE8                     	;# 
  1609  0FE9                     	;# 
  1610  0FEA                     	;# 
  1611  0FEB                     	;# 
  1612  0FED                     	;# 
  1613  0FEE                     	;# 
  1614  0FEF                     	;# 
  1615  0000                     	;# 
  1616  0001                     	;# 
  1617  0002                     	;# 
  1618  0003                     	;# 
  1619  0004                     	;# 
  1620  0005                     	;# 
  1621  0006                     	;# 
  1622  0007                     	;# 
  1623  0008                     	;# 
  1624  0009                     	;# 
  1625  000A                     	;# 
  1626  000B                     	;# 
  1627  000C                     	;# 
  1628  000D                     	;# 
  1629  000E                     	;# 
  1630  0011                     	;# 
  1631  0012                     	;# 
  1632  0013                     	;# 
  1633  0015                     	;# 
  1634  0016                     	;# 
  1635  0016                     	;# 
  1636  0017                     	;# 
  1637  0018                     	;# 
  1638  0019                     	;# 
  1639  001A                     	;# 
  1640  001B                     	;# 
  1641  001C                     	;# 
  1642  008C                     	;# 
  1643  008D                     	;# 
  1644  008E                     	;# 
  1645  0091                     	;# 
  1646  0092                     	;# 
  1647  0093                     	;# 
  1648  0095                     	;# 
  1649  0096                     	;# 
  1650  0097                     	;# 
  1651  0099                     	;# 
  1652  009A                     	;# 
  1653  009B                     	;# 
  1654  009B                     	;# 
  1655  009C                     	;# 
  1656  009D                     	;# 
  1657  009E                     	;# 
  1658  009F                     	;# 
  1659  010C                     	;# 
  1660  010D                     	;# 
  1661  010E                     	;# 
  1662  0111                     	;# 
  1663  0112                     	;# 
  1664  0113                     	;# 
  1665  0114                     	;# 
  1666  0115                     	;# 
  1667  0116                     	;# 
  1668  0117                     	;# 
  1669  0118                     	;# 
  1670  0119                     	;# 
  1671  011D                     	;# 
  1672  018C                     	;# 
  1673  018D                     	;# 
  1674  018E                     	;# 
  1675  0191                     	;# 
  1676  0191                     	;# 
  1677  0192                     	;# 
  1678  0193                     	;# 
  1679  0193                     	;# 
  1680  0194                     	;# 
  1681  0195                     	;# 
  1682  0196                     	;# 
  1683  0197                     	;# 
  1684  0199                     	;# 
  1685  019A                     	;# 
  1686  019B                     	;# 
  1687  019B                     	;# 
  1688  019C                     	;# 
  1689  019D                     	;# 
  1690  019E                     	;# 
  1691  019F                     	;# 
  1692  020C                     	;# 
  1693  020D                     	;# 
  1694  0211                     	;# 
  1695  0211                     	;# 
  1696  0212                     	;# 
  1697  0212                     	;# 
  1698  0213                     	;# 
  1699  0213                     	;# 
  1700  0214                     	;# 
  1701  0214                     	;# 
  1702  0215                     	;# 
  1703  0215                     	;# 
  1704  0215                     	;# 
  1705  0216                     	;# 
  1706  0216                     	;# 
  1707  0217                     	;# 
  1708  0217                     	;# 
  1709  0391                     	;# 
  1710  0392                     	;# 
  1711  0393                     	;# 
  1712  0394                     	;# 
  1713  0395                     	;# 
  1714  0396                     	;# 
  1715  0498                     	;# 
  1716  0498                     	;# 
  1717  0499                     	;# 
  1718  049A                     	;# 
  1719  049B                     	;# 
  1720  049B                     	;# 
  1721  049C                     	;# 
  1722  049D                     	;# 
  1723  049E                     	;# 
  1724  049F                     	;# 
  1725  0611                     	;# 
  1726  0612                     	;# 
  1727  0613                     	;# 
  1728  0613                     	;# 
  1729  0614                     	;# 
  1730  0615                     	;# 
  1731  0616                     	;# 
  1732  0616                     	;# 
  1733  0617                     	;# 
  1734  0618                     	;# 
  1735  0619                     	;# 
  1736  0619                     	;# 
  1737  061A                     	;# 
  1738  061B                     	;# 
  1739  061C                     	;# 
  1740  061C                     	;# 
  1741  0691                     	;# 
  1742  0692                     	;# 
  1743  0693                     	;# 
  1744  0694                     	;# 
  1745  0695                     	;# 
  1746  0F0F                     	;# 
  1747  0F10                     	;# 
  1748  0F11                     	;# 
  1749  0F12                     	;# 
  1750  0F13                     	;# 
  1751  0F14                     	;# 
  1752  0F15                     	;# 
  1753  0F16                     	;# 
  1754  0F17                     	;# 
  1755  0F18                     	;# 
  1756  0F19                     	;# 
  1757  0F1A                     	;# 
  1758  0F1B                     	;# 
  1759  0F1C                     	;# 
  1760  0F1D                     	;# 
  1761  0F1E                     	;# 
  1762  0F1F                     	;# 
  1763  0F20                     	;# 
  1764  0F21                     	;# 
  1765  0F22                     	;# 
  1766  0F23                     	;# 
  1767  0F24                     	;# 
  1768  0F25                     	;# 
  1769  0F26                     	;# 
  1770  0F27                     	;# 
  1771  0F28                     	;# 
  1772  0F29                     	;# 
  1773  0F2A                     	;# 
  1774  0F2B                     	;# 
  1775  0F2C                     	;# 
  1776  0F2D                     	;# 
  1777  0F2E                     	;# 
  1778  0F2F                     	;# 
  1779  0F8C                     	;# 
  1780  0F8D                     	;# 
  1781  0F91                     	;# 
  1782  0F95                     	;# 
  1783  0F96                     	;# 
  1784  0F97                     	;# 
  1785  0F9C                     	;# 
  1786  0F9D                     	;# 
  1787  0F9E                     	;# 
  1788  0FE3                     	;# 
  1789  0FE4                     	;# 
  1790  0FE5                     	;# 
  1791  0FE6                     	;# 
  1792  0FE7                     	;# 
  1793  0FE8                     	;# 
  1794  0FE9                     	;# 
  1795  0FEA                     	;# 
  1796  0FEB                     	;# 
  1797  0FED                     	;# 
  1798  0FEE                     	;# 
  1799  0FEF                     	;# 
  1800  0000                     	;# 
  1801  0001                     	;# 
  1802  0002                     	;# 
  1803  0003                     	;# 
  1804  0004                     	;# 
  1805  0005                     	;# 
  1806  0006                     	;# 
  1807  0007                     	;# 
  1808  0008                     	;# 
  1809  0009                     	;# 
  1810  000A                     	;# 
  1811  000B                     	;# 
  1812  000C                     	;# 
  1813  000D                     	;# 
  1814  000E                     	;# 
  1815  0011                     	;# 
  1816  0012                     	;# 
  1817  0013                     	;# 
  1818  0015                     	;# 
  1819  0016                     	;# 
  1820  0016                     	;# 
  1821  0017                     	;# 
  1822  0018                     	;# 
  1823  0019                     	;# 
  1824  001A                     	;# 
  1825  001B                     	;# 
  1826  001C                     	;# 
  1827  008C                     	;# 
  1828  008D                     	;# 
  1829  008E                     	;# 
  1830  0091                     	;# 
  1831  0092                     	;# 
  1832  0093                     	;# 
  1833  0095                     	;# 
  1834  0096                     	;# 
  1835  0097                     	;# 
  1836  0099                     	;# 
  1837  009A                     	;# 
  1838  009B                     	;# 
  1839  009B                     	;# 
  1840  009C                     	;# 
  1841  009D                     	;# 
  1842  009E                     	;# 
  1843  009F                     	;# 
  1844  010C                     	;# 
  1845  010D                     	;# 
  1846  010E                     	;# 
  1847  0111                     	;# 
  1848  0112                     	;# 
  1849  0113                     	;# 
  1850  0114                     	;# 
  1851  0115                     	;# 
  1852  0116                     	;# 
  1853  0117                     	;# 
  1854  0118                     	;# 
  1855  0119                     	;# 
  1856  011D                     	;# 
  1857  018C                     	;# 
  1858  018D                     	;# 
  1859  018E                     	;# 
  1860  0191                     	;# 
  1861  0191                     	;# 
  1862  0192                     	;# 
  1863  0193                     	;# 
  1864  0193                     	;# 
  1865  0194                     	;# 
  1866  0195                     	;# 
  1867  0196                     	;# 
  1868  0197                     	;# 
  1869  0199                     	;# 
  1870  019A                     	;# 
  1871  019B                     	;# 
  1872  019B                     	;# 
  1873  019C                     	;# 
  1874  019D                     	;# 
  1875  019E                     	;# 
  1876  019F                     	;# 
  1877  020C                     	;# 
  1878  020D                     	;# 
  1879  0211                     	;# 
  1880  0211                     	;# 
  1881  0212                     	;# 
  1882  0212                     	;# 
  1883  0213                     	;# 
  1884  0213                     	;# 
  1885  0214                     	;# 
  1886  0214                     	;# 
  1887  0215                     	;# 
  1888  0215                     	;# 
  1889  0215                     	;# 
  1890  0216                     	;# 
  1891  0216                     	;# 
  1892  0217                     	;# 
  1893  0217                     	;# 
  1894  0391                     	;# 
  1895  0392                     	;# 
  1896  0393                     	;# 
  1897  0394                     	;# 
  1898  0395                     	;# 
  1899  0396                     	;# 
  1900  0498                     	;# 
  1901  0498                     	;# 
  1902  0499                     	;# 
  1903  049A                     	;# 
  1904  049B                     	;# 
  1905  049B                     	;# 
  1906  049C                     	;# 
  1907  049D                     	;# 
  1908  049E                     	;# 
  1909  049F                     	;# 
  1910  0611                     	;# 
  1911  0612                     	;# 
  1912  0613                     	;# 
  1913  0613                     	;# 
  1914  0614                     	;# 
  1915  0615                     	;# 
  1916  0616                     	;# 
  1917  0616                     	;# 
  1918  0617                     	;# 
  1919  0618                     	;# 
  1920  0619                     	;# 
  1921  0619                     	;# 
  1922  061A                     	;# 
  1923  061B                     	;# 
  1924  061C                     	;# 
  1925  061C                     	;# 
  1926  0691                     	;# 
  1927  0692                     	;# 
  1928  0693                     	;# 
  1929  0694                     	;# 
  1930  0695                     	;# 
  1931  0F0F                     	;# 
  1932  0F10                     	;# 
  1933  0F11                     	;# 
  1934  0F12                     	;# 
  1935  0F13                     	;# 
  1936  0F14                     	;# 
  1937  0F15                     	;# 
  1938  0F16                     	;# 
  1939  0F17                     	;# 
  1940  0F18                     	;# 
  1941  0F19                     	;# 
  1942  0F1A                     	;# 
  1943  0F1B                     	;# 
  1944  0F1C                     	;# 
  1945  0F1D                     	;# 
  1946  0F1E                     	;# 
  1947  0F1F                     	;# 
  1948  0F20                     	;# 
  1949  0F21                     	;# 
  1950  0F22                     	;# 
  1951  0F23                     	;# 
  1952  0F24                     	;# 
  1953  0F25                     	;# 
  1954  0F26                     	;# 
  1955  0F27                     	;# 
  1956  0F28                     	;# 
  1957  0F29                     	;# 
  1958  0F2A                     	;# 
  1959  0F2B                     	;# 
  1960  0F2C                     	;# 
  1961  0F2D                     	;# 
  1962  0F2E                     	;# 
  1963  0F2F                     	;# 
  1964  0F8C                     	;# 
  1965  0F8D                     	;# 
  1966  0F91                     	;# 
  1967  0F95                     	;# 
  1968  0F96                     	;# 
  1969  0F97                     	;# 
  1970  0F9C                     	;# 
  1971  0F9D                     	;# 
  1972  0F9E                     	;# 
  1973  0FE3                     	;# 
  1974  0FE4                     	;# 
  1975  0FE5                     	;# 
  1976  0FE6                     	;# 
  1977  0FE7                     	;# 
  1978  0FE8                     	;# 
  1979  0FE9                     	;# 
  1980  0FEA                     	;# 
  1981  0FEB                     	;# 
  1982  0FED                     	;# 
  1983  0FEE                     	;# 
  1984  0FEF                     	;# 
  1985  0000                     	;# 
  1986  0001                     	;# 
  1987  0002                     	;# 
  1988  0003                     	;# 
  1989  0004                     	;# 
  1990  0005                     	;# 
  1991  0006                     	;# 
  1992  0007                     	;# 
  1993  0008                     	;# 
  1994  0009                     	;# 
  1995  000A                     	;# 
  1996  000B                     	;# 
  1997  000C                     	;# 
  1998  000D                     	;# 
  1999  000E                     	;# 
  2000  0011                     	;# 
  2001  0012                     	;# 
  2002  0013                     	;# 
  2003  0015                     	;# 
  2004  0016                     	;# 
  2005  0016                     	;# 
  2006  0017                     	;# 
  2007  0018                     	;# 
  2008  0019                     	;# 
  2009  001A                     	;# 
  2010  001B                     	;# 
  2011  001C                     	;# 
  2012  008C                     	;# 
  2013  008D                     	;# 
  2014  008E                     	;# 
  2015  0091                     	;# 
  2016  0092                     	;# 
  2017  0093                     	;# 
  2018  0095                     	;# 
  2019  0096                     	;# 
  2020  0097                     	;# 
  2021  0099                     	;# 
  2022  009A                     	;# 
  2023  009B                     	;# 
  2024  009B                     	;# 
  2025  009C                     	;# 
  2026  009D                     	;# 
  2027  009E                     	;# 
  2028  009F                     	;# 
  2029  010C                     	;# 
  2030  010D                     	;# 
  2031  010E                     	;# 
  2032  0111                     	;# 
  2033  0112                     	;# 
  2034  0113                     	;# 
  2035  0114                     	;# 
  2036  0115                     	;# 
  2037  0116                     	;# 
  2038  0117                     	;# 
  2039  0118                     	;# 
  2040  0119                     	;# 
  2041  011D                     	;# 
  2042  018C                     	;# 
  2043  018D                     	;# 
  2044  018E                     	;# 
  2045  0191                     	;# 
  2046  0191                     	;# 
  2047  0192                     	;# 
  2048  0193                     	;# 
  2049  0193                     	;# 
  2050  0194                     	;# 
  2051  0195                     	;# 
  2052  0196                     	;# 
  2053  0197                     	;# 
  2054  0199                     	;# 
  2055  019A                     	;# 
  2056  019B                     	;# 
  2057  019B                     	;# 
  2058  019C                     	;# 
  2059  019D                     	;# 
  2060  019E                     	;# 
  2061  019F                     	;# 
  2062  020C                     	;# 
  2063  020D                     	;# 
  2064  0211                     	;# 
  2065  0211                     	;# 
  2066  0212                     	;# 
  2067  0212                     	;# 
  2068  0213                     	;# 
  2069  0213                     	;# 
  2070  0214                     	;# 
  2071  0214                     	;# 
  2072  0215                     	;# 
  2073  0215                     	;# 
  2074  0215                     	;# 
  2075  0216                     	;# 
  2076  0216                     	;# 
  2077  0217                     	;# 
  2078  0217                     	;# 
  2079  0391                     	;# 
  2080  0392                     	;# 
  2081  0393                     	;# 
  2082  0394                     	;# 
  2083  0395                     	;# 
  2084  0396                     	;# 
  2085  0498                     	;# 
  2086  0498                     	;# 
  2087  0499                     	;# 
  2088  049A                     	;# 
  2089  049B                     	;# 
  2090  049B                     	;# 
  2091  049C                     	;# 
  2092  049D                     	;# 
  2093  049E                     	;# 
  2094  049F                     	;# 
  2095  0611                     	;# 
  2096  0612                     	;# 
  2097  0613                     	;# 
  2098  0613                     	;# 
  2099  0614                     	;# 
  2100  0615                     	;# 
  2101  0616                     	;# 
  2102  0616                     	;# 
  2103  0617                     	;# 
  2104  0618                     	;# 
  2105  0619                     	;# 
  2106  0619                     	;# 
  2107  061A                     	;# 
  2108  061B                     	;# 
  2109  061C                     	;# 
  2110  061C                     	;# 
  2111  0691                     	;# 
  2112  0692                     	;# 
  2113  0693                     	;# 
  2114  0694                     	;# 
  2115  0695                     	;# 
  2116  0F0F                     	;# 
  2117  0F10                     	;# 
  2118  0F11                     	;# 
  2119  0F12                     	;# 
  2120  0F13                     	;# 
  2121  0F14                     	;# 
  2122  0F15                     	;# 
  2123  0F16                     	;# 
  2124  0F17                     	;# 
  2125  0F18                     	;# 
  2126  0F19                     	;# 
  2127  0F1A                     	;# 
  2128  0F1B                     	;# 
  2129  0F1C                     	;# 
  2130  0F1D                     	;# 
  2131  0F1E                     	;# 
  2132  0F1F                     	;# 
  2133  0F20                     	;# 
  2134  0F21                     	;# 
  2135  0F22                     	;# 
  2136  0F23                     	;# 
  2137  0F24                     	;# 
  2138  0F25                     	;# 
  2139  0F26                     	;# 
  2140  0F27                     	;# 
  2141  0F28                     	;# 
  2142  0F29                     	;# 
  2143  0F2A                     	;# 
  2144  0F2B                     	;# 
  2145  0F2C                     	;# 
  2146  0F2D                     	;# 
  2147  0F2E                     	;# 
  2148  0F2F                     	;# 
  2149  0F8C                     	;# 
  2150  0F8D                     	;# 
  2151  0F91                     	;# 
  2152  0F95                     	;# 
  2153  0F96                     	;# 
  2154  0F97                     	;# 
  2155  0F9C                     	;# 
  2156  0F9D                     	;# 
  2157  0F9E                     	;# 
  2158  0FE3                     	;# 
  2159  0FE4                     	;# 
  2160  0FE5                     	;# 
  2161  0FE6                     	;# 
  2162  0FE7                     	;# 
  2163  0FE8                     	;# 
  2164  0FE9                     	;# 
  2165  0FEA                     	;# 
  2166  0FEB                     	;# 
  2167  0FED                     	;# 
  2168  0FEE                     	;# 
  2169  0FEF                     	;# 
  2170  0000                     	;# 
  2171  0001                     	;# 
  2172  0002                     	;# 
  2173  0003                     	;# 
  2174  0004                     	;# 
  2175  0005                     	;# 
  2176  0006                     	;# 
  2177  0007                     	;# 
  2178  0008                     	;# 
  2179  0009                     	;# 
  2180  000A                     	;# 
  2181  000B                     	;# 
  2182  000C                     	;# 
  2183  000D                     	;# 
  2184  000E                     	;# 
  2185  0011                     	;# 
  2186  0012                     	;# 
  2187  0013                     	;# 
  2188  0015                     	;# 
  2189  0016                     	;# 
  2190  0016                     	;# 
  2191  0017                     	;# 
  2192  0018                     	;# 
  2193  0019                     	;# 
  2194  001A                     	;# 
  2195  001B                     	;# 
  2196  001C                     	;# 
  2197  008C                     	;# 
  2198  008D                     	;# 
  2199  008E                     	;# 
  2200  0091                     	;# 
  2201  0092                     	;# 
  2202  0093                     	;# 
  2203  0095                     	;# 
  2204  0096                     	;# 
  2205  0097                     	;# 
  2206  0099                     	;# 
  2207  009A                     	;# 
  2208  009B                     	;# 
  2209  009B                     	;# 
  2210  009C                     	;# 
  2211  009D                     	;# 
  2212  009E                     	;# 
  2213  009F                     	;# 
  2214  010C                     	;# 
  2215  010D                     	;# 
  2216  010E                     	;# 
  2217  0111                     	;# 
  2218  0112                     	;# 
  2219  0113                     	;# 
  2220  0114                     	;# 
  2221  0115                     	;# 
  2222  0116                     	;# 
  2223  0117                     	;# 
  2224  0118                     	;# 
  2225  0119                     	;# 
  2226  011D                     	;# 
  2227  018C                     	;# 
  2228  018D                     	;# 
  2229  018E                     	;# 
  2230  0191                     	;# 
  2231  0191                     	;# 
  2232  0192                     	;# 
  2233  0193                     	;# 
  2234  0193                     	;# 
  2235  0194                     	;# 
  2236  0195                     	;# 
  2237  0196                     	;# 
  2238  0197                     	;# 
  2239  0199                     	;# 
  2240  019A                     	;# 
  2241  019B                     	;# 
  2242  019B                     	;# 
  2243  019C                     	;# 
  2244  019D                     	;# 
  2245  019E                     	;# 
  2246  019F                     	;# 
  2247  020C                     	;# 
  2248  020D                     	;# 
  2249  0211                     	;# 
  2250  0211                     	;# 
  2251  0212                     	;# 
  2252  0212                     	;# 
  2253  0213                     	;# 
  2254  0213                     	;# 
  2255  0214                     	;# 
  2256  0214                     	;# 
  2257  0215                     	;# 
  2258  0215                     	;# 
  2259  0215                     	;# 
  2260  0216                     	;# 
  2261  0216                     	;# 
  2262  0217                     	;# 
  2263  0217                     	;# 
  2264  0391                     	;# 
  2265  0392                     	;# 
  2266  0393                     	;# 
  2267  0394                     	;# 
  2268  0395                     	;# 
  2269  0396                     	;# 
  2270  0498                     	;# 
  2271  0498                     	;# 
  2272  0499                     	;# 
  2273  049A                     	;# 
  2274  049B                     	;# 
  2275  049B                     	;# 
  2276  049C                     	;# 
  2277  049D                     	;# 
  2278  049E                     	;# 
  2279  049F                     	;# 
  2280  0611                     	;# 
  2281  0612                     	;# 
  2282  0613                     	;# 
  2283  0613                     	;# 
  2284  0614                     	;# 
  2285  0615                     	;# 
  2286  0616                     	;# 
  2287  0616                     	;# 
  2288  0617                     	;# 
  2289  0618                     	;# 
  2290  0619                     	;# 
  2291  0619                     	;# 
  2292  061A                     	;# 
  2293  061B                     	;# 
  2294  061C                     	;# 
  2295  061C                     	;# 
  2296  0691                     	;# 
  2297  0692                     	;# 
  2298  0693                     	;# 
  2299  0694                     	;# 
  2300  0695                     	;# 
  2301  0F0F                     	;# 
  2302  0F10                     	;# 
  2303  0F11                     	;# 
  2304  0F12                     	;# 
  2305  0F13                     	;# 
  2306  0F14                     	;# 
  2307  0F15                     	;# 
  2308  0F16                     	;# 
  2309  0F17                     	;# 
  2310  0F18                     	;# 
  2311  0F19                     	;# 
  2312  0F1A                     	;# 
  2313  0F1B                     	;# 
  2314  0F1C                     	;# 
  2315  0F1D                     	;# 
  2316  0F1E                     	;# 
  2317  0F1F                     	;# 
  2318  0F20                     	;# 
  2319  0F21                     	;# 
  2320  0F22                     	;# 
  2321  0F23                     	;# 
  2322  0F24                     	;# 
  2323  0F25                     	;# 
  2324  0F26                     	;# 
  2325  0F27                     	;# 
  2326  0F28                     	;# 
  2327  0F29                     	;# 
  2328  0F2A                     	;# 
  2329  0F2B                     	;# 
  2330  0F2C                     	;# 
  2331  0F2D                     	;# 
  2332  0F2E                     	;# 
  2333  0F2F                     	;# 
  2334  0F8C                     	;# 
  2335  0F8D                     	;# 
  2336  0F91                     	;# 
  2337  0F95                     	;# 
  2338  0F96                     	;# 
  2339  0F97                     	;# 
  2340  0F9C                     	;# 
  2341  0F9D                     	;# 
  2342  0F9E                     	;# 
  2343  0FE3                     	;# 
  2344  0FE4                     	;# 
  2345  0FE5                     	;# 
  2346  0FE6                     	;# 
  2347  0FE7                     	;# 
  2348  0FE8                     	;# 
  2349  0FE9                     	;# 
  2350  0FEA                     	;# 
  2351  0FEB                     	;# 
  2352  0FED                     	;# 
  2353  0FEE                     	;# 
  2354  0FEF                     	;# 
  2355  0000                     	;# 
  2356  0001                     	;# 
  2357  0002                     	;# 
  2358  0003                     	;# 
  2359  0004                     	;# 
  2360  0005                     	;# 
  2361  0006                     	;# 
  2362  0007                     	;# 
  2363  0008                     	;# 
  2364  0009                     	;# 
  2365  000A                     	;# 
  2366  000B                     	;# 
  2367  000C                     	;# 
  2368  000D                     	;# 
  2369  000E                     	;# 
  2370  0011                     	;# 
  2371  0012                     	;# 
  2372  0013                     	;# 
  2373  0015                     	;# 
  2374  0016                     	;# 
  2375  0016                     	;# 
  2376  0017                     	;# 
  2377  0018                     	;# 
  2378  0019                     	;# 
  2379  001A                     	;# 
  2380  001B                     	;# 
  2381  001C                     	;# 
  2382  008C                     	;# 
  2383  008D                     	;# 
  2384  008E                     	;# 
  2385  0091                     	;# 
  2386  0092                     	;# 
  2387  0093                     	;# 
  2388  0095                     	;# 
  2389  0096                     	;# 
  2390  0097                     	;# 
  2391  0099                     	;# 
  2392  009A                     	;# 
  2393  009B                     	;# 
  2394  009B                     	;# 
  2395  009C                     	;# 
  2396  009D                     	;# 
  2397  009E                     	;# 
  2398  009F                     	;# 
  2399  010C                     	;# 
  2400  010D                     	;# 
  2401  010E                     	;# 
  2402  0111                     	;# 
  2403  0112                     	;# 
  2404  0113                     	;# 
  2405  0114                     	;# 
  2406  0115                     	;# 
  2407  0116                     	;# 
  2408  0117                     	;# 
  2409  0118                     	;# 
  2410  0119                     	;# 
  2411  011D                     	;# 
  2412  018C                     	;# 
  2413  018D                     	;# 
  2414  018E                     	;# 
  2415  0191                     	;# 
  2416  0191                     	;# 
  2417  0192                     	;# 
  2418  0193                     	;# 
  2419  0193                     	;# 
  2420  0194                     	;# 
  2421  0195                     	;# 
  2422  0196                     	;# 
  2423  0197                     	;# 
  2424  0199                     	;# 
  2425  019A                     	;# 
  2426  019B                     	;# 
  2427  019B                     	;# 
  2428  019C                     	;# 
  2429  019D                     	;# 
  2430  019E                     	;# 
  2431  019F                     	;# 
  2432  020C                     	;# 
  2433  020D                     	;# 
  2434  0211                     	;# 
  2435  0211                     	;# 
  2436  0212                     	;# 
  2437  0212                     	;# 
  2438  0213                     	;# 
  2439  0213                     	;# 
  2440  0214                     	;# 
  2441  0214                     	;# 
  2442  0215                     	;# 
  2443  0215                     	;# 
  2444  0215                     	;# 
  2445  0216                     	;# 
  2446  0216                     	;# 
  2447  0217                     	;# 
  2448  0217                     	;# 
  2449  0391                     	;# 
  2450  0392                     	;# 
  2451  0393                     	;# 
  2452  0394                     	;# 
  2453  0395                     	;# 
  2454  0396                     	;# 
  2455  0498                     	;# 
  2456  0498                     	;# 
  2457  0499                     	;# 
  2458  049A                     	;# 
  2459  049B                     	;# 
  2460  049B                     	;# 
  2461  049C                     	;# 
  2462  049D                     	;# 
  2463  049E                     	;# 
  2464  049F                     	;# 
  2465  0611                     	;# 
  2466  0612                     	;# 
  2467  0613                     	;# 
  2468  0613                     	;# 
  2469  0614                     	;# 
  2470  0615                     	;# 
  2471  0616                     	;# 
  2472  0616                     	;# 
  2473  0617                     	;# 
  2474  0618                     	;# 
  2475  0619                     	;# 
  2476  0619                     	;# 
  2477  061A                     	;# 
  2478  061B                     	;# 
  2479  061C                     	;# 
  2480  061C                     	;# 
  2481  0691                     	;# 
  2482  0692                     	;# 
  2483  0693                     	;# 
  2484  0694                     	;# 
  2485  0695                     	;# 
  2486  0F0F                     	;# 
  2487  0F10                     	;# 
  2488  0F11                     	;# 
  2489  0F12                     	;# 
  2490  0F13                     	;# 
  2491  0F14                     	;# 
  2492  0F15                     	;# 
  2493  0F16                     	;# 
  2494  0F17                     	;# 
  2495  0F18                     	;# 
  2496  0F19                     	;# 
  2497  0F1A                     	;# 
  2498  0F1B                     	;# 
  2499  0F1C                     	;# 
  2500  0F1D                     	;# 
  2501  0F1E                     	;# 
  2502  0F1F                     	;# 
  2503  0F20                     	;# 
  2504  0F21                     	;# 
  2505  0F22                     	;# 
  2506  0F23                     	;# 
  2507  0F24                     	;# 
  2508  0F25                     	;# 
  2509  0F26                     	;# 
  2510  0F27                     	;# 
  2511  0F28                     	;# 
  2512  0F29                     	;# 
  2513  0F2A                     	;# 
  2514  0F2B                     	;# 
  2515  0F2C                     	;# 
  2516  0F2D                     	;# 
  2517  0F2E                     	;# 
  2518  0F2F                     	;# 
  2519  0F8C                     	;# 
  2520  0F8D                     	;# 
  2521  0F91                     	;# 
  2522  0F95                     	;# 
  2523  0F96                     	;# 
  2524  0F97                     	;# 
  2525  0F9C                     	;# 
  2526  0F9D                     	;# 
  2527  0F9E                     	;# 
  2528  0FE3                     	;# 
  2529  0FE4                     	;# 
  2530  0FE5                     	;# 
  2531  0FE6                     	;# 
  2532  0FE7                     	;# 
  2533  0FE8                     	;# 
  2534  0FE9                     	;# 
  2535  0FEA                     	;# 
  2536  0FEB                     	;# 
  2537  0FED                     	;# 
  2538  0FEE                     	;# 
  2539  0FEF                     	;# 
  2540                           
  2541 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2542  0000                     
  2543 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2544  0000                     
  2545 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2546  0000                     
  2547                           	psect	idataCOMMON
  2548  0623                     __pidataCOMMON:
  2549                           
  2550                           ;initializer for _U8Message
  2551  0623  3455               	retlw	85
  2552                           
  2553                           ;initializer for _BreathState
  2554  0624  3401               	retlw	1
  2555                           
  2556                           	psect	idataBANK0
  2557  0629                     __pidataBANK0:
  2558                           
  2559                           ;initializer for _TempH
  2560  0629  34E3               	retlw	227
  2561                           
  2562                           	psect	stringtext1
  2563  0384                     __pstringtext1:
  2564  0384                     _fsmStateTable:
  2565  0384  34CF               	retlw	low _I2C_DO_IDLE
  2566  0385  3405               	retlw	high _I2C_DO_IDLE
  2567  0386  3491               	retlw	low _I2C_DO_SEND_ADR_READ
  2568  0387  3405               	retlw	high _I2C_DO_SEND_ADR_READ
  2569  0388  3499               	retlw	low _I2C_DO_SEND_ADR_WRITE
  2570  0389  3405               	retlw	high _I2C_DO_SEND_ADR_WRITE
  2571  038A  346E               	retlw	low _I2C_DO_TX
  2572  038B  3401               	retlw	high _I2C_DO_TX
  2573  038C  34BD               	retlw	low _I2C_DO_RX
  2574  038D  3401               	retlw	high _I2C_DO_RX
  2575  038E  34B2               	retlw	low _I2C_DO_RCEN
  2576  038F  3405               	retlw	high _I2C_DO_RCEN
  2577  0390  3472               	retlw	low _I2C_DO_TX_EMPTY
  2578  0391  3402               	retlw	high _I2C_DO_TX_EMPTY
  2579  0392  34FC               	retlw	low _I2C_DO_SEND_RESTART_READ
  2580  0393  3405               	retlw	high _I2C_DO_SEND_RESTART_READ
  2581  0394  34F8               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  2582  0395  3405               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  2583  0396  34F4               	retlw	low _I2C_DO_SEND_RESTART
  2584  0397  3405               	retlw	high _I2C_DO_SEND_RESTART
  2585  0398  34F0               	retlw	low _I2C_DO_SEND_STOP
  2586  0399  3405               	retlw	high _I2C_DO_SEND_STOP
  2587  039A  34EC               	retlw	low _I2C_DO_RX_ACK
  2588  039B  3405               	retlw	high _I2C_DO_RX_ACK
  2589  039C  34E8               	retlw	low _I2C_DO_RX_NACK_STOP
  2590  039D  3405               	retlw	high _I2C_DO_RX_NACK_STOP
  2591  039E  34E4               	retlw	low _I2C_DO_RX_NACK_RESTART
  2592  039F  3405               	retlw	high _I2C_DO_RX_NACK_RESTART
  2593  03A0  34CA               	retlw	low _I2C_DO_RESET
  2594  03A1  3405               	retlw	high _I2C_DO_RESET
  2595  03A2  349F               	retlw	low _I2C_DO_ADDRESS_NACK
  2596  03A3  3402               	retlw	high _I2C_DO_ADDRESS_NACK
  2597  03A4                     __end_of_fsmStateTable:
  2598                           
  2599                           	psect	stringtext2
  2600  04F5                     __pstringtext2:
  2601  04F5                     _COS_tsk:
  2602  04F5  3481               	retlw	low _UartDisplay
  2603  04F6  3405               	retlw	high _UartDisplay
  2604  04F7  3480               	retlw	128
  2605  04F8  34F1               	retlw	low _GetTemp
  2606  04F9  3402               	retlw	high _GetTemp
  2607  04FA  3440               	retlw	64
  2608  04FB  3400               	retlw	0
  2609  04FC  3400               	retlw	0
  2610  04FD  3400               	retlw	0
  2611  04FE  3400               	retlw	0
  2612  04FF  3400               	retlw	0
  2613  0500  3400               	retlw	0
  2614  0501  3400               	retlw	0
  2615  0502  3400               	retlw	0
  2616  0503  3400               	retlw	0
  2617  0504                     __end_of_COS_tsk:
  2618                           
  2619                           	psect	nvBANK0
  2620  006B                     __pnvBANK0:
  2621  006B                     _TMR2_InterruptHandler:
  2622  006B                     	ds	2
  2623  006D                     _COS_tsk_ena:
  2624  006D                     	ds	1
  2625  006E                     _COS_tsk_msk:
  2626  006E                     	ds	1
  2627                           
  2628                           	psect	nvBANK1
  2629  00A0                     __pnvBANK1:
  2630  00A0                     _EUSART_ErrorHandler:
  2631  00A0                     	ds	2
  2632  00A2                     _EUSART_OverrunErrorHandler:
  2633  00A2                     	ds	2
  2634  00A4                     _EUSART_FramingErrorHandler:
  2635  00A4                     	ds	2
  2636  0012                     _PIR2bits	set	18
  2637  000B                     _INTCONbits	set	11
  2638  001C                     _T2CONbits	set	28
  2639  001C                     _T2CON	set	28
  2640  0011                     _PIR1bits	set	17
  2641  001A                     _TMR2	set	26
  2642  001B                     _PR2	set	27
  2643  0018                     _T1CON	set	24
  2644  0016                     _TMR1L	set	22
  2645  0017                     _TMR1H	set	23
  2646  0095                     _OPTION_REGbits	set	149
  2647  008E                     _TRISC	set	142
  2648  008D                     _TRISB	set	141
  2649  008C                     _TRISA	set	140
  2650  0097                     _WDTCON	set	151
  2651  0099                     _OSCCON	set	153
  2652  0091                     _PIE1bits	set	145
  2653  010E                     _LATCbits	set	270
  2654  011D                     _APFCON	set	285
  2655  010E                     _LATC	set	270
  2656  010D                     _LATB	set	269
  2657  010C                     _LATA	set	268
  2658  0116                     _BORCON	set	278
  2659  019A                     _TXREG	set	410
  2660  0199                     _RCREG	set	409
  2661  019D                     _RCSTAbits	set	413
  2662  019E                     _TXSTAbits	set	414
  2663  019C                     _SPBRGH	set	412
  2664  019B                     _SPBRGL	set	411
  2665  019E                     _TXSTA	set	414
  2666  019D                     _RCSTA	set	413
  2667  019F                     _BAUDCON	set	415
  2668  018C                     _ANSELA	set	396
  2669  018D                     _ANSELB	set	397
  2670  018E                     _ANSELC	set	398
  2671  0214                     _SSP1STATbits	set	532
  2672  0216                     _SSP1CON2bits	set	534
  2673  0211                     _SSP1BUF	set	529
  2674  0215                     _SSP1CON1bits	set	533
  2675  0212                     _SSP1ADD	set	530
  2676  0216                     _SSP1CON2	set	534
  2677  0215                     _SSP1CON1	set	533
  2678  0214                     _SSP1STAT	set	532
  2679  020C                     _WPUA	set	524
  2680  020D                     _WPUB	set	525
  2681  0611                     _PWM1DCL	set	1553
  2682  0612                     _PWM1DCH	set	1554
  2683  0613                     _PWM1CON	set	1555
  2684                           
  2685                           	psect	cinit
  2686  0014                     start_initialization:	
  2687                           ; #config settings
  2688                           
  2689  0014                     __initialization:
  2690                           
  2691                           ; Initialize objects allocated to COMMON
  2692  0014  3186  2623  3180   	fcall	__pidataCOMMON	;fetch initializer
  2693  0017  00FA               	movwf	__pdataCOMMON& (0+127)
  2694  0018  3186  2624  3180   	fcall	__pidataCOMMON+1	;fetch initializer
  2695  001B  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
  2696                           
  2697                           ; Initialize objects allocated to BANK0
  2698  001C  3186  2629  3180   	fcall	__pidataBANK0	;fetch initializer
  2699  001F  00EF               	movwf	__pdataBANK0& (0+127)
  2700                           
  2701                           ; Clear objects allocated to COMMON
  2702  0020  01F6               	clrf	__pbssCOMMON& (0+127)
  2703  0021  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  2704  0022  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  2705  0023  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  2706                           
  2707                           ; Clear objects allocated to BANK0
  2708  0024  3020               	movlw	low __pbssBANK0
  2709  0025  0084               	movwf	4
  2710  0026  3000               	movlw	high __pbssBANK0
  2711  0027  0085               	movwf	5
  2712  0028  3033               	movlw	51
  2713  0029  3185  25A0         	fcall	clear_ram0
  2714  002B                     end_of_initialization:	
  2715                           ;End of C runtime variable initialization code
  2716                           
  2717  002B                     __end_of__initialization:
  2718  002B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2719  002C  0020               	movlb	0
  2720  002D  3183  2BDD         	ljmp	_main	;jump to C main() function
  2721                           
  2722                           	psect	bssCOMMON
  2723  0076                     __pbssCOMMON:
  2724  0076                     _COS_tcnt_val:
  2725  0076                     	ds	2
  2726  0078                     _NewMessageFlag:
  2727  0078                     	ds	1
  2728  0079                     _eusartRxLastError:
  2729  0079                     	ds	1
  2730                           
  2731                           	psect	dataCOMMON
  2732  007A                     __pdataCOMMON:
  2733  007A                     _U8Message:
  2734  007A                     	ds	1
  2735  007B                     _BreathState:
  2736  007B                     	ds	1
  2737                           
  2738                           	psect	bssBANK0
  2739  0020                     __pbssBANK0:
  2740  0020                     _I2C_Status:
  2741  0020                     	ds	29
  2742  003D                     _Humi:
  2743  003D                     	ds	2
  2744  003F                     _Temp:
  2745  003F                     	ds	2
  2746  0041                     _dutyValue:
  2747  0041                     	ds	2
  2748  0043                     _counter:
  2749  0043                     	ds	2
  2750  0045                     TMR2_ISR@CountCallBack:
  2751  0045                     	ds	2
  2752  0047                     _COS_tcnt_lst:
  2753  0047                     	ds	2
  2754  0049                     _COS_tsk_tmr:
  2755  0049                     	ds	2
  2756  004B                     _COS_sec_tmr:
  2757  004B                     	ds	2
  2758  004D                     _COS_ms_tmr:
  2759  004D                     	ds	2
  2760  004F                     _counter@UART_Display$F1229:
  2761  004F                     	ds	1
  2762  0050                     _Timer2Flag:
  2763  0050                     	ds	1
  2764  0051                     _TimeSlotCounter:
  2765  0051                     	ds	1
  2766  0052                     _COS_tsk_ind:
  2767  0052                     	ds	1
  2768                           
  2769                           	psect	dataBANK0
  2770  006F                     __pdataBANK0:
  2771  006F                     _TempH:
  2772  006F                     	ds	1
  2773                           
  2774                           	psect	clrtext
  2775  05A0                     clear_ram0:	
  2776                           ;	Called with FSR0 containing the base address, and
  2777                           ;	WREG with the size to clear
  2778                           
  2779  05A0  0064               	clrwdt	;clear the watchdog before getting into this loop
  2780  05A1                     clrloop0:
  2781  05A1  0180               	clrf	0	;clear RAM location pointed to by FSR
  2782  05A2  3101               	addfsr 0,1
  2783  05A3  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2784  05A4  2DA1               	goto	clrloop0	;have we reached the end yet?
  2785  05A5  3400               	retlw	0	;all done for this memory range, return
  2786                           
  2787                           	psect	cstackBANK1
  2788  00A6                     __pcstackBANK1:
  2789  00A6                     ??_COS_TskMan:
  2790                           
  2791                           ; 1 bytes @ 0x0
  2792  00A6                     	ds	2
  2793                           
  2794                           	psect	cstackCOMMON
  2795  0070                     __pcstackCOMMON:
  2796  0070                     ?_COS_TimerSetup:
  2797  0070                     ?_UartDisplay:	
  2798                           ; 1 bytes @ 0x0
  2799                           
  2800  0070                     ?_GetTemp:	
  2801                           ; 1 bytes @ 0x0
  2802                           
  2803  0070                     ?_I2C_Open:	
  2804                           ; 1 bytes @ 0x0
  2805                           
  2806  0070                     ?_I2C_MasterWrite:	
  2807                           ; 1 bytes @ 0x0
  2808                           
  2809  0070                     ?_I2C_Close:	
  2810                           ; 1 bytes @ 0x0
  2811                           
  2812  0070                     ?_I2C_MasterRead:	
  2813                           ; 1 bytes @ 0x0
  2814                           
  2815  0070                     ?_TMR2_DefaultInterruptHandler:	
  2816                           ; 1 bytes @ 0x0
  2817                           
  2818  0070                     ??_TMR2_DefaultInterruptHandler:	
  2819                           ; 1 bytes @ 0x0
  2820                           
  2821  0070                     ?_TMR2_CallBack:	
  2822                           ; 1 bytes @ 0x0
  2823                           
  2824  0070                     ?_I2C_Initialize:	
  2825                           ; 1 bytes @ 0x0
  2826                           
  2827  0070                     ?_PIN_MANAGER_Initialize:	
  2828                           ; 1 bytes @ 0x0
  2829                           
  2830  0070                     ?_OSCILLATOR_Initialize:	
  2831                           ; 1 bytes @ 0x0
  2832                           
  2833  0070                     ?_WDT_Initialize:	
  2834                           ; 1 bytes @ 0x0
  2835                           
  2836  0070                     ?_PWM1_Initialize:	
  2837                           ; 1 bytes @ 0x0
  2838                           
  2839  0070                     ?_EUSART_Initialize:	
  2840                           ; 1 bytes @ 0x0
  2841                           
  2842  0070                     ?_I2C_DO_IDLE:	
  2843                           ; 1 bytes @ 0x0
  2844                           
  2845  0070                     ?_I2C_DO_SEND_ADR_READ:	
  2846                           ; 1 bytes @ 0x0
  2847                           
  2848  0070                     ?_I2C_DO_SEND_ADR_WRITE:	
  2849                           ; 1 bytes @ 0x0
  2850                           
  2851  0070                     ?_I2C_DO_TX:	
  2852                           ; 1 bytes @ 0x0
  2853                           
  2854  0070                     ?_I2C_DO_RX:	
  2855                           ; 1 bytes @ 0x0
  2856                           
  2857  0070                     ?_I2C_DO_RCEN:	
  2858                           ; 1 bytes @ 0x0
  2859                           
  2860  0070                     ?_I2C_DO_TX_EMPTY:	
  2861                           ; 1 bytes @ 0x0
  2862                           
  2863  0070                     ?_I2C_DO_SEND_RESTART_READ:	
  2864                           ; 1 bytes @ 0x0
  2865                           
  2866  0070                     ?_I2C_DO_SEND_RESTART_WRITE:	
  2867                           ; 1 bytes @ 0x0
  2868                           
  2869  0070                     ?_I2C_DO_SEND_RESTART:	
  2870                           ; 1 bytes @ 0x0
  2871                           
  2872  0070                     ?_I2C_DO_SEND_STOP:	
  2873                           ; 1 bytes @ 0x0
  2874                           
  2875  0070                     ?_I2C_DO_RX_ACK:	
  2876                           ; 1 bytes @ 0x0
  2877                           
  2878  0070                     ?_I2C_DO_RX_NACK_STOP:	
  2879                           ; 1 bytes @ 0x0
  2880                           
  2881  0070                     ?_I2C_DO_RX_NACK_RESTART:	
  2882                           ; 1 bytes @ 0x0
  2883                           
  2884  0070                     ?_I2C_DO_RESET:	
  2885                           ; 1 bytes @ 0x0
  2886                           
  2887  0070                     ?_I2C_DO_ADDRESS_NACK:	
  2888                           ; 1 bytes @ 0x0
  2889                           
  2890  0070                     ?_I2C_MasterClearIrq:	
  2891                           ; 1 bytes @ 0x0
  2892                           
  2893  0070                     ?_I2C_MasterOpen:	
  2894                           ; 1 bytes @ 0x0
  2895                           
  2896  0070                     ?_I2C_MasterDisableIrq:	
  2897                           ; 1 bytes @ 0x0
  2898                           
  2899  0070                     ?_I2C_MasterClose:	
  2900                           ; 1 bytes @ 0x0
  2901                           
  2902  0070                     ?_I2C_MasterStart:	
  2903                           ; 1 bytes @ 0x0
  2904                           
  2905  0070                     ?_I2C_Poller:	
  2906                           ; 1 bytes @ 0x0
  2907                           
  2908  0070                     ?_I2C_MasterWaitForEvent:	
  2909                           ; 1 bytes @ 0x0
  2910                           
  2911  0070                     ?_I2C_MasterFsm:	
  2912                           ; 1 bytes @ 0x0
  2913                           
  2914  0070                     ?_I2C_MasterIsNack:	
  2915                           ; 1 bytes @ 0x0
  2916                           
  2917  0070                     ?_I2C_MasterSendTxData:	
  2918                           ; 1 bytes @ 0x0
  2919                           
  2920  0070                     ?_I2C_MasterGetRxData:	
  2921                           ; 1 bytes @ 0x0
  2922                           
  2923  0070                     ?_I2C_MasterSendAck:	
  2924                           ; 1 bytes @ 0x0
  2925                           
  2926  0070                     ?_I2C_MasterStartRx:	
  2927                           ; 1 bytes @ 0x0
  2928                           
  2929  0070                     ?_I2C_MasterSetIrq:	
  2930                           ; 1 bytes @ 0x0
  2931                           
  2932  0070                     ?_I2C_MasterEnableRestart:	
  2933                           ; 1 bytes @ 0x0
  2934                           
  2935  0070                     ?_I2C_MasterStop:	
  2936                           ; 1 bytes @ 0x0
  2937                           
  2938  0070                     ?_I2C_MasterSendNack:	
  2939                           ; 1 bytes @ 0x0
  2940                           
  2941  0070                     ?_COS_Init:	
  2942                           ; 1 bytes @ 0x0
  2943                           
  2944  0070                     ?_COS_TmrHandler:	
  2945                           ; 1 bytes @ 0x0
  2946                           
  2947  0070                     ?_COS_TskMan:	
  2948                           ; 1 bytes @ 0x0
  2949                           
  2950  0070                     ?_TMR2_Initialize:	
  2951                           ; 1 bytes @ 0x0
  2952                           
  2953  0070                     ?_TMR2_ISR:	
  2954                           ; 1 bytes @ 0x0
  2955                           
  2956  0070                     ?_INTERRUPT_InterruptManager:	
  2957                           ; 1 bytes @ 0x0
  2958                           
  2959  0070                     ?_SYSTEM_Initialize:	
  2960                           ; 1 bytes @ 0x0
  2961                           
  2962  0070                     ?_PWM1_LoadDutyValue:	
  2963                           ; 1 bytes @ 0x0
  2964                           
  2965  0070                     ?_I2C_MasterOperation:	
  2966                           ; 1 bytes @ 0x0
  2967                           
  2968  0070                     ?_EUSART_Write:	
  2969                           ; 1 bytes @ 0x0
  2970                           
  2971  0070                     ?_Led2_PWM:	
  2972                           ; 1 bytes @ 0x0
  2973                           
  2974  0070                     ?_SendByUart:	
  2975                           ; 1 bytes @ 0x0
  2976                           
  2977  0070                     ?_main:	
  2978                           ; 1 bytes @ 0x0
  2979                           
  2980  0070                     PWM1_LoadDutyValue@dutyValue:	
  2981                           ; 1 bytes @ 0x0
  2982                           
  2983                           
  2984                           ; 2 bytes @ 0x0
  2985  0070                     	ds	2
  2986  0072                     ??_PWM1_LoadDutyValue:
  2987                           
  2988                           ; 1 bytes @ 0x2
  2989  0072                     	ds	2
  2990  0074                     ??_Led2_PWM:
  2991                           
  2992                           ; 1 bytes @ 0x4
  2993  0074                     	ds	2
  2994  0076                     ??_TMR2_CallBack:
  2995  0076                     ??_TMR2_ISR:	
  2996                           ; 1 bytes @ 0x6
  2997                           
  2998  0076                     ??_INTERRUPT_InterruptManager:	
  2999                           ; 1 bytes @ 0x6
  3000                           
  3001                           
  3002                           	psect	cstackBANK0
  3003  0053                     __pcstackBANK0:	
  3004                           ; 1 bytes @ 0x6
  3005                           
  3006  0053                     ??_COS_TimerSetup:
  3007  0053                     ??_I2C_Open:	
  3008                           ; 1 bytes @ 0x0
  3009                           
  3010  0053                     ?_I2C_SetBuffer:	
  3011                           ; 1 bytes @ 0x0
  3012                           
  3013  0053                     ??_I2C_Close:	
  3014                           ; 1 bytes @ 0x0
  3015                           
  3016  0053                     ?_TMR2_SetInterruptHandler:	
  3017                           ; 1 bytes @ 0x0
  3018                           
  3019  0053                     ??_I2C_Initialize:	
  3020                           ; 1 bytes @ 0x0
  3021                           
  3022  0053                     ??_PIN_MANAGER_Initialize:	
  3023                           ; 1 bytes @ 0x0
  3024                           
  3025  0053                     ??_OSCILLATOR_Initialize:	
  3026                           ; 1 bytes @ 0x0
  3027                           
  3028  0053                     ??_WDT_Initialize:	
  3029                           ; 1 bytes @ 0x0
  3030                           
  3031  0053                     ??_PWM1_Initialize:	
  3032                           ; 1 bytes @ 0x0
  3033                           
  3034  0053                     ??_I2C_DO_IDLE:	
  3035                           ; 1 bytes @ 0x0
  3036                           
  3037  0053                     ??_I2C_DO_SEND_ADR_READ:	
  3038                           ; 1 bytes @ 0x0
  3039                           
  3040  0053                     ??_I2C_DO_RCEN:	
  3041                           ; 1 bytes @ 0x0
  3042                           
  3043  0053                     ??_I2C_DO_SEND_RESTART_READ:	
  3044                           ; 1 bytes @ 0x0
  3045                           
  3046  0053                     ??_I2C_DO_SEND_RESTART_WRITE:	
  3047                           ; 1 bytes @ 0x0
  3048                           
  3049  0053                     ??_I2C_DO_SEND_RESTART:	
  3050                           ; 1 bytes @ 0x0
  3051                           
  3052  0053                     ??_I2C_DO_SEND_STOP:	
  3053                           ; 1 bytes @ 0x0
  3054                           
  3055  0053                     ??_I2C_DO_RX_ACK:	
  3056                           ; 1 bytes @ 0x0
  3057                           
  3058  0053                     ??_I2C_DO_RX_NACK_STOP:	
  3059                           ; 1 bytes @ 0x0
  3060                           
  3061  0053                     ??_I2C_DO_RX_NACK_RESTART:	
  3062                           ; 1 bytes @ 0x0
  3063                           
  3064  0053                     ??_I2C_DO_RESET:	
  3065                           ; 1 bytes @ 0x0
  3066                           
  3067  0053                     ??_I2C_MasterClearIrq:	
  3068                           ; 1 bytes @ 0x0
  3069                           
  3070  0053                     ??_I2C_MasterOpen:	
  3071                           ; 1 bytes @ 0x0
  3072                           
  3073  0053                     ??_I2C_MasterDisableIrq:	
  3074                           ; 1 bytes @ 0x0
  3075                           
  3076  0053                     ??_I2C_MasterClose:	
  3077                           ; 1 bytes @ 0x0
  3078                           
  3079  0053                     ??_I2C_MasterStart:	
  3080                           ; 1 bytes @ 0x0
  3081                           
  3082  0053                     ?_I2C_SetCallback:	
  3083                           ; 1 bytes @ 0x0
  3084                           
  3085  0053                     ??_I2C_MasterWaitForEvent:	
  3086                           ; 1 bytes @ 0x0
  3087                           
  3088  0053                     ??_I2C_MasterIsNack:	
  3089                           ; 1 bytes @ 0x0
  3090                           
  3091  0053                     ??_I2C_MasterSendTxData:	
  3092                           ; 1 bytes @ 0x0
  3093                           
  3094  0053                     ??_I2C_MasterGetRxData:	
  3095                           ; 1 bytes @ 0x0
  3096                           
  3097  0053                     ??_I2C_MasterSendAck:	
  3098                           ; 1 bytes @ 0x0
  3099                           
  3100  0053                     ??_I2C_MasterStartRx:	
  3101                           ; 1 bytes @ 0x0
  3102                           
  3103  0053                     ??_I2C_MasterSetIrq:	
  3104                           ; 1 bytes @ 0x0
  3105                           
  3106  0053                     ??_I2C_MasterEnableRestart:	
  3107                           ; 1 bytes @ 0x0
  3108                           
  3109  0053                     ??_I2C_MasterStop:	
  3110                           ; 1 bytes @ 0x0
  3111                           
  3112  0053                     ??_I2C_MasterSendNack:	
  3113                           ; 1 bytes @ 0x0
  3114                           
  3115  0053                     ?_EUSART_SetFramingErrorHandler:	
  3116                           ; 1 bytes @ 0x0
  3117                           
  3118  0053                     ?_EUSART_SetOverrunErrorHandler:	
  3119                           ; 1 bytes @ 0x0
  3120                           
  3121  0053                     ?_EUSART_SetErrorHandler:	
  3122                           ; 1 bytes @ 0x0
  3123                           
  3124  0053                     ??_COS_Init:	
  3125                           ; 1 bytes @ 0x0
  3126                           
  3127  0053                     ??_COS_TmrHandler:	
  3128                           ; 1 bytes @ 0x0
  3129                           
  3130  0053                     ??_EUSART_Write:	
  3131                           ; 1 bytes @ 0x0
  3132                           
  3133  0053                     ??_SendByUart:	
  3134                           ; 1 bytes @ 0x0
  3135                           
  3136  0053                     ?___wmul:	
  3137                           ; 1 bytes @ 0x0
  3138                           
  3139  0053                     I2C_MasterSendTxData@data:	
  3140                           ; 2 bytes @ 0x0
  3141                           
  3142  0053                     EUSART_Write@txData:	
  3143                           ; 1 bytes @ 0x0
  3144                           
  3145  0053                     TMR2_SetInterruptHandler@InterruptHandler:	
  3146                           ; 1 bytes @ 0x0
  3147                           
  3148  0053                     I2C_SetBuffer@bufferSize:	
  3149                           ; 2 bytes @ 0x0
  3150                           
  3151  0053                     I2C_SetCallback@cb:	
  3152                           ; 2 bytes @ 0x0
  3153                           
  3154  0053                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3155                           ; 2 bytes @ 0x0
  3156                           
  3157  0053                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3158                           ; 2 bytes @ 0x0
  3159                           
  3160  0053                     EUSART_SetErrorHandler@interruptHandler:	
  3161                           ; 2 bytes @ 0x0
  3162                           
  3163  0053                     ___wmul@multiplier:	
  3164                           ; 2 bytes @ 0x0
  3165                           
  3166                           
  3167                           ; 2 bytes @ 0x0
  3168  0053                     	ds	1
  3169  0054                     ??_UartDisplay:
  3170  0054                     ??_I2C_DO_SEND_ADR_WRITE:	
  3171                           ; 1 bytes @ 0x1
  3172                           
  3173  0054                     I2C_Open@address:	
  3174                           ; 1 bytes @ 0x1
  3175                           
  3176  0054                     I2C_Close@returnValue:	
  3177                           ; 1 bytes @ 0x1
  3178                           
  3179  0054                     SendByUart@Txt:	
  3180                           ; 1 bytes @ 0x1
  3181                           
  3182                           
  3183                           ; 1 bytes @ 0x1
  3184  0054                     	ds	1
  3185  0055                     ??_I2C_SetBuffer:
  3186  0055                     ??_TMR2_SetInterruptHandler:	
  3187                           ; 1 bytes @ 0x2
  3188                           
  3189  0055                     ??_EUSART_Initialize:	
  3190                           ; 1 bytes @ 0x2
  3191                           
  3192  0055                     ??_EUSART_SetFramingErrorHandler:	
  3193                           ; 1 bytes @ 0x2
  3194                           
  3195  0055                     ??_EUSART_SetOverrunErrorHandler:	
  3196                           ; 1 bytes @ 0x2
  3197                           
  3198  0055                     ??_EUSART_SetErrorHandler:	
  3199                           ; 1 bytes @ 0x2
  3200                           
  3201  0055                     ??_TMR2_Initialize:	
  3202                           ; 1 bytes @ 0x2
  3203                           
  3204  0055                     ??_SYSTEM_Initialize:	
  3205                           ; 1 bytes @ 0x2
  3206                           
  3207  0055                     I2C_Open@returnValue:	
  3208                           ; 1 bytes @ 0x2
  3209                           
  3210  0055                     I2C_SetCallback@ptr:	
  3211                           ; 1 bytes @ 0x2
  3212                           
  3213  0055                     ___wmul@multiplicand:	
  3214                           ; 1 bytes @ 0x2
  3215                           
  3216                           
  3217                           ; 2 bytes @ 0x2
  3218  0055                     	ds	1
  3219  0056                     ??_I2C_SetCallback:
  3220  0056                     COS_Init@tempbyte1:	
  3221                           ; 1 bytes @ 0x3
  3222                           
  3223  0056                     COS_TmrHandler@tempbyte1:	
  3224                           ; 1 bytes @ 0x3
  3225                           
  3226  0056                     I2C_SetBuffer@buffer:	
  3227                           ; 1 bytes @ 0x3
  3228                           
  3229                           
  3230                           ; 1 bytes @ 0x3
  3231  0056                     	ds	1
  3232  0057                     ??___wmul:
  3233  0057                     COS_Init@tempbyte2:	
  3234                           ; 1 bytes @ 0x4
  3235                           
  3236  0057                     COS_TmrHandler@tempbyte2:	
  3237                           ; 1 bytes @ 0x4
  3238                           
  3239  0057                     I2C_SetCallback@idx:	
  3240                           ; 1 bytes @ 0x4
  3241                           
  3242  0057                     ___wmul@product:	
  3243                           ; 1 bytes @ 0x4
  3244                           
  3245                           
  3246                           ; 2 bytes @ 0x4
  3247  0057                     	ds	1
  3248  0058                     ?_I2C_SetDataCompleteCallback:
  3249  0058                     ?_I2C_SetAddressNackCallback:	
  3250                           ; 1 bytes @ 0x5
  3251                           
  3252  0058                     I2C_SetDataCompleteCallback@cb:	
  3253                           ; 1 bytes @ 0x5
  3254                           
  3255  0058                     I2C_SetAddressNackCallback@cb:	
  3256                           ; 2 bytes @ 0x5
  3257                           
  3258                           
  3259                           ; 2 bytes @ 0x5
  3260  0058                     	ds	2
  3261  005A                     I2C_SetDataCompleteCallback@ptr:
  3262  005A                     I2C_SetAddressNackCallback@ptr:	
  3263                           ; 1 bytes @ 0x7
  3264                           
  3265                           
  3266                           ; 1 bytes @ 0x7
  3267  005A                     	ds	1
  3268  005B                     ??_I2C_SetDataCompleteCallback:
  3269  005B                     ??_I2C_SetAddressNackCallback:	
  3270                           ; 1 bytes @ 0x8
  3271                           
  3272                           
  3273                           ; 1 bytes @ 0x8
  3274  005B                     	ds	1
  3275  005C                     ?_rd1RegCompleteHandler:
  3276  005C                     ?_rd2RegCompleteHandler:	
  3277                           ; 1 bytes @ 0x9
  3278                           
  3279  005C                     ?_wr1RegCompleteHandler:	
  3280                           ; 1 bytes @ 0x9
  3281                           
  3282  005C                     ?_wr2RegCompleteHandler:	
  3283                           ; 1 bytes @ 0x9
  3284                           
  3285  005C                     ?_rdBlkRegCompleteHandler:	
  3286                           ; 1 bytes @ 0x9
  3287                           
  3288  005C                     ?_I2C_CallbackReturnStop:	
  3289                           ; 1 bytes @ 0x9
  3290                           
  3291  005C                     ?_I2C_CallbackReturnReset:	
  3292                           ; 1 bytes @ 0x9
  3293                           
  3294  005C                     rd1RegCompleteHandler@ptr:	
  3295                           ; 1 bytes @ 0x9
  3296                           
  3297  005C                     rd2RegCompleteHandler@ptr:	
  3298                           ; 1 bytes @ 0x9
  3299                           
  3300  005C                     wr1RegCompleteHandler@ptr:	
  3301                           ; 1 bytes @ 0x9
  3302                           
  3303  005C                     wr2RegCompleteHandler@ptr:	
  3304                           ; 1 bytes @ 0x9
  3305                           
  3306  005C                     rdBlkRegCompleteHandler@ptr:	
  3307                           ; 1 bytes @ 0x9
  3308                           
  3309  005C                     I2C_CallbackReturnStop@funPtr:	
  3310                           ; 1 bytes @ 0x9
  3311                           
  3312  005C                     I2C_CallbackReturnReset@funPtr:	
  3313                           ; 1 bytes @ 0x9
  3314                           
  3315                           
  3316                           ; 1 bytes @ 0x9
  3317  005C                     	ds	1
  3318  005D                     ??_rd1RegCompleteHandler:
  3319  005D                     ??_rd2RegCompleteHandler:	
  3320                           ; 1 bytes @ 0xA
  3321                           
  3322  005D                     ??_wr1RegCompleteHandler:	
  3323                           ; 1 bytes @ 0xA
  3324                           
  3325  005D                     ??_wr2RegCompleteHandler:	
  3326                           ; 1 bytes @ 0xA
  3327                           
  3328  005D                     ??_rdBlkRegCompleteHandler:	
  3329                           ; 1 bytes @ 0xA
  3330                           
  3331  005D                     ??_I2C_DO_TX:	
  3332                           ; 1 bytes @ 0xA
  3333                           
  3334  005D                     ??_I2C_DO_RX:	
  3335                           ; 1 bytes @ 0xA
  3336                           
  3337  005D                     ??_I2C_DO_TX_EMPTY:	
  3338                           ; 1 bytes @ 0xA
  3339                           
  3340  005D                     ??_I2C_DO_ADDRESS_NACK:	
  3341                           ; 1 bytes @ 0xA
  3342                           
  3343  005D                     ??_I2C_CallbackReturnStop:	
  3344                           ; 1 bytes @ 0xA
  3345                           
  3346  005D                     ??_I2C_CallbackReturnReset:	
  3347                           ; 1 bytes @ 0xA
  3348                           
  3349                           
  3350                           ; 1 bytes @ 0xA
  3351  005D                     	ds	3
  3352  0060                     ??_I2C_MasterFsm:
  3353                           
  3354                           ; 1 bytes @ 0xD
  3355  0060                     	ds	3
  3356  0063                     ??_I2C_Poller:
  3357  0063                     ??_I2C_MasterOperation:	
  3358                           ; 1 bytes @ 0x10
  3359                           
  3360                           
  3361                           ; 1 bytes @ 0x10
  3362  0063                     	ds	1
  3363  0064                     I2C_MasterOperation@read:
  3364                           
  3365                           ; 1 bytes @ 0x11
  3366  0064                     	ds	1
  3367  0065                     I2C_MasterOperation@returnValue:
  3368                           
  3369                           ; 1 bytes @ 0x12
  3370  0065                     	ds	1
  3371  0066                     ??_I2C_MasterWrite:
  3372  0066                     ??_I2C_MasterRead:	
  3373                           ; 1 bytes @ 0x13
  3374                           
  3375  0066                     ?_I2C_WriteNBytes:	
  3376                           ; 1 bytes @ 0x13
  3377                           
  3378  0066                     ?_I2C_ReadNBytes:	
  3379                           ; 1 bytes @ 0x13
  3380                           
  3381  0066                     I2C_WriteNBytes@data:	
  3382                           ; 1 bytes @ 0x13
  3383                           
  3384  0066                     I2C_ReadNBytes@data:	
  3385                           ; 1 bytes @ 0x13
  3386                           
  3387                           
  3388                           ; 1 bytes @ 0x13
  3389  0066                     	ds	1
  3390  0067                     I2C_WriteNBytes@len:
  3391  0067                     I2C_ReadNBytes@len:	
  3392                           ; 2 bytes @ 0x14
  3393                           
  3394                           
  3395                           ; 2 bytes @ 0x14
  3396  0067                     	ds	2
  3397  0069                     ??_I2C_WriteNBytes:
  3398  0069                     ??_I2C_ReadNBytes:	
  3399                           ; 1 bytes @ 0x16
  3400                           
  3401  0069                     I2C_WriteNBytes@address:	
  3402                           ; 1 bytes @ 0x16
  3403                           
  3404  0069                     I2C_ReadNBytes@address:	
  3405                           ; 1 bytes @ 0x16
  3406                           
  3407                           
  3408                           ; 1 bytes @ 0x16
  3409  0069                     	ds	1
  3410  006A                     ??_GetTemp:
  3411                           
  3412                           ; 1 bytes @ 0x17
  3413  006A                     	ds	1
  3414  006B                     ??_main:
  3415                           
  3416                           	psect	maintext
  3417  03DD                     __pmaintext:	
  3418                           ; 1 bytes @ 0x18
  3419 ;;
  3420 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3421 ;;
  3422 ;; *************** function _main *****************
  3423 ;; Defined at:
  3424 ;;		line 52 in file "main.c"
  3425 ;; Parameters:    Size  Location     Type
  3426 ;;		None
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;		None
  3429 ;; Return value:  Size  Location     Type
  3430 ;;                  1    wreg      void 
  3431 ;; Registers used:
  3432 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3433 ;; Tracked objects:
  3434 ;;		On entry : B1F/0
  3435 ;;		On exit  : 0/0
  3436 ;;		Unchanged: 0/0
  3437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3438 ;;      Params:         0       0       0       0       0       0       0       0
  3439 ;;      Locals:         0       0       0       0       0       0       0       0
  3440 ;;      Temps:          0       0       0       0       0       0       0       0
  3441 ;;      Totals:         0       0       0       0       0       0       0       0
  3442 ;;Total ram usage:        0 bytes
  3443 ;; Hardware stack levels required when called:   16
  3444 ;; This function calls:
  3445 ;;		_COS_Init
  3446 ;;		_COS_TmrHandler
  3447 ;;		_COS_TskMan
  3448 ;;		_SYSTEM_Initialize
  3449 ;;		_TMR2_SetInterruptHandler
  3450 ;; This function is called by:
  3451 ;;		Startup code after reset
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455                           
  3456                           ;psect for function _main
  3457  03DD                     _main:
  3458                           
  3459                           ;main.c: 55:     SYSTEM_Initialize();
  3460                           
  3461                           ;incstack = 0
  3462                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3463  03DD  3184  2473  3183   	fcall	_SYSTEM_Initialize
  3464                           
  3465                           ;main.c: 56:     COS_Init();
  3466  03E0  3181  21FF  3183   	fcall	_COS_Init
  3467                           
  3468                           ;main.c: 57:     TMR2_SetInterruptHandler(Led2_PWM);
  3469  03E3  30AB               	movlw	low _Led2_PWM
  3470  03E4  0020               	movlb	0	; select bank0
  3471  03E5  00D3               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  3472  03E6  3000               	movlw	high _Led2_PWM
  3473  03E7  00D4               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  3474  03E8  3185  25A6  3183   	fcall	_TMR2_SetInterruptHandler
  3475                           
  3476                           ;main.c: 63:     (INTCONbits.GIE = 1);
  3477  03EB  178B               	bsf	11,7	;volatile
  3478                           
  3479                           ;main.c: 66:     (INTCONbits.PEIE = 1);
  3480  03EC  170B               	bsf	11,6	;volatile
  3481  03ED                     l799:	
  3482                           ;main.c: 74:     while (1)
  3483                           
  3484                           
  3485                           ;main.c: 75:     {;main.c: 76:         COS_TmrHandler();
  3486  03ED  3181  2111  3183   	fcall	_COS_TmrHandler
  3487                           
  3488                           ;main.c: 78:         if (COS_tsk_ena)
  3489  03F0  0020               	movlb	0	; select bank0
  3490  03F1  086D               	movf	_COS_tsk_ena,w
  3491  03F2  1903               	btfsc	3,2
  3492  03F3  2BED               	goto	l799
  3493                           
  3494                           ;main.c: 79:         {;main.c: 80:             COS_TskMan();
  3495  03F4  3180  202F  3183   	fcall	_COS_TskMan
  3496  03F7  2BED               	goto	l799
  3497  03F8                     __end_of_main:
  3498                           
  3499                           	psect	text1
  3500  0473                     __ptext1:	
  3501 ;; *************** function _SYSTEM_Initialize *****************
  3502 ;; Defined at:
  3503 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;		None
  3506 ;; Auto vars:     Size  Location     Type
  3507 ;;		None
  3508 ;; Return value:  Size  Location     Type
  3509 ;;                  1    wreg      void 
  3510 ;; Registers used:
  3511 ;;		wreg, status,2, status,0, pclath, cstack
  3512 ;; Tracked objects:
  3513 ;;		On entry : 0/0
  3514 ;;		On exit  : 0/0
  3515 ;;		Unchanged: 0/0
  3516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3517 ;;      Params:         0       0       0       0       0       0       0       0
  3518 ;;      Locals:         0       0       0       0       0       0       0       0
  3519 ;;      Temps:          0       0       0       0       0       0       0       0
  3520 ;;      Totals:         0       0       0       0       0       0       0       0
  3521 ;;Total ram usage:        0 bytes
  3522 ;; Hardware stack levels used:    1
  3523 ;; Hardware stack levels required when called:    7
  3524 ;; This function calls:
  3525 ;;		_EUSART_Initialize
  3526 ;;		_I2C_Initialize
  3527 ;;		_OSCILLATOR_Initialize
  3528 ;;		_PIN_MANAGER_Initialize
  3529 ;;		_PWM1_Initialize
  3530 ;;		_TMR2_Initialize
  3531 ;;		_WDT_Initialize
  3532 ;; This function is called by:
  3533 ;;		_main
  3534 ;; This function uses a non-reentrant model
  3535 ;;
  3536                           
  3537                           
  3538                           ;psect for function _SYSTEM_Initialize
  3539  0473                     _SYSTEM_Initialize:
  3540                           
  3541                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  3542                           
  3543                           ;incstack = 0
  3544                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3545  0473  3185  254C  3184   	fcall	_I2C_Initialize
  3546                           
  3547                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3548  0476  3184  2412  3184   	fcall	_PIN_MANAGER_Initialize
  3549                           
  3550                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3551  0479  3185  25AC  3184   	fcall	_OSCILLATOR_Initialize
  3552                           
  3553                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  3554  047C  3185  25D4  3184   	fcall	_WDT_Initialize
  3555                           
  3556                           ;mcc_generated_files/mcc.c: 57:     PWM1_Initialize();
  3557  047F  3185  2579  3184   	fcall	_PWM1_Initialize
  3558                           
  3559                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  3560  0482  3184  249B  3184   	fcall	_TMR2_Initialize
  3561                           
  3562                           ;mcc_generated_files/mcc.c: 59:     EUSART_Initialize();
  3563  0485  3183  2360         	fcall	_EUSART_Initialize
  3564  0487  0008               	return
  3565  0488                     __end_of_SYSTEM_Initialize:
  3566                           
  3567                           	psect	text2
  3568  05D4                     __ptext2:	
  3569 ;; *************** function _WDT_Initialize *****************
  3570 ;; Defined at:
  3571 ;;		line 70 in file "mcc_generated_files/mcc.c"
  3572 ;; Parameters:    Size  Location     Type
  3573 ;;		None
  3574 ;; Auto vars:     Size  Location     Type
  3575 ;;		None
  3576 ;; Return value:  Size  Location     Type
  3577 ;;                  1    wreg      void 
  3578 ;; Registers used:
  3579 ;;		wreg
  3580 ;; Tracked objects:
  3581 ;;		On entry : 0/0
  3582 ;;		On exit  : 0/0
  3583 ;;		Unchanged: 0/0
  3584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3585 ;;      Params:         0       0       0       0       0       0       0       0
  3586 ;;      Locals:         0       0       0       0       0       0       0       0
  3587 ;;      Temps:          0       0       0       0       0       0       0       0
  3588 ;;      Totals:         0       0       0       0       0       0       0       0
  3589 ;;Total ram usage:        0 bytes
  3590 ;; Hardware stack levels used:    1
  3591 ;; Hardware stack levels required when called:    5
  3592 ;; This function calls:
  3593 ;;		Nothing
  3594 ;; This function is called by:
  3595 ;;		_SYSTEM_Initialize
  3596 ;; This function uses a non-reentrant model
  3597 ;;
  3598                           
  3599                           
  3600                           ;psect for function _WDT_Initialize
  3601  05D4                     _WDT_Initialize:
  3602                           
  3603                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x16;
  3604                           
  3605                           ;incstack = 0
  3606                           ; Regs used in _WDT_Initialize: [wreg]
  3607  05D4  3016               	movlw	22
  3608  05D5  0021               	movlb	1	; select bank1
  3609  05D6  0097               	movwf	23	;volatile
  3610  05D7  0008               	return
  3611  05D8                     __end_of_WDT_Initialize:
  3612                           
  3613                           	psect	text3
  3614  049B                     __ptext3:	
  3615 ;; *************** function _TMR2_Initialize *****************
  3616 ;; Defined at:
  3617 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;		None
  3620 ;; Auto vars:     Size  Location     Type
  3621 ;;		None
  3622 ;; Return value:  Size  Location     Type
  3623 ;;                  1    wreg      void 
  3624 ;; Registers used:
  3625 ;;		wreg, status,2, status,0, pclath, cstack
  3626 ;; Tracked objects:
  3627 ;;		On entry : 0/0
  3628 ;;		On exit  : 0/0
  3629 ;;		Unchanged: 0/0
  3630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3631 ;;      Params:         0       0       0       0       0       0       0       0
  3632 ;;      Locals:         0       0       0       0       0       0       0       0
  3633 ;;      Temps:          0       0       0       0       0       0       0       0
  3634 ;;      Totals:         0       0       0       0       0       0       0       0
  3635 ;;Total ram usage:        0 bytes
  3636 ;; Hardware stack levels used:    1
  3637 ;; Hardware stack levels required when called:    6
  3638 ;; This function calls:
  3639 ;;		_TMR2_SetInterruptHandler
  3640 ;; This function is called by:
  3641 ;;		_SYSTEM_Initialize
  3642 ;; This function uses a non-reentrant model
  3643 ;;
  3644                           
  3645                           
  3646                           ;psect for function _TMR2_Initialize
  3647  049B                     _TMR2_Initialize:
  3648                           
  3649                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0xF9;
  3650                           
  3651                           ;incstack = 0
  3652                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3653  049B  30F9               	movlw	249
  3654  049C  0020               	movlb	0	; select bank0
  3655  049D  009B               	movwf	27	;volatile
  3656                           
  3657                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  3658  049E  019A               	clrf	26	;volatile
  3659                           
  3660                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  3661  049F  1091               	bcf	17,1	;volatile
  3662                           
  3663                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  3664  04A0  0021               	movlb	1	; select bank1
  3665  04A1  1491               	bsf	17,1	;volatile
  3666                           
  3667                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  3668  04A2  302A               	movlw	low _TMR2_DefaultInterruptHandler
  3669  04A3  0020               	movlb	0	; select bank0
  3670  04A4  00D3               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  3671  04A5  3006               	movlw	high _TMR2_DefaultInterruptHandler
  3672  04A6  00D4               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  3673  04A7  3185  25A6         	fcall	_TMR2_SetInterruptHandler
  3674                           
  3675                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x06;
  3676  04A9  3006               	movlw	6
  3677  04AA  0020               	movlb	0	; select bank0
  3678  04AB  009C               	movwf	28	;volatile
  3679  04AC  0008               	return
  3680  04AD                     __end_of_TMR2_Initialize:
  3681                           
  3682                           	psect	text4
  3683  05A6                     __ptext4:	
  3684 ;; *************** function _TMR2_SetInterruptHandler *****************
  3685 ;; Defined at:
  3686 ;;		line 147 in file "mcc_generated_files/tmr2.c"
  3687 ;; Parameters:    Size  Location     Type
  3688 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3689 ;;		 -> Led2_PWM(1), TMR2_DefaultInterruptHandler(1), 
  3690 ;; Auto vars:     Size  Location     Type
  3691 ;;		None
  3692 ;; Return value:  Size  Location     Type
  3693 ;;                  1    wreg      void 
  3694 ;; Registers used:
  3695 ;;		wreg
  3696 ;; Tracked objects:
  3697 ;;		On entry : 0/0
  3698 ;;		On exit  : 0/0
  3699 ;;		Unchanged: 0/0
  3700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3701 ;;      Params:         0       2       0       0       0       0       0       0
  3702 ;;      Locals:         0       0       0       0       0       0       0       0
  3703 ;;      Temps:          0       0       0       0       0       0       0       0
  3704 ;;      Totals:         0       2       0       0       0       0       0       0
  3705 ;;Total ram usage:        2 bytes
  3706 ;; Hardware stack levels used:    1
  3707 ;; Hardware stack levels required when called:    5
  3708 ;; This function calls:
  3709 ;;		Nothing
  3710 ;; This function is called by:
  3711 ;;		_TMR2_Initialize
  3712 ;;		_main
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716                           
  3717                           ;psect for function _TMR2_SetInterruptHandler
  3718  05A6                     _TMR2_SetInterruptHandler:
  3719                           
  3720                           ;mcc_generated_files/tmr2.c: 148:     TMR2_InterruptHandler = InterruptHandler;
  3721                           
  3722                           ;incstack = 0
  3723                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  3724  05A6  0020               	movlb	0	; select bank0
  3725  05A7  0854               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  3726  05A8  00EC               	movwf	_TMR2_InterruptHandler+1
  3727  05A9  0853               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  3728  05AA  00EB               	movwf	_TMR2_InterruptHandler
  3729  05AB  0008               	return
  3730  05AC                     __end_of_TMR2_SetInterruptHandler:
  3731                           
  3732                           	psect	text5
  3733  0579                     __ptext5:	
  3734 ;; *************** function _PWM1_Initialize *****************
  3735 ;; Defined at:
  3736 ;;		line 58 in file "mcc_generated_files/pwm1.c"
  3737 ;; Parameters:    Size  Location     Type
  3738 ;;		None
  3739 ;; Auto vars:     Size  Location     Type
  3740 ;;		None
  3741 ;; Return value:  Size  Location     Type
  3742 ;;                  1    wreg      void 
  3743 ;; Registers used:
  3744 ;;		wreg
  3745 ;; Tracked objects:
  3746 ;;		On entry : 0/0
  3747 ;;		On exit  : 0/0
  3748 ;;		Unchanged: 0/0
  3749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3750 ;;      Params:         0       0       0       0       0       0       0       0
  3751 ;;      Locals:         0       0       0       0       0       0       0       0
  3752 ;;      Temps:          0       0       0       0       0       0       0       0
  3753 ;;      Totals:         0       0       0       0       0       0       0       0
  3754 ;;Total ram usage:        0 bytes
  3755 ;; Hardware stack levels used:    1
  3756 ;; Hardware stack levels required when called:    5
  3757 ;; This function calls:
  3758 ;;		Nothing
  3759 ;; This function is called by:
  3760 ;;		_SYSTEM_Initialize
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           
  3764                           
  3765                           ;psect for function _PWM1_Initialize
  3766  0579                     _PWM1_Initialize:
  3767                           
  3768                           ;mcc_generated_files/pwm1.c: 62:     PWM1CON = 0xC0;
  3769                           
  3770                           ;incstack = 0
  3771                           ; Regs used in _PWM1_Initialize: [wreg]
  3772  0579  30C0               	movlw	192
  3773  057A  002C               	movlb	12	; select bank12
  3774  057B  0093               	movwf	19	;volatile
  3775                           
  3776                           ;mcc_generated_files/pwm1.c: 65:     PWM1DCH = 0x7C;
  3777  057C  307C               	movlw	124
  3778  057D  0092               	movwf	18	;volatile
  3779                           
  3780                           ;mcc_generated_files/pwm1.c: 68:     PWM1DCL = 0xC0;
  3781  057E  30C0               	movlw	192
  3782  057F  0091               	movwf	17	;volatile
  3783  0580  0008               	return
  3784  0581                     __end_of_PWM1_Initialize:
  3785                           
  3786                           	psect	text6
  3787  0412                     __ptext6:	
  3788 ;; *************** function _PIN_MANAGER_Initialize *****************
  3789 ;; Defined at:
  3790 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;		None
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;		None
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  1    wreg      void 
  3797 ;; Registers used:
  3798 ;;		wreg, status,2
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3804 ;;      Params:         0       0       0       0       0       0       0       0
  3805 ;;      Locals:         0       0       0       0       0       0       0       0
  3806 ;;      Temps:          0       0       0       0       0       0       0       0
  3807 ;;      Totals:         0       0       0       0       0       0       0       0
  3808 ;;Total ram usage:        0 bytes
  3809 ;; Hardware stack levels used:    1
  3810 ;; Hardware stack levels required when called:    5
  3811 ;; This function calls:
  3812 ;;		Nothing
  3813 ;; This function is called by:
  3814 ;;		_SYSTEM_Initialize
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817                           
  3818                           
  3819                           ;psect for function _PIN_MANAGER_Initialize
  3820  0412                     _PIN_MANAGER_Initialize:
  3821                           
  3822                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3823                           
  3824                           ;incstack = 0
  3825                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3826  0412  0022               	movlb	2	; select bank2
  3827  0413  018C               	clrf	12	;volatile
  3828                           
  3829                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3830  0414  018D               	clrf	13	;volatile
  3831                           
  3832                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  3833  0415  018E               	clrf	14	;volatile
  3834                           
  3835                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  3836  0416  303F               	movlw	63
  3837  0417  0021               	movlb	1	; select bank1
  3838  0418  008C               	movwf	12	;volatile
  3839                           
  3840                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x70;
  3841  0419  3070               	movlw	112
  3842  041A  008D               	movwf	13	;volatile
  3843                           
  3844                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x9B;
  3845  041B  309B               	movlw	155
  3846  041C  008E               	movwf	14	;volatile
  3847                           
  3848                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x8B;
  3849  041D  308B               	movlw	139
  3850  041E  0023               	movlb	3	; select bank3
  3851  041F  008E               	movwf	14	;volatile
  3852                           
  3853                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  3854  0420  018D               	clrf	13	;volatile
  3855                           
  3856                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x17;
  3857  0421  3017               	movlw	23
  3858  0422  008C               	movwf	12	;volatile
  3859                           
  3860                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  3861  0423  0024               	movlb	4	; select bank4
  3862  0424  018D               	clrf	13	;volatile
  3863                           
  3864                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  3865  0425  018C               	clrf	12	;volatile
  3866                           
  3867                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 1;
  3868  0426  0021               	movlb	1	; select bank1
  3869  0427  1795               	bsf	21,7	;volatile
  3870                           
  3871                           ;mcc_generated_files/pin_manager.c: 89:     APFCON = 0x00;
  3872  0428  0022               	movlb	2	; select bank2
  3873  0429  019D               	clrf	29	;volatile
  3874  042A  0008               	return
  3875  042B                     __end_of_PIN_MANAGER_Initialize:
  3876                           
  3877                           	psect	text7
  3878  05AC                     __ptext7:	
  3879 ;; *************** function _OSCILLATOR_Initialize *****************
  3880 ;; Defined at:
  3881 ;;		line 62 in file "mcc_generated_files/mcc.c"
  3882 ;; Parameters:    Size  Location     Type
  3883 ;;		None
  3884 ;; Auto vars:     Size  Location     Type
  3885 ;;		None
  3886 ;; Return value:  Size  Location     Type
  3887 ;;                  1    wreg      void 
  3888 ;; Registers used:
  3889 ;;		wreg, status,2
  3890 ;; Tracked objects:
  3891 ;;		On entry : 0/0
  3892 ;;		On exit  : 0/0
  3893 ;;		Unchanged: 0/0
  3894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3895 ;;      Params:         0       0       0       0       0       0       0       0
  3896 ;;      Locals:         0       0       0       0       0       0       0       0
  3897 ;;      Temps:          0       0       0       0       0       0       0       0
  3898 ;;      Totals:         0       0       0       0       0       0       0       0
  3899 ;;Total ram usage:        0 bytes
  3900 ;; Hardware stack levels used:    1
  3901 ;; Hardware stack levels required when called:    5
  3902 ;; This function calls:
  3903 ;;		Nothing
  3904 ;; This function is called by:
  3905 ;;		_SYSTEM_Initialize
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           
  3910                           ;psect for function _OSCILLATOR_Initialize
  3911  05AC                     _OSCILLATOR_Initialize:
  3912                           
  3913                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x78;
  3914                           
  3915                           ;incstack = 0
  3916                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3917  05AC  3078               	movlw	120
  3918  05AD  0021               	movlb	1	; select bank1
  3919  05AE  0099               	movwf	25	;volatile
  3920                           
  3921                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  3922  05AF  0022               	movlb	2	; select bank2
  3923  05B0  0196               	clrf	22	;volatile
  3924  05B1  0008               	return
  3925  05B2                     __end_of_OSCILLATOR_Initialize:
  3926                           
  3927                           	psect	text8
  3928  054C                     __ptext8:	
  3929 ;; *************** function _I2C_Initialize *****************
  3930 ;; Defined at:
  3931 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  3932 ;; Parameters:    Size  Location     Type
  3933 ;;		None
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;		None
  3936 ;; Return value:  Size  Location     Type
  3937 ;;                  1    wreg      void 
  3938 ;; Registers used:
  3939 ;;		wreg, status,2
  3940 ;; Tracked objects:
  3941 ;;		On entry : 0/0
  3942 ;;		On exit  : 0/0
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3945 ;;      Params:         0       0       0       0       0       0       0       0
  3946 ;;      Locals:         0       0       0       0       0       0       0       0
  3947 ;;      Temps:          0       0       0       0       0       0       0       0
  3948 ;;      Totals:         0       0       0       0       0       0       0       0
  3949 ;;Total ram usage:        0 bytes
  3950 ;; Hardware stack levels used:    1
  3951 ;; Hardware stack levels required when called:    5
  3952 ;; This function calls:
  3953 ;;		Nothing
  3954 ;; This function is called by:
  3955 ;;		_SYSTEM_Initialize
  3956 ;; This function uses a non-reentrant model
  3957 ;;
  3958                           
  3959                           
  3960                           ;psect for function _I2C_Initialize
  3961  054C                     _I2C_Initialize:
  3962                           
  3963                           ;mcc_generated_files/i2c_master.c: 169:     SSP1STAT = 0x00;
  3964                           
  3965                           ;incstack = 0
  3966                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  3967  054C  0024               	movlb	4	; select bank4
  3968  054D  0194               	clrf	20	;volatile
  3969                           
  3970                           ;mcc_generated_files/i2c_master.c: 170:     SSP1CON1 = 0x08;
  3971  054E  3008               	movlw	8
  3972  054F  0095               	movwf	21	;volatile
  3973                           
  3974                           ;mcc_generated_files/i2c_master.c: 171:     SSP1CON2 = 0x00;
  3975  0550  0196               	clrf	22	;volatile
  3976                           
  3977                           ;mcc_generated_files/i2c_master.c: 172:     SSP1ADD = 0x27;
  3978  0551  3027               	movlw	39
  3979  0552  0092               	movwf	18	;volatile
  3980                           
  3981                           ;mcc_generated_files/i2c_master.c: 173:     SSP1CON1bits.SSPEN = 0;
  3982  0553  1295               	bcf	21,5	;volatile
  3983  0554  0008               	return
  3984  0555                     __end_of_I2C_Initialize:
  3985                           
  3986                           	psect	text9
  3987  0360                     __ptext9:	
  3988 ;; *************** function _EUSART_Initialize *****************
  3989 ;; Defined at:
  3990 ;;		line 66 in file "mcc_generated_files/eusart.c"
  3991 ;; Parameters:    Size  Location     Type
  3992 ;;		None
  3993 ;; Auto vars:     Size  Location     Type
  3994 ;;		None
  3995 ;; Return value:  Size  Location     Type
  3996 ;;                  1    wreg      void 
  3997 ;; Registers used:
  3998 ;;		wreg, status,2, status,0, pclath, cstack
  3999 ;; Tracked objects:
  4000 ;;		On entry : 0/0
  4001 ;;		On exit  : 0/0
  4002 ;;		Unchanged: 0/0
  4003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4004 ;;      Params:         0       0       0       0       0       0       0       0
  4005 ;;      Locals:         0       0       0       0       0       0       0       0
  4006 ;;      Temps:          0       0       0       0       0       0       0       0
  4007 ;;      Totals:         0       0       0       0       0       0       0       0
  4008 ;;Total ram usage:        0 bytes
  4009 ;; Hardware stack levels used:    1
  4010 ;; Hardware stack levels required when called:    6
  4011 ;; This function calls:
  4012 ;;		_EUSART_SetErrorHandler
  4013 ;;		_EUSART_SetFramingErrorHandler
  4014 ;;		_EUSART_SetOverrunErrorHandler
  4015 ;; This function is called by:
  4016 ;;		_SYSTEM_Initialize
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           
  4021                           ;psect for function _EUSART_Initialize
  4022  0360                     _EUSART_Initialize:
  4023                           
  4024                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  4025                           
  4026                           ;incstack = 0
  4027                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4028  0360  3008               	movlw	8
  4029  0361  0023               	movlb	3	; select bank3
  4030  0362  009F               	movwf	31	;volatile
  4031                           
  4032                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  4033  0363  3090               	movlw	144
  4034  0364  009D               	movwf	29	;volatile
  4035                           
  4036                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  4037  0365  3024               	movlw	36
  4038  0366  009E               	movwf	30	;volatile
  4039                           
  4040                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0xA0;
  4041  0367  30A0               	movlw	160
  4042  0368  009B               	movwf	27	;volatile
  4043                           
  4044                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x01;
  4045  0369  3001               	movlw	1
  4046  036A  009C               	movwf	28	;volatile
  4047                           
  4048                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  4049  036B  3000               	movlw	0
  4050  036C  0020               	movlb	0	; select bank0
  4051  036D  00D3               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  4052  036E  3000               	movlw	0
  4053  036F  00D4               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  4054  0370  3185  255E  3183   	fcall	_EUSART_SetFramingErrorHandler
  4055                           
  4056                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  4057  0373  3000               	movlw	0
  4058  0374  0020               	movlb	0	; select bank0
  4059  0375  00D3               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  4060  0376  3000               	movlw	0
  4061  0377  00D4               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  4062  0378  3185  2555  3183   	fcall	_EUSART_SetOverrunErrorHandler
  4063                           
  4064                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  4065  037B  3000               	movlw	0
  4066  037C  0020               	movlb	0	; select bank0
  4067  037D  00D3               	movwf	EUSART_SetErrorHandler@interruptHandler
  4068  037E  3000               	movlw	0
  4069  037F  00D4               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  4070  0380  3185  2567         	fcall	_EUSART_SetErrorHandler
  4071                           
  4072                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  4073  0382  01F9               	clrf	_eusartRxLastError	;volatile
  4074  0383  0008               	return
  4075  0384                     __end_of_EUSART_Initialize:
  4076                           
  4077                           	psect	text10
  4078  0555                     __ptext10:	
  4079 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  4080 ;; Defined at:
  4081 ;;		line 161 in file "mcc_generated_files/eusart.c"
  4082 ;; Parameters:    Size  Location     Type
  4083 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4084 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;		None
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  1    wreg      void 
  4089 ;; Registers used:
  4090 ;;		wreg
  4091 ;; Tracked objects:
  4092 ;;		On entry : 0/0
  4093 ;;		On exit  : 0/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4096 ;;      Params:         0       2       0       0       0       0       0       0
  4097 ;;      Locals:         0       0       0       0       0       0       0       0
  4098 ;;      Temps:          0       0       0       0       0       0       0       0
  4099 ;;      Totals:         0       2       0       0       0       0       0       0
  4100 ;;Total ram usage:        2 bytes
  4101 ;; Hardware stack levels used:    1
  4102 ;; Hardware stack levels required when called:    5
  4103 ;; This function calls:
  4104 ;;		Nothing
  4105 ;; This function is called by:
  4106 ;;		_EUSART_Initialize
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110                           
  4111                           ;psect for function _EUSART_SetOverrunErrorHandler
  4112  0555                     _EUSART_SetOverrunErrorHandler:
  4113                           
  4114                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  4115                           
  4116                           ;incstack = 0
  4117                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  4118  0555  0020               	movlb	0	; select bank0
  4119  0556  0854               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  4120  0557  0021               	movlb	1	; select bank1
  4121  0558  00A3               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  4122  0559  0020               	movlb	0	; select bank0
  4123  055A  0853               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  4124  055B  0021               	movlb	1	; select bank1
  4125  055C  00A2               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  4126  055D  0008               	return
  4127  055E                     __end_of_EUSART_SetOverrunErrorHandler:
  4128                           
  4129                           	psect	text11
  4130  055E                     __ptext11:	
  4131 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  4132 ;; Defined at:
  4133 ;;		line 157 in file "mcc_generated_files/eusart.c"
  4134 ;; Parameters:    Size  Location     Type
  4135 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4136 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  4137 ;; Auto vars:     Size  Location     Type
  4138 ;;		None
  4139 ;; Return value:  Size  Location     Type
  4140 ;;                  1    wreg      void 
  4141 ;; Registers used:
  4142 ;;		wreg
  4143 ;; Tracked objects:
  4144 ;;		On entry : 0/0
  4145 ;;		On exit  : 0/0
  4146 ;;		Unchanged: 0/0
  4147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4148 ;;      Params:         0       2       0       0       0       0       0       0
  4149 ;;      Locals:         0       0       0       0       0       0       0       0
  4150 ;;      Temps:          0       0       0       0       0       0       0       0
  4151 ;;      Totals:         0       2       0       0       0       0       0       0
  4152 ;;Total ram usage:        2 bytes
  4153 ;; Hardware stack levels used:    1
  4154 ;; Hardware stack levels required when called:    5
  4155 ;; This function calls:
  4156 ;;		Nothing
  4157 ;; This function is called by:
  4158 ;;		_EUSART_Initialize
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162                           
  4163                           ;psect for function _EUSART_SetFramingErrorHandler
  4164  055E                     _EUSART_SetFramingErrorHandler:
  4165                           
  4166                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  4167                           
  4168                           ;incstack = 0
  4169                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  4170  055E  0020               	movlb	0	; select bank0
  4171  055F  0854               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  4172  0560  0021               	movlb	1	; select bank1
  4173  0561  00A5               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  4174  0562  0020               	movlb	0	; select bank0
  4175  0563  0853               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  4176  0564  0021               	movlb	1	; select bank1
  4177  0565  00A4               	movwf	_EUSART_FramingErrorHandler^(0+128)
  4178  0566  0008               	return
  4179  0567                     __end_of_EUSART_SetFramingErrorHandler:
  4180                           
  4181                           	psect	text12
  4182  0567                     __ptext12:	
  4183 ;; *************** function _EUSART_SetErrorHandler *****************
  4184 ;; Defined at:
  4185 ;;		line 165 in file "mcc_generated_files/eusart.c"
  4186 ;; Parameters:    Size  Location     Type
  4187 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4188 ;;		 -> EUSART_DefaultErrorHandler(1), 
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;		None
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  1    wreg      void 
  4193 ;; Registers used:
  4194 ;;		wreg
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4200 ;;      Params:         0       2       0       0       0       0       0       0
  4201 ;;      Locals:         0       0       0       0       0       0       0       0
  4202 ;;      Temps:          0       0       0       0       0       0       0       0
  4203 ;;      Totals:         0       2       0       0       0       0       0       0
  4204 ;;Total ram usage:        2 bytes
  4205 ;; Hardware stack levels used:    1
  4206 ;; Hardware stack levels required when called:    5
  4207 ;; This function calls:
  4208 ;;		Nothing
  4209 ;; This function is called by:
  4210 ;;		_EUSART_Initialize
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           
  4214                           
  4215                           ;psect for function _EUSART_SetErrorHandler
  4216  0567                     _EUSART_SetErrorHandler:
  4217                           
  4218                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  4219                           
  4220                           ;incstack = 0
  4221                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  4222  0567  0020               	movlb	0	; select bank0
  4223  0568  0854               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  4224  0569  0021               	movlb	1	; select bank1
  4225  056A  00A1               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  4226  056B  0020               	movlb	0	; select bank0
  4227  056C  0853               	movf	EUSART_SetErrorHandler@interruptHandler,w
  4228  056D  0021               	movlb	1	; select bank1
  4229  056E  00A0               	movwf	_EUSART_ErrorHandler^(0+128)
  4230  056F  0008               	return
  4231  0570                     __end_of_EUSART_SetErrorHandler:
  4232                           
  4233                           	psect	text13
  4234  002F                     __ptext13:	
  4235 ;; *************** function _COS_TskMan *****************
  4236 ;; Defined at:
  4237 ;;		line 133 in file "SourceFiles/COS/COS_Main.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;		None
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;		None
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  1    wreg      void 
  4244 ;; Registers used:
  4245 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4251 ;;      Params:         0       0       0       0       0       0       0       0
  4252 ;;      Locals:         0       0       0       0       0       0       0       0
  4253 ;;      Temps:          0       0       2       0       0       0       0       0
  4254 ;;      Totals:         0       0       2       0       0       0       0       0
  4255 ;;Total ram usage:        2 bytes
  4256 ;; Hardware stack levels used:    1
  4257 ;; Hardware stack levels required when called:   15
  4258 ;; This function calls:
  4259 ;;		_GetTemp
  4260 ;;		_UartDisplay
  4261 ;;		___wmul
  4262 ;; This function is called by:
  4263 ;;		_main
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           
  4267                           
  4268                           ;psect for function _COS_TskMan
  4269  002F                     _COS_TskMan:
  4270                           
  4271                           ;SourceFiles/COS/COS_Main.c: 135:  if ((COS_tsk[COS_tsk_ind].sched & COS_tsk_msk) != 0)
  4272                           
  4273                           ;incstack = 0
  4274                           ; Regs used in _COS_TskMan: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4275  002F  0020               	movlb	0	; select bank0
  4276  0030  0852               	movf	_COS_tsk_ind,w
  4277  0031  0021               	movlb	1	; select bank1
  4278  0032  00A6               	movwf	??_COS_TskMan^(0+128)
  4279  0033  01A7               	clrf	(??_COS_TskMan^(0+128)+1)
  4280  0034  0826               	movf	??_COS_TskMan^(0+128),w
  4281  0035  0020               	movlb	0	; select bank0
  4282  0036  00D3               	movwf	___wmul@multiplier
  4283  0037  0021               	movlb	1	; select bank1
  4284  0038  0827               	movf	(??_COS_TskMan+1)^(0+128),w
  4285  0039  0020               	movlb	0	; select bank0
  4286  003A  00D4               	movwf	___wmul@multiplier+1
  4287  003B  3003               	movlw	3
  4288  003C  00D5               	movwf	___wmul@multiplicand
  4289  003D  3000               	movlw	0
  4290  003E  00D6               	movwf	___wmul@multiplicand+1
  4291  003F  3183  23C1  3180   	fcall	___wmul
  4292  0042  0020               	movlb	0	; select bank0
  4293  0043  0854               	movf	?___wmul+1,w
  4294  0044  0085               	movwf	5
  4295  0045  0853               	movf	?___wmul,w
  4296  0046  0084               	movwf	4
  4297  0047  30F7               	movlw	low ((_COS_tsk+2)| (0+32768))
  4298  0048  0784               	addwf	4,f
  4299  0049  3084               	movlw	high ((_COS_tsk+2)| (0+32768))
  4300  004A  3D85               	addwfc	5,f
  4301  004B  0800               	movf	0,w	;code access
  4302  004C  056E               	andwf	_COS_tsk_msk,w
  4303  004D  1903               	btfsc	3,2
  4304  004E  286F               	goto	l3730
  4305                           
  4306                           ;SourceFiles/COS/COS_Main.c: 136:  {;SourceFiles/COS/COS_Main.c: 143:   (*COS_tsk[COS_ts
      +                          k_ind].tptr)();
  4307  004F  0852               	movf	_COS_tsk_ind,w
  4308  0050  0021               	movlb	1	; select bank1
  4309  0051  00A6               	movwf	??_COS_TskMan^(0+128)
  4310  0052  01A7               	clrf	(??_COS_TskMan^(0+128)+1)
  4311  0053  0826               	movf	??_COS_TskMan^(0+128),w
  4312  0054  0020               	movlb	0	; select bank0
  4313  0055  00D3               	movwf	___wmul@multiplier
  4314  0056  0021               	movlb	1	; select bank1
  4315  0057  0827               	movf	(??_COS_TskMan+1)^(0+128),w
  4316  0058  0020               	movlb	0	; select bank0
  4317  0059  00D4               	movwf	___wmul@multiplier+1
  4318  005A  3003               	movlw	3
  4319  005B  00D5               	movwf	___wmul@multiplicand
  4320  005C  3000               	movlw	0
  4321  005D  00D6               	movwf	___wmul@multiplicand+1
  4322  005E  3183  23C1  3180   	fcall	___wmul
  4323  0061  0020               	movlb	0	; select bank0
  4324  0062  0854               	movf	?___wmul+1,w
  4325  0063  0085               	movwf	5
  4326  0064  0853               	movf	?___wmul,w
  4327  0065  0084               	movwf	4
  4328  0066  30F5               	movlw	low (_COS_tsk| (0+32768))
  4329  0067  0784               	addwf	4,f
  4330  0068  3084               	movlw	high (_COS_tsk| (0+32768))
  4331  0069  3D85               	addwfc	5,f
  4332  006A  3F01               	moviw [1]fsr0
  4333  006B  008A               	movwf	10
  4334  006C  3F00               	moviw [0]fsr0
  4335  006D  000A               	callw
  4336  006E  3180               	pagesel	$
  4337  006F                     l3730:
  4338                           
  4339                           ;SourceFiles/COS/COS_Main.c: 150:  COS_tsk_ind++;
  4340  006F  3001               	movlw	1
  4341  0070  0021               	movlb	1	; select bank1
  4342  0071  00A6               	movwf	??_COS_TskMan^(0+128)
  4343  0072  0826               	movf	??_COS_TskMan^(0+128),w
  4344  0073  0020               	movlb	0	; select bank0
  4345  0074  07D2               	addwf	_COS_tsk_ind,f
  4346                           
  4347                           ;SourceFiles/COS/COS_Main.c: 151:  if (COS_tsk_ind >= (3 +2))
  4348  0075  3005               	movlw	5
  4349  0076  0252               	subwf	_COS_tsk_ind,w
  4350  0077  1C03               	skipc
  4351  0078  0008               	return
  4352                           
  4353                           ;SourceFiles/COS/COS_Main.c: 152:  {;SourceFiles/COS/COS_Main.c: 153:   COS_tsk_ena = 0;
  4354  0079  01ED               	clrf	_COS_tsk_ena
  4355                           
  4356                           ;SourceFiles/COS/COS_Main.c: 154:   COS_tsk_ind = 0;
  4357  007A  01D2               	clrf	_COS_tsk_ind
  4358                           
  4359                           ;SourceFiles/COS/COS_Main.c: 157:   if (!((COS_tsk_msk == 0x80) ||
  4360  007B  3080               	movlw	128
  4361  007C  066E               	xorwf	_COS_tsk_msk,w
  4362  007D  1903               	btfsc	3,2
  4363  007E  289B               	goto	l3752
  4364  007F  3040               	movlw	64
  4365  0080  066E               	xorwf	_COS_tsk_msk,w
  4366  0081  1903               	btfsc	3,2
  4367  0082  289B               	goto	l3752
  4368  0083  3020               	movlw	32
  4369  0084  066E               	xorwf	_COS_tsk_msk,w
  4370  0085  1903               	btfsc	3,2
  4371  0086  289B               	goto	l3752
  4372  0087  3010               	movlw	16
  4373  0088  066E               	xorwf	_COS_tsk_msk,w
  4374  0089  1903               	btfsc	3,2
  4375  008A  289B               	goto	l3752
  4376  008B  3008               	movlw	8
  4377  008C  066E               	xorwf	_COS_tsk_msk,w
  4378  008D  1903               	btfsc	3,2
  4379  008E  289B               	goto	l3752
  4380  008F  3004               	movlw	4
  4381  0090  066E               	xorwf	_COS_tsk_msk,w
  4382  0091  1903               	btfsc	3,2
  4383  0092  289B               	goto	l3752
  4384  0093  3002               	movlw	2
  4385  0094  066E               	xorwf	_COS_tsk_msk,w
  4386  0095  1903               	btfsc	3,2
  4387  0096  289B               	goto	l3752
  4388  0097  036E               	decf	_COS_tsk_msk,w
  4389  0098  1903               	btfsc	3,2
  4390  0099  289B               	goto	l3752
  4391  009A                     l47:	
  4392                           ;SourceFiles/COS/COS_Main.c: 165:   {;SourceFiles/COS/COS_Main.c: 169:     while(1);
  4393                           
  4394  009A  289A               	goto	l47
  4395  009B                     l3752:
  4396                           
  4397                           ;SourceFiles/COS/COS_Main.c: 174:   COS_tsk_msk = COS_tsk_msk >> 1;
  4398  009B  366E               	lsrf	_COS_tsk_msk,w
  4399  009C  0021               	movlb	1	; select bank1
  4400  009D  00A6               	movwf	??_COS_TskMan^(0+128)
  4401  009E  0826               	movf	??_COS_TskMan^(0+128),w
  4402  009F  0020               	movlb	0	; select bank0
  4403  00A0  00EE               	movwf	_COS_tsk_msk
  4404                           
  4405                           ;SourceFiles/COS/COS_Main.c: 175:   if (COS_tsk_msk == 0x00)
  4406  00A1  086E               	movf	_COS_tsk_msk,w
  4407  00A2  1D03               	btfss	3,2
  4408  00A3  0008               	return
  4409                           
  4410                           ;SourceFiles/COS/COS_Main.c: 176:   {;SourceFiles/COS/COS_Main.c: 177:    COS_tsk_msk = 
      +                          0x80;
  4411  00A4  3080               	movlw	128
  4412  00A5  0021               	movlb	1	; select bank1
  4413  00A6  00A6               	movwf	??_COS_TskMan^(0+128)
  4414  00A7  0826               	movf	??_COS_TskMan^(0+128),w
  4415  00A8  0020               	movlb	0	; select bank0
  4416  00A9  00EE               	movwf	_COS_tsk_msk
  4417  00AA  0008               	return
  4418  00AB                     __end_of_COS_TskMan:
  4419                           
  4420                           	psect	text14
  4421  03C1                     __ptext14:	
  4422 ;; *************** function ___wmul *****************
  4423 ;; Defined at:
  4424 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4427 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4428 ;; Auto vars:     Size  Location     Type
  4429 ;;  product         2    4[BANK0 ] unsigned int 
  4430 ;; Return value:  Size  Location     Type
  4431 ;;                  2    0[BANK0 ] unsigned int 
  4432 ;; Registers used:
  4433 ;;		wreg, status,2, status,0
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/0
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4439 ;;      Params:         0       4       0       0       0       0       0       0
  4440 ;;      Locals:         0       2       0       0       0       0       0       0
  4441 ;;      Temps:          0       0       0       0       0       0       0       0
  4442 ;;      Totals:         0       6       0       0       0       0       0       0
  4443 ;;Total ram usage:        6 bytes
  4444 ;; Hardware stack levels used:    1
  4445 ;; Hardware stack levels required when called:    5
  4446 ;; This function calls:
  4447 ;;		Nothing
  4448 ;; This function is called by:
  4449 ;;		_COS_TskMan
  4450 ;; This function uses a non-reentrant model
  4451 ;;
  4452                           
  4453                           
  4454                           ;psect for function ___wmul
  4455  03C1                     ___wmul:
  4456                           
  4457                           ;incstack = 0
  4458                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4459  03C1  0020               	movlb	0	; select bank0
  4460  03C2  01D7               	clrf	___wmul@product
  4461  03C3  01D8               	clrf	___wmul@product+1
  4462  03C4                     l3666:
  4463  03C4  1C53               	btfss	___wmul@multiplier,0
  4464  03C5  2BCA               	goto	l886
  4465  03C6  0855               	movf	___wmul@multiplicand,w
  4466  03C7  07D7               	addwf	___wmul@product,f
  4467  03C8  0856               	movf	___wmul@multiplicand+1,w
  4468  03C9  3DD8               	addwfc	___wmul@product+1,f
  4469  03CA                     l886:
  4470  03CA  3001               	movlw	1
  4471  03CB                     u1565:
  4472  03CB  35D5               	lslf	___wmul@multiplicand,f
  4473  03CC  0DD6               	rlf	___wmul@multiplicand+1,f
  4474  03CD  0B89               	decfsz	9,f
  4475  03CE  2BCB               	goto	u1565
  4476  03CF  3001               	movlw	1
  4477  03D0                     u1575:
  4478  03D0  36D4               	lsrf	___wmul@multiplier+1,f
  4479  03D1  0CD3               	rrf	___wmul@multiplier,f
  4480  03D2  0B89               	decfsz	9,f
  4481  03D3  2BD0               	goto	u1575
  4482  03D4  0853               	movf	___wmul@multiplier,w
  4483  03D5  0454               	iorwf	___wmul@multiplier+1,w
  4484  03D6  1D03               	btfss	3,2
  4485  03D7  2BC4               	goto	l3666
  4486  03D8  0858               	movf	___wmul@product+1,w
  4487  03D9  00D4               	movwf	?___wmul+1
  4488  03DA  0857               	movf	___wmul@product,w
  4489  03DB  00D3               	movwf	?___wmul
  4490  03DC  0008               	return
  4491  03DD                     __end_of___wmul:
  4492                           
  4493                           	psect	text15
  4494  02F1                     __ptext15:	
  4495 ;; *************** function _GetTemp *****************
  4496 ;; Defined at:
  4497 ;;		line 19 in file "SourceFiles/SunSensor/SHT25.c"
  4498 ;; Parameters:    Size  Location     Type
  4499 ;;		None
  4500 ;; Auto vars:     Size  Location     Type
  4501 ;;		None
  4502 ;; Return value:  Size  Location     Type
  4503 ;;                  1    wreg      void 
  4504 ;; Registers used:
  4505 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4506 ;; Tracked objects:
  4507 ;;		On entry : 0/0
  4508 ;;		On exit  : 0/0
  4509 ;;		Unchanged: 0/0
  4510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4511 ;;      Params:         0       0       0       0       0       0       0       0
  4512 ;;      Locals:         0       0       0       0       0       0       0       0
  4513 ;;      Temps:          0       1       0       0       0       0       0       0
  4514 ;;      Totals:         0       1       0       0       0       0       0       0
  4515 ;;Total ram usage:        1 bytes
  4516 ;; Hardware stack levels used:    1
  4517 ;; Hardware stack levels required when called:   14
  4518 ;; This function calls:
  4519 ;;		_I2C_ReadNBytes
  4520 ;;		_I2C_WriteNBytes
  4521 ;;		_SendByUart
  4522 ;; This function is called by:
  4523 ;;		_COS_TskMan
  4524 ;; This function uses a non-reentrant model
  4525 ;;
  4526                           
  4527                           
  4528                           ;psect for function _GetTemp
  4529  02F1                     _GetTemp:
  4530                           
  4531                           ;SourceFiles/SunSensor/SHT25.c: 23:     I2C_WriteNBytes(128,&TempH,1);
  4532                           
  4533                           ;incstack = 0
  4534                           ; Regs used in _GetTemp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4535  02F1  306F               	movlw	(low (_TempH| 0))& (0+255)
  4536  02F2  0020               	movlb	0	; select bank0
  4537  02F3  00EA               	movwf	??_GetTemp
  4538  02F4  086A               	movf	??_GetTemp,w
  4539  02F5  00E6               	movwf	I2C_WriteNBytes@data
  4540  02F6  3001               	movlw	1
  4541  02F7  00E7               	movwf	I2C_WriteNBytes@len
  4542  02F8  3000               	movlw	0
  4543  02F9  00E8               	movwf	I2C_WriteNBytes@len+1
  4544  02FA  3080               	movlw	128
  4545  02FB  3183  2316  3182   	fcall	_I2C_WriteNBytes
  4546                           
  4547                           ;SourceFiles/SunSensor/SHT25.c: 24:     I2C_ReadNBytes(128,&TempH,1);
  4548  02FE  306F               	movlw	(low (_TempH| 0))& (0+255)
  4549  02FF  0020               	movlb	0	; select bank0
  4550  0300  00EA               	movwf	??_GetTemp
  4551  0301  086A               	movf	??_GetTemp,w
  4552  0302  00E6               	movwf	I2C_ReadNBytes@data
  4553  0303  3001               	movlw	1
  4554  0304  00E7               	movwf	I2C_ReadNBytes@len
  4555  0305  3000               	movlw	0
  4556  0306  00E8               	movwf	I2C_ReadNBytes@len+1
  4557  0307  3080               	movlw	128
  4558  0308  3183  23A4  3182   	fcall	_I2C_ReadNBytes
  4559                           
  4560                           ;SourceFiles/SunSensor/SHT25.c: 25:     SendByUart(TempH+0x30);
  4561  030B  0020               	movlb	0	; select bank0
  4562  030C  086F               	movf	_TempH,w
  4563  030D  3E30               	addlw	48
  4564  030E  3185  2570         	fcall	_SendByUart
  4565                           
  4566                           ;SourceFiles/SunSensor/SHT25.c: 26:     TempH = 0xE3;
  4567  0310  30E3               	movlw	227
  4568  0311  0020               	movlb	0	; select bank0
  4569  0312  00EA               	movwf	??_GetTemp
  4570  0313  086A               	movf	??_GetTemp,w
  4571  0314  00EF               	movwf	_TempH
  4572  0315  0008               	return
  4573  0316                     __end_of_GetTemp:
  4574                           
  4575                           	psect	text16
  4576  0581                     __ptext16:	
  4577 ;; *************** function _UartDisplay *****************
  4578 ;; Defined at:
  4579 ;;		line 23 in file "SourceFiles/SunSensor/UART_Display.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;		None
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;		None
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  1    wreg      void 
  4586 ;; Registers used:
  4587 ;;		wreg, status,2, status,0, pclath, cstack
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4593 ;;      Params:         0       0       0       0       0       0       0       0
  4594 ;;      Locals:         0       0       0       0       0       0       0       0
  4595 ;;      Temps:          0       0       0       0       0       0       0       0
  4596 ;;      Totals:         0       0       0       0       0       0       0       0
  4597 ;;Total ram usage:        0 bytes
  4598 ;; Hardware stack levels used:    1
  4599 ;; Hardware stack levels required when called:    6
  4600 ;; This function calls:
  4601 ;;		_EUSART_Write
  4602 ;; This function is called by:
  4603 ;;		_COS_TskMan
  4604 ;; This function uses a non-reentrant model
  4605 ;;
  4606                           
  4607                           
  4608                           ;psect for function _UartDisplay
  4609  0581                     _UartDisplay:
  4610                           
  4611                           ;SourceFiles/SunSensor/UART_Display.c: 25:     if (NewMessageFlag == 1)
  4612                           
  4613                           ;incstack = 0
  4614                           ; Regs used in _UartDisplay: [wreg+status,2+status,0+pclath+cstack]
  4615  0581  0378               	decf	_NewMessageFlag,w
  4616  0582  1D03               	btfss	3,2
  4617  0583  0008               	return
  4618                           
  4619                           ;SourceFiles/SunSensor/UART_Display.c: 26:     {;SourceFiles/SunSensor/UART_Display.c: 2
      +                          7:         EUSART_Write(U8Message);
  4620  0584  087A               	movf	_U8Message,w
  4621  0585  3185  2589         	fcall	_EUSART_Write
  4622                           
  4623                           ;SourceFiles/SunSensor/UART_Display.c: 28:         NewMessageFlag = 0;
  4624  0587  01F8               	clrf	_NewMessageFlag
  4625  0588  0008               	return
  4626  0589                     __end_of_UartDisplay:
  4627                           
  4628                           	psect	text17
  4629  0589                     __ptext17:	
  4630 ;; *************** function _EUSART_Write *****************
  4631 ;; Defined at:
  4632 ;;		line 132 in file "mcc_generated_files/eusart.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;  txData          1    wreg     unsigned char 
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;  txData          1    0[BANK0 ] unsigned char 
  4637 ;; Return value:  Size  Location     Type
  4638 ;;                  1    wreg      void 
  4639 ;; Registers used:
  4640 ;;		wreg
  4641 ;; Tracked objects:
  4642 ;;		On entry : 0/0
  4643 ;;		On exit  : 0/0
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4646 ;;      Params:         0       0       0       0       0       0       0       0
  4647 ;;      Locals:         0       1       0       0       0       0       0       0
  4648 ;;      Temps:          0       0       0       0       0       0       0       0
  4649 ;;      Totals:         0       1       0       0       0       0       0       0
  4650 ;;Total ram usage:        1 bytes
  4651 ;; Hardware stack levels used:    1
  4652 ;; Hardware stack levels required when called:    5
  4653 ;; This function calls:
  4654 ;;		Nothing
  4655 ;; This function is called by:
  4656 ;;		_UartDisplay
  4657 ;; This function uses a non-reentrant model
  4658 ;;
  4659                           
  4660                           
  4661                           ;psect for function _EUSART_Write
  4662  0589                     _EUSART_Write:
  4663                           
  4664                           ;incstack = 0
  4665                           ; Regs used in _EUSART_Write: [wreg]
  4666                           ;EUSART_Write@txData stored from wreg
  4667  0589  0020               	movlb	0	; select bank0
  4668  058A  00D3               	movwf	EUSART_Write@txData
  4669  058B                     l706:	
  4670                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  4671                           
  4672                           
  4673                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  4674  058B  1E11               	btfss	17,4	;volatile
  4675  058C  2D8B               	goto	l706
  4676                           
  4677                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  4678  058D  0853               	movf	EUSART_Write@txData,w
  4679  058E  0023               	movlb	3	; select bank3
  4680  058F  009A               	movwf	26	;volatile
  4681  0590  0008               	return
  4682  0591                     __end_of_EUSART_Write:
  4683                           
  4684                           	psect	text18
  4685  0570                     __ptext18:	
  4686 ;; *************** function _SendByUart *****************
  4687 ;; Defined at:
  4688 ;;		line 17 in file "SourceFiles/SunSensor/UART_Display.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;  Txt             1    wreg     unsigned char 
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;  Txt             1    1[BANK0 ] unsigned char 
  4693 ;; Return value:  Size  Location     Type
  4694 ;;                  1    wreg      void 
  4695 ;; Registers used:
  4696 ;;		wreg
  4697 ;; Tracked objects:
  4698 ;;		On entry : 0/0
  4699 ;;		On exit  : 0/0
  4700 ;;		Unchanged: 0/0
  4701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4702 ;;      Params:         0       0       0       0       0       0       0       0
  4703 ;;      Locals:         0       1       0       0       0       0       0       0
  4704 ;;      Temps:          0       1       0       0       0       0       0       0
  4705 ;;      Totals:         0       2       0       0       0       0       0       0
  4706 ;;Total ram usage:        2 bytes
  4707 ;; Hardware stack levels used:    1
  4708 ;; Hardware stack levels required when called:    5
  4709 ;; This function calls:
  4710 ;;		Nothing
  4711 ;; This function is called by:
  4712 ;;		_GetTemp
  4713 ;; This function uses a non-reentrant model
  4714 ;;
  4715                           
  4716                           
  4717                           ;psect for function _SendByUart
  4718  0570                     _SendByUart:
  4719                           
  4720                           ;incstack = 0
  4721                           ; Regs used in _SendByUart: [wreg]
  4722                           ;SendByUart@Txt stored from wreg
  4723  0570  0020               	movlb	0	; select bank0
  4724  0571  00D4               	movwf	SendByUart@Txt
  4725                           
  4726                           ;SourceFiles/SunSensor/UART_Display.c: 17: void SendByUart(uint8_t Txt);SourceFiles/SunS
      +                          ensor/UART_Display.c: 18: {;SourceFiles/SunSensor/UART_Display.c: 19:     U8Message = Tx
      +                          t;
  4727  0572  0854               	movf	SendByUart@Txt,w
  4728  0573  00D3               	movwf	??_SendByUart
  4729  0574  0853               	movf	??_SendByUart,w
  4730  0575  00FA               	movwf	_U8Message
  4731                           
  4732                           ;SourceFiles/SunSensor/UART_Display.c: 20:     NewMessageFlag = 1;
  4733  0576  01F8               	clrf	_NewMessageFlag
  4734  0577  0AF8               	incf	_NewMessageFlag,f
  4735  0578  0008               	return
  4736  0579                     __end_of_SendByUart:
  4737                           
  4738                           	psect	text19
  4739  0316                     __ptext19:	
  4740 ;; *************** function _I2C_WriteNBytes *****************
  4741 ;; Defined at:
  4742 ;;		line 111 in file "mcc_generated_files/examples/i2c_master_example.c"
  4743 ;; Parameters:    Size  Location     Type
  4744 ;;  address         1    wreg     unsigned char 
  4745 ;;  data            1   19[BANK0 ] PTR unsigned char 
  4746 ;;		 -> TempH(1), 
  4747 ;;  len             2   20[BANK0 ] unsigned int 
  4748 ;; Auto vars:     Size  Location     Type
  4749 ;;  address         1   22[BANK0 ] unsigned char 
  4750 ;; Return value:  Size  Location     Type
  4751 ;;                  1    wreg      void 
  4752 ;; Registers used:
  4753 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4754 ;; Tracked objects:
  4755 ;;		On entry : 0/0
  4756 ;;		On exit  : 0/0
  4757 ;;		Unchanged: 0/0
  4758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4759 ;;      Params:         0       3       0       0       0       0       0       0
  4760 ;;      Locals:         0       1       0       0       0       0       0       0
  4761 ;;      Temps:          0       0       0       0       0       0       0       0
  4762 ;;      Totals:         0       4       0       0       0       0       0       0
  4763 ;;Total ram usage:        4 bytes
  4764 ;; Hardware stack levels used:    1
  4765 ;; Hardware stack levels required when called:   13
  4766 ;; This function calls:
  4767 ;;		_I2C_Close
  4768 ;;		_I2C_MasterWrite
  4769 ;;		_I2C_Open
  4770 ;;		_I2C_SetAddressNackCallback
  4771 ;;		_I2C_SetBuffer
  4772 ;; This function is called by:
  4773 ;;		_GetTemp
  4774 ;; This function uses a non-reentrant model
  4775 ;;
  4776                           
  4777                           
  4778                           ;psect for function _I2C_WriteNBytes
  4779  0316                     _I2C_WriteNBytes:
  4780                           
  4781                           ;incstack = 0
  4782                           ; Regs used in _I2C_WriteNBytes: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4783                           ;I2C_WriteNBytes@address stored from wreg
  4784  0316  0020               	movlb	0	; select bank0
  4785  0317  00E9               	movwf	I2C_WriteNBytes@address
  4786  0318                     l3554:	
  4787                           ;mcc_generated_files/examples/i2c_master_example.c: 111: void I2C_WriteNBytes(i2c_addres
      +                          s_t address, uint8_t* data, size_t len);mcc_generated_files/examples/i2c_master_example.
      +                          c: 112: {;mcc_generated_files/examples/i2c_master_example.c: 113:     while(!I2C_Open(ad
      +                          dress));
  4788                           
  4789  0318  0020               	movlb	0	; select bank0
  4790  0319  0869               	movf	I2C_WriteNBytes@address,w
  4791  031A  3182  223A  3183   	fcall	_I2C_Open
  4792  031D  3A00               	xorlw	0
  4793  031E  1903               	skipnz
  4794  031F  2B18               	goto	l3554
  4795                           
  4796                           ;mcc_generated_files/examples/i2c_master_example.c: 114:     I2C_SetBuffer(data,len);
  4797  0320  0020               	movlb	0	; select bank0
  4798  0321  0868               	movf	I2C_WriteNBytes@len+1,w
  4799  0322  00D4               	movwf	I2C_SetBuffer@bufferSize+1
  4800  0323  0867               	movf	I2C_WriteNBytes@len,w
  4801  0324  00D3               	movwf	I2C_SetBuffer@bufferSize
  4802  0325  0866               	movf	I2C_WriteNBytes@data,w
  4803  0326  3185  2504  3183   	fcall	_I2C_SetBuffer
  4804                           
  4805                           ;mcc_generated_files/examples/i2c_master_example.c: 115:     I2C_SetAddressNackCallback(
      +                          ((void*)0),((void*)0));
  4806  0329  3000               	movlw	0
  4807  032A  0020               	movlb	0	; select bank0
  4808  032B  00D8               	movwf	I2C_SetAddressNackCallback@cb
  4809  032C  00D9               	movwf	I2C_SetAddressNackCallback@cb+1
  4810  032D  01DA               	clrf	I2C_SetAddressNackCallback@ptr
  4811  032E  3185  2512  3183   	fcall	_I2C_SetAddressNackCallback
  4812                           
  4813                           ;mcc_generated_files/examples/i2c_master_example.c: 116:     I2C_MasterWrite();
  4814  0331  3185  25D8  3183   	fcall	_I2C_MasterWrite
  4815  0334                     l3562:	
  4816                           ;mcc_generated_files/examples/i2c_master_example.c: 117:     while(I2C_BUSY == I2C_Close
      +                          ());
  4817                           
  4818  0334  3184  2444  3183   	fcall	_I2C_Close
  4819  0337  3A01               	xorlw	1
  4820  0338  1D03               	btfss	3,2
  4821  0339  0008               	return
  4822  033A  2B34               	goto	l3562
  4823  033B                     __end_of_I2C_WriteNBytes:
  4824                           
  4825                           	psect	text20
  4826  0512                     __ptext20:	
  4827 ;; *************** function _I2C_SetAddressNackCallback *****************
  4828 ;; Defined at:
  4829 ;;		line 283 in file "mcc_generated_files/i2c_master.c"
  4830 ;; Parameters:    Size  Location     Type
  4831 ;;  cb              2    5[BANK0 ] PTR FTN(PTR void ,)enum 
  4832 ;;		 -> Absolute function(1), 
  4833 ;;  ptr             1    7[BANK0 ] PTR void 
  4834 ;;		 -> NULL(0), 
  4835 ;; Auto vars:     Size  Location     Type
  4836 ;;		None
  4837 ;; Return value:  Size  Location     Type
  4838 ;;                  1    wreg      void 
  4839 ;; Registers used:
  4840 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4841 ;; Tracked objects:
  4842 ;;		On entry : 0/0
  4843 ;;		On exit  : 0/0
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4846 ;;      Params:         0       3       0       0       0       0       0       0
  4847 ;;      Locals:         0       0       0       0       0       0       0       0
  4848 ;;      Temps:          0       1       0       0       0       0       0       0
  4849 ;;      Totals:         0       4       0       0       0       0       0       0
  4850 ;;Total ram usage:        4 bytes
  4851 ;; Hardware stack levels used:    1
  4852 ;; Hardware stack levels required when called:    6
  4853 ;; This function calls:
  4854 ;;		_I2C_SetCallback
  4855 ;; This function is called by:
  4856 ;;		_I2C_WriteNBytes
  4857 ;;		_I2C_Read1ByteRegister
  4858 ;;		_I2C_Read2ByteRegister
  4859 ;;		_I2C_Write1ByteRegister
  4860 ;;		_I2C_Write2ByteRegister
  4861 ;;		_I2C_ReadDataBlock
  4862 ;; This function uses a non-reentrant model
  4863 ;;
  4864                           
  4865                           
  4866                           ;psect for function _I2C_SetAddressNackCallback
  4867  0512                     _I2C_SetAddressNackCallback:
  4868                           
  4869                           ;mcc_generated_files/i2c_master.c: 283: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 284: {;mcc_generated_files/i2c_master.c:
      +                           285:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
  4870                           
  4871                           ;incstack = 0
  4872                           ; Regs used in _I2C_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4873  0512  0020               	movlb	0	; select bank0
  4874  0513  0859               	movf	I2C_SetAddressNackCallback@cb+1,w
  4875  0514  00D4               	movwf	I2C_SetCallback@cb+1
  4876  0515  0858               	movf	I2C_SetAddressNackCallback@cb,w
  4877  0516  00D3               	movwf	I2C_SetCallback@cb
  4878  0517  085A               	movf	I2C_SetAddressNackCallback@ptr,w
  4879  0518  00DB               	movwf	??_I2C_SetAddressNackCallback
  4880  0519  085B               	movf	??_I2C_SetAddressNackCallback,w
  4881  051A  00D5               	movwf	I2C_SetCallback@ptr
  4882  051B  3002               	movlw	2
  4883  051C  3183  233B         	fcall	_I2C_SetCallback
  4884  051E  0008               	return
  4885  051F                     __end_of_I2C_SetAddressNackCallback:
  4886                           
  4887                           	psect	text21
  4888  05D8                     __ptext21:	
  4889 ;; *************** function _I2C_MasterWrite *****************
  4890 ;; Defined at:
  4891 ;;		line 251 in file "mcc_generated_files/i2c_master.c"
  4892 ;; Parameters:    Size  Location     Type
  4893 ;;		None
  4894 ;; Auto vars:     Size  Location     Type
  4895 ;;		None
  4896 ;; Return value:  Size  Location     Type
  4897 ;;                  1    wreg      enum E353
  4898 ;; Registers used:
  4899 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4900 ;; Tracked objects:
  4901 ;;		On entry : 0/0
  4902 ;;		On exit  : 0/0
  4903 ;;		Unchanged: 0/0
  4904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4905 ;;      Params:         0       0       0       0       0       0       0       0
  4906 ;;      Locals:         0       0       0       0       0       0       0       0
  4907 ;;      Temps:          0       0       0       0       0       0       0       0
  4908 ;;      Totals:         0       0       0       0       0       0       0       0
  4909 ;;Total ram usage:        0 bytes
  4910 ;; Hardware stack levels used:    1
  4911 ;; Hardware stack levels required when called:   12
  4912 ;; This function calls:
  4913 ;;		_I2C_MasterOperation
  4914 ;; This function is called by:
  4915 ;;		_I2C_WriteNBytes
  4916 ;;		_I2C_Read1ByteRegister
  4917 ;;		_I2C_Read2ByteRegister
  4918 ;;		_I2C_Write1ByteRegister
  4919 ;;		_I2C_Write2ByteRegister
  4920 ;;		_I2C_ReadDataBlock
  4921 ;; This function uses a non-reentrant model
  4922 ;;
  4923                           
  4924                           
  4925                           ;psect for function _I2C_MasterWrite
  4926  05D8                     _I2C_MasterWrite:
  4927                           
  4928                           ;mcc_generated_files/i2c_master.c: 253:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
  4929                           
  4930                           ;incstack = 0
  4931                           ; Regs used in _I2C_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4932  05D8  3000               	movlw	0
  4933  05D9  3183  23F8         	fcall	_I2C_MasterOperation
  4934  05DB  0008               	return
  4935  05DC                     __end_of_I2C_MasterWrite:
  4936                           
  4937                           	psect	text22
  4938  03A4                     __ptext22:	
  4939 ;; *************** function _I2C_ReadNBytes *****************
  4940 ;; Defined at:
  4941 ;;		line 120 in file "mcc_generated_files/examples/i2c_master_example.c"
  4942 ;; Parameters:    Size  Location     Type
  4943 ;;  address         1    wreg     unsigned char 
  4944 ;;  data            1   19[BANK0 ] PTR unsigned char 
  4945 ;;		 -> TempH(1), 
  4946 ;;  len             2   20[BANK0 ] unsigned int 
  4947 ;; Auto vars:     Size  Location     Type
  4948 ;;  address         1   22[BANK0 ] unsigned char 
  4949 ;; Return value:  Size  Location     Type
  4950 ;;                  1    wreg      void 
  4951 ;; Registers used:
  4952 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4953 ;; Tracked objects:
  4954 ;;		On entry : 0/0
  4955 ;;		On exit  : 0/0
  4956 ;;		Unchanged: 0/0
  4957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4958 ;;      Params:         0       3       0       0       0       0       0       0
  4959 ;;      Locals:         0       1       0       0       0       0       0       0
  4960 ;;      Temps:          0       0       0       0       0       0       0       0
  4961 ;;      Totals:         0       4       0       0       0       0       0       0
  4962 ;;Total ram usage:        4 bytes
  4963 ;; Hardware stack levels used:    1
  4964 ;; Hardware stack levels required when called:   13
  4965 ;; This function calls:
  4966 ;;		_I2C_Close
  4967 ;;		_I2C_MasterRead
  4968 ;;		_I2C_Open
  4969 ;;		_I2C_SetBuffer
  4970 ;; This function is called by:
  4971 ;;		_GetTemp
  4972 ;; This function uses a non-reentrant model
  4973 ;;
  4974                           
  4975                           
  4976                           ;psect for function _I2C_ReadNBytes
  4977  03A4                     _I2C_ReadNBytes:
  4978                           
  4979                           ;incstack = 0
  4980                           ; Regs used in _I2C_ReadNBytes: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4981                           ;I2C_ReadNBytes@address stored from wreg
  4982  03A4  0020               	movlb	0	; select bank0
  4983  03A5  00E9               	movwf	I2C_ReadNBytes@address
  4984  03A6                     l3566:	
  4985                           ;mcc_generated_files/examples/i2c_master_example.c: 120: void I2C_ReadNBytes(i2c_address
      +                          _t address, uint8_t *data, size_t len);mcc_generated_files/examples/i2c_master_example.c
      +                          : 121: {;mcc_generated_files/examples/i2c_master_example.c: 122:     while(!I2C_Open(add
      +                          ress));
  4986                           
  4987  03A6  0020               	movlb	0	; select bank0
  4988  03A7  0869               	movf	I2C_ReadNBytes@address,w
  4989  03A8  3182  223A  3183   	fcall	_I2C_Open
  4990  03AB  3A00               	xorlw	0
  4991  03AC  1903               	skipnz
  4992  03AD  2BA6               	goto	l3566
  4993                           
  4994                           ;mcc_generated_files/examples/i2c_master_example.c: 123:     I2C_SetBuffer(data,len);
  4995  03AE  0020               	movlb	0	; select bank0
  4996  03AF  0868               	movf	I2C_ReadNBytes@len+1,w
  4997  03B0  00D4               	movwf	I2C_SetBuffer@bufferSize+1
  4998  03B1  0867               	movf	I2C_ReadNBytes@len,w
  4999  03B2  00D3               	movwf	I2C_SetBuffer@bufferSize
  5000  03B3  0866               	movf	I2C_ReadNBytes@data,w
  5001  03B4  3185  2504  3183   	fcall	_I2C_SetBuffer
  5002                           
  5003                           ;mcc_generated_files/examples/i2c_master_example.c: 124:     I2C_MasterRead();
  5004  03B7  3185  25DC  3183   	fcall	_I2C_MasterRead
  5005  03BA                     l3572:	
  5006                           ;mcc_generated_files/examples/i2c_master_example.c: 125:     while(I2C_BUSY == I2C_Close
      +                          ());
  5007                           
  5008  03BA  3184  2444  3183   	fcall	_I2C_Close
  5009  03BD  3A01               	xorlw	1
  5010  03BE  1D03               	btfss	3,2
  5011  03BF  0008               	return
  5012  03C0  2BBA               	goto	l3572
  5013  03C1                     __end_of_I2C_ReadNBytes:
  5014                           
  5015                           	psect	text23
  5016  023A                     __ptext23:	
  5017 ;; *************** function _I2C_Open *****************
  5018 ;; Defined at:
  5019 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  5020 ;; Parameters:    Size  Location     Type
  5021 ;;  address         1    wreg     unsigned char 
  5022 ;; Auto vars:     Size  Location     Type
  5023 ;;  address         1    1[BANK0 ] unsigned char 
  5024 ;;  returnValue     1    2[BANK0 ] enum E353
  5025 ;; Return value:  Size  Location     Type
  5026 ;;                  1    wreg      enum E353
  5027 ;; Registers used:
  5028 ;;		wreg, status,2, status,0, pclath, cstack
  5029 ;; Tracked objects:
  5030 ;;		On entry : 0/0
  5031 ;;		On exit  : 0/0
  5032 ;;		Unchanged: 0/0
  5033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5034 ;;      Params:         0       0       0       0       0       0       0       0
  5035 ;;      Locals:         0       2       0       0       0       0       0       0
  5036 ;;      Temps:          0       1       0       0       0       0       0       0
  5037 ;;      Totals:         0       3       0       0       0       0       0       0
  5038 ;;Total ram usage:        3 bytes
  5039 ;; Hardware stack levels used:    1
  5040 ;; Hardware stack levels required when called:    6
  5041 ;; This function calls:
  5042 ;;		_I2C_MasterClearIrq
  5043 ;;		_I2C_MasterOpen
  5044 ;; This function is called by:
  5045 ;;		_I2C_WriteNBytes
  5046 ;;		_I2C_ReadNBytes
  5047 ;;		_I2C_Read1ByteRegister
  5048 ;;		_I2C_Read2ByteRegister
  5049 ;;		_I2C_Write1ByteRegister
  5050 ;;		_I2C_Write2ByteRegister
  5051 ;;		_I2C_ReadDataBlock
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055                           
  5056                           ;psect for function _I2C_Open
  5057  023A                     _I2C_Open:
  5058                           
  5059                           ;incstack = 0
  5060                           ; Regs used in _I2C_Open: [wreg+status,2+status,0+pclath+cstack]
  5061                           ;I2C_Open@address stored from wreg
  5062  023A  0020               	movlb	0	; select bank0
  5063  023B  00D4               	movwf	I2C_Open@address
  5064                           
  5065                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  5066  023C  01D5               	clrf	I2C_Open@returnValue
  5067  023D  0AD5               	incf	I2C_Open@returnValue,f
  5068                           
  5069                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
  5070  023E  193C               	btfsc	_I2C_Status+28,2
  5071  023F  2A70               	goto	l412
  5072                           
  5073                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
  5074  0240  0854               	movf	I2C_Open@address,w
  5075  0241  00D3               	movwf	??_I2C_Open
  5076  0242  0853               	movf	??_I2C_Open,w
  5077  0243  00B6               	movwf	_I2C_Status+22
  5078                           
  5079                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
  5080  0244  10BC               	bcf	_I2C_Status+28,1
  5081                           
  5082                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
  5083  0245  153C               	bsf	_I2C_Status+28,2
  5084                           
  5085                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
  5086  0246  103C               	bcf	_I2C_Status+28,0
  5087                           
  5088                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
  5089  0247  300E               	movlw	14
  5090  0248  00D3               	movwf	??_I2C_Open
  5091  0249  0853               	movf	??_I2C_Open,w
  5092  024A  00BA               	movwf	_I2C_Status+26
  5093                           
  5094                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
  5095  024B  30F4               	movlw	244
  5096  024C  00B4               	movwf	_I2C_Status+20
  5097  024D  3001               	movlw	1
  5098  024E  00B5               	movwf	_I2C_Status+21
  5099                           
  5100                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
  5101  024F  15BC               	bsf	_I2C_Status+28,3
  5102                           
  5103                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
  5104  0250  3027               	movlw	low _I2C_CallbackReturnStop
  5105  0251  00A0               	movwf	_I2C_Status
  5106  0252  3006               	movlw	high _I2C_CallbackReturnStop
  5107  0253  00A1               	movwf	_I2C_Status+1
  5108                           
  5109                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
  5110  0254  01AC               	clrf	low ((_I2C_Status| 0+12))
  5111                           
  5112                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
  5113  0255  3027               	movlw	low _I2C_CallbackReturnStop
  5114  0256  00A2               	movwf	low ((_I2C_Status| 0+2))
  5115  0257  3006               	movlw	high _I2C_CallbackReturnStop
  5116  0258  00A3               	movwf	(low ((_I2C_Status| 0+2))+1)
  5117                           
  5118                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
  5119  0259  01AD               	clrf	low ((_I2C_Status| 0+13))
  5120                           
  5121                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
  5122  025A  3027               	movlw	low _I2C_CallbackReturnStop
  5123  025B  00A4               	movwf	low ((_I2C_Status| 0+4))
  5124  025C  3006               	movlw	high _I2C_CallbackReturnStop
  5125  025D  00A5               	movwf	(low ((_I2C_Status| 0+4))+1)
  5126                           
  5127                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
  5128  025E  01AE               	clrf	low ((_I2C_Status| 0+14))
  5129                           
  5130                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
  5131  025F  3027               	movlw	low _I2C_CallbackReturnStop
  5132  0260  00A6               	movwf	low ((_I2C_Status| 0+6))
  5133  0261  3006               	movlw	high _I2C_CallbackReturnStop
  5134  0262  00A7               	movwf	(low ((_I2C_Status| 0+6))+1)
  5135                           
  5136                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
  5137  0263  01AF               	clrf	low ((_I2C_Status| 0+15))
  5138                           
  5139                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
  5140  0264  3025               	movlw	low _I2C_CallbackReturnReset
  5141  0265  00A8               	movwf	low ((_I2C_Status| 0+8))
  5142  0266  3006               	movlw	high _I2C_CallbackReturnReset
  5143  0267  00A9               	movwf	(low ((_I2C_Status| 0+8))+1)
  5144                           
  5145                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
  5146  0268  01B0               	clrf	low ((_I2C_Status| 0+16))
  5147                           
  5148                           ;mcc_generated_files/i2c_master.c: 202:         I2C_MasterClearIrq();
  5149  0269  3186  2620  3182   	fcall	_I2C_MasterClearIrq
  5150                           
  5151                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterOpen();
  5152  026C  3185  252C         	fcall	_I2C_MasterOpen
  5153                           
  5154                           ;mcc_generated_files/i2c_master.c: 204:         returnValue = I2C_NOERR;
  5155  026E  0020               	movlb	0	; select bank0
  5156  026F  01D5               	clrf	I2C_Open@returnValue
  5157  0270                     l412:	
  5158                           ;mcc_generated_files/i2c_master.c: 205:     }
  5159                           
  5160                           
  5161                           ;mcc_generated_files/i2c_master.c: 206:     return returnValue;
  5162  0270  0855               	movf	I2C_Open@returnValue,w
  5163  0271  0008               	return
  5164  0272                     __end_of_I2C_Open:
  5165                           
  5166                           	psect	text24
  5167  052C                     __ptext24:	
  5168 ;; *************** function _I2C_MasterOpen *****************
  5169 ;; Defined at:
  5170 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
  5171 ;; Parameters:    Size  Location     Type
  5172 ;;		None
  5173 ;; Auto vars:     Size  Location     Type
  5174 ;;		None
  5175 ;; Return value:  Size  Location     Type
  5176 ;;                  1    wreg      _Bool 
  5177 ;; Registers used:
  5178 ;;		wreg, status,2
  5179 ;; Tracked objects:
  5180 ;;		On entry : 0/0
  5181 ;;		On exit  : 0/0
  5182 ;;		Unchanged: 0/0
  5183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5184 ;;      Params:         0       0       0       0       0       0       0       0
  5185 ;;      Locals:         0       0       0       0       0       0       0       0
  5186 ;;      Temps:          0       0       0       0       0       0       0       0
  5187 ;;      Totals:         0       0       0       0       0       0       0       0
  5188 ;;Total ram usage:        0 bytes
  5189 ;; Hardware stack levels used:    1
  5190 ;; Hardware stack levels required when called:    5
  5191 ;; This function calls:
  5192 ;;		Nothing
  5193 ;; This function is called by:
  5194 ;;		_I2C_Open
  5195 ;; This function uses a non-reentrant model
  5196 ;;
  5197                           
  5198                           
  5199                           ;psect for function _I2C_MasterOpen
  5200  052C                     _I2C_MasterOpen:
  5201                           
  5202                           ;mcc_generated_files/i2c_master.c: 545:     if(!SSP1CON1bits.SSPEN)
  5203                           
  5204                           ;incstack = 0
  5205                           ; Regs used in _I2C_MasterOpen: [wreg+status,2]
  5206  052C  0024               	movlb	4	; select bank4
  5207  052D  1A95               	btfsc	21,5	;volatile
  5208  052E  0008               	return
  5209                           
  5210                           ;mcc_generated_files/i2c_master.c: 546:     {;mcc_generated_files/i2c_master.c: 547:    
      +                               SSP1STAT = 0x00;
  5211  052F  0194               	clrf	20	;volatile
  5212                           
  5213                           ;mcc_generated_files/i2c_master.c: 548:         SSP1CON1 = 0x08;
  5214  0530  3008               	movlw	8
  5215  0531  0095               	movwf	21	;volatile
  5216                           
  5217                           ;mcc_generated_files/i2c_master.c: 549:         SSP1CON2 = 0x00;
  5218  0532  0196               	clrf	22	;volatile
  5219                           
  5220                           ;mcc_generated_files/i2c_master.c: 550:         SSP1ADD = 0x27;
  5221  0533  3027               	movlw	39
  5222  0534  0092               	movwf	18	;volatile
  5223                           
  5224                           ;mcc_generated_files/i2c_master.c: 551:         SSP1CON1bits.SSPEN = 1;
  5225  0535  1695               	bsf	21,5	;volatile
  5226  0536  0008               	return
  5227  0537                     __end_of_I2C_MasterOpen:
  5228                           
  5229                           	psect	text25
  5230  05DC                     __ptext25:	
  5231 ;; *************** function _I2C_MasterRead *****************
  5232 ;; Defined at:
  5233 ;;		line 246 in file "mcc_generated_files/i2c_master.c"
  5234 ;; Parameters:    Size  Location     Type
  5235 ;;		None
  5236 ;; Auto vars:     Size  Location     Type
  5237 ;;		None
  5238 ;; Return value:  Size  Location     Type
  5239 ;;                  1    wreg      enum E353
  5240 ;; Registers used:
  5241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5242 ;; Tracked objects:
  5243 ;;		On entry : 0/0
  5244 ;;		On exit  : 0/0
  5245 ;;		Unchanged: 0/0
  5246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5247 ;;      Params:         0       0       0       0       0       0       0       0
  5248 ;;      Locals:         0       0       0       0       0       0       0       0
  5249 ;;      Temps:          0       0       0       0       0       0       0       0
  5250 ;;      Totals:         0       0       0       0       0       0       0       0
  5251 ;;Total ram usage:        0 bytes
  5252 ;; Hardware stack levels used:    1
  5253 ;; Hardware stack levels required when called:   12
  5254 ;; This function calls:
  5255 ;;		_I2C_MasterOperation
  5256 ;; This function is called by:
  5257 ;;		_I2C_ReadNBytes
  5258 ;; This function uses a non-reentrant model
  5259 ;;
  5260                           
  5261                           
  5262                           ;psect for function _I2C_MasterRead
  5263  05DC                     _I2C_MasterRead:
  5264                           
  5265                           ;mcc_generated_files/i2c_master.c: 248:     return I2C_MasterOperation(1);;	Return value
      +                           of _I2C_MasterRead is never used
  5266                           
  5267                           ;incstack = 0
  5268                           ; Regs used in _I2C_MasterRead: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5269  05DC  3001               	movlw	1
  5270  05DD  3183  23F8         	fcall	_I2C_MasterOperation
  5271  05DF  0008               	return
  5272  05E0                     __end_of_I2C_MasterRead:
  5273                           
  5274                           	psect	text26
  5275  03F8                     __ptext26:	
  5276 ;; *************** function _I2C_MasterOperation *****************
  5277 ;; Defined at:
  5278 ;;		line 224 in file "mcc_generated_files/i2c_master.c"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;  read            1    wreg     _Bool 
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;  read            1   17[BANK0 ] _Bool 
  5283 ;;  returnValue     1   18[BANK0 ] enum E353
  5284 ;; Return value:  Size  Location     Type
  5285 ;;                  1    wreg      enum E353
  5286 ;; Registers used:
  5287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5288 ;; Tracked objects:
  5289 ;;		On entry : 0/0
  5290 ;;		On exit  : 0/0
  5291 ;;		Unchanged: 0/0
  5292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5293 ;;      Params:         0       0       0       0       0       0       0       0
  5294 ;;      Locals:         0       2       0       0       0       0       0       0
  5295 ;;      Temps:          0       1       0       0       0       0       0       0
  5296 ;;      Totals:         0       3       0       0       0       0       0       0
  5297 ;;Total ram usage:        3 bytes
  5298 ;; Hardware stack levels used:    1
  5299 ;; Hardware stack levels required when called:   11
  5300 ;; This function calls:
  5301 ;;		_I2C_MasterStart
  5302 ;;		_I2C_Poller
  5303 ;; This function is called by:
  5304 ;;		_I2C_MasterRead
  5305 ;;		_I2C_MasterWrite
  5306 ;; This function uses a non-reentrant model
  5307 ;;
  5308                           
  5309                           
  5310                           ;psect for function _I2C_MasterOperation
  5311  03F8                     _I2C_MasterOperation:
  5312                           
  5313                           ;incstack = 0
  5314                           ; Regs used in _I2C_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5315                           ;I2C_MasterOperation@read stored from wreg
  5316  03F8  0020               	movlb	0	; select bank0
  5317  03F9  00E4               	movwf	I2C_MasterOperation@read
  5318                           
  5319                           ;mcc_generated_files/i2c_master.c: 224: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 225: {;mcc_generated_files/i2c_master.c: 226:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  5320  03FA  01E5               	clrf	I2C_MasterOperation@returnValue
  5321  03FB  0AE5               	incf	I2C_MasterOperation@returnValue,f
  5322                           
  5323                           ;mcc_generated_files/i2c_master.c: 227:     if(!I2C_Status.busy)
  5324  03FC  18BC               	btfsc	_I2C_Status+28,1
  5325  03FD  2C0F               	goto	l3488
  5326                           
  5327                           ;mcc_generated_files/i2c_master.c: 228:     {;mcc_generated_files/i2c_master.c: 229:    
      +                               I2C_Status.busy = 1;
  5328  03FE  14BC               	bsf	_I2C_Status+28,1
  5329                           
  5330                           ;mcc_generated_files/i2c_master.c: 230:         returnValue = I2C_NOERR;
  5331  03FF  01E5               	clrf	I2C_MasterOperation@returnValue
  5332                           
  5333                           ;mcc_generated_files/i2c_master.c: 232:         if(read)
  5334  0400  0864               	movf	I2C_MasterOperation@read,w
  5335  0401  1903               	btfsc	3,2
  5336  0402  2C06               	goto	l3482
  5337                           
  5338                           ;mcc_generated_files/i2c_master.c: 233:         {;mcc_generated_files/i2c_master.c: 234:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
  5339  0403  01BA               	clrf	_I2C_Status+26
  5340  0404  0ABA               	incf	_I2C_Status+26,f
  5341                           
  5342                           ;mcc_generated_files/i2c_master.c: 235:         }
  5343  0405  2C0A               	goto	l3484
  5344  0406                     l3482:
  5345                           
  5346                           ;mcc_generated_files/i2c_master.c: 237:         {;mcc_generated_files/i2c_master.c: 238:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
  5347  0406  3002               	movlw	2
  5348  0407  00E3               	movwf	??_I2C_MasterOperation
  5349  0408  0863               	movf	??_I2C_MasterOperation,w
  5350  0409  00BA               	movwf	_I2C_Status+26
  5351  040A                     l3484:
  5352                           
  5353                           ;mcc_generated_files/i2c_master.c: 240:         I2C_MasterStart();
  5354  040A  3186  2617  3183   	fcall	_I2C_MasterStart
  5355                           
  5356                           ;mcc_generated_files/i2c_master.c: 241:         I2C_Poller();
  5357  040D  3185  2542         	fcall	_I2C_Poller
  5358  040F                     l3488:
  5359                           
  5360                           ;mcc_generated_files/i2c_master.c: 243:     return returnValue;
  5361  040F  0020               	movlb	0	; select bank0
  5362  0410  0865               	movf	I2C_MasterOperation@returnValue,w
  5363  0411  0008               	return
  5364  0412                     __end_of_I2C_MasterOperation:
  5365                           
  5366                           	psect	text27
  5367  0542                     __ptext27:	
  5368 ;; *************** function _I2C_Poller *****************
  5369 ;; Defined at:
  5370 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
  5371 ;; Parameters:    Size  Location     Type
  5372 ;;		None
  5373 ;; Auto vars:     Size  Location     Type
  5374 ;;		None
  5375 ;; Return value:  Size  Location     Type
  5376 ;;                  1    wreg      void 
  5377 ;; Registers used:
  5378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5379 ;; Tracked objects:
  5380 ;;		On entry : 0/0
  5381 ;;		On exit  : 0/0
  5382 ;;		Unchanged: 0/0
  5383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5384 ;;      Params:         0       0       0       0       0       0       0       0
  5385 ;;      Locals:         0       0       0       0       0       0       0       0
  5386 ;;      Temps:          0       0       0       0       0       0       0       0
  5387 ;;      Totals:         0       0       0       0       0       0       0       0
  5388 ;;Total ram usage:        0 bytes
  5389 ;; Hardware stack levels used:    1
  5390 ;; Hardware stack levels required when called:   10
  5391 ;; This function calls:
  5392 ;;		_I2C_MasterFsm
  5393 ;;		_I2C_MasterWaitForEvent
  5394 ;; This function is called by:
  5395 ;;		_I2C_MasterOperation
  5396 ;; This function uses a non-reentrant model
  5397 ;;
  5398                           
  5399                           
  5400                           ;psect for function _I2C_Poller
  5401  0542                     _I2C_Poller:
  5402  0542                     l3454:	
  5403                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  5404                           
  5405                           ;incstack = 0
  5406                           ; Regs used in _I2C_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5407                           
  5408                           
  5409                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  5410  0542  0020               	movlb	0	; select bank0
  5411  0543  1CBC               	btfss	_I2C_Status+28,1
  5412  0544  0008               	return
  5413                           
  5414                           ;mcc_generated_files/i2c_master.c: 315:     {;mcc_generated_files/i2c_master.c: 316:    
      +                               I2C_MasterWaitForEvent();
  5415  0545  3185  25E0  3185   	fcall	_I2C_MasterWaitForEvent
  5416                           
  5417                           ;mcc_generated_files/i2c_master.c: 317:         I2C_MasterFsm();
  5418  0548  3182  22CA  3185   	fcall	_I2C_MasterFsm
  5419  054B  2D42               	goto	l3454
  5420  054C                     __end_of_I2C_Poller:
  5421                           
  5422                           	psect	text28
  5423  05E0                     __ptext28:	
  5424 ;; *************** function _I2C_MasterWaitForEvent *****************
  5425 ;; Defined at:
  5426 ;;		line 650 in file "mcc_generated_files/i2c_master.c"
  5427 ;; Parameters:    Size  Location     Type
  5428 ;;		None
  5429 ;; Auto vars:     Size  Location     Type
  5430 ;;		None
  5431 ;; Return value:  Size  Location     Type
  5432 ;;                  1    wreg      void 
  5433 ;; Registers used:
  5434 ;;		None
  5435 ;; Tracked objects:
  5436 ;;		On entry : 0/0
  5437 ;;		On exit  : 0/0
  5438 ;;		Unchanged: 0/0
  5439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5440 ;;      Params:         0       0       0       0       0       0       0       0
  5441 ;;      Locals:         0       0       0       0       0       0       0       0
  5442 ;;      Temps:          0       0       0       0       0       0       0       0
  5443 ;;      Totals:         0       0       0       0       0       0       0       0
  5444 ;;Total ram usage:        0 bytes
  5445 ;; Hardware stack levels used:    1
  5446 ;; Hardware stack levels required when called:    5
  5447 ;; This function calls:
  5448 ;;		Nothing
  5449 ;; This function is called by:
  5450 ;;		_I2C_Poller
  5451 ;; This function uses a non-reentrant model
  5452 ;;
  5453                           
  5454                           
  5455                           ;psect for function _I2C_MasterWaitForEvent
  5456  05E0                     _I2C_MasterWaitForEvent:
  5457  05E0                     l635:	
  5458                           ;incstack = 0
  5459                           ; Regs used in _I2C_MasterWaitForEvent: []
  5460                           ;mcc_generated_files/i2c_master.c: 652:     while(1)
  5461                           
  5462                           
  5463                           ;mcc_generated_files/i2c_master.c: 653:     {;mcc_generated_files/i2c_master.c: 654:    
      +                               if(PIR1bits.SSP1IF)
  5464  05E0  0020               	movlb	0	; select bank0
  5465  05E1  1991               	btfsc	17,3	;volatile
  5466  05E2  0008               	return
  5467  05E3  2DE0               	goto	l635
  5468  05E4                     __end_of_I2C_MasterWaitForEvent:
  5469                           
  5470                           	psect	text29
  5471  02CA                     __ptext29:	
  5472 ;; *************** function _I2C_MasterFsm *****************
  5473 ;; Defined at:
  5474 ;;		line 321 in file "mcc_generated_files/i2c_master.c"
  5475 ;; Parameters:    Size  Location     Type
  5476 ;;		None
  5477 ;; Auto vars:     Size  Location     Type
  5478 ;;		None
  5479 ;; Return value:  Size  Location     Type
  5480 ;;                  1    wreg      void 
  5481 ;; Registers used:
  5482 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5483 ;; Tracked objects:
  5484 ;;		On entry : 0/0
  5485 ;;		On exit  : 0/0
  5486 ;;		Unchanged: 0/0
  5487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5488 ;;      Params:         0       0       0       0       0       0       0       0
  5489 ;;      Locals:         0       0       0       0       0       0       0       0
  5490 ;;      Temps:          0       3       0       0       0       0       0       0
  5491 ;;      Totals:         0       3       0       0       0       0       0       0
  5492 ;;Total ram usage:        3 bytes
  5493 ;; Hardware stack levels used:    1
  5494 ;; Hardware stack levels required when called:    9
  5495 ;; This function calls:
  5496 ;;		_I2C_DO_ADDRESS_NACK
  5497 ;;		_I2C_DO_IDLE
  5498 ;;		_I2C_DO_RCEN
  5499 ;;		_I2C_DO_RESET
  5500 ;;		_I2C_DO_RX
  5501 ;;		_I2C_DO_RX_ACK
  5502 ;;		_I2C_DO_RX_NACK_RESTART
  5503 ;;		_I2C_DO_RX_NACK_STOP
  5504 ;;		_I2C_DO_SEND_ADR_READ
  5505 ;;		_I2C_DO_SEND_ADR_WRITE
  5506 ;;		_I2C_DO_SEND_RESTART
  5507 ;;		_I2C_DO_SEND_RESTART_READ
  5508 ;;		_I2C_DO_SEND_RESTART_WRITE
  5509 ;;		_I2C_DO_SEND_STOP
  5510 ;;		_I2C_DO_TX
  5511 ;;		_I2C_DO_TX_EMPTY
  5512 ;;		_I2C_MasterClearIrq
  5513 ;;		_I2C_MasterIsNack
  5514 ;; This function is called by:
  5515 ;;		_I2C_Poller
  5516 ;; This function uses a non-reentrant model
  5517 ;;
  5518                           
  5519                           
  5520                           ;psect for function _I2C_MasterFsm
  5521  02CA                     _I2C_MasterFsm:
  5522                           
  5523                           ;mcc_generated_files/i2c_master.c: 323:     I2C_MasterClearIrq();
  5524                           
  5525                           ;incstack = 0
  5526                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5527  02CA  3186  2620  3182   	fcall	_I2C_MasterClearIrq
  5528                           
  5529                           ;mcc_generated_files/i2c_master.c: 325:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  5530  02CD  0020               	movlb	0	; select bank0
  5531  02CE  1C3C               	btfss	_I2C_Status+28,0
  5532  02CF  2ADB               	goto	l3444
  5533  02D0  3185  25B8  3182   	fcall	_I2C_MasterIsNack
  5534  02D3  3A00               	xorlw	0
  5535  02D4  1903               	skipnz
  5536  02D5  2ADB               	goto	l3444
  5537                           
  5538                           ;mcc_generated_files/i2c_master.c: 326:     {;mcc_generated_files/i2c_master.c: 327:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  5539  02D6  300F               	movlw	15
  5540  02D7  0020               	movlb	0	; select bank0
  5541  02D8  00E0               	movwf	??_I2C_MasterFsm
  5542  02D9  0860               	movf	??_I2C_MasterFsm,w
  5543  02DA  00BA               	movwf	_I2C_Status+26
  5544  02DB                     l3444:
  5545                           
  5546                           ;mcc_generated_files/i2c_master.c: 329:     I2C_Status.state = fsmStateTable[I2C_Status.
      +                          state]();
  5547  02DB  0020               	movlb	0	; select bank0
  5548  02DC  083A               	movf	_I2C_Status+26,w
  5549  02DD  00E0               	movwf	??_I2C_MasterFsm
  5550  02DE  01E1               	clrf	??_I2C_MasterFsm+1
  5551  02DF  35E0               	lslf	??_I2C_MasterFsm,f
  5552  02E0  0DE1               	rlf	??_I2C_MasterFsm+1,f
  5553  02E1  3084               	movlw	low (_fsmStateTable| (0+32768))
  5554  02E2  0760               	addwf	??_I2C_MasterFsm,w
  5555  02E3  0084               	movwf	4
  5556  02E4  3083               	movlw	high (_fsmStateTable| (0+32768))
  5557  02E5  3D61               	addwfc	??_I2C_MasterFsm+1,w
  5558  02E6  0085               	movwf	5
  5559  02E7  3F01               	moviw [1]fsr0
  5560  02E8  008A               	movwf	10
  5561  02E9  3F00               	moviw [0]fsr0
  5562  02EA  000A               	callw
  5563  02EB  3182               	pagesel	$
  5564  02EC  0020               	movlb	0	; select bank0
  5565  02ED  00E2               	movwf	??_I2C_MasterFsm+2
  5566  02EE  0862               	movf	??_I2C_MasterFsm+2,w
  5567  02EF  00BA               	movwf	_I2C_Status+26
  5568  02F0  0008               	return
  5569  02F1                     __end_of_I2C_MasterFsm:
  5570                           
  5571                           	psect	text30
  5572  029F                     __ptext30:	
  5573 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  5574 ;; Defined at:
  5575 ;;		line 500 in file "mcc_generated_files/i2c_master.c"
  5576 ;; Parameters:    Size  Location     Type
  5577 ;;		None
  5578 ;; Auto vars:     Size  Location     Type
  5579 ;;		None
  5580 ;; Return value:  Size  Location     Type
  5581 ;;                  1    wreg      enum E3874
  5582 ;; Registers used:
  5583 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5584 ;; Tracked objects:
  5585 ;;		On entry : 0/0
  5586 ;;		On exit  : 0/0
  5587 ;;		Unchanged: 0/0
  5588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5589 ;;      Params:         0       0       0       0       0       0       0       0
  5590 ;;      Locals:         0       0       0       0       0       0       0       0
  5591 ;;      Temps:          0       3       0       0       0       0       0       0
  5592 ;;      Totals:         0       3       0       0       0       0       0       0
  5593 ;;Total ram usage:        3 bytes
  5594 ;; Hardware stack levels used:    1
  5595 ;; Hardware stack levels required when called:    8
  5596 ;; This function calls:
  5597 ;;		Absolute function
  5598 ;;		_I2C_CallbackReturnReset
  5599 ;;		_I2C_CallbackReturnStop
  5600 ;;		_I2C_DO_SEND_RESTART
  5601 ;;		_I2C_DO_SEND_STOP
  5602 ;;		_rd1RegCompleteHandler
  5603 ;;		_rd2RegCompleteHandler
  5604 ;;		_rdBlkRegCompleteHandler
  5605 ;;		_wr1RegCompleteHandler
  5606 ;;		_wr2RegCompleteHandler
  5607 ;; This function is called by:
  5608 ;;		_I2C_MasterFsm
  5609 ;; This function uses a non-reentrant model
  5610 ;;
  5611                           
  5612                           
  5613                           ;psect for function _I2C_DO_ADDRESS_NACK
  5614  029F                     _I2C_DO_ADDRESS_NACK:
  5615                           
  5616                           ;mcc_generated_files/i2c_master.c: 502:     I2C_Status.addressNackCheck = 0;
  5617                           
  5618                           ;incstack = 0
  5619                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5620  029F  0020               	movlb	0	; select bank0
  5621  02A0  103C               	bcf	_I2C_Status+28,0
  5622                           
  5623                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.error = I2C_FAIL;
  5624  02A1  3002               	movlw	2
  5625  02A2  00DD               	movwf	??_I2C_DO_ADDRESS_NACK
  5626  02A3  085D               	movf	??_I2C_DO_ADDRESS_NACK,w
  5627  02A4  00BB               	movwf	_I2C_Status+27
  5628                           
  5629                           ;mcc_generated_files/i2c_master.c: 504:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  5630  02A5  2AAC               	goto	l3428
  5631  02A6                     l3418:
  5632                           
  5633                           ;mcc_generated_files/i2c_master.c: 508:             return I2C_DO_SEND_RESTART();
  5634  02A6  3185  25F4         	fcall	_I2C_DO_SEND_RESTART
  5635  02A8  0008               	return
  5636  02A9                     l3422:
  5637                           
  5638                           ;mcc_generated_files/i2c_master.c: 510:             return I2C_DO_SEND_STOP();
  5639  02A9  3185  25F0         	fcall	_I2C_DO_SEND_STOP
  5640  02AB  0008               	return
  5641  02AC                     l3428:
  5642  02AC  082E               	movf	low ((_I2C_Status| 0+14)),w
  5643  02AD  00DD               	movwf	??_I2C_DO_ADDRESS_NACK
  5644  02AE  085D               	movf	??_I2C_DO_ADDRESS_NACK,w
  5645  02AF  00DC               	movwf	I2C_CallbackReturnReset@funPtr
  5646  02B0  3004               	movlw	4
  5647  02B1  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  5648  02B2  0086               	movwf	6
  5649  02B3  0187               	clrf	7
  5650  02B4  3F41               	moviw [1]fsr1
  5651  02B5  008A               	movwf	10
  5652  02B6  3F40               	moviw [0]fsr1
  5653  02B7  000A               	callw
  5654  02B8  3182               	pagesel	$
  5655  02B9  0020               	movlb	0	; select bank0
  5656  02BA  00DE               	movwf	??_I2C_DO_ADDRESS_NACK+1
  5657  02BB  01DF               	clrf	??_I2C_DO_ADDRESS_NACK+2
  5658                           
  5659                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5660                           ; Switch size 1, requested type "simple"
  5661                           ; Number of cases is 1, Range of values is 0 to 0
  5662                           ; switch strategies available:
  5663                           ; Name         Instructions Cycles
  5664                           ; simple_byte            4     3 (average)
  5665                           ; direct_byte            8     6 (fixed)
  5666                           ; jumptable            260     6 (fixed)
  5667                           ;	Chosen strategy is simple_byte
  5668  02BC  085F               	movf	??_I2C_DO_ADDRESS_NACK+2,w
  5669  02BD  3A00               	xorlw	0	; case 0
  5670  02BE  1903               	skipnz
  5671  02BF  2AC1               	goto	l3974
  5672  02C0  2AA9               	goto	l3422
  5673  02C1                     l3974:
  5674                           
  5675                           ; Switch size 1, requested type "simple"
  5676                           ; Number of cases is 2, Range of values is 2 to 3
  5677                           ; switch strategies available:
  5678                           ; Name         Instructions Cycles
  5679                           ; simple_byte            7     4 (average)
  5680                           ; direct_byte           13     9 (fixed)
  5681                           ; jumptable            263     9 (fixed)
  5682                           ;	Chosen strategy is simple_byte
  5683  02C1  085E               	movf	??_I2C_DO_ADDRESS_NACK+1,w
  5684  02C2  3A02               	xorlw	2	; case 2
  5685  02C3  1903               	skipnz
  5686  02C4  2AA6               	goto	l3418
  5687  02C5  3A01               	xorlw	1	; case 3
  5688  02C6  1903               	skipnz
  5689  02C7  2AA6               	goto	l3418
  5690  02C8  2AA9               	goto	l3422
  5691  02C9  0008               	return
  5692  02CA                     __end_of_I2C_DO_ADDRESS_NACK:
  5693                           
  5694                           	psect	text31
  5695  05CA                     __ptext31:	
  5696 ;; *************** function _I2C_DO_RESET *****************
  5697 ;; Defined at:
  5698 ;;		line 494 in file "mcc_generated_files/i2c_master.c"
  5699 ;; Parameters:    Size  Location     Type
  5700 ;;		None
  5701 ;; Auto vars:     Size  Location     Type
  5702 ;;		None
  5703 ;; Return value:  Size  Location     Type
  5704 ;;                  1    wreg      enum E3874
  5705 ;; Registers used:
  5706 ;;		wreg, status,2
  5707 ;; Tracked objects:
  5708 ;;		On entry : 0/0
  5709 ;;		On exit  : 0/0
  5710 ;;		Unchanged: 0/0
  5711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5712 ;;      Params:         0       0       0       0       0       0       0       0
  5713 ;;      Locals:         0       0       0       0       0       0       0       0
  5714 ;;      Temps:          0       0       0       0       0       0       0       0
  5715 ;;      Totals:         0       0       0       0       0       0       0       0
  5716 ;;Total ram usage:        0 bytes
  5717 ;; Hardware stack levels used:    1
  5718 ;; Hardware stack levels required when called:    5
  5719 ;; This function calls:
  5720 ;;		Nothing
  5721 ;; This function is called by:
  5722 ;;		_I2C_MasterFsm
  5723 ;; This function uses a non-reentrant model
  5724 ;;
  5725                           
  5726                           
  5727                           ;psect for function _I2C_DO_RESET
  5728  05CA                     _I2C_DO_RESET:
  5729                           
  5730                           ;mcc_generated_files/i2c_master.c: 496:     I2C_Status.busy = 0;
  5731                           
  5732                           ;incstack = 0
  5733                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
  5734  05CA  0020               	movlb	0	; select bank0
  5735  05CB  10BC               	bcf	_I2C_Status+28,1
  5736                           
  5737                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.error = I2C_NOERR;
  5738  05CC  01BB               	clrf	_I2C_Status+27
  5739                           
  5740                           ;mcc_generated_files/i2c_master.c: 498:     return I2C_RESET;
  5741  05CD  300E               	movlw	14
  5742  05CE  0008               	return
  5743  05CF                     __end_of_I2C_DO_RESET:
  5744                           
  5745                           	psect	text32
  5746  05E4                     __ptext32:	
  5747 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  5748 ;; Defined at:
  5749 ;;		line 488 in file "mcc_generated_files/i2c_master.c"
  5750 ;; Parameters:    Size  Location     Type
  5751 ;;		None
  5752 ;; Auto vars:     Size  Location     Type
  5753 ;;		None
  5754 ;; Return value:  Size  Location     Type
  5755 ;;                  1    wreg      enum E3874
  5756 ;; Registers used:
  5757 ;;		wreg, status,2, status,0, pclath, cstack
  5758 ;; Tracked objects:
  5759 ;;		On entry : 0/0
  5760 ;;		On exit  : 0/0
  5761 ;;		Unchanged: 0/0
  5762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5763 ;;      Params:         0       0       0       0       0       0       0       0
  5764 ;;      Locals:         0       0       0       0       0       0       0       0
  5765 ;;      Temps:          0       0       0       0       0       0       0       0
  5766 ;;      Totals:         0       0       0       0       0       0       0       0
  5767 ;;Total ram usage:        0 bytes
  5768 ;; Hardware stack levels used:    1
  5769 ;; Hardware stack levels required when called:    6
  5770 ;; This function calls:
  5771 ;;		_I2C_MasterSendNack
  5772 ;; This function is called by:
  5773 ;;		_I2C_DO_RX
  5774 ;;		_I2C_MasterFsm
  5775 ;; This function uses a non-reentrant model
  5776 ;;
  5777                           
  5778                           
  5779                           ;psect for function _I2C_DO_RX_NACK_RESTART
  5780  05E4                     _I2C_DO_RX_NACK_RESTART:
  5781                           
  5782                           ;mcc_generated_files/i2c_master.c: 490:     I2C_MasterSendNack();
  5783                           
  5784                           ;incstack = 0
  5785                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  5786  05E4  3186  2604         	fcall	_I2C_MasterSendNack
  5787                           
  5788                           ;mcc_generated_files/i2c_master.c: 491:     return I2C_SEND_RESTART;
  5789  05E6  3009               	movlw	9
  5790  05E7  0008               	return
  5791  05E8                     __end_of_I2C_DO_RX_NACK_RESTART:
  5792                           
  5793                           	psect	text33
  5794  05E8                     __ptext33:	
  5795 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  5796 ;; Defined at:
  5797 ;;		line 482 in file "mcc_generated_files/i2c_master.c"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;		None
  5800 ;; Auto vars:     Size  Location     Type
  5801 ;;		None
  5802 ;; Return value:  Size  Location     Type
  5803 ;;                  1    wreg      enum E3874
  5804 ;; Registers used:
  5805 ;;		wreg, status,2, status,0, pclath, cstack
  5806 ;; Tracked objects:
  5807 ;;		On entry : 0/0
  5808 ;;		On exit  : 0/0
  5809 ;;		Unchanged: 0/0
  5810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5811 ;;      Params:         0       0       0       0       0       0       0       0
  5812 ;;      Locals:         0       0       0       0       0       0       0       0
  5813 ;;      Temps:          0       0       0       0       0       0       0       0
  5814 ;;      Totals:         0       0       0       0       0       0       0       0
  5815 ;;Total ram usage:        0 bytes
  5816 ;; Hardware stack levels used:    1
  5817 ;; Hardware stack levels required when called:    6
  5818 ;; This function calls:
  5819 ;;		_I2C_MasterSendNack
  5820 ;; This function is called by:
  5821 ;;		_I2C_DO_RX
  5822 ;;		_I2C_MasterFsm
  5823 ;; This function uses a non-reentrant model
  5824 ;;
  5825                           
  5826                           
  5827                           ;psect for function _I2C_DO_RX_NACK_STOP
  5828  05E8                     _I2C_DO_RX_NACK_STOP:
  5829                           
  5830                           ;mcc_generated_files/i2c_master.c: 484:     I2C_MasterSendNack();
  5831                           
  5832                           ;incstack = 0
  5833                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  5834  05E8  3186  2604         	fcall	_I2C_MasterSendNack
  5835                           
  5836                           ;mcc_generated_files/i2c_master.c: 485:     return I2C_SEND_STOP;
  5837  05EA  300A               	movlw	10
  5838  05EB  0008               	return
  5839  05EC                     __end_of_I2C_DO_RX_NACK_STOP:
  5840                           
  5841                           	psect	text34
  5842  05EC                     __ptext34:	
  5843 ;; *************** function _I2C_DO_RX_ACK *****************
  5844 ;; Defined at:
  5845 ;;		line 475 in file "mcc_generated_files/i2c_master.c"
  5846 ;; Parameters:    Size  Location     Type
  5847 ;;		None
  5848 ;; Auto vars:     Size  Location     Type
  5849 ;;		None
  5850 ;; Return value:  Size  Location     Type
  5851 ;;                  1    wreg      enum E3874
  5852 ;; Registers used:
  5853 ;;		wreg, status,2, status,0, pclath, cstack
  5854 ;; Tracked objects:
  5855 ;;		On entry : 0/0
  5856 ;;		On exit  : 0/0
  5857 ;;		Unchanged: 0/0
  5858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5859 ;;      Params:         0       0       0       0       0       0       0       0
  5860 ;;      Locals:         0       0       0       0       0       0       0       0
  5861 ;;      Temps:          0       0       0       0       0       0       0       0
  5862 ;;      Totals:         0       0       0       0       0       0       0       0
  5863 ;;Total ram usage:        0 bytes
  5864 ;; Hardware stack levels used:    1
  5865 ;; Hardware stack levels required when called:    6
  5866 ;; This function calls:
  5867 ;;		_I2C_MasterSendAck
  5868 ;; This function is called by:
  5869 ;;		_I2C_MasterFsm
  5870 ;; This function uses a non-reentrant model
  5871 ;;
  5872                           
  5873                           
  5874                           ;psect for function _I2C_DO_RX_ACK
  5875  05EC                     _I2C_DO_RX_ACK:
  5876                           
  5877                           ;mcc_generated_files/i2c_master.c: 477:     I2C_MasterSendAck();
  5878                           
  5879                           ;incstack = 0
  5880                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
  5881  05EC  3186  2600         	fcall	_I2C_MasterSendAck
  5882                           
  5883                           ;mcc_generated_files/i2c_master.c: 478:     return I2C_RCEN;
  5884  05EE  3005               	movlw	5
  5885  05EF  0008               	return
  5886  05F0                     __end_of_I2C_DO_RX_ACK:
  5887                           
  5888                           	psect	text35
  5889  05F0                     __ptext35:	
  5890 ;; *************** function _I2C_DO_SEND_STOP *****************
  5891 ;; Defined at:
  5892 ;;		line 469 in file "mcc_generated_files/i2c_master.c"
  5893 ;; Parameters:    Size  Location     Type
  5894 ;;		None
  5895 ;; Auto vars:     Size  Location     Type
  5896 ;;		None
  5897 ;; Return value:  Size  Location     Type
  5898 ;;                  1    wreg      enum E3874
  5899 ;; Registers used:
  5900 ;;		wreg, status,2, status,0, pclath, cstack
  5901 ;; Tracked objects:
  5902 ;;		On entry : 0/0
  5903 ;;		On exit  : 0/0
  5904 ;;		Unchanged: 0/0
  5905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5906 ;;      Params:         0       0       0       0       0       0       0       0
  5907 ;;      Locals:         0       0       0       0       0       0       0       0
  5908 ;;      Temps:          0       0       0       0       0       0       0       0
  5909 ;;      Totals:         0       0       0       0       0       0       0       0
  5910 ;;Total ram usage:        0 bytes
  5911 ;; Hardware stack levels used:    1
  5912 ;; Hardware stack levels required when called:    6
  5913 ;; This function calls:
  5914 ;;		_I2C_MasterStop
  5915 ;; This function is called by:
  5916 ;;		_I2C_DO_TX
  5917 ;;		_I2C_DO_TX_EMPTY
  5918 ;;		_I2C_DO_ADDRESS_NACK
  5919 ;;		_I2C_MasterFsm
  5920 ;; This function uses a non-reentrant model
  5921 ;;
  5922                           
  5923                           
  5924                           ;psect for function _I2C_DO_SEND_STOP
  5925  05F0                     _I2C_DO_SEND_STOP:
  5926                           
  5927                           ;mcc_generated_files/i2c_master.c: 471:     I2C_MasterStop();
  5928                           
  5929                           ;incstack = 0
  5930                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  5931  05F0  3186  2611         	fcall	_I2C_MasterStop
  5932                           
  5933                           ;mcc_generated_files/i2c_master.c: 472:     return I2C_IDLE;
  5934  05F2  3000               	movlw	0
  5935  05F3  0008               	return
  5936  05F4                     __end_of_I2C_DO_SEND_STOP:
  5937                           
  5938                           	psect	text36
  5939  05F4                     __ptext36:	
  5940 ;; *************** function _I2C_DO_SEND_RESTART *****************
  5941 ;; Defined at:
  5942 ;;		line 463 in file "mcc_generated_files/i2c_master.c"
  5943 ;; Parameters:    Size  Location     Type
  5944 ;;		None
  5945 ;; Auto vars:     Size  Location     Type
  5946 ;;		None
  5947 ;; Return value:  Size  Location     Type
  5948 ;;                  1    wreg      enum E3874
  5949 ;; Registers used:
  5950 ;;		wreg, status,2, status,0, pclath, cstack
  5951 ;; Tracked objects:
  5952 ;;		On entry : 0/0
  5953 ;;		On exit  : 0/0
  5954 ;;		Unchanged: 0/0
  5955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5956 ;;      Params:         0       0       0       0       0       0       0       0
  5957 ;;      Locals:         0       0       0       0       0       0       0       0
  5958 ;;      Temps:          0       0       0       0       0       0       0       0
  5959 ;;      Totals:         0       0       0       0       0       0       0       0
  5960 ;;Total ram usage:        0 bytes
  5961 ;; Hardware stack levels used:    1
  5962 ;; Hardware stack levels required when called:    6
  5963 ;; This function calls:
  5964 ;;		_I2C_MasterEnableRestart
  5965 ;; This function is called by:
  5966 ;;		_I2C_DO_TX_EMPTY
  5967 ;;		_I2C_DO_ADDRESS_NACK
  5968 ;;		_I2C_MasterFsm
  5969 ;; This function uses a non-reentrant model
  5970 ;;
  5971                           
  5972                           
  5973                           ;psect for function _I2C_DO_SEND_RESTART
  5974  05F4                     _I2C_DO_SEND_RESTART:
  5975                           
  5976                           ;mcc_generated_files/i2c_master.c: 465:     I2C_MasterEnableRestart();
  5977                           
  5978                           ;incstack = 0
  5979                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  5980  05F4  3186  2614         	fcall	_I2C_MasterEnableRestart
  5981                           
  5982                           ;mcc_generated_files/i2c_master.c: 466:     return I2C_SEND_ADR_READ;
  5983  05F6  3001               	movlw	1
  5984  05F7  0008               	return
  5985  05F8                     __end_of_I2C_DO_SEND_RESTART:
  5986                           
  5987                           	psect	text37
  5988  05F8                     __ptext37:	
  5989 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  5990 ;; Defined at:
  5991 ;;		line 456 in file "mcc_generated_files/i2c_master.c"
  5992 ;; Parameters:    Size  Location     Type
  5993 ;;		None
  5994 ;; Auto vars:     Size  Location     Type
  5995 ;;		None
  5996 ;; Return value:  Size  Location     Type
  5997 ;;                  1    wreg      enum E3874
  5998 ;; Registers used:
  5999 ;;		wreg, status,2, status,0, pclath, cstack
  6000 ;; Tracked objects:
  6001 ;;		On entry : 0/0
  6002 ;;		On exit  : 0/0
  6003 ;;		Unchanged: 0/0
  6004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6005 ;;      Params:         0       0       0       0       0       0       0       0
  6006 ;;      Locals:         0       0       0       0       0       0       0       0
  6007 ;;      Temps:          0       0       0       0       0       0       0       0
  6008 ;;      Totals:         0       0       0       0       0       0       0       0
  6009 ;;Total ram usage:        0 bytes
  6010 ;; Hardware stack levels used:    1
  6011 ;; Hardware stack levels required when called:    6
  6012 ;; This function calls:
  6013 ;;		_I2C_MasterEnableRestart
  6014 ;; This function is called by:
  6015 ;;		_I2C_DO_TX
  6016 ;;		_I2C_MasterFsm
  6017 ;; This function uses a non-reentrant model
  6018 ;;
  6019                           
  6020                           
  6021                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
  6022  05F8                     _I2C_DO_SEND_RESTART_WRITE:
  6023                           
  6024                           ;mcc_generated_files/i2c_master.c: 458:     I2C_MasterEnableRestart();
  6025                           
  6026                           ;incstack = 0
  6027                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  6028  05F8  3186  2614         	fcall	_I2C_MasterEnableRestart
  6029                           
  6030                           ;mcc_generated_files/i2c_master.c: 459:     return I2C_SEND_ADR_WRITE;
  6031  05FA  3002               	movlw	2
  6032  05FB  0008               	return
  6033  05FC                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  6034                           
  6035                           	psect	text38
  6036  05FC                     __ptext38:	
  6037 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  6038 ;; Defined at:
  6039 ;;		line 450 in file "mcc_generated_files/i2c_master.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;		None
  6042 ;; Auto vars:     Size  Location     Type
  6043 ;;		None
  6044 ;; Return value:  Size  Location     Type
  6045 ;;                  1    wreg      enum E3874
  6046 ;; Registers used:
  6047 ;;		wreg, status,2, status,0, pclath, cstack
  6048 ;; Tracked objects:
  6049 ;;		On entry : 0/0
  6050 ;;		On exit  : 0/0
  6051 ;;		Unchanged: 0/0
  6052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6053 ;;      Params:         0       0       0       0       0       0       0       0
  6054 ;;      Locals:         0       0       0       0       0       0       0       0
  6055 ;;      Temps:          0       0       0       0       0       0       0       0
  6056 ;;      Totals:         0       0       0       0       0       0       0       0
  6057 ;;Total ram usage:        0 bytes
  6058 ;; Hardware stack levels used:    1
  6059 ;; Hardware stack levels required when called:    6
  6060 ;; This function calls:
  6061 ;;		_I2C_MasterEnableRestart
  6062 ;; This function is called by:
  6063 ;;		_I2C_DO_TX
  6064 ;;		_I2C_MasterFsm
  6065 ;; This function uses a non-reentrant model
  6066 ;;
  6067                           
  6068                           
  6069                           ;psect for function _I2C_DO_SEND_RESTART_READ
  6070  05FC                     _I2C_DO_SEND_RESTART_READ:
  6071                           
  6072                           ;mcc_generated_files/i2c_master.c: 452:     I2C_MasterEnableRestart();
  6073                           
  6074                           ;incstack = 0
  6075                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
  6076  05FC  3186  2614         	fcall	_I2C_MasterEnableRestart
  6077                           
  6078                           ;mcc_generated_files/i2c_master.c: 453:     return I2C_SEND_ADR_READ;
  6079  05FE  3001               	movlw	1
  6080  05FF  0008               	return
  6081  0600                     __end_of_I2C_DO_SEND_RESTART_READ:
  6082                           
  6083                           	psect	text39
  6084  05B2                     __ptext39:	
  6085 ;; *************** function _I2C_DO_RCEN *****************
  6086 ;; Defined at:
  6087 ;;		line 402 in file "mcc_generated_files/i2c_master.c"
  6088 ;; Parameters:    Size  Location     Type
  6089 ;;		None
  6090 ;; Auto vars:     Size  Location     Type
  6091 ;;		None
  6092 ;; Return value:  Size  Location     Type
  6093 ;;                  1    wreg      enum E3874
  6094 ;; Registers used:
  6095 ;;		wreg, status,2, status,0, pclath, cstack
  6096 ;; Tracked objects:
  6097 ;;		On entry : 0/0
  6098 ;;		On exit  : 0/0
  6099 ;;		Unchanged: 0/0
  6100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6101 ;;      Params:         0       0       0       0       0       0       0       0
  6102 ;;      Locals:         0       0       0       0       0       0       0       0
  6103 ;;      Temps:          0       0       0       0       0       0       0       0
  6104 ;;      Totals:         0       0       0       0       0       0       0       0
  6105 ;;Total ram usage:        0 bytes
  6106 ;; Hardware stack levels used:    1
  6107 ;; Hardware stack levels required when called:    6
  6108 ;; This function calls:
  6109 ;;		_I2C_MasterStartRx
  6110 ;; This function is called by:
  6111 ;;		_I2C_MasterFsm
  6112 ;; This function uses a non-reentrant model
  6113 ;;
  6114                           
  6115                           
  6116                           ;psect for function _I2C_DO_RCEN
  6117  05B2                     _I2C_DO_RCEN:
  6118                           
  6119                           ;mcc_generated_files/i2c_master.c: 404:     I2C_Status.addressNackCheck = 0;
  6120                           
  6121                           ;incstack = 0
  6122                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
  6123  05B2  0020               	movlb	0	; select bank0
  6124  05B3  103C               	bcf	_I2C_Status+28,0
  6125                           
  6126                           ;mcc_generated_files/i2c_master.c: 405:     I2C_MasterStartRx();
  6127  05B4  3186  260E         	fcall	_I2C_MasterStartRx
  6128                           
  6129                           ;mcc_generated_files/i2c_master.c: 406:     return I2C_RX;
  6130  05B6  3004               	movlw	4
  6131  05B7  0008               	return
  6132  05B8                     __end_of_I2C_DO_RCEN:
  6133                           
  6134                           	psect	text40
  6135  01BD                     __ptext40:	
  6136 ;; *************** function _I2C_DO_RX *****************
  6137 ;; Defined at:
  6138 ;;		line 378 in file "mcc_generated_files/i2c_master.c"
  6139 ;; Parameters:    Size  Location     Type
  6140 ;;		None
  6141 ;; Auto vars:     Size  Location     Type
  6142 ;;		None
  6143 ;; Return value:  Size  Location     Type
  6144 ;;                  1    wreg      enum E3874
  6145 ;; Registers used:
  6146 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6147 ;; Tracked objects:
  6148 ;;		On entry : 0/0
  6149 ;;		On exit  : 0/0
  6150 ;;		Unchanged: 0/0
  6151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6152 ;;      Params:         0       0       0       0       0       0       0       0
  6153 ;;      Locals:         0       0       0       0       0       0       0       0
  6154 ;;      Temps:          0       3       0       0       0       0       0       0
  6155 ;;      Totals:         0       3       0       0       0       0       0       0
  6156 ;;Total ram usage:        3 bytes
  6157 ;; Hardware stack levels used:    1
  6158 ;; Hardware stack levels required when called:    8
  6159 ;; This function calls:
  6160 ;;		Absolute function
  6161 ;;		_I2C_CallbackReturnReset
  6162 ;;		_I2C_CallbackReturnStop
  6163 ;;		_I2C_DO_RX_NACK_RESTART
  6164 ;;		_I2C_DO_RX_NACK_STOP
  6165 ;;		_I2C_MasterGetRxData
  6166 ;;		_I2C_MasterSendAck
  6167 ;;		_rd1RegCompleteHandler
  6168 ;;		_rd2RegCompleteHandler
  6169 ;;		_rdBlkRegCompleteHandler
  6170 ;;		_wr1RegCompleteHandler
  6171 ;;		_wr2RegCompleteHandler
  6172 ;; This function is called by:
  6173 ;;		_I2C_MasterFsm
  6174 ;; This function uses a non-reentrant model
  6175 ;;
  6176                           
  6177                           
  6178                           ;psect for function _I2C_DO_RX
  6179  01BD                     _I2C_DO_RX:
  6180                           
  6181                           ;mcc_generated_files/i2c_master.c: 380:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  6182                           
  6183                           ;incstack = 0
  6184                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6185  01BD  3186  260B  3181   	fcall	_I2C_MasterGetRxData
  6186  01C0  0020               	movlb	0	; select bank0
  6187  01C1  00DD               	movwf	??_I2C_DO_RX
  6188  01C2  0837               	movf	low ((_I2C_Status| 0+23)),w
  6189  01C3  0086               	movwf	6
  6190  01C4  0187               	clrf	7
  6191  01C5  085D               	movf	??_I2C_DO_RX,w
  6192  01C6  0081               	movwf	1
  6193  01C7  3001               	movlw	1
  6194  01C8  00DD               	movwf	??_I2C_DO_RX
  6195  01C9  085D               	movf	??_I2C_DO_RX,w
  6196  01CA  07B7               	addwf	low ((_I2C_Status| 0+23)),f
  6197                           
  6198                           ;mcc_generated_files/i2c_master.c: 381:     if(--I2C_Status.data_length)
  6199  01CB  3001               	movlw	1
  6200  01CC  02B8               	subwf	_I2C_Status+24,f
  6201  01CD  3000               	movlw	0
  6202  01CE  3BB9               	subwfb	_I2C_Status+25,f
  6203  01CF  0838               	movf	_I2C_Status+24,w
  6204  01D0  0439               	iorwf	_I2C_Status+25,w
  6205  01D1  1903               	btfsc	3,2
  6206  01D2  29D7               	goto	l494
  6207                           
  6208                           ;mcc_generated_files/i2c_master.c: 382:     {;mcc_generated_files/i2c_master.c: 383:    
      +                               I2C_MasterSendAck();
  6209  01D3  3186  2600         	fcall	_I2C_MasterSendAck
  6210                           
  6211                           ;mcc_generated_files/i2c_master.c: 384:         return I2C_RCEN;
  6212  01D5  3005               	movlw	5
  6213  01D6  0008               	return
  6214  01D7                     l494:	
  6215                           ;mcc_generated_files/i2c_master.c: 386:     else
  6216                           
  6217                           
  6218                           ;mcc_generated_files/i2c_master.c: 387:     {;mcc_generated_files/i2c_master.c: 388:    
      +                               I2C_Status.bufferFree = 1;
  6219  01D7  15BC               	bsf	_I2C_Status+28,3
  6220                           
  6221                           ;mcc_generated_files/i2c_master.c: 389:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  6222  01D8  29DF               	goto	l3362
  6223  01D9                     l3352:
  6224                           
  6225                           ;mcc_generated_files/i2c_master.c: 393:                 return I2C_DO_RX_NACK_RESTART();
  6226  01D9  3185  25E4         	fcall	_I2C_DO_RX_NACK_RESTART
  6227  01DB  0008               	return
  6228  01DC                     l3356:
  6229                           
  6230                           ;mcc_generated_files/i2c_master.c: 397:                 return I2C_DO_RX_NACK_STOP();
  6231  01DC  3185  25E8         	fcall	_I2C_DO_RX_NACK_STOP
  6232  01DE  0008               	return
  6233  01DF                     l3362:
  6234  01DF  082C               	movf	low ((_I2C_Status| 0+12)),w
  6235  01E0  00DD               	movwf	??_I2C_DO_RX
  6236  01E1  085D               	movf	??_I2C_DO_RX,w
  6237  01E2  00DC               	movwf	I2C_CallbackReturnReset@funPtr
  6238  01E3  0821               	movf	_I2C_Status+1,w
  6239  01E4  008A               	movwf	10
  6240  01E5  0820               	movf	_I2C_Status,w
  6241  01E6  000A               	callw
  6242  01E7  3181               	pagesel	$
  6243  01E8  0020               	movlb	0	; select bank0
  6244  01E9  00DE               	movwf	??_I2C_DO_RX+1
  6245  01EA  01DF               	clrf	??_I2C_DO_RX+2
  6246                           
  6247                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6248                           ; Switch size 1, requested type "simple"
  6249                           ; Number of cases is 1, Range of values is 0 to 0
  6250                           ; switch strategies available:
  6251                           ; Name         Instructions Cycles
  6252                           ; simple_byte            4     3 (average)
  6253                           ; direct_byte            8     6 (fixed)
  6254                           ; jumptable            260     6 (fixed)
  6255                           ;	Chosen strategy is simple_byte
  6256  01EB  085F               	movf	??_I2C_DO_RX+2,w
  6257  01EC  3A00               	xorlw	0	; case 0
  6258  01ED  1903               	skipnz
  6259  01EE  29F0               	goto	l3976
  6260  01EF  29DC               	goto	l3356
  6261  01F0                     l3976:
  6262                           
  6263                           ; Switch size 1, requested type "simple"
  6264                           ; Number of cases is 4, Range of values is 1 to 4
  6265                           ; switch strategies available:
  6266                           ; Name         Instructions Cycles
  6267                           ; simple_byte           13     7 (average)
  6268                           ; direct_byte           17     9 (fixed)
  6269                           ; jumptable            263     9 (fixed)
  6270                           ;	Chosen strategy is simple_byte
  6271  01F0  085E               	movf	??_I2C_DO_RX+1,w
  6272  01F1  3A01               	xorlw	1	; case 1
  6273  01F2  1903               	skipnz
  6274  01F3  29DC               	goto	l3356
  6275  01F4  3A03               	xorlw	3	; case 2
  6276  01F5  1903               	skipnz
  6277  01F6  29D9               	goto	l3352
  6278  01F7  3A01               	xorlw	1	; case 3
  6279  01F8  1903               	skipnz
  6280  01F9  29D9               	goto	l3352
  6281  01FA  3A07               	xorlw	7	; case 4
  6282  01FB  1903               	skipnz
  6283  01FC  29DC               	goto	l3356
  6284  01FD  29DC               	goto	l3356
  6285  01FE  0008               	return
  6286  01FF                     __end_of_I2C_DO_RX:
  6287                           
  6288                           	psect	text41
  6289  016E                     __ptext41:	
  6290 ;; *************** function _I2C_DO_TX *****************
  6291 ;; Defined at:
  6292 ;;		line 354 in file "mcc_generated_files/i2c_master.c"
  6293 ;; Parameters:    Size  Location     Type
  6294 ;;		None
  6295 ;; Auto vars:     Size  Location     Type
  6296 ;;		None
  6297 ;; Return value:  Size  Location     Type
  6298 ;;                  1    wreg      enum E3874
  6299 ;; Registers used:
  6300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6301 ;; Tracked objects:
  6302 ;;		On entry : 0/0
  6303 ;;		On exit  : 0/0
  6304 ;;		Unchanged: 0/0
  6305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6306 ;;      Params:         0       0       0       0       0       0       0       0
  6307 ;;      Locals:         0       0       0       0       0       0       0       0
  6308 ;;      Temps:          0       3       0       0       0       0       0       0
  6309 ;;      Totals:         0       3       0       0       0       0       0       0
  6310 ;;Total ram usage:        3 bytes
  6311 ;; Hardware stack levels used:    1
  6312 ;; Hardware stack levels required when called:    8
  6313 ;; This function calls:
  6314 ;;		Absolute function
  6315 ;;		_I2C_CallbackReturnReset
  6316 ;;		_I2C_CallbackReturnStop
  6317 ;;		_I2C_DO_SEND_RESTART_READ
  6318 ;;		_I2C_DO_SEND_RESTART_WRITE
  6319 ;;		_I2C_DO_SEND_STOP
  6320 ;;		_I2C_MasterIsNack
  6321 ;;		_I2C_MasterSendTxData
  6322 ;;		_rd1RegCompleteHandler
  6323 ;;		_rd2RegCompleteHandler
  6324 ;;		_rdBlkRegCompleteHandler
  6325 ;;		_wr1RegCompleteHandler
  6326 ;;		_wr2RegCompleteHandler
  6327 ;; This function is called by:
  6328 ;;		_I2C_MasterFsm
  6329 ;; This function uses a non-reentrant model
  6330 ;;
  6331                           
  6332                           
  6333                           ;psect for function _I2C_DO_TX
  6334  016E                     _I2C_DO_TX:
  6335                           
  6336                           ;mcc_generated_files/i2c_master.c: 356:     if(I2C_MasterIsNack())
  6337                           
  6338                           ;incstack = 0
  6339                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6340  016E  3185  25B8  3181   	fcall	_I2C_MasterIsNack
  6341  0171  3A00               	xorlw	0
  6342  0172  1D03               	btfss	3,2
  6343  0173  297E               	goto	l3322
  6344  0174  29A2               	goto	l478
  6345  0175                     l3308:
  6346                           
  6347                           ;mcc_generated_files/i2c_master.c: 361:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
  6348  0175  3185  25FC         	fcall	_I2C_DO_SEND_RESTART_READ
  6349  0177  0008               	return
  6350  0178                     l3312:
  6351                           
  6352                           ;mcc_generated_files/i2c_master.c: 363:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
  6353  0178  3185  25F8         	fcall	_I2C_DO_SEND_RESTART_WRITE
  6354  017A  0008               	return
  6355  017B                     l3316:
  6356                           
  6357                           ;mcc_generated_files/i2c_master.c: 367:                 return I2C_DO_SEND_STOP();
  6358  017B  3185  25F0         	fcall	_I2C_DO_SEND_STOP
  6359  017D  0008               	return
  6360  017E                     l3322:
  6361  017E  0020               	movlb	0	; select bank0
  6362  017F  082F               	movf	low ((_I2C_Status| 0+15)),w
  6363  0180  00DD               	movwf	??_I2C_DO_TX
  6364  0181  085D               	movf	??_I2C_DO_TX,w
  6365  0182  00DC               	movwf	I2C_CallbackReturnReset@funPtr
  6366  0183  3006               	movlw	6
  6367  0184  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  6368  0185  0086               	movwf	6
  6369  0186  0187               	clrf	7
  6370  0187  3F41               	moviw [1]fsr1
  6371  0188  008A               	movwf	10
  6372  0189  3F40               	moviw [0]fsr1
  6373  018A  000A               	callw
  6374  018B  3181               	pagesel	$
  6375  018C  0020               	movlb	0	; select bank0
  6376  018D  00DE               	movwf	??_I2C_DO_TX+1
  6377  018E  01DF               	clrf	??_I2C_DO_TX+2
  6378                           
  6379                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6380                           ; Switch size 1, requested type "simple"
  6381                           ; Number of cases is 1, Range of values is 0 to 0
  6382                           ; switch strategies available:
  6383                           ; Name         Instructions Cycles
  6384                           ; simple_byte            4     3 (average)
  6385                           ; direct_byte            8     6 (fixed)
  6386                           ; jumptable            260     6 (fixed)
  6387                           ;	Chosen strategy is simple_byte
  6388  018F  085F               	movf	??_I2C_DO_TX+2,w
  6389  0190  3A00               	xorlw	0	; case 0
  6390  0191  1903               	skipnz
  6391  0192  2994               	goto	l3978
  6392  0193  297B               	goto	l3316
  6393  0194                     l3978:
  6394                           
  6395                           ; Switch size 1, requested type "simple"
  6396                           ; Number of cases is 4, Range of values is 1 to 4
  6397                           ; switch strategies available:
  6398                           ; Name         Instructions Cycles
  6399                           ; simple_byte           13     7 (average)
  6400                           ; direct_byte           17     9 (fixed)
  6401                           ; jumptable            263     9 (fixed)
  6402                           ;	Chosen strategy is simple_byte
  6403  0194  085E               	movf	??_I2C_DO_TX+1,w
  6404  0195  3A01               	xorlw	1	; case 1
  6405  0196  1903               	skipnz
  6406  0197  297B               	goto	l3316
  6407  0198  3A03               	xorlw	3	; case 2
  6408  0199  1903               	skipnz
  6409  019A  2975               	goto	l3308
  6410  019B  3A01               	xorlw	1	; case 3
  6411  019C  1903               	skipnz
  6412  019D  2978               	goto	l3312
  6413  019E  3A07               	xorlw	7	; case 4
  6414  019F  1903               	skipnz
  6415  01A0  297B               	goto	l3316
  6416  01A1  297B               	goto	l3316
  6417  01A2                     l478:	
  6418                           ;mcc_generated_files/i2c_master.c: 370:     else
  6419                           
  6420                           
  6421                           ;mcc_generated_files/i2c_master.c: 371:     {;mcc_generated_files/i2c_master.c: 372:    
      +                               I2C_Status.addressNackCheck = 0;
  6422  01A2  0020               	movlb	0	; select bank0
  6423  01A3  103C               	bcf	_I2C_Status+28,0
  6424                           
  6425                           ;mcc_generated_files/i2c_master.c: 373:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
  6426  01A4  3017               	movlw	23
  6427  01A5  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  6428  01A6  0086               	movwf	6
  6429  01A7  0187               	clrf	7
  6430  01A8  3F40               	moviw [0]fsr1
  6431  01A9  0084               	movwf	4
  6432  01AA  0185               	clrf	5
  6433  01AB  0A81               	incf	1,f
  6434  01AC  0800               	movf	0,w
  6435  01AD  3185  25BE  3181   	fcall	_I2C_MasterSendTxData
  6436                           
  6437                           ;mcc_generated_files/i2c_master.c: 374:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
  6438  01B0  3001               	movlw	1
  6439  01B1  0020               	movlb	0	; select bank0
  6440  01B2  02B8               	subwf	_I2C_Status+24,f
  6441  01B3  3000               	movlw	0
  6442  01B4  3BB9               	subwfb	_I2C_Status+25,f
  6443  01B5  0838               	movf	_I2C_Status+24,w
  6444  01B6  0439               	iorwf	_I2C_Status+25,w
  6445  01B7  1D03               	btfss	3,2
  6446  01B8  29BB               	goto	l3330
  6447  01B9  3006               	movlw	6
  6448  01BA  0008               	return
  6449  01BB                     l3330:
  6450  01BB  3003               	movlw	3
  6451  01BC  0008               	return
  6452  01BD                     __end_of_I2C_DO_TX:
  6453                           
  6454                           	psect	text42
  6455  0599                     __ptext42:	
  6456 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  6457 ;; Defined at:
  6458 ;;		line 347 in file "mcc_generated_files/i2c_master.c"
  6459 ;; Parameters:    Size  Location     Type
  6460 ;;		None
  6461 ;; Auto vars:     Size  Location     Type
  6462 ;;		None
  6463 ;; Return value:  Size  Location     Type
  6464 ;;                  1    wreg      enum E3874
  6465 ;; Registers used:
  6466 ;;		wreg, status,2, status,0, pclath, cstack
  6467 ;; Tracked objects:
  6468 ;;		On entry : 0/0
  6469 ;;		On exit  : 0/0
  6470 ;;		Unchanged: 0/0
  6471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6472 ;;      Params:         0       0       0       0       0       0       0       0
  6473 ;;      Locals:         0       0       0       0       0       0       0       0
  6474 ;;      Temps:          0       0       0       0       0       0       0       0
  6475 ;;      Totals:         0       0       0       0       0       0       0       0
  6476 ;;Total ram usage:        0 bytes
  6477 ;; Hardware stack levels used:    1
  6478 ;; Hardware stack levels required when called:    6
  6479 ;; This function calls:
  6480 ;;		_I2C_MasterSendTxData
  6481 ;; This function is called by:
  6482 ;;		_I2C_MasterFsm
  6483 ;; This function uses a non-reentrant model
  6484 ;;
  6485                           
  6486                           
  6487                           ;psect for function _I2C_DO_SEND_ADR_WRITE
  6488  0599                     _I2C_DO_SEND_ADR_WRITE:
  6489                           
  6490                           ;mcc_generated_files/i2c_master.c: 349:     I2C_Status.addressNackCheck = 1;
  6491                           
  6492                           ;incstack = 0
  6493                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  6494  0599  0020               	movlb	0	; select bank0
  6495  059A  143C               	bsf	_I2C_Status+28,0
  6496                           
  6497                           ;mcc_generated_files/i2c_master.c: 350:     I2C_MasterSendTxData(I2C_Status.address << 1
      +                          );
  6498  059B  3536               	lslf	_I2C_Status+22,w
  6499  059C  3185  25BE         	fcall	_I2C_MasterSendTxData
  6500                           
  6501                           ;mcc_generated_files/i2c_master.c: 351:     return I2C_TX;
  6502  059E  3003               	movlw	3
  6503  059F  0008               	return
  6504  05A0                     __end_of_I2C_DO_SEND_ADR_WRITE:
  6505                           
  6506                           	psect	text43
  6507  0591                     __ptext43:	
  6508 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  6509 ;; Defined at:
  6510 ;;		line 340 in file "mcc_generated_files/i2c_master.c"
  6511 ;; Parameters:    Size  Location     Type
  6512 ;;		None
  6513 ;; Auto vars:     Size  Location     Type
  6514 ;;		None
  6515 ;; Return value:  Size  Location     Type
  6516 ;;                  1    wreg      enum E3874
  6517 ;; Registers used:
  6518 ;;		wreg, status,2, status,0, pclath, cstack
  6519 ;; Tracked objects:
  6520 ;;		On entry : 0/0
  6521 ;;		On exit  : 0/0
  6522 ;;		Unchanged: 0/0
  6523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6524 ;;      Params:         0       0       0       0       0       0       0       0
  6525 ;;      Locals:         0       0       0       0       0       0       0       0
  6526 ;;      Temps:          0       0       0       0       0       0       0       0
  6527 ;;      Totals:         0       0       0       0       0       0       0       0
  6528 ;;Total ram usage:        0 bytes
  6529 ;; Hardware stack levels used:    1
  6530 ;; Hardware stack levels required when called:    6
  6531 ;; This function calls:
  6532 ;;		_I2C_MasterSendTxData
  6533 ;; This function is called by:
  6534 ;;		_I2C_MasterFsm
  6535 ;; This function uses a non-reentrant model
  6536 ;;
  6537                           
  6538                           
  6539                           ;psect for function _I2C_DO_SEND_ADR_READ
  6540  0591                     _I2C_DO_SEND_ADR_READ:
  6541                           
  6542                           ;mcc_generated_files/i2c_master.c: 342:     I2C_Status.addressNackCheck = 1;
  6543                           
  6544                           ;incstack = 0
  6545                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  6546  0591  0020               	movlb	0	; select bank0
  6547  0592  143C               	bsf	_I2C_Status+28,0
  6548                           
  6549                           ;mcc_generated_files/i2c_master.c: 343:     I2C_MasterSendTxData(I2C_Status.address << 1
      +                           | 1);
  6550  0593  1403               	setc
  6551  0594  0D36               	rlf	_I2C_Status+22,w
  6552  0595  3185  25BE         	fcall	_I2C_MasterSendTxData
  6553                           
  6554                           ;mcc_generated_files/i2c_master.c: 344:     return I2C_RCEN;
  6555  0597  3005               	movlw	5
  6556  0598  0008               	return
  6557  0599                     __end_of_I2C_DO_SEND_ADR_READ:
  6558                           
  6559                           	psect	text44
  6560  05CF                     __ptext44:	
  6561 ;; *************** function _I2C_DO_IDLE *****************
  6562 ;; Defined at:
  6563 ;;		line 333 in file "mcc_generated_files/i2c_master.c"
  6564 ;; Parameters:    Size  Location     Type
  6565 ;;		None
  6566 ;; Auto vars:     Size  Location     Type
  6567 ;;		None
  6568 ;; Return value:  Size  Location     Type
  6569 ;;                  1    wreg      enum E3874
  6570 ;; Registers used:
  6571 ;;		wreg, status,2
  6572 ;; Tracked objects:
  6573 ;;		On entry : 0/0
  6574 ;;		On exit  : 0/0
  6575 ;;		Unchanged: 0/0
  6576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6577 ;;      Params:         0       0       0       0       0       0       0       0
  6578 ;;      Locals:         0       0       0       0       0       0       0       0
  6579 ;;      Temps:          0       0       0       0       0       0       0       0
  6580 ;;      Totals:         0       0       0       0       0       0       0       0
  6581 ;;Total ram usage:        0 bytes
  6582 ;; Hardware stack levels used:    1
  6583 ;; Hardware stack levels required when called:    5
  6584 ;; This function calls:
  6585 ;;		Nothing
  6586 ;; This function is called by:
  6587 ;;		_I2C_MasterFsm
  6588 ;; This function uses a non-reentrant model
  6589 ;;
  6590                           
  6591                           
  6592                           ;psect for function _I2C_DO_IDLE
  6593  05CF                     _I2C_DO_IDLE:
  6594                           
  6595                           ;mcc_generated_files/i2c_master.c: 335:     I2C_Status.busy = 0;
  6596                           
  6597                           ;incstack = 0
  6598                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
  6599  05CF  0020               	movlb	0	; select bank0
  6600  05D0  10BC               	bcf	_I2C_Status+28,1
  6601                           
  6602                           ;mcc_generated_files/i2c_master.c: 336:     I2C_Status.error = I2C_NOERR;
  6603  05D1  01BB               	clrf	_I2C_Status+27
  6604                           
  6605                           ;mcc_generated_files/i2c_master.c: 337:     return I2C_RESET;
  6606  05D2  300E               	movlw	14
  6607  05D3  0008               	return
  6608  05D4                     __end_of_I2C_DO_IDLE:
  6609                           
  6610                           	psect	text45
  6611  0272                     __ptext45:	
  6612 ;; *************** function _I2C_DO_TX_EMPTY *****************
  6613 ;; Defined at:
  6614 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
  6615 ;; Parameters:    Size  Location     Type
  6616 ;;		None
  6617 ;; Auto vars:     Size  Location     Type
  6618 ;;		None
  6619 ;; Return value:  Size  Location     Type
  6620 ;;                  1    wreg      enum E3874
  6621 ;; Registers used:
  6622 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6623 ;; Tracked objects:
  6624 ;;		On entry : 0/0
  6625 ;;		On exit  : 0/0
  6626 ;;		Unchanged: 0/0
  6627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6628 ;;      Params:         0       0       0       0       0       0       0       0
  6629 ;;      Locals:         0       0       0       0       0       0       0       0
  6630 ;;      Temps:          0       3       0       0       0       0       0       0
  6631 ;;      Totals:         0       3       0       0       0       0       0       0
  6632 ;;Total ram usage:        3 bytes
  6633 ;; Hardware stack levels used:    1
  6634 ;; Hardware stack levels required when called:    8
  6635 ;; This function calls:
  6636 ;;		Absolute function
  6637 ;;		_I2C_CallbackReturnReset
  6638 ;;		_I2C_CallbackReturnStop
  6639 ;;		_I2C_DO_SEND_RESTART
  6640 ;;		_I2C_DO_SEND_STOP
  6641 ;;		_I2C_MasterSetIrq
  6642 ;;		_rd1RegCompleteHandler
  6643 ;;		_rd2RegCompleteHandler
  6644 ;;		_rdBlkRegCompleteHandler
  6645 ;;		_wr1RegCompleteHandler
  6646 ;;		_wr2RegCompleteHandler
  6647 ;; This function is called by:
  6648 ;;		_I2C_MasterFsm
  6649 ;; This function uses a non-reentrant model
  6650 ;;
  6651                           
  6652                           
  6653                           ;psect for function _I2C_DO_TX_EMPTY
  6654  0272                     _I2C_DO_TX_EMPTY:
  6655                           
  6656                           ;mcc_generated_files/i2c_master.c: 411:     I2C_Status.bufferFree = 1;
  6657                           
  6658                           ;incstack = 0
  6659                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6660  0272  0020               	movlb	0	; select bank0
  6661  0273  15BC               	bsf	_I2C_Status+28,3
  6662                           
  6663                           ;mcc_generated_files/i2c_master.c: 412:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  6664  0274  2A7F               	goto	l3394
  6665  0275                     l3378:
  6666                           
  6667                           ;mcc_generated_files/i2c_master.c: 416:             return I2C_DO_SEND_RESTART();
  6668  0275  3185  25F4         	fcall	_I2C_DO_SEND_RESTART
  6669  0277  0008               	return
  6670  0278                     l3382:
  6671                           
  6672                           ;mcc_generated_files/i2c_master.c: 418:             I2C_MasterSetIrq();
  6673  0278  3186  2608         	fcall	_I2C_MasterSetIrq
  6674                           
  6675                           ;mcc_generated_files/i2c_master.c: 419:             return I2C_TX;
  6676  027A  3003               	movlw	3
  6677  027B  0008               	return
  6678  027C                     l3388:
  6679                           
  6680                           ;mcc_generated_files/i2c_master.c: 422:             return I2C_DO_SEND_STOP();
  6681  027C  3185  25F0         	fcall	_I2C_DO_SEND_STOP
  6682  027E  0008               	return
  6683  027F                     l3394:
  6684  027F  082C               	movf	low ((_I2C_Status| 0+12)),w
  6685  0280  00DD               	movwf	??_I2C_DO_TX_EMPTY
  6686  0281  085D               	movf	??_I2C_DO_TX_EMPTY,w
  6687  0282  00DC               	movwf	I2C_CallbackReturnReset@funPtr
  6688  0283  0821               	movf	_I2C_Status+1,w
  6689  0284  008A               	movwf	10
  6690  0285  0820               	movf	_I2C_Status,w
  6691  0286  000A               	callw
  6692  0287  3182               	pagesel	$
  6693  0288  0020               	movlb	0	; select bank0
  6694  0289  00DE               	movwf	??_I2C_DO_TX_EMPTY+1
  6695  028A  01DF               	clrf	??_I2C_DO_TX_EMPTY+2
  6696                           
  6697                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6698                           ; Switch size 1, requested type "simple"
  6699                           ; Number of cases is 1, Range of values is 0 to 0
  6700                           ; switch strategies available:
  6701                           ; Name         Instructions Cycles
  6702                           ; simple_byte            4     3 (average)
  6703                           ; direct_byte            8     6 (fixed)
  6704                           ; jumptable            260     6 (fixed)
  6705                           ;	Chosen strategy is simple_byte
  6706  028B  085F               	movf	??_I2C_DO_TX_EMPTY+2,w
  6707  028C  3A00               	xorlw	0	; case 0
  6708  028D  1903               	skipnz
  6709  028E  2A90               	goto	l3980
  6710  028F  2A7C               	goto	l3388
  6711  0290                     l3980:
  6712                           
  6713                           ; Switch size 1, requested type "simple"
  6714                           ; Number of cases is 4, Range of values is 1 to 4
  6715                           ; switch strategies available:
  6716                           ; Name         Instructions Cycles
  6717                           ; simple_byte           13     7 (average)
  6718                           ; direct_byte           17     9 (fixed)
  6719                           ; jumptable            263     9 (fixed)
  6720                           ;	Chosen strategy is simple_byte
  6721  0290  085E               	movf	??_I2C_DO_TX_EMPTY+1,w
  6722  0291  3A01               	xorlw	1	; case 1
  6723  0292  1903               	skipnz
  6724  0293  2A7C               	goto	l3388
  6725  0294  3A03               	xorlw	3	; case 2
  6726  0295  1903               	skipnz
  6727  0296  2A75               	goto	l3378
  6728  0297  3A01               	xorlw	1	; case 3
  6729  0298  1903               	skipnz
  6730  0299  2A75               	goto	l3378
  6731  029A  3A07               	xorlw	7	; case 4
  6732  029B  1903               	skipnz
  6733  029C  2A78               	goto	l3382
  6734  029D  2A7C               	goto	l3388
  6735  029E  0008               	return
  6736  029F                     __end_of_I2C_DO_TX_EMPTY:
  6737                           
  6738                           	psect	text46
  6739  0608                     __ptext46:	
  6740 ;; *************** function _I2C_MasterSetIrq *****************
  6741 ;; Defined at:
  6742 ;;		line 645 in file "mcc_generated_files/i2c_master.c"
  6743 ;; Parameters:    Size  Location     Type
  6744 ;;		None
  6745 ;; Auto vars:     Size  Location     Type
  6746 ;;		None
  6747 ;; Return value:  Size  Location     Type
  6748 ;;                  1    wreg      void 
  6749 ;; Registers used:
  6750 ;;		None
  6751 ;; Tracked objects:
  6752 ;;		On entry : 0/0
  6753 ;;		On exit  : 0/0
  6754 ;;		Unchanged: 0/0
  6755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6756 ;;      Params:         0       0       0       0       0       0       0       0
  6757 ;;      Locals:         0       0       0       0       0       0       0       0
  6758 ;;      Temps:          0       0       0       0       0       0       0       0
  6759 ;;      Totals:         0       0       0       0       0       0       0       0
  6760 ;;Total ram usage:        0 bytes
  6761 ;; Hardware stack levels used:    1
  6762 ;; Hardware stack levels required when called:    5
  6763 ;; This function calls:
  6764 ;;		Nothing
  6765 ;; This function is called by:
  6766 ;;		_I2C_DO_TX_EMPTY
  6767 ;; This function uses a non-reentrant model
  6768 ;;
  6769                           
  6770                           
  6771                           ;psect for function _I2C_MasterSetIrq
  6772  0608                     _I2C_MasterSetIrq:
  6773                           
  6774                           ;mcc_generated_files/i2c_master.c: 647:     PIR1bits.SSP1IF = 1;
  6775                           
  6776                           ;incstack = 0
  6777                           ; Regs used in _I2C_MasterSetIrq: []
  6778  0608  0020               	movlb	0	; select bank0
  6779  0609  1591               	bsf	17,3	;volatile
  6780  060A  0008               	return
  6781  060B                     __end_of_I2C_MasterSetIrq:
  6782                           
  6783                           	psect	text47
  6784  05B8                     __ptext47:	
  6785 ;; *************** function _I2C_MasterIsNack *****************
  6786 ;; Defined at:
  6787 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
  6788 ;; Parameters:    Size  Location     Type
  6789 ;;		None
  6790 ;; Auto vars:     Size  Location     Type
  6791 ;;		None
  6792 ;; Return value:  Size  Location     Type
  6793 ;;                  1    wreg      _Bool 
  6794 ;; Registers used:
  6795 ;;		wreg, status,2, status,0
  6796 ;; Tracked objects:
  6797 ;;		On entry : 0/0
  6798 ;;		On exit  : 0/0
  6799 ;;		Unchanged: 0/0
  6800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6801 ;;      Params:         0       0       0       0       0       0       0       0
  6802 ;;      Locals:         0       0       0       0       0       0       0       0
  6803 ;;      Temps:          0       0       0       0       0       0       0       0
  6804 ;;      Totals:         0       0       0       0       0       0       0       0
  6805 ;;Total ram usage:        0 bytes
  6806 ;; Hardware stack levels used:    1
  6807 ;; Hardware stack levels required when called:    5
  6808 ;; This function calls:
  6809 ;;		Nothing
  6810 ;; This function is called by:
  6811 ;;		_I2C_MasterFsm
  6812 ;;		_I2C_DO_TX
  6813 ;; This function uses a non-reentrant model
  6814 ;;
  6815                           
  6816                           
  6817                           ;psect for function _I2C_MasterIsNack
  6818  05B8                     _I2C_MasterIsNack:
  6819                           
  6820                           ;mcc_generated_files/i2c_master.c: 600:     return SSP1CON2bits.ACKSTAT;
  6821                           
  6822                           ;incstack = 0
  6823                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
  6824  05B8  0024               	movlb	4	; select bank4
  6825  05B9  0E16               	swapf	22,w	;volatile
  6826  05BA  0C89               	rrf	9,f
  6827  05BB  0C89               	rrf	9,f
  6828  05BC  3901               	andlw	1
  6829  05BD  0008               	return
  6830  05BE                     __end_of_I2C_MasterIsNack:
  6831                           
  6832                           	psect	text48
  6833  05BE                     __ptext48:	
  6834 ;; *************** function _I2C_MasterSendTxData *****************
  6835 ;; Defined at:
  6836 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
  6837 ;; Parameters:    Size  Location     Type
  6838 ;;  data            1    wreg     unsigned char 
  6839 ;; Auto vars:     Size  Location     Type
  6840 ;;  data            1    0[BANK0 ] unsigned char 
  6841 ;; Return value:  Size  Location     Type
  6842 ;;                  1    wreg      void 
  6843 ;; Registers used:
  6844 ;;		wreg
  6845 ;; Tracked objects:
  6846 ;;		On entry : 0/0
  6847 ;;		On exit  : 0/0
  6848 ;;		Unchanged: 0/0
  6849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6850 ;;      Params:         0       0       0       0       0       0       0       0
  6851 ;;      Locals:         0       1       0       0       0       0       0       0
  6852 ;;      Temps:          0       0       0       0       0       0       0       0
  6853 ;;      Totals:         0       1       0       0       0       0       0       0
  6854 ;;Total ram usage:        1 bytes
  6855 ;; Hardware stack levels used:    1
  6856 ;; Hardware stack levels required when called:    5
  6857 ;; This function calls:
  6858 ;;		Nothing
  6859 ;; This function is called by:
  6860 ;;		_I2C_DO_SEND_ADR_READ
  6861 ;;		_I2C_DO_SEND_ADR_WRITE
  6862 ;;		_I2C_DO_TX
  6863 ;; This function uses a non-reentrant model
  6864 ;;
  6865                           
  6866                           
  6867                           ;psect for function _I2C_MasterSendTxData
  6868  05BE                     _I2C_MasterSendTxData:
  6869                           
  6870                           ;incstack = 0
  6871                           ; Regs used in _I2C_MasterSendTxData: [wreg]
  6872                           ;I2C_MasterSendTxData@data stored from wreg
  6873  05BE  0020               	movlb	0	; select bank0
  6874  05BF  00D3               	movwf	I2C_MasterSendTxData@data
  6875                           
  6876                           ;mcc_generated_files/i2c_master.c: 568: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 569: {;mcc_generated_files/i2c_
      +                          master.c: 570:     SSP1BUF = data;
  6877  05C0  0853               	movf	I2C_MasterSendTxData@data,w
  6878  05C1  0024               	movlb	4	; select bank4
  6879  05C2  0091               	movwf	17	;volatile
  6880  05C3  0008               	return
  6881  05C4                     __end_of_I2C_MasterSendTxData:
  6882                           
  6883                           	psect	text49
  6884  0600                     __ptext49:	
  6885 ;; *************** function _I2C_MasterSendAck *****************
  6886 ;; Defined at:
  6887 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
  6888 ;; Parameters:    Size  Location     Type
  6889 ;;		None
  6890 ;; Auto vars:     Size  Location     Type
  6891 ;;		None
  6892 ;; Return value:  Size  Location     Type
  6893 ;;                  1    wreg      void 
  6894 ;; Registers used:
  6895 ;;		None
  6896 ;; Tracked objects:
  6897 ;;		On entry : 0/0
  6898 ;;		On exit  : 0/0
  6899 ;;		Unchanged: 0/0
  6900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6901 ;;      Params:         0       0       0       0       0       0       0       0
  6902 ;;      Locals:         0       0       0       0       0       0       0       0
  6903 ;;      Temps:          0       0       0       0       0       0       0       0
  6904 ;;      Totals:         0       0       0       0       0       0       0       0
  6905 ;;Total ram usage:        0 bytes
  6906 ;; Hardware stack levels used:    1
  6907 ;; Hardware stack levels required when called:    5
  6908 ;; This function calls:
  6909 ;;		Nothing
  6910 ;; This function is called by:
  6911 ;;		_I2C_DO_RX
  6912 ;;		_I2C_DO_RX_ACK
  6913 ;; This function uses a non-reentrant model
  6914 ;;
  6915                           
  6916                           
  6917                           ;psect for function _I2C_MasterSendAck
  6918  0600                     _I2C_MasterSendAck:
  6919                           
  6920                           ;mcc_generated_files/i2c_master.c: 605:     SSP1CON2bits.ACKDT = 0;
  6921                           
  6922                           ;incstack = 0
  6923                           ; Regs used in _I2C_MasterSendAck: []
  6924  0600  0024               	movlb	4	; select bank4
  6925  0601  1296               	bcf	22,5	;volatile
  6926                           
  6927                           ;mcc_generated_files/i2c_master.c: 606:     SSP1CON2bits.ACKEN = 1;
  6928  0602  1616               	bsf	22,4	;volatile
  6929  0603  0008               	return
  6930  0604                     __end_of_I2C_MasterSendAck:
  6931                           
  6932                           	psect	text50
  6933  060B                     __ptext50:	
  6934 ;; *************** function _I2C_MasterGetRxData *****************
  6935 ;; Defined at:
  6936 ;;		line 563 in file "mcc_generated_files/i2c_master.c"
  6937 ;; Parameters:    Size  Location     Type
  6938 ;;		None
  6939 ;; Auto vars:     Size  Location     Type
  6940 ;;		None
  6941 ;; Return value:  Size  Location     Type
  6942 ;;                  1    wreg      unsigned char 
  6943 ;; Registers used:
  6944 ;;		wreg
  6945 ;; Tracked objects:
  6946 ;;		On entry : 0/0
  6947 ;;		On exit  : 0/0
  6948 ;;		Unchanged: 0/0
  6949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6950 ;;      Params:         0       0       0       0       0       0       0       0
  6951 ;;      Locals:         0       0       0       0       0       0       0       0
  6952 ;;      Temps:          0       0       0       0       0       0       0       0
  6953 ;;      Totals:         0       0       0       0       0       0       0       0
  6954 ;;Total ram usage:        0 bytes
  6955 ;; Hardware stack levels used:    1
  6956 ;; Hardware stack levels required when called:    5
  6957 ;; This function calls:
  6958 ;;		Nothing
  6959 ;; This function is called by:
  6960 ;;		_I2C_DO_RX
  6961 ;; This function uses a non-reentrant model
  6962 ;;
  6963                           
  6964                           
  6965                           ;psect for function _I2C_MasterGetRxData
  6966  060B                     _I2C_MasterGetRxData:
  6967                           
  6968                           ;mcc_generated_files/i2c_master.c: 565:     return SSP1BUF;
  6969                           
  6970                           ;incstack = 0
  6971                           ; Regs used in _I2C_MasterGetRxData: [wreg]
  6972  060B  0024               	movlb	4	; select bank4
  6973  060C  0811               	movf	17,w	;volatile
  6974  060D  0008               	return
  6975  060E                     __end_of_I2C_MasterGetRxData:
  6976                           
  6977                           	psect	text51
  6978  0604                     __ptext51:	
  6979 ;; *************** function _I2C_MasterSendNack *****************
  6980 ;; Defined at:
  6981 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
  6982 ;; Parameters:    Size  Location     Type
  6983 ;;		None
  6984 ;; Auto vars:     Size  Location     Type
  6985 ;;		None
  6986 ;; Return value:  Size  Location     Type
  6987 ;;                  1    wreg      void 
  6988 ;; Registers used:
  6989 ;;		None
  6990 ;; Tracked objects:
  6991 ;;		On entry : 0/0
  6992 ;;		On exit  : 0/0
  6993 ;;		Unchanged: 0/0
  6994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6995 ;;      Params:         0       0       0       0       0       0       0       0
  6996 ;;      Locals:         0       0       0       0       0       0       0       0
  6997 ;;      Temps:          0       0       0       0       0       0       0       0
  6998 ;;      Totals:         0       0       0       0       0       0       0       0
  6999 ;;Total ram usage:        0 bytes
  7000 ;; Hardware stack levels used:    1
  7001 ;; Hardware stack levels required when called:    5
  7002 ;; This function calls:
  7003 ;;		Nothing
  7004 ;; This function is called by:
  7005 ;;		_I2C_DO_RX_NACK_STOP
  7006 ;;		_I2C_DO_RX_NACK_RESTART
  7007 ;; This function uses a non-reentrant model
  7008 ;;
  7009                           
  7010                           
  7011                           ;psect for function _I2C_MasterSendNack
  7012  0604                     _I2C_MasterSendNack:
  7013                           
  7014                           ;mcc_generated_files/i2c_master.c: 611:     SSP1CON2bits.ACKDT = 1;
  7015                           
  7016                           ;incstack = 0
  7017                           ; Regs used in _I2C_MasterSendNack: []
  7018  0604  0024               	movlb	4	; select bank4
  7019  0605  1696               	bsf	22,5	;volatile
  7020                           
  7021                           ;mcc_generated_files/i2c_master.c: 612:     SSP1CON2bits.ACKEN = 1;
  7022  0606  1616               	bsf	22,4	;volatile
  7023  0607  0008               	return
  7024  0608                     __end_of_I2C_MasterSendNack:
  7025                           
  7026                           	psect	text52
  7027  060E                     __ptext52:	
  7028 ;; *************** function _I2C_MasterStartRx *****************
  7029 ;; Defined at:
  7030 ;;		line 583 in file "mcc_generated_files/i2c_master.c"
  7031 ;; Parameters:    Size  Location     Type
  7032 ;;		None
  7033 ;; Auto vars:     Size  Location     Type
  7034 ;;		None
  7035 ;; Return value:  Size  Location     Type
  7036 ;;                  1    wreg      void 
  7037 ;; Registers used:
  7038 ;;		None
  7039 ;; Tracked objects:
  7040 ;;		On entry : 0/0
  7041 ;;		On exit  : 0/0
  7042 ;;		Unchanged: 0/0
  7043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7044 ;;      Params:         0       0       0       0       0       0       0       0
  7045 ;;      Locals:         0       0       0       0       0       0       0       0
  7046 ;;      Temps:          0       0       0       0       0       0       0       0
  7047 ;;      Totals:         0       0       0       0       0       0       0       0
  7048 ;;Total ram usage:        0 bytes
  7049 ;; Hardware stack levels used:    1
  7050 ;; Hardware stack levels required when called:    5
  7051 ;; This function calls:
  7052 ;;		Nothing
  7053 ;; This function is called by:
  7054 ;;		_I2C_DO_RCEN
  7055 ;; This function uses a non-reentrant model
  7056 ;;
  7057                           
  7058                           
  7059                           ;psect for function _I2C_MasterStartRx
  7060  060E                     _I2C_MasterStartRx:
  7061                           
  7062                           ;mcc_generated_files/i2c_master.c: 585:     SSP1CON2bits.RCEN = 1;
  7063                           
  7064                           ;incstack = 0
  7065                           ; Regs used in _I2C_MasterStartRx: []
  7066  060E  0024               	movlb	4	; select bank4
  7067  060F  1596               	bsf	22,3	;volatile
  7068  0610  0008               	return
  7069  0611                     __end_of_I2C_MasterStartRx:
  7070                           
  7071                           	psect	text53
  7072  0625                     __ptext53:	
  7073 ;; *************** function _I2C_CallbackReturnReset *****************
  7074 ;; Defined at:
  7075 ;;		line 525 in file "mcc_generated_files/i2c_master.c"
  7076 ;; Parameters:    Size  Location     Type
  7077 ;;  funPtr          1    9[BANK0 ] PTR void 
  7078 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7079 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7080 ;; Auto vars:     Size  Location     Type
  7081 ;;		None
  7082 ;; Return value:  Size  Location     Type
  7083 ;;                  1    wreg      enum E358
  7084 ;; Registers used:
  7085 ;;		wreg
  7086 ;; Tracked objects:
  7087 ;;		On entry : 0/0
  7088 ;;		On exit  : 0/0
  7089 ;;		Unchanged: 0/0
  7090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7091 ;;      Params:         0       1       0       0       0       0       0       0
  7092 ;;      Locals:         0       0       0       0       0       0       0       0
  7093 ;;      Temps:          0       0       0       0       0       0       0       0
  7094 ;;      Totals:         0       1       0       0       0       0       0       0
  7095 ;;Total ram usage:        1 bytes
  7096 ;; Hardware stack levels used:    1
  7097 ;; Hardware stack levels required when called:    5
  7098 ;; This function calls:
  7099 ;;		Nothing
  7100 ;; This function is called by:
  7101 ;;		_I2C_Open
  7102 ;;		_I2C_DO_TX
  7103 ;;		_I2C_DO_RX
  7104 ;;		_I2C_DO_TX_EMPTY
  7105 ;;		_I2C_DO_ADDRESS_NACK
  7106 ;;		_I2C_DO_RX_EMPTY
  7107 ;; This function uses a non-reentrant model
  7108 ;;
  7109                           
  7110                           
  7111                           ;psect for function _I2C_CallbackReturnReset
  7112  0625                     _I2C_CallbackReturnReset:
  7113                           
  7114                           ;mcc_generated_files/i2c_master.c: 525: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 526: {;mcc_generated_files/i2c_master.c: 527:  
      +                             return I2C_RESET_LINK;
  7115                           
  7116                           ;incstack = 0
  7117                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
  7118  0625  3005               	movlw	5
  7119  0626  0008               	return
  7120  0627                     __end_of_I2C_CallbackReturnReset:
  7121                           
  7122                           	psect	text54
  7123  0627                     __ptext54:	
  7124 ;; *************** function _I2C_CallbackReturnStop *****************
  7125 ;; Defined at:
  7126 ;;		line 520 in file "mcc_generated_files/i2c_master.c"
  7127 ;; Parameters:    Size  Location     Type
  7128 ;;  funPtr          1    9[BANK0 ] PTR void 
  7129 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7130 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7131 ;; Auto vars:     Size  Location     Type
  7132 ;;		None
  7133 ;; Return value:  Size  Location     Type
  7134 ;;                  1    wreg      enum E358
  7135 ;; Registers used:
  7136 ;;		wreg
  7137 ;; Tracked objects:
  7138 ;;		On entry : 0/0
  7139 ;;		On exit  : 0/0
  7140 ;;		Unchanged: 0/0
  7141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7142 ;;      Params:         0       1       0       0       0       0       0       0
  7143 ;;      Locals:         0       0       0       0       0       0       0       0
  7144 ;;      Temps:          0       0       0       0       0       0       0       0
  7145 ;;      Totals:         0       1       0       0       0       0       0       0
  7146 ;;Total ram usage:        1 bytes
  7147 ;; Hardware stack levels used:    1
  7148 ;; Hardware stack levels required when called:    5
  7149 ;; This function calls:
  7150 ;;		Nothing
  7151 ;; This function is called by:
  7152 ;;		_I2C_Open
  7153 ;;		_I2C_SetCallback
  7154 ;;		_I2C_DO_TX
  7155 ;;		_I2C_DO_RX
  7156 ;;		_I2C_DO_TX_EMPTY
  7157 ;;		_I2C_DO_ADDRESS_NACK
  7158 ;;		_I2C_DO_RX_EMPTY
  7159 ;; This function uses a non-reentrant model
  7160 ;;
  7161                           
  7162                           
  7163                           ;psect for function _I2C_CallbackReturnStop
  7164  0627                     _I2C_CallbackReturnStop:
  7165                           
  7166                           ;mcc_generated_files/i2c_master.c: 520: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 521: {;mcc_generated_files/i2c_master.c: 522:   
      +                            return I2C_STOP;
  7167                           
  7168                           ;incstack = 0
  7169                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
  7170  0627  3001               	movlw	1
  7171  0628  0008               	return
  7172  0629                     __end_of_I2C_CallbackReturnStop:
  7173                           
  7174                           	psect	text55
  7175  042B                     __ptext55:	
  7176 ;; *************** function _rdBlkRegCompleteHandler *****************
  7177 ;; Defined at:
  7178 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
  7179 ;; Parameters:    Size  Location     Type
  7180 ;;  ptr             1    9[BANK0 ] PTR void 
  7181 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7182 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7183 ;; Auto vars:     Size  Location     Type
  7184 ;;		None
  7185 ;; Return value:  Size  Location     Type
  7186 ;;                  1    wreg      enum E358
  7187 ;; Registers used:
  7188 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7189 ;; Tracked objects:
  7190 ;;		On entry : 0/0
  7191 ;;		On exit  : 0/0
  7192 ;;		Unchanged: 0/0
  7193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7194 ;;      Params:         0       1       0       0       0       0       0       0
  7195 ;;      Locals:         0       0       0       0       0       0       0       0
  7196 ;;      Temps:          0       0       0       0       0       0       0       0
  7197 ;;      Totals:         0       1       0       0       0       0       0       0
  7198 ;;Total ram usage:        1 bytes
  7199 ;; Hardware stack levels used:    1
  7200 ;; Hardware stack levels required when called:    7
  7201 ;; This function calls:
  7202 ;;		_I2C_SetBuffer
  7203 ;;		_I2C_SetDataCompleteCallback
  7204 ;; This function is called by:
  7205 ;;		_I2C_ReadDataBlock
  7206 ;;		_I2C_DO_TX
  7207 ;;		_I2C_DO_RX
  7208 ;;		_I2C_DO_TX_EMPTY
  7209 ;;		_I2C_DO_ADDRESS_NACK
  7210 ;;		_I2C_DO_RX_EMPTY
  7211 ;; This function uses a non-reentrant model
  7212 ;;
  7213                           
  7214                           
  7215                           ;psect for function _rdBlkRegCompleteHandler
  7216  042B                     _rdBlkRegCompleteHandler:
  7217                           
  7218                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
  7219                           
  7220                           ;incstack = 0
  7221                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  7222  042B  0020               	movlb	0	; select bank0
  7223  042C  085C               	movf	rdBlkRegCompleteHandler@ptr,w
  7224  042D  0086               	movwf	6
  7225  042E  0187               	clrf	7
  7226  042F  3F40               	moviw [0]fsr1
  7227  0430  00D3               	movwf	I2C_SetBuffer@bufferSize
  7228  0431  3F41               	moviw [1]fsr1
  7229  0432  00D4               	movwf	I2C_SetBuffer@bufferSize+1
  7230  0433  085C               	movf	rdBlkRegCompleteHandler@ptr,w
  7231  0434  3E02               	addlw	2
  7232  0435  0086               	movwf	6
  7233  0436  0187               	clrf	7
  7234  0437  0801               	movf	1,w
  7235  0438  3185  2504  3184   	fcall	_I2C_SetBuffer
  7236                           
  7237                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7238  043B  3000               	movlw	0
  7239  043C  0020               	movlb	0	; select bank0
  7240  043D  00D8               	movwf	I2C_SetDataCompleteCallback@cb
  7241  043E  00D9               	movwf	I2C_SetDataCompleteCallback@cb+1
  7242  043F  01DA               	clrf	I2C_SetDataCompleteCallback@ptr
  7243  0440  3185  251F         	fcall	_I2C_SetDataCompleteCallback
  7244                           
  7245                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
  7246  0442  3002               	movlw	2
  7247  0443  0008               	return
  7248  0444                     __end_of_rdBlkRegCompleteHandler:
  7249                           
  7250                           	psect	text56
  7251  04AD                     __ptext56:	
  7252 ;; *************** function _wr1RegCompleteHandler *****************
  7253 ;; Defined at:
  7254 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
  7255 ;; Parameters:    Size  Location     Type
  7256 ;;  ptr             1    9[BANK0 ] PTR void 
  7257 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7258 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7259 ;; Auto vars:     Size  Location     Type
  7260 ;;		None
  7261 ;; Return value:  Size  Location     Type
  7262 ;;                  1    wreg      enum E358
  7263 ;; Registers used:
  7264 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7265 ;; Tracked objects:
  7266 ;;		On entry : 0/0
  7267 ;;		On exit  : 0/0
  7268 ;;		Unchanged: 0/0
  7269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7270 ;;      Params:         0       1       0       0       0       0       0       0
  7271 ;;      Locals:         0       0       0       0       0       0       0       0
  7272 ;;      Temps:          0       0       0       0       0       0       0       0
  7273 ;;      Totals:         0       1       0       0       0       0       0       0
  7274 ;;Total ram usage:        1 bytes
  7275 ;; Hardware stack levels used:    1
  7276 ;; Hardware stack levels required when called:    7
  7277 ;; This function calls:
  7278 ;;		_I2C_SetBuffer
  7279 ;;		_I2C_SetDataCompleteCallback
  7280 ;; This function is called by:
  7281 ;;		_I2C_Write1ByteRegister
  7282 ;;		_I2C_DO_TX
  7283 ;;		_I2C_DO_RX
  7284 ;;		_I2C_DO_TX_EMPTY
  7285 ;;		_I2C_DO_ADDRESS_NACK
  7286 ;;		_I2C_DO_RX_EMPTY
  7287 ;; This function uses a non-reentrant model
  7288 ;;
  7289                           
  7290                           
  7291                           ;psect for function _wr1RegCompleteHandler
  7292  04AD                     _wr1RegCompleteHandler:
  7293                           
  7294                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
  7295                           
  7296                           ;incstack = 0
  7297                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7298  04AD  3001               	movlw	1
  7299  04AE  0020               	movlb	0	; select bank0
  7300  04AF  00D3               	movwf	I2C_SetBuffer@bufferSize
  7301  04B0  3000               	movlw	0
  7302  04B1  00D4               	movwf	I2C_SetBuffer@bufferSize+1
  7303  04B2  085C               	movf	wr1RegCompleteHandler@ptr,w
  7304  04B3  3185  2504  3184   	fcall	_I2C_SetBuffer
  7305                           
  7306                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7307  04B6  3000               	movlw	0
  7308  04B7  0020               	movlb	0	; select bank0
  7309  04B8  00D8               	movwf	I2C_SetDataCompleteCallback@cb
  7310  04B9  00D9               	movwf	I2C_SetDataCompleteCallback@cb+1
  7311  04BA  01DA               	clrf	I2C_SetDataCompleteCallback@ptr
  7312  04BB  3185  251F         	fcall	_I2C_SetDataCompleteCallback
  7313                           
  7314                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
  7315  04BD  3004               	movlw	4
  7316  04BE  0008               	return
  7317  04BF                     __end_of_wr1RegCompleteHandler:
  7318                           
  7319                           	psect	text57
  7320  04BF                     __ptext57:	
  7321 ;; *************** function _rd2RegCompleteHandler *****************
  7322 ;; Defined at:
  7323 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
  7324 ;; Parameters:    Size  Location     Type
  7325 ;;  ptr             1    9[BANK0 ] PTR void 
  7326 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7327 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7328 ;; Auto vars:     Size  Location     Type
  7329 ;;		None
  7330 ;; Return value:  Size  Location     Type
  7331 ;;                  1    wreg      enum E358
  7332 ;; Registers used:
  7333 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7334 ;; Tracked objects:
  7335 ;;		On entry : 0/0
  7336 ;;		On exit  : 0/0
  7337 ;;		Unchanged: 0/0
  7338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7339 ;;      Params:         0       1       0       0       0       0       0       0
  7340 ;;      Locals:         0       0       0       0       0       0       0       0
  7341 ;;      Temps:          0       0       0       0       0       0       0       0
  7342 ;;      Totals:         0       1       0       0       0       0       0       0
  7343 ;;Total ram usage:        1 bytes
  7344 ;; Hardware stack levels used:    1
  7345 ;; Hardware stack levels required when called:    7
  7346 ;; This function calls:
  7347 ;;		_I2C_SetBuffer
  7348 ;;		_I2C_SetDataCompleteCallback
  7349 ;; This function is called by:
  7350 ;;		_I2C_Read2ByteRegister
  7351 ;;		_I2C_DO_TX
  7352 ;;		_I2C_DO_RX
  7353 ;;		_I2C_DO_TX_EMPTY
  7354 ;;		_I2C_DO_ADDRESS_NACK
  7355 ;;		_I2C_DO_RX_EMPTY
  7356 ;; This function uses a non-reentrant model
  7357 ;;
  7358                           
  7359                           
  7360                           ;psect for function _rd2RegCompleteHandler
  7361  04BF                     _rd2RegCompleteHandler:
  7362                           
  7363                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
  7364                           
  7365                           ;incstack = 0
  7366                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7367  04BF  3002               	movlw	2
  7368  04C0  0020               	movlb	0	; select bank0
  7369  04C1  00D3               	movwf	I2C_SetBuffer@bufferSize
  7370  04C2  3000               	movlw	0
  7371  04C3  00D4               	movwf	I2C_SetBuffer@bufferSize+1
  7372  04C4  085C               	movf	rd2RegCompleteHandler@ptr,w
  7373  04C5  3185  2504  3184   	fcall	_I2C_SetBuffer
  7374                           
  7375                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7376  04C8  3000               	movlw	0
  7377  04C9  0020               	movlb	0	; select bank0
  7378  04CA  00D8               	movwf	I2C_SetDataCompleteCallback@cb
  7379  04CB  00D9               	movwf	I2C_SetDataCompleteCallback@cb+1
  7380  04CC  01DA               	clrf	I2C_SetDataCompleteCallback@ptr
  7381  04CD  3185  251F         	fcall	_I2C_SetDataCompleteCallback
  7382                           
  7383                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
  7384  04CF  3002               	movlw	2
  7385  04D0  0008               	return
  7386  04D1                     __end_of_rd2RegCompleteHandler:
  7387                           
  7388                           	psect	text58
  7389  04D1                     __ptext58:	
  7390 ;; *************** function _rd1RegCompleteHandler *****************
  7391 ;; Defined at:
  7392 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
  7393 ;; Parameters:    Size  Location     Type
  7394 ;;  ptr             1    9[BANK0 ] PTR void 
  7395 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7396 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7397 ;; Auto vars:     Size  Location     Type
  7398 ;;		None
  7399 ;; Return value:  Size  Location     Type
  7400 ;;                  1    wreg      enum E358
  7401 ;; Registers used:
  7402 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7403 ;; Tracked objects:
  7404 ;;		On entry : 0/0
  7405 ;;		On exit  : 0/0
  7406 ;;		Unchanged: 0/0
  7407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7408 ;;      Params:         0       1       0       0       0       0       0       0
  7409 ;;      Locals:         0       0       0       0       0       0       0       0
  7410 ;;      Temps:          0       0       0       0       0       0       0       0
  7411 ;;      Totals:         0       1       0       0       0       0       0       0
  7412 ;;Total ram usage:        1 bytes
  7413 ;; Hardware stack levels used:    1
  7414 ;; Hardware stack levels required when called:    7
  7415 ;; This function calls:
  7416 ;;		_I2C_SetBuffer
  7417 ;;		_I2C_SetDataCompleteCallback
  7418 ;; This function is called by:
  7419 ;;		_I2C_Read1ByteRegister
  7420 ;;		_I2C_DO_TX
  7421 ;;		_I2C_DO_RX
  7422 ;;		_I2C_DO_TX_EMPTY
  7423 ;;		_I2C_DO_ADDRESS_NACK
  7424 ;;		_I2C_DO_RX_EMPTY
  7425 ;; This function uses a non-reentrant model
  7426 ;;
  7427                           
  7428                           
  7429                           ;psect for function _rd1RegCompleteHandler
  7430  04D1                     _rd1RegCompleteHandler:
  7431                           
  7432                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
  7433                           
  7434                           ;incstack = 0
  7435                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7436  04D1  3001               	movlw	1
  7437  04D2  0020               	movlb	0	; select bank0
  7438  04D3  00D3               	movwf	I2C_SetBuffer@bufferSize
  7439  04D4  3000               	movlw	0
  7440  04D5  00D4               	movwf	I2C_SetBuffer@bufferSize+1
  7441  04D6  085C               	movf	rd1RegCompleteHandler@ptr,w
  7442  04D7  3185  2504  3184   	fcall	_I2C_SetBuffer
  7443                           
  7444                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7445  04DA  3000               	movlw	0
  7446  04DB  0020               	movlb	0	; select bank0
  7447  04DC  00D8               	movwf	I2C_SetDataCompleteCallback@cb
  7448  04DD  00D9               	movwf	I2C_SetDataCompleteCallback@cb+1
  7449  04DE  01DA               	clrf	I2C_SetDataCompleteCallback@ptr
  7450  04DF  3185  251F         	fcall	_I2C_SetDataCompleteCallback
  7451                           
  7452                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
  7453  04E1  3002               	movlw	2
  7454  04E2  0008               	return
  7455  04E3                     __end_of_rd1RegCompleteHandler:
  7456                           
  7457                           	psect	text59
  7458  04E3                     __ptext59:	
  7459 ;; *************** function _wr2RegCompleteHandler *****************
  7460 ;; Defined at:
  7461 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
  7462 ;; Parameters:    Size  Location     Type
  7463 ;;  ptr             1    9[BANK0 ] PTR void 
  7464 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7465 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7466 ;; Auto vars:     Size  Location     Type
  7467 ;;		None
  7468 ;; Return value:  Size  Location     Type
  7469 ;;                  1    wreg      enum E358
  7470 ;; Registers used:
  7471 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7472 ;; Tracked objects:
  7473 ;;		On entry : 0/0
  7474 ;;		On exit  : 0/0
  7475 ;;		Unchanged: 0/0
  7476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7477 ;;      Params:         0       1       0       0       0       0       0       0
  7478 ;;      Locals:         0       0       0       0       0       0       0       0
  7479 ;;      Temps:          0       0       0       0       0       0       0       0
  7480 ;;      Totals:         0       1       0       0       0       0       0       0
  7481 ;;Total ram usage:        1 bytes
  7482 ;; Hardware stack levels used:    1
  7483 ;; Hardware stack levels required when called:    7
  7484 ;; This function calls:
  7485 ;;		_I2C_SetBuffer
  7486 ;;		_I2C_SetDataCompleteCallback
  7487 ;; This function is called by:
  7488 ;;		_I2C_Write2ByteRegister
  7489 ;;		_I2C_DO_TX
  7490 ;;		_I2C_DO_RX
  7491 ;;		_I2C_DO_TX_EMPTY
  7492 ;;		_I2C_DO_ADDRESS_NACK
  7493 ;;		_I2C_DO_RX_EMPTY
  7494 ;; This function uses a non-reentrant model
  7495 ;;
  7496                           
  7497                           
  7498                           ;psect for function _wr2RegCompleteHandler
  7499  04E3                     _wr2RegCompleteHandler:
  7500                           
  7501                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
  7502                           
  7503                           ;incstack = 0
  7504                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7505  04E3  3002               	movlw	2
  7506  04E4  0020               	movlb	0	; select bank0
  7507  04E5  00D3               	movwf	I2C_SetBuffer@bufferSize
  7508  04E6  3000               	movlw	0
  7509  04E7  00D4               	movwf	I2C_SetBuffer@bufferSize+1
  7510  04E8  085C               	movf	wr2RegCompleteHandler@ptr,w
  7511  04E9  3185  2504  3184   	fcall	_I2C_SetBuffer
  7512                           
  7513                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7514  04EC  3000               	movlw	0
  7515  04ED  0020               	movlb	0	; select bank0
  7516  04EE  00D8               	movwf	I2C_SetDataCompleteCallback@cb
  7517  04EF  00D9               	movwf	I2C_SetDataCompleteCallback@cb+1
  7518  04F0  01DA               	clrf	I2C_SetDataCompleteCallback@ptr
  7519  04F1  3185  251F         	fcall	_I2C_SetDataCompleteCallback
  7520                           
  7521                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
  7522  04F3  3004               	movlw	4
  7523  04F4  0008               	return
  7524  04F5                     __end_of_wr2RegCompleteHandler:
  7525                           
  7526                           	psect	text60
  7527  051F                     __ptext60:	
  7528 ;; *************** function _I2C_SetDataCompleteCallback *****************
  7529 ;; Defined at:
  7530 ;;		line 273 in file "mcc_generated_files/i2c_master.c"
  7531 ;; Parameters:    Size  Location     Type
  7532 ;;  cb              2    5[BANK0 ] PTR FTN(PTR void ,)enum 
  7533 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  7534 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  7535 ;;  ptr             1    7[BANK0 ] PTR void 
  7536 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7537 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7538 ;; Auto vars:     Size  Location     Type
  7539 ;;		None
  7540 ;; Return value:  Size  Location     Type
  7541 ;;                  1    wreg      void 
  7542 ;; Registers used:
  7543 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7544 ;; Tracked objects:
  7545 ;;		On entry : 0/0
  7546 ;;		On exit  : 0/0
  7547 ;;		Unchanged: 0/0
  7548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7549 ;;      Params:         0       3       0       0       0       0       0       0
  7550 ;;      Locals:         0       0       0       0       0       0       0       0
  7551 ;;      Temps:          0       1       0       0       0       0       0       0
  7552 ;;      Totals:         0       4       0       0       0       0       0       0
  7553 ;;Total ram usage:        4 bytes
  7554 ;; Hardware stack levels used:    1
  7555 ;; Hardware stack levels required when called:    6
  7556 ;; This function calls:
  7557 ;;		_I2C_SetCallback
  7558 ;; This function is called by:
  7559 ;;		_rd1RegCompleteHandler
  7560 ;;		_rd2RegCompleteHandler
  7561 ;;		_wr1RegCompleteHandler
  7562 ;;		_wr2RegCompleteHandler
  7563 ;;		_rdBlkRegCompleteHandler
  7564 ;;		_I2C_Read1ByteRegister
  7565 ;;		_I2C_Read2ByteRegister
  7566 ;;		_I2C_Write1ByteRegister
  7567 ;;		_I2C_Write2ByteRegister
  7568 ;;		_I2C_ReadDataBlock
  7569 ;; This function uses a non-reentrant model
  7570 ;;
  7571                           
  7572                           
  7573                           ;psect for function _I2C_SetDataCompleteCallback
  7574  051F                     _I2C_SetDataCompleteCallback:
  7575                           
  7576                           ;mcc_generated_files/i2c_master.c: 273: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 274: {;mcc_generated_files/i2c_master.c
      +                          : 275:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  7577                           
  7578                           ;incstack = 0
  7579                           ; Regs used in _I2C_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  7580  051F  0020               	movlb	0	; select bank0
  7581  0520  0859               	movf	I2C_SetDataCompleteCallback@cb+1,w
  7582  0521  00D4               	movwf	I2C_SetCallback@cb+1
  7583  0522  0858               	movf	I2C_SetDataCompleteCallback@cb,w
  7584  0523  00D3               	movwf	I2C_SetCallback@cb
  7585  0524  085A               	movf	I2C_SetDataCompleteCallback@ptr,w
  7586  0525  00DB               	movwf	??_I2C_SetDataCompleteCallback
  7587  0526  085B               	movf	??_I2C_SetDataCompleteCallback,w
  7588  0527  00D5               	movwf	I2C_SetCallback@ptr
  7589  0528  3000               	movlw	0
  7590  0529  3183  233B         	fcall	_I2C_SetCallback
  7591  052B  0008               	return
  7592  052C                     __end_of_I2C_SetDataCompleteCallback:
  7593                           
  7594                           	psect	text61
  7595  033B                     __ptext61:	
  7596 ;; *************** function _I2C_SetCallback *****************
  7597 ;; Defined at:
  7598 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
  7599 ;; Parameters:    Size  Location     Type
  7600 ;;  idx             1    wreg     enum E3892
  7601 ;;  cb              2    0[BANK0 ] PTR FTN(PTR void ,)enum 
  7602 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  7603 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  7604 ;;  ptr             1    2[BANK0 ] PTR void 
  7605 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7606 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7607 ;; Auto vars:     Size  Location     Type
  7608 ;;  idx             1    4[BANK0 ] enum E3892
  7609 ;; Return value:  Size  Location     Type
  7610 ;;                  1    wreg      void 
  7611 ;; Registers used:
  7612 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7613 ;; Tracked objects:
  7614 ;;		On entry : 0/0
  7615 ;;		On exit  : 0/0
  7616 ;;		Unchanged: 0/0
  7617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7618 ;;      Params:         0       3       0       0       0       0       0       0
  7619 ;;      Locals:         0       1       0       0       0       0       0       0
  7620 ;;      Temps:          0       1       0       0       0       0       0       0
  7621 ;;      Totals:         0       5       0       0       0       0       0       0
  7622 ;;Total ram usage:        5 bytes
  7623 ;; Hardware stack levels used:    1
  7624 ;; Hardware stack levels required when called:    5
  7625 ;; This function calls:
  7626 ;;		Nothing
  7627 ;; This function is called by:
  7628 ;;		_I2C_SetDataCompleteCallback
  7629 ;;		_I2C_SetAddressNackCallback
  7630 ;;		_I2C_SetWriteCollisionCallback
  7631 ;;		_I2C_SetDataNackCallback
  7632 ;;		_I2C_SetTimeoutCallback
  7633 ;; This function uses a non-reentrant model
  7634 ;;
  7635                           
  7636                           
  7637                           ;psect for function _I2C_SetCallback
  7638  033B                     _I2C_SetCallback:
  7639                           
  7640                           ;incstack = 0
  7641                           ; Regs used in _I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
  7642                           ;I2C_SetCallback@idx stored from wreg
  7643  033B  0020               	movlb	0	; select bank0
  7644  033C  00D7               	movwf	I2C_SetCallback@idx
  7645                           
  7646                           ;mcc_generated_files/i2c_master.c: 298: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 299: {;mcc_generate
      +                          d_files/i2c_master.c: 300:     if(cb)
  7647  033D  0853               	movf	I2C_SetCallback@cb,w
  7648  033E  0454               	iorwf	I2C_SetCallback@cb+1,w
  7649  033F  1903               	btfsc	3,2
  7650  0340  2B52               	goto	l3164
  7651                           
  7652                           ;mcc_generated_files/i2c_master.c: 301:     {;mcc_generated_files/i2c_master.c: 302:    
      +                               I2C_Status.callbackTable[idx] = cb;
  7653  0341  3557               	lslf	I2C_SetCallback@idx,w
  7654  0342  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  7655  0343  0086               	movwf	6
  7656  0344  0187               	clrf	7
  7657  0345  0853               	movf	I2C_SetCallback@cb,w
  7658  0346  3FC0               	movwi [0]fsr1
  7659  0347  0854               	movf	I2C_SetCallback@cb+1,w
  7660  0348  3FC1               	movwi [1]fsr1
  7661                           
  7662                           ;mcc_generated_files/i2c_master.c: 303:         I2C_Status.callbackPayload[idx] = ptr;
  7663  0349  0855               	movf	I2C_SetCallback@ptr,w
  7664  034A  00D6               	movwf	??_I2C_SetCallback
  7665  034B  0857               	movf	I2C_SetCallback@idx,w
  7666  034C  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  7667  034D  0086               	movwf	6
  7668  034E  0187               	clrf	7
  7669  034F  0856               	movf	??_I2C_SetCallback,w
  7670  0350  0081               	movwf	1
  7671                           
  7672                           ;mcc_generated_files/i2c_master.c: 304:     }
  7673  0351  0008               	return
  7674  0352                     l3164:
  7675                           
  7676                           ;mcc_generated_files/i2c_master.c: 306:     {;mcc_generated_files/i2c_master.c: 307:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  7677  0352  3557               	lslf	I2C_SetCallback@idx,w
  7678  0353  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  7679  0354  0086               	movwf	6
  7680  0355  0187               	clrf	7
  7681  0356  3027               	movlw	low _I2C_CallbackReturnStop
  7682  0357  3FC0               	movwi [0]fsr1
  7683  0358  3006               	movlw	high _I2C_CallbackReturnStop
  7684  0359  3FC1               	movwi [1]fsr1
  7685                           
  7686                           ;mcc_generated_files/i2c_master.c: 308:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  7687  035A  0857               	movf	I2C_SetCallback@idx,w
  7688  035B  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  7689  035C  0086               	movwf	6
  7690  035D  0187               	clrf	7
  7691  035E  0181               	clrf	1
  7692  035F  0008               	return
  7693  0360                     __end_of_I2C_SetCallback:
  7694                           
  7695                           	psect	text62
  7696  0504                     __ptext62:	
  7697 ;; *************** function _I2C_SetBuffer *****************
  7698 ;; Defined at:
  7699 ;;		line 263 in file "mcc_generated_files/i2c_master.c"
  7700 ;; Parameters:    Size  Location     Type
  7701 ;;  buffer          1    wreg     PTR void 
  7702 ;;		 -> TempH(1), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@reg(1), 
  7703 ;;		 -> I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegi
      +ster@reg(1), 
  7704 ;;		 -> I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1
      +), 
  7705 ;;  bufferSize      2    0[BANK0 ] unsigned int 
  7706 ;; Auto vars:     Size  Location     Type
  7707 ;;  buffer          1    3[BANK0 ] PTR void 
  7708 ;;		 -> TempH(1), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@reg(1), 
  7709 ;;		 -> I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegi
      +ster@reg(1), 
  7710 ;;		 -> I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1
      +), 
  7711 ;; Return value:  Size  Location     Type
  7712 ;;                  1    wreg      void 
  7713 ;; Registers used:
  7714 ;;		wreg
  7715 ;; Tracked objects:
  7716 ;;		On entry : 0/0
  7717 ;;		On exit  : 0/0
  7718 ;;		Unchanged: 0/0
  7719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7720 ;;      Params:         0       2       0       0       0       0       0       0
  7721 ;;      Locals:         0       1       0       0       0       0       0       0
  7722 ;;      Temps:          0       1       0       0       0       0       0       0
  7723 ;;      Totals:         0       4       0       0       0       0       0       0
  7724 ;;Total ram usage:        4 bytes
  7725 ;; Hardware stack levels used:    1
  7726 ;; Hardware stack levels required when called:    5
  7727 ;; This function calls:
  7728 ;;		Nothing
  7729 ;; This function is called by:
  7730 ;;		_I2C_WriteNBytes
  7731 ;;		_I2C_ReadNBytes
  7732 ;;		_rd1RegCompleteHandler
  7733 ;;		_rd2RegCompleteHandler
  7734 ;;		_wr1RegCompleteHandler
  7735 ;;		_wr2RegCompleteHandler
  7736 ;;		_rdBlkRegCompleteHandler
  7737 ;;		_I2C_Read1ByteRegister
  7738 ;;		_I2C_Read2ByteRegister
  7739 ;;		_I2C_Write1ByteRegister
  7740 ;;		_I2C_Write2ByteRegister
  7741 ;;		_I2C_ReadDataBlock
  7742 ;; This function uses a non-reentrant model
  7743 ;;
  7744                           
  7745                           
  7746                           ;psect for function _I2C_SetBuffer
  7747  0504                     _I2C_SetBuffer:
  7748                           
  7749                           ;incstack = 0
  7750                           ; Regs used in _I2C_SetBuffer: [wreg]
  7751                           ;I2C_SetBuffer@buffer stored from wreg
  7752  0504  0020               	movlb	0	; select bank0
  7753  0505  00D6               	movwf	I2C_SetBuffer@buffer
  7754                           
  7755                           ;mcc_generated_files/i2c_master.c: 263: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 264: {;mcc_generated_files/i2c_master.c: 265:     
      +                          if(I2C_Status.bufferFree)
  7756  0506  1DBC               	btfss	_I2C_Status+28,3
  7757  0507  0008               	return
  7758                           
  7759                           ;mcc_generated_files/i2c_master.c: 266:     {;mcc_generated_files/i2c_master.c: 267:    
      +                               I2C_Status.data_ptr = buffer;
  7760  0508  0856               	movf	I2C_SetBuffer@buffer,w
  7761  0509  00D5               	movwf	??_I2C_SetBuffer
  7762  050A  0855               	movf	??_I2C_SetBuffer,w
  7763  050B  00B7               	movwf	low ((_I2C_Status| 0+23))
  7764                           
  7765                           ;mcc_generated_files/i2c_master.c: 268:         I2C_Status.data_length = bufferSize;
  7766  050C  0854               	movf	I2C_SetBuffer@bufferSize+1,w
  7767  050D  00B9               	movwf	_I2C_Status+25
  7768  050E  0853               	movf	I2C_SetBuffer@bufferSize,w
  7769  050F  00B8               	movwf	_I2C_Status+24
  7770                           
  7771                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.bufferFree = 0;
  7772  0510  11BC               	bcf	_I2C_Status+28,3
  7773  0511  0008               	return
  7774  0512                     __end_of_I2C_SetBuffer:
  7775                           
  7776                           	psect	text63
  7777  0611                     __ptext63:	
  7778 ;; *************** function _I2C_MasterStop *****************
  7779 ;; Defined at:
  7780 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
  7781 ;; Parameters:    Size  Location     Type
  7782 ;;		None
  7783 ;; Auto vars:     Size  Location     Type
  7784 ;;		None
  7785 ;; Return value:  Size  Location     Type
  7786 ;;                  1    wreg      void 
  7787 ;; Registers used:
  7788 ;;		None
  7789 ;; Tracked objects:
  7790 ;;		On entry : 0/0
  7791 ;;		On exit  : 0/0
  7792 ;;		Unchanged: 0/0
  7793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7794 ;;      Params:         0       0       0       0       0       0       0       0
  7795 ;;      Locals:         0       0       0       0       0       0       0       0
  7796 ;;      Temps:          0       0       0       0       0       0       0       0
  7797 ;;      Totals:         0       0       0       0       0       0       0       0
  7798 ;;Total ram usage:        0 bytes
  7799 ;; Hardware stack levels used:    1
  7800 ;; Hardware stack levels required when called:    5
  7801 ;; This function calls:
  7802 ;;		Nothing
  7803 ;; This function is called by:
  7804 ;;		_I2C_DO_SEND_STOP
  7805 ;; This function uses a non-reentrant model
  7806 ;;
  7807                           
  7808                           
  7809                           ;psect for function _I2C_MasterStop
  7810  0611                     _I2C_MasterStop:
  7811                           
  7812                           ;mcc_generated_files/i2c_master.c: 595:     SSP1CON2bits.PEN = 1;
  7813                           
  7814                           ;incstack = 0
  7815                           ; Regs used in _I2C_MasterStop: []
  7816  0611  0024               	movlb	4	; select bank4
  7817  0612  1516               	bsf	22,2	;volatile
  7818  0613  0008               	return
  7819  0614                     __end_of_I2C_MasterStop:
  7820                           
  7821                           	psect	text64
  7822  0614                     __ptext64:	
  7823 ;; *************** function _I2C_MasterEnableRestart *****************
  7824 ;; Defined at:
  7825 ;;		line 573 in file "mcc_generated_files/i2c_master.c"
  7826 ;; Parameters:    Size  Location     Type
  7827 ;;		None
  7828 ;; Auto vars:     Size  Location     Type
  7829 ;;		None
  7830 ;; Return value:  Size  Location     Type
  7831 ;;                  1    wreg      void 
  7832 ;; Registers used:
  7833 ;;		None
  7834 ;; Tracked objects:
  7835 ;;		On entry : 0/0
  7836 ;;		On exit  : 0/0
  7837 ;;		Unchanged: 0/0
  7838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7839 ;;      Params:         0       0       0       0       0       0       0       0
  7840 ;;      Locals:         0       0       0       0       0       0       0       0
  7841 ;;      Temps:          0       0       0       0       0       0       0       0
  7842 ;;      Totals:         0       0       0       0       0       0       0       0
  7843 ;;Total ram usage:        0 bytes
  7844 ;; Hardware stack levels used:    1
  7845 ;; Hardware stack levels required when called:    5
  7846 ;; This function calls:
  7847 ;;		Nothing
  7848 ;; This function is called by:
  7849 ;;		_I2C_DO_SEND_RESTART_READ
  7850 ;;		_I2C_DO_SEND_RESTART_WRITE
  7851 ;;		_I2C_DO_SEND_RESTART
  7852 ;;		_I2C_DO_RX_EMPTY
  7853 ;; This function uses a non-reentrant model
  7854 ;;
  7855                           
  7856                           
  7857                           ;psect for function _I2C_MasterEnableRestart
  7858  0614                     _I2C_MasterEnableRestart:
  7859                           
  7860                           ;mcc_generated_files/i2c_master.c: 575:     SSP1CON2bits.RSEN = 1;
  7861                           
  7862                           ;incstack = 0
  7863                           ; Regs used in _I2C_MasterEnableRestart: []
  7864  0614  0024               	movlb	4	; select bank4
  7865  0615  1496               	bsf	22,1	;volatile
  7866  0616  0008               	return
  7867  0617                     __end_of_I2C_MasterEnableRestart:
  7868                           
  7869                           	psect	text65
  7870  0617                     __ptext65:	
  7871 ;; *************** function _I2C_MasterStart *****************
  7872 ;; Defined at:
  7873 ;;		line 588 in file "mcc_generated_files/i2c_master.c"
  7874 ;; Parameters:    Size  Location     Type
  7875 ;;		None
  7876 ;; Auto vars:     Size  Location     Type
  7877 ;;		None
  7878 ;; Return value:  Size  Location     Type
  7879 ;;                  1    wreg      void 
  7880 ;; Registers used:
  7881 ;;		None
  7882 ;; Tracked objects:
  7883 ;;		On entry : 0/0
  7884 ;;		On exit  : 0/0
  7885 ;;		Unchanged: 0/0
  7886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7887 ;;      Params:         0       0       0       0       0       0       0       0
  7888 ;;      Locals:         0       0       0       0       0       0       0       0
  7889 ;;      Temps:          0       0       0       0       0       0       0       0
  7890 ;;      Totals:         0       0       0       0       0       0       0       0
  7891 ;;Total ram usage:        0 bytes
  7892 ;; Hardware stack levels used:    1
  7893 ;; Hardware stack levels required when called:    5
  7894 ;; This function calls:
  7895 ;;		Nothing
  7896 ;; This function is called by:
  7897 ;;		_I2C_MasterOperation
  7898 ;; This function uses a non-reentrant model
  7899 ;;
  7900                           
  7901                           
  7902                           ;psect for function _I2C_MasterStart
  7903  0617                     _I2C_MasterStart:
  7904                           
  7905                           ;mcc_generated_files/i2c_master.c: 590:     SSP1CON2bits.SEN = 1;
  7906                           
  7907                           ;incstack = 0
  7908                           ; Regs used in _I2C_MasterStart: []
  7909  0617  0024               	movlb	4	; select bank4
  7910  0618  1416               	bsf	22,0	;volatile
  7911  0619  0008               	return
  7912  061A                     __end_of_I2C_MasterStart:
  7913                           
  7914                           	psect	text66
  7915  0444                     __ptext66:	
  7916 ;; *************** function _I2C_Close *****************
  7917 ;; Defined at:
  7918 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
  7919 ;; Parameters:    Size  Location     Type
  7920 ;;		None
  7921 ;; Auto vars:     Size  Location     Type
  7922 ;;  returnValue     1    1[BANK0 ] enum E353
  7923 ;; Return value:  Size  Location     Type
  7924 ;;                  1    wreg      enum E353
  7925 ;; Registers used:
  7926 ;;		wreg, status,2, status,0, pclath, cstack
  7927 ;; Tracked objects:
  7928 ;;		On entry : 0/0
  7929 ;;		On exit  : 0/0
  7930 ;;		Unchanged: 0/0
  7931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7932 ;;      Params:         0       0       0       0       0       0       0       0
  7933 ;;      Locals:         0       1       0       0       0       0       0       0
  7934 ;;      Temps:          0       1       0       0       0       0       0       0
  7935 ;;      Totals:         0       2       0       0       0       0       0       0
  7936 ;;Total ram usage:        2 bytes
  7937 ;; Hardware stack levels used:    1
  7938 ;; Hardware stack levels required when called:    6
  7939 ;; This function calls:
  7940 ;;		_I2C_MasterClearIrq
  7941 ;;		_I2C_MasterClose
  7942 ;;		_I2C_MasterDisableIrq
  7943 ;; This function is called by:
  7944 ;;		_I2C_WriteNBytes
  7945 ;;		_I2C_ReadNBytes
  7946 ;;		_I2C_Read1ByteRegister
  7947 ;;		_I2C_Read2ByteRegister
  7948 ;;		_I2C_Write1ByteRegister
  7949 ;;		_I2C_Write2ByteRegister
  7950 ;;		_I2C_ReadDataBlock
  7951 ;; This function uses a non-reentrant model
  7952 ;;
  7953                           
  7954                           
  7955                           ;psect for function _I2C_Close
  7956  0444                     _I2C_Close:
  7957                           
  7958                           ;mcc_generated_files/i2c_master.c: 211:     i2c_error_t returnValue = I2C_BUSY;
  7959                           
  7960                           ;incstack = 0
  7961                           ; Regs used in _I2C_Close: [wreg+status,2+status,0+pclath+cstack]
  7962  0444  0020               	movlb	0	; select bank0
  7963  0445  01D4               	clrf	I2C_Close@returnValue
  7964  0446  0AD4               	incf	I2C_Close@returnValue,f
  7965                           
  7966                           ;mcc_generated_files/i2c_master.c: 212:     if(!I2C_Status.busy)
  7967  0447  18BC               	btfsc	_I2C_Status+28,1
  7968  0448  2C5B               	goto	l3544
  7969                           
  7970                           ;mcc_generated_files/i2c_master.c: 213:     {;mcc_generated_files/i2c_master.c: 214:    
      +                               I2C_Status.inUse = 0;
  7971  0449  113C               	bcf	_I2C_Status+28,2
  7972                           
  7973                           ;mcc_generated_files/i2c_master.c: 215:         I2C_Status.address = 0xff;
  7974  044A  30FF               	movlw	255
  7975  044B  00D3               	movwf	??_I2C_Close
  7976  044C  0853               	movf	??_I2C_Close,w
  7977  044D  00B6               	movwf	_I2C_Status+22
  7978                           
  7979                           ;mcc_generated_files/i2c_master.c: 216:         I2C_MasterClearIrq();
  7980  044E  3186  2620  3184   	fcall	_I2C_MasterClearIrq
  7981                           
  7982                           ;mcc_generated_files/i2c_master.c: 217:         I2C_MasterDisableIrq();
  7983  0451  3186  261A  3184   	fcall	_I2C_MasterDisableIrq
  7984                           
  7985                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClose();
  7986  0454  3186  261D         	fcall	_I2C_MasterClose
  7987                           
  7988                           ;mcc_generated_files/i2c_master.c: 219:         returnValue = I2C_Status.error;
  7989  0456  0020               	movlb	0	; select bank0
  7990  0457  083B               	movf	_I2C_Status+27,w
  7991  0458  00D3               	movwf	??_I2C_Close
  7992  0459  0853               	movf	??_I2C_Close,w
  7993  045A  00D4               	movwf	I2C_Close@returnValue
  7994  045B                     l3544:
  7995                           
  7996                           ;mcc_generated_files/i2c_master.c: 221:     return returnValue;
  7997  045B  0854               	movf	I2C_Close@returnValue,w
  7998  045C  0008               	return
  7999  045D                     __end_of_I2C_Close:
  8000                           
  8001                           	psect	text67
  8002  061A                     __ptext67:	
  8003 ;; *************** function _I2C_MasterDisableIrq *****************
  8004 ;; Defined at:
  8005 ;;		line 635 in file "mcc_generated_files/i2c_master.c"
  8006 ;; Parameters:    Size  Location     Type
  8007 ;;		None
  8008 ;; Auto vars:     Size  Location     Type
  8009 ;;		None
  8010 ;; Return value:  Size  Location     Type
  8011 ;;                  1    wreg      void 
  8012 ;; Registers used:
  8013 ;;		None
  8014 ;; Tracked objects:
  8015 ;;		On entry : 0/0
  8016 ;;		On exit  : 0/0
  8017 ;;		Unchanged: 0/0
  8018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8019 ;;      Params:         0       0       0       0       0       0       0       0
  8020 ;;      Locals:         0       0       0       0       0       0       0       0
  8021 ;;      Temps:          0       0       0       0       0       0       0       0
  8022 ;;      Totals:         0       0       0       0       0       0       0       0
  8023 ;;Total ram usage:        0 bytes
  8024 ;; Hardware stack levels used:    1
  8025 ;; Hardware stack levels required when called:    5
  8026 ;; This function calls:
  8027 ;;		Nothing
  8028 ;; This function is called by:
  8029 ;;		_I2C_Close
  8030 ;;		_I2C_SetTimeOut
  8031 ;; This function uses a non-reentrant model
  8032 ;;
  8033                           
  8034                           
  8035                           ;psect for function _I2C_MasterDisableIrq
  8036  061A                     _I2C_MasterDisableIrq:
  8037                           
  8038                           ;mcc_generated_files/i2c_master.c: 637:     PIE1bits.SSP1IE = 0;
  8039                           
  8040                           ;incstack = 0
  8041                           ; Regs used in _I2C_MasterDisableIrq: []
  8042  061A  0021               	movlb	1	; select bank1
  8043  061B  1191               	bcf	17,3	;volatile
  8044  061C  0008               	return
  8045  061D                     __end_of_I2C_MasterDisableIrq:
  8046                           
  8047                           	psect	text68
  8048  061D                     __ptext68:	
  8049 ;; *************** function _I2C_MasterClose *****************
  8050 ;; Defined at:
  8051 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
  8052 ;; Parameters:    Size  Location     Type
  8053 ;;		None
  8054 ;; Auto vars:     Size  Location     Type
  8055 ;;		None
  8056 ;; Return value:  Size  Location     Type
  8057 ;;                  1    wreg      void 
  8058 ;; Registers used:
  8059 ;;		None
  8060 ;; Tracked objects:
  8061 ;;		On entry : 0/0
  8062 ;;		On exit  : 0/0
  8063 ;;		Unchanged: 0/0
  8064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8065 ;;      Params:         0       0       0       0       0       0       0       0
  8066 ;;      Locals:         0       0       0       0       0       0       0       0
  8067 ;;      Temps:          0       0       0       0       0       0       0       0
  8068 ;;      Totals:         0       0       0       0       0       0       0       0
  8069 ;;Total ram usage:        0 bytes
  8070 ;; Hardware stack levels used:    1
  8071 ;; Hardware stack levels required when called:    5
  8072 ;; This function calls:
  8073 ;;		Nothing
  8074 ;; This function is called by:
  8075 ;;		_I2C_Close
  8076 ;; This function uses a non-reentrant model
  8077 ;;
  8078                           
  8079                           
  8080                           ;psect for function _I2C_MasterClose
  8081  061D                     _I2C_MasterClose:
  8082                           
  8083                           ;mcc_generated_files/i2c_master.c: 560:     SSP1CON1bits.SSPEN = 0;
  8084                           
  8085                           ;incstack = 0
  8086                           ; Regs used in _I2C_MasterClose: []
  8087  061D  0024               	movlb	4	; select bank4
  8088  061E  1295               	bcf	21,5	;volatile
  8089  061F  0008               	return
  8090  0620                     __end_of_I2C_MasterClose:
  8091                           
  8092                           	psect	text69
  8093  0620                     __ptext69:	
  8094 ;; *************** function _I2C_MasterClearIrq *****************
  8095 ;; Defined at:
  8096 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
  8097 ;; Parameters:    Size  Location     Type
  8098 ;;		None
  8099 ;; Auto vars:     Size  Location     Type
  8100 ;;		None
  8101 ;; Return value:  Size  Location     Type
  8102 ;;                  1    wreg      void 
  8103 ;; Registers used:
  8104 ;;		None
  8105 ;; Tracked objects:
  8106 ;;		On entry : 0/0
  8107 ;;		On exit  : 0/0
  8108 ;;		Unchanged: 0/0
  8109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8110 ;;      Params:         0       0       0       0       0       0       0       0
  8111 ;;      Locals:         0       0       0       0       0       0       0       0
  8112 ;;      Temps:          0       0       0       0       0       0       0       0
  8113 ;;      Totals:         0       0       0       0       0       0       0       0
  8114 ;;Total ram usage:        0 bytes
  8115 ;; Hardware stack levels used:    1
  8116 ;; Hardware stack levels required when called:    5
  8117 ;; This function calls:
  8118 ;;		Nothing
  8119 ;; This function is called by:
  8120 ;;		_I2C_Open
  8121 ;;		_I2C_Close
  8122 ;;		_I2C_MasterFsm
  8123 ;; This function uses a non-reentrant model
  8124 ;;
  8125                           
  8126                           
  8127                           ;psect for function _I2C_MasterClearIrq
  8128  0620                     _I2C_MasterClearIrq:
  8129                           
  8130                           ;mcc_generated_files/i2c_master.c: 642:     PIR1bits.SSP1IF = 0;
  8131                           
  8132                           ;incstack = 0
  8133                           ; Regs used in _I2C_MasterClearIrq: []
  8134  0620  0020               	movlb	0	; select bank0
  8135  0621  1191               	bcf	17,3	;volatile
  8136  0622  0008               	return
  8137  0623                     __end_of_I2C_MasterClearIrq:
  8138                           
  8139                           	psect	text70
  8140  0111                     __ptext70:	
  8141 ;; *************** function _COS_TmrHandler *****************
  8142 ;; Defined at:
  8143 ;;		line 92 in file "SourceFiles/COS/COS_Main.c"
  8144 ;; Parameters:    Size  Location     Type
  8145 ;;		None
  8146 ;; Auto vars:     Size  Location     Type
  8147 ;;  tempbyte2       1    4[BANK0 ] unsigned char 
  8148 ;;  tempbyte1       1    3[BANK0 ] unsigned char 
  8149 ;; Return value:  Size  Location     Type
  8150 ;;                  1    wreg      void 
  8151 ;; Registers used:
  8152 ;;		wreg, status,2, status,0
  8153 ;; Tracked objects:
  8154 ;;		On entry : 0/0
  8155 ;;		On exit  : 0/0
  8156 ;;		Unchanged: 0/0
  8157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8158 ;;      Params:         0       0       0       0       0       0       0       0
  8159 ;;      Locals:         0       2       0       0       0       0       0       0
  8160 ;;      Temps:          0       3       0       0       0       0       0       0
  8161 ;;      Totals:         0       5       0       0       0       0       0       0
  8162 ;;Total ram usage:        5 bytes
  8163 ;; Hardware stack levels used:    1
  8164 ;; Hardware stack levels required when called:    5
  8165 ;; This function calls:
  8166 ;;		Nothing
  8167 ;; This function is called by:
  8168 ;;		_main
  8169 ;; This function uses a non-reentrant model
  8170 ;;
  8171                           
  8172                           
  8173                           ;psect for function _COS_TmrHandler
  8174  0111                     _COS_TmrHandler:
  8175                           
  8176                           ;SourceFiles/COS/COS_Main.c: 94:  UINT_8 tempbyte1, tempbyte2;;SourceFiles/COS/COS_Main.
      +                          c: 95:  tempbyte2 = TMR1H;
  8177                           
  8178                           ;incstack = 0
  8179                           ; Regs used in _COS_TmrHandler: [wreg+status,2+status,0]
  8180  0111  0020               	movlb	0	; select bank0
  8181  0112  0817               	movf	23,w	;volatile
  8182  0113  00D3               	movwf	??_COS_TmrHandler
  8183  0114  0853               	movf	??_COS_TmrHandler,w
  8184  0115  00D7               	movwf	COS_TmrHandler@tempbyte2
  8185                           
  8186                           ;SourceFiles/COS/COS_Main.c: 96:  tempbyte1 = TMR1L;
  8187  0116  0816               	movf	22,w	;volatile
  8188  0117  00D3               	movwf	??_COS_TmrHandler
  8189  0118  0853               	movf	??_COS_TmrHandler,w
  8190  0119  00D6               	movwf	COS_TmrHandler@tempbyte1
  8191                           
  8192                           ;SourceFiles/COS/COS_Main.c: 97:  if (tempbyte2 != TMR1H)
  8193  011A  0857               	movf	COS_TmrHandler@tempbyte2,w
  8194  011B  0617               	xorwf	23,w	;volatile
  8195  011C  1903               	skipnz
  8196  011D  2926               	goto	l36
  8197                           
  8198                           ;SourceFiles/COS/COS_Main.c: 98:  {;SourceFiles/COS/COS_Main.c: 99:   tempbyte2 = TMR1H;
  8199  011E  0817               	movf	23,w	;volatile
  8200  011F  00D3               	movwf	??_COS_TmrHandler
  8201  0120  0853               	movf	??_COS_TmrHandler,w
  8202  0121  00D7               	movwf	COS_TmrHandler@tempbyte2
  8203                           
  8204                           ;SourceFiles/COS/COS_Main.c: 100:   tempbyte1 = TMR1L;
  8205  0122  0816               	movf	22,w	;volatile
  8206  0123  00D3               	movwf	??_COS_TmrHandler
  8207  0124  0853               	movf	??_COS_TmrHandler,w
  8208  0125  00D6               	movwf	COS_TmrHandler@tempbyte1
  8209  0126                     l36:	
  8210                           ;SourceFiles/COS/COS_Main.c: 101:  }
  8211                           
  8212                           
  8213                           ;SourceFiles/COS/COS_Main.c: 102:  COS_tcnt_val = (UINT_16) (tempbyte2 << 8)&0xff00;
  8214  0126  0857               	movf	COS_TmrHandler@tempbyte2,w
  8215  0127  00D3               	movwf	??_COS_TmrHandler
  8216  0128  01D4               	clrf	??_COS_TmrHandler+1
  8217  0129  0853               	movf	??_COS_TmrHandler,w
  8218  012A  00D4               	movwf	??_COS_TmrHandler+1
  8219  012B  01D3               	clrf	??_COS_TmrHandler
  8220  012C  3000               	movlw	0
  8221  012D  0553               	andwf	??_COS_TmrHandler,w
  8222  012E  00F6               	movwf	_COS_tcnt_val
  8223  012F  30FF               	movlw	255
  8224  0130  0554               	andwf	??_COS_TmrHandler+1,w
  8225  0131  00F7               	movwf	_COS_tcnt_val+1
  8226                           
  8227                           ;SourceFiles/COS/COS_Main.c: 103:  COS_tcnt_val = COS_tcnt_val | (UINT_16) (tempbyte1 & 
      +                          0x00ff);
  8228  0132  0876               	movf	_COS_tcnt_val,w
  8229  0133  0456               	iorwf	COS_TmrHandler@tempbyte1,w
  8230  0134  00F6               	movwf	_COS_tcnt_val
  8231  0135  0877               	movf	_COS_tcnt_val+1,w
  8232  0136  00F7               	movwf	_COS_tcnt_val+1
  8233                           
  8234                           ;SourceFiles/COS/COS_Main.c: 105:  if (((UINT_16) ((UINT_16) COS_tcnt_val - (UINT_16) CO
      +                          S_tcnt_lst) >= (UINT_16) 1000))
  8235  0137  0847               	movf	_COS_tcnt_lst,w
  8236  0138  0276               	subwf	_COS_tcnt_val,w
  8237  0139  00D3               	movwf	??_COS_TmrHandler
  8238  013A  0848               	movf	_COS_tcnt_lst+1,w
  8239  013B  3B77               	subwfb	_COS_tcnt_val+1,w
  8240  013C  00D4               	movwf	??_COS_TmrHandler+1
  8241  013D  3003               	movlw	3
  8242  013E  0254               	subwf	??_COS_TmrHandler+1,w
  8243  013F  30E8               	movlw	232
  8244  0140  1903               	skipnz
  8245  0141  0253               	subwf	??_COS_TmrHandler,w
  8246  0142  1C03               	skipc
  8247  0143  0008               	return
  8248                           
  8249                           ;SourceFiles/COS/COS_Main.c: 106:  {;SourceFiles/COS/COS_Main.c: 107:   COS_tcnt_lst = C
      +                          OS_tcnt_lst + 1000;
  8250  0144  0847               	movf	_COS_tcnt_lst,w
  8251  0145  3EE8               	addlw	232
  8252  0146  00C7               	movwf	_COS_tcnt_lst
  8253  0147  3003               	movlw	3
  8254  0148  3D48               	addwfc	_COS_tcnt_lst+1,w
  8255  0149  00C8               	movwf	_COS_tcnt_lst+1
  8256                           
  8257                           ;SourceFiles/COS/COS_Main.c: 108:   COS_ms_tmr++;
  8258  014A  3001               	movlw	1
  8259  014B  07CD               	addwf	_COS_ms_tmr,f
  8260  014C  3000               	movlw	0
  8261  014D  3DCE               	addwfc	_COS_ms_tmr+1,f
  8262                           
  8263                           ;SourceFiles/COS/COS_Main.c: 110:   if (COS_ms_tmr >= 1000)
  8264  014E  3003               	movlw	3
  8265  014F  024E               	subwf	_COS_ms_tmr+1,w
  8266  0150  30E8               	movlw	232
  8267  0151  1903               	skipnz
  8268  0152  024D               	subwf	_COS_ms_tmr,w
  8269  0153  1C03               	skipc
  8270  0154  295B               	goto	l3716
  8271                           
  8272                           ;SourceFiles/COS/COS_Main.c: 111:   {;SourceFiles/COS/COS_Main.c: 112:    COS_ms_tmr = 0
      +                          ;
  8273  0155  01CD               	clrf	_COS_ms_tmr
  8274  0156  01CE               	clrf	_COS_ms_tmr+1
  8275                           
  8276                           ;SourceFiles/COS/COS_Main.c: 113:    COS_sec_tmr++;
  8277  0157  3001               	movlw	1
  8278  0158  07CB               	addwf	_COS_sec_tmr,f	;volatile
  8279  0159  3000               	movlw	0
  8280  015A  3DCC               	addwfc	_COS_sec_tmr+1,f	;volatile
  8281  015B                     l3716:
  8282                           
  8283                           ;SourceFiles/COS/COS_Main.c: 115:   COS_tsk_tmr++;
  8284  015B  3001               	movlw	1
  8285  015C  07C9               	addwf	_COS_tsk_tmr,f
  8286  015D  3000               	movlw	0
  8287  015E  3DCA               	addwfc	_COS_tsk_tmr+1,f
  8288                           
  8289                           ;SourceFiles/COS/COS_Main.c: 116:   if ((COS_tsk_tmr >= 10) && (!COS_tsk_ena))
  8290  015F  3000               	movlw	0
  8291  0160  024A               	subwf	_COS_tsk_tmr+1,w
  8292  0161  300A               	movlw	10
  8293  0162  1903               	skipnz
  8294  0163  0249               	subwf	_COS_tsk_tmr,w
  8295  0164  1C03               	skipc
  8296  0165  0008               	return
  8297  0166  086D               	movf	_COS_tsk_ena,w
  8298  0167  1D03               	btfss	3,2
  8299  0168  0008               	return
  8300                           
  8301                           ;SourceFiles/COS/COS_Main.c: 117:   {;SourceFiles/COS/COS_Main.c: 118:    COS_tsk_tmr = 
      +                          0;
  8302  0169  01C9               	clrf	_COS_tsk_tmr
  8303  016A  01CA               	clrf	_COS_tsk_tmr+1
  8304                           
  8305                           ;SourceFiles/COS/COS_Main.c: 119:    COS_tsk_ena = 1;
  8306  016B  01ED               	clrf	_COS_tsk_ena
  8307  016C  0AED               	incf	_COS_tsk_ena,f
  8308  016D  0008               	return
  8309  016E                     __end_of_COS_TmrHandler:
  8310                           
  8311                           	psect	text71
  8312  01FF                     __ptext71:	
  8313 ;; *************** function _COS_Init *****************
  8314 ;; Defined at:
  8315 ;;		line 32 in file "SourceFiles/COS/COS_Main.c"
  8316 ;; Parameters:    Size  Location     Type
  8317 ;;		None
  8318 ;; Auto vars:     Size  Location     Type
  8319 ;;  tempbyte2       1    4[BANK0 ] unsigned char 
  8320 ;;  tempbyte1       1    3[BANK0 ] unsigned char 
  8321 ;; Return value:  Size  Location     Type
  8322 ;;                  1    wreg      void 
  8323 ;; Registers used:
  8324 ;;		wreg, status,2, status,0, pclath, cstack
  8325 ;; Tracked objects:
  8326 ;;		On entry : 0/0
  8327 ;;		On exit  : 0/0
  8328 ;;		Unchanged: 0/0
  8329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8330 ;;      Params:         0       0       0       0       0       0       0       0
  8331 ;;      Locals:         0       2       0       0       0       0       0       0
  8332 ;;      Temps:          0       3       0       0       0       0       0       0
  8333 ;;      Totals:         0       5       0       0       0       0       0       0
  8334 ;;Total ram usage:        5 bytes
  8335 ;; Hardware stack levels used:    1
  8336 ;; Hardware stack levels required when called:    6
  8337 ;; This function calls:
  8338 ;;		_COS_TimerSetup
  8339 ;; This function is called by:
  8340 ;;		_main
  8341 ;; This function uses a non-reentrant model
  8342 ;;
  8343                           
  8344                           
  8345                           ;psect for function _COS_Init
  8346  01FF                     _COS_Init:
  8347                           
  8348                           ;SourceFiles/COS/COS_Main.c: 34:  UINT_8 tempbyte1, tempbyte2;;SourceFiles/COS/COS_Main.
      +                          c: 36:  COS_TimerSetup();
  8349                           
  8350                           ;incstack = 0
  8351                           ; Regs used in _COS_Init: [wreg+status,2+status,0+pclath+cstack]
  8352  01FF  3185  25C4  3181   	fcall	_COS_TimerSetup
  8353                           
  8354                           ;SourceFiles/COS/COS_Main.c: 41:  COS_tsk_ind = 0;
  8355  0202  0020               	movlb	0	; select bank0
  8356  0203  01D2               	clrf	_COS_tsk_ind
  8357                           
  8358                           ;SourceFiles/COS/COS_Main.c: 42:  COS_tsk_msk = 0x80;
  8359  0204  3080               	movlw	128
  8360  0205  00D3               	movwf	??_COS_Init
  8361  0206  0853               	movf	??_COS_Init,w
  8362  0207  00EE               	movwf	_COS_tsk_msk
  8363                           
  8364                           ;SourceFiles/COS/COS_Main.c: 43:  COS_tsk_ena = 1;
  8365  0208  01ED               	clrf	_COS_tsk_ena
  8366  0209  0AED               	incf	_COS_tsk_ena,f
  8367                           
  8368                           ;SourceFiles/COS/COS_Main.c: 44:  COS_ms_tmr = 0;
  8369  020A  01CD               	clrf	_COS_ms_tmr
  8370  020B  01CE               	clrf	_COS_ms_tmr+1
  8371                           
  8372                           ;SourceFiles/COS/COS_Main.c: 45:  COS_sec_tmr = 0;
  8373  020C  01CB               	clrf	_COS_sec_tmr	;volatile
  8374  020D  01CC               	clrf	_COS_sec_tmr+1	;volatile
  8375                           
  8376                           ;SourceFiles/COS/COS_Main.c: 46:  COS_tsk_tmr = 0;
  8377  020E  01C9               	clrf	_COS_tsk_tmr
  8378  020F  01CA               	clrf	_COS_tsk_tmr+1
  8379                           
  8380                           ;SourceFiles/COS/COS_Main.c: 48:  tempbyte2 = TMR1H;
  8381  0210  0817               	movf	23,w	;volatile
  8382  0211  00D3               	movwf	??_COS_Init
  8383  0212  0853               	movf	??_COS_Init,w
  8384  0213  00D7               	movwf	COS_Init@tempbyte2
  8385                           
  8386                           ;SourceFiles/COS/COS_Main.c: 49:  tempbyte1 = TMR1L;
  8387  0214  0816               	movf	22,w	;volatile
  8388  0215  00D3               	movwf	??_COS_Init
  8389  0216  0853               	movf	??_COS_Init,w
  8390  0217  00D6               	movwf	COS_Init@tempbyte1
  8391                           
  8392                           ;SourceFiles/COS/COS_Main.c: 50:  if (tempbyte2 != TMR1H)
  8393  0218  0857               	movf	COS_Init@tempbyte2,w
  8394  0219  0617               	xorwf	23,w	;volatile
  8395  021A  1903               	skipnz
  8396  021B  2A24               	goto	l29
  8397                           
  8398                           ;SourceFiles/COS/COS_Main.c: 51:  {;SourceFiles/COS/COS_Main.c: 52:   tempbyte2 = TMR1H;
  8399  021C  0817               	movf	23,w	;volatile
  8400  021D  00D3               	movwf	??_COS_Init
  8401  021E  0853               	movf	??_COS_Init,w
  8402  021F  00D7               	movwf	COS_Init@tempbyte2
  8403                           
  8404                           ;SourceFiles/COS/COS_Main.c: 53:   tempbyte1 = TMR1L;
  8405  0220  0816               	movf	22,w	;volatile
  8406  0221  00D3               	movwf	??_COS_Init
  8407  0222  0853               	movf	??_COS_Init,w
  8408  0223  00D6               	movwf	COS_Init@tempbyte1
  8409  0224                     l29:	
  8410                           ;SourceFiles/COS/COS_Main.c: 54:  }
  8411                           
  8412                           
  8413                           ;SourceFiles/COS/COS_Main.c: 55:  COS_tcnt_val = ((UINT_16)tempbyte2 << 8)&0xff00;
  8414  0224  0857               	movf	COS_Init@tempbyte2,w
  8415  0225  00D3               	movwf	??_COS_Init
  8416  0226  01D4               	clrf	??_COS_Init+1
  8417  0227  0853               	movf	??_COS_Init,w
  8418  0228  00D4               	movwf	??_COS_Init+1
  8419  0229  01D3               	clrf	??_COS_Init
  8420  022A  3000               	movlw	0
  8421  022B  0553               	andwf	??_COS_Init,w
  8422  022C  00F6               	movwf	_COS_tcnt_val
  8423  022D  30FF               	movlw	255
  8424  022E  0554               	andwf	??_COS_Init+1,w
  8425  022F  00F7               	movwf	_COS_tcnt_val+1
  8426                           
  8427                           ;SourceFiles/COS/COS_Main.c: 56:  COS_tcnt_val = COS_tcnt_val | ((UINT_16)tempbyte1 & 0x
      +                          00ff);
  8428  0230  0876               	movf	_COS_tcnt_val,w
  8429  0231  0456               	iorwf	COS_Init@tempbyte1,w
  8430  0232  00F6               	movwf	_COS_tcnt_val
  8431  0233  0877               	movf	_COS_tcnt_val+1,w
  8432  0234  00F7               	movwf	_COS_tcnt_val+1
  8433                           
  8434                           ;SourceFiles/COS/COS_Main.c: 57:  COS_tcnt_lst = COS_tcnt_val;
  8435  0235  0877               	movf	_COS_tcnt_val+1,w
  8436  0236  00C8               	movwf	_COS_tcnt_lst+1
  8437  0237  0876               	movf	_COS_tcnt_val,w
  8438  0238  00C7               	movwf	_COS_tcnt_lst
  8439  0239  0008               	return
  8440  023A                     __end_of_COS_Init:
  8441                           
  8442                           	psect	text72
  8443  05C4                     __ptext72:	
  8444 ;; *************** function _COS_TimerSetup *****************
  8445 ;; Defined at:
  8446 ;;		line 68 in file "SourceFiles/COS/COS_Main.c"
  8447 ;; Parameters:    Size  Location     Type
  8448 ;;		None
  8449 ;; Auto vars:     Size  Location     Type
  8450 ;;		None
  8451 ;; Return value:  Size  Location     Type
  8452 ;;                  1    wreg      void 
  8453 ;; Registers used:
  8454 ;;		wreg, status,2
  8455 ;; Tracked objects:
  8456 ;;		On entry : 0/0
  8457 ;;		On exit  : 0/0
  8458 ;;		Unchanged: 0/0
  8459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8460 ;;      Params:         0       0       0       0       0       0       0       0
  8461 ;;      Locals:         0       0       0       0       0       0       0       0
  8462 ;;      Temps:          0       0       0       0       0       0       0       0
  8463 ;;      Totals:         0       0       0       0       0       0       0       0
  8464 ;;Total ram usage:        0 bytes
  8465 ;; Hardware stack levels used:    1
  8466 ;; Hardware stack levels required when called:    5
  8467 ;; This function calls:
  8468 ;;		Nothing
  8469 ;; This function is called by:
  8470 ;;		_COS_Init
  8471 ;; This function uses a non-reentrant model
  8472 ;;
  8473                           
  8474                           
  8475                           ;psect for function _COS_TimerSetup
  8476  05C4                     _COS_TimerSetup:
  8477                           
  8478                           ;SourceFiles/COS/COS_Main.c: 72:  TMR1H = 0;
  8479                           
  8480                           ;incstack = 0
  8481                           ; Regs used in _COS_TimerSetup: [wreg+status,2]
  8482  05C4  0020               	movlb	0	; select bank0
  8483  05C5  0197               	clrf	23	;volatile
  8484                           
  8485                           ;SourceFiles/COS/COS_Main.c: 73:  TMR1L = 0;
  8486  05C6  0196               	clrf	22	;volatile
  8487                           
  8488                           ;SourceFiles/COS/COS_Main.c: 78:  T1CON = 0b00100001;
  8489  05C7  3021               	movlw	33
  8490  05C8  0098               	movwf	24	;volatile
  8491  05C9  0008               	return
  8492  05CA                     __end_of_COS_TimerSetup:
  8493                           
  8494                           	psect	intentry
  8495  0004                     __pintentry:	
  8496 ;; *************** function _INTERRUPT_InterruptManager *****************
  8497 ;; Defined at:
  8498 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8499 ;; Parameters:    Size  Location     Type
  8500 ;;		None
  8501 ;; Auto vars:     Size  Location     Type
  8502 ;;		None
  8503 ;; Return value:  Size  Location     Type
  8504 ;;                  1    wreg      void 
  8505 ;; Registers used:
  8506 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8507 ;; Tracked objects:
  8508 ;;		On entry : 0/0
  8509 ;;		On exit  : 0/0
  8510 ;;		Unchanged: 0/0
  8511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8512 ;;      Params:         0       0       0       0       0       0       0       0
  8513 ;;      Locals:         0       0       0       0       0       0       0       0
  8514 ;;      Temps:          0       0       0       0       0       0       0       0
  8515 ;;      Totals:         0       0       0       0       0       0       0       0
  8516 ;;Total ram usage:        0 bytes
  8517 ;; Hardware stack levels used:    1
  8518 ;; Hardware stack levels required when called:    4
  8519 ;; This function calls:
  8520 ;;		_TMR2_ISR
  8521 ;; This function is called by:
  8522 ;;		Interrupt level 1
  8523 ;; This function uses a non-reentrant model
  8524 ;;
  8525                           
  8526  0004                     _INTERRUPT_InterruptManager:
  8527                           
  8528                           ;incstack = 0
  8529  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8530                           
  8531                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8532  0005  3180               	pagesel	$
  8533                           
  8534                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  8535  0006  1F0B               	btfss	11,6	;volatile
  8536  0007  2810               	goto	i1l229
  8537                           
  8538                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  8539  0008  0021               	movlb	1	; select bank1
  8540  0009  1C91               	btfss	17,1	;volatile
  8541  000A  2810               	goto	i1l229
  8542  000B  0020               	movlb	0	; select bank0
  8543  000C  1C91               	btfss	17,1	;volatile
  8544  000D  2810               	goto	i1l229
  8545                           
  8546                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR2_ISR();
  8547  000E  3184  2488         	fcall	_TMR2_ISR
  8548  0010                     i1l229:	
  8549                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  8550                           
  8551  0010  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8552  0011  0009               	retfie
  8553  0012                     __end_of_INTERRUPT_InterruptManager:
  8554                           
  8555                           	psect	text74
  8556  0488                     __ptext74:	
  8557 ;; *************** function _TMR2_ISR *****************
  8558 ;; Defined at:
  8559 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  8560 ;; Parameters:    Size  Location     Type
  8561 ;;		None
  8562 ;; Auto vars:     Size  Location     Type
  8563 ;;		None
  8564 ;; Return value:  Size  Location     Type
  8565 ;;                  1    wreg      void 
  8566 ;; Registers used:
  8567 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8568 ;; Tracked objects:
  8569 ;;		On entry : 0/0
  8570 ;;		On exit  : 0/0
  8571 ;;		Unchanged: 0/0
  8572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8573 ;;      Params:         0       0       0       0       0       0       0       0
  8574 ;;      Locals:         0       0       0       0       0       0       0       0
  8575 ;;      Temps:          0       0       0       0       0       0       0       0
  8576 ;;      Totals:         0       0       0       0       0       0       0       0
  8577 ;;Total ram usage:        0 bytes
  8578 ;; Hardware stack levels used:    1
  8579 ;; Hardware stack levels required when called:    3
  8580 ;; This function calls:
  8581 ;;		_TMR2_CallBack
  8582 ;; This function is called by:
  8583 ;;		_INTERRUPT_InterruptManager
  8584 ;; This function uses a non-reentrant model
  8585 ;;
  8586                           
  8587                           
  8588                           ;psect for function _TMR2_ISR
  8589  0488                     _TMR2_ISR:
  8590                           
  8591                           ;mcc_generated_files/tmr2.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr2.c: 124:     PIR1bits.TMR2IF = 0;
  8592                           
  8593                           ;incstack = 0
  8594                           ; Regs used in _TMR2_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8595  0488  0020               	movlb	0	; select bank0
  8596  0489  1091               	bcf	17,1	;volatile
  8597                           
  8598                           ;mcc_generated_files/tmr2.c: 127:     if (++CountCallBack >= 5)
  8599  048A  3001               	movlw	1
  8600  048B  07C5               	addwf	TMR2_ISR@CountCallBack,f	;volatile
  8601  048C  3000               	movlw	0
  8602  048D  3DC6               	addwfc	TMR2_ISR@CountCallBack+1,f	;volatile
  8603  048E  3000               	movlw	0
  8604  048F  0246               	subwf	TMR2_ISR@CountCallBack+1,w	;volatile
  8605  0490  3005               	movlw	5
  8606  0491  1903               	skipnz
  8607  0492  0245               	subwf	TMR2_ISR@CountCallBack,w	;volatile
  8608  0493  1C03               	skipc
  8609  0494  0008               	return
  8610                           
  8611                           ;mcc_generated_files/tmr2.c: 128:     {;mcc_generated_files/tmr2.c: 130:         TMR2_Ca
      +                          llBack();
  8612  0495  3185  2537         	fcall	_TMR2_CallBack
  8613                           
  8614                           ;mcc_generated_files/tmr2.c: 133:         CountCallBack = 0;
  8615  0497  0020               	movlb	0	; select bank0
  8616  0498  01C5               	clrf	TMR2_ISR@CountCallBack	;volatile
  8617  0499  01C6               	clrf	TMR2_ISR@CountCallBack+1	;volatile
  8618  049A  0008               	return
  8619  049B                     __end_of_TMR2_ISR:
  8620                           
  8621                           	psect	text75
  8622  0537                     __ptext75:	
  8623 ;; *************** function _TMR2_CallBack *****************
  8624 ;; Defined at:
  8625 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  8626 ;; Parameters:    Size  Location     Type
  8627 ;;		None
  8628 ;; Auto vars:     Size  Location     Type
  8629 ;;		None
  8630 ;; Return value:  Size  Location     Type
  8631 ;;                  1    wreg      void 
  8632 ;; Registers used:
  8633 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8634 ;; Tracked objects:
  8635 ;;		On entry : 0/0
  8636 ;;		On exit  : 0/0
  8637 ;;		Unchanged: 0/0
  8638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8639 ;;      Params:         0       0       0       0       0       0       0       0
  8640 ;;      Locals:         0       0       0       0       0       0       0       0
  8641 ;;      Temps:          0       0       0       0       0       0       0       0
  8642 ;;      Totals:         0       0       0       0       0       0       0       0
  8643 ;;Total ram usage:        0 bytes
  8644 ;; Hardware stack levels used:    1
  8645 ;; Hardware stack levels required when called:    2
  8646 ;; This function calls:
  8647 ;;		Absolute function
  8648 ;;		_Led2_PWM
  8649 ;;		_TMR2_DefaultInterruptHandler
  8650 ;; This function is called by:
  8651 ;;		_TMR2_ISR
  8652 ;; This function uses a non-reentrant model
  8653 ;;
  8654                           
  8655                           
  8656                           ;psect for function _TMR2_CallBack
  8657  0537                     _TMR2_CallBack:
  8658                           
  8659                           ;mcc_generated_files/tmr2.c: 141:     if(TMR2_InterruptHandler)
  8660                           
  8661                           ;incstack = 0
  8662                           ; Regs used in _TMR2_CallBack: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8663  0537  0020               	movlb	0	; select bank0
  8664  0538  086B               	movf	_TMR2_InterruptHandler,w
  8665  0539  046C               	iorwf	_TMR2_InterruptHandler+1,w
  8666  053A  1903               	btfsc	3,2
  8667  053B  0008               	return
  8668                           
  8669                           ;mcc_generated_files/tmr2.c: 142:     {;mcc_generated_files/tmr2.c: 143:         TMR2_In
      +                          terruptHandler();
  8670  053C  086C               	movf	_TMR2_InterruptHandler+1,w
  8671  053D  008A               	movwf	10
  8672  053E  086B               	movf	_TMR2_InterruptHandler,w
  8673  053F  000A               	callw
  8674  0540  3185               	pagesel	$
  8675  0541  0008               	return
  8676  0542                     __end_of_TMR2_CallBack:
  8677                           
  8678                           	psect	text76
  8679  00AB                     __ptext76:	
  8680 ;; *************** function _Led2_PWM *****************
  8681 ;; Defined at:
  8682 ;;		line 30 in file "SourceFiles/SunSensor/Led.c"
  8683 ;; Parameters:    Size  Location     Type
  8684 ;;		None
  8685 ;; Auto vars:     Size  Location     Type
  8686 ;;		None
  8687 ;; Return value:  Size  Location     Type
  8688 ;;                  1    wreg      void 
  8689 ;; Registers used:
  8690 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8691 ;; Tracked objects:
  8692 ;;		On entry : 0/0
  8693 ;;		On exit  : 0/0
  8694 ;;		Unchanged: 0/0
  8695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8696 ;;      Params:         0       0       0       0       0       0       0       0
  8697 ;;      Locals:         0       0       0       0       0       0       0       0
  8698 ;;      Temps:          2       0       0       0       0       0       0       0
  8699 ;;      Totals:         2       0       0       0       0       0       0       0
  8700 ;;Total ram usage:        2 bytes
  8701 ;; Hardware stack levels used:    1
  8702 ;; Hardware stack levels required when called:    1
  8703 ;; This function calls:
  8704 ;;		_PWM1_LoadDutyValue
  8705 ;; This function is called by:
  8706 ;;		_main
  8707 ;;		_TMR2_CallBack
  8708 ;; This function uses a non-reentrant model
  8709 ;;
  8710                           
  8711                           
  8712                           ;psect for function _Led2_PWM
  8713  00AB                     _Led2_PWM:
  8714                           
  8715                           ;SourceFiles/SunSensor/Led.c: 32:     switch (BreathState)
  8716                           
  8717                           ;incstack = 0
  8718                           ; Regs used in _Led2_PWM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8719  00AB  28F6               	goto	i1l2744
  8720  00AC                     i1l2716:
  8721                           
  8722                           ;SourceFiles/SunSensor/Led.c: 35:             counter++;
  8723  00AC  3001               	movlw	1
  8724  00AD  0020               	movlb	0	; select bank0
  8725  00AE  07C3               	addwf	_counter,f
  8726  00AF  3000               	movlw	0
  8727  00B0  3DC4               	addwfc	_counter+1,f
  8728                           
  8729                           ;SourceFiles/SunSensor/Led.c: 36:             if(counter > 100)
  8730  00B1  3000               	movlw	0
  8731  00B2  0244               	subwf	_counter+1,w
  8732  00B3  3065               	movlw	101
  8733  00B4  1903               	skipnz
  8734  00B5  0243               	subwf	_counter,w
  8735  00B6  1C03               	skipc
  8736  00B7  28BD               	goto	i1l2720
  8737                           
  8738                           ;SourceFiles/SunSensor/Led.c: 37:             {;SourceFiles/SunSensor/Led.c: 38:        
      +                                   BreathState = 2;
  8739  00B8  3002               	movlw	2
  8740  00B9  00F4               	movwf	??_Led2_PWM
  8741  00BA  0874               	movf	??_Led2_PWM,w
  8742  00BB  00FB               	movwf	_BreathState
  8743                           
  8744                           ;SourceFiles/SunSensor/Led.c: 39:             }
  8745  00BC  2909               	goto	i1l2746
  8746  00BD                     i1l2720:
  8747                           
  8748                           ;SourceFiles/SunSensor/Led.c: 41:             {;SourceFiles/SunSensor/Led.c: 42:        
      +                                   dutyValue += 8;
  8749  00BD  3008               	movlw	8
  8750  00BE  07C1               	addwf	_dutyValue,f
  8751  00BF  3000               	movlw	0
  8752  00C0  3DC2               	addwfc	_dutyValue+1,f
  8753  00C1  2909               	goto	i1l2746
  8754  00C2                     i1l2722:
  8755                           
  8756                           ;SourceFiles/SunSensor/Led.c: 46:             counter++;
  8757  00C2  3001               	movlw	1
  8758  00C3  0020               	movlb	0	; select bank0
  8759  00C4  07C3               	addwf	_counter,f
  8760  00C5  3000               	movlw	0
  8761  00C6  3DC4               	addwfc	_counter+1,f
  8762                           
  8763                           ;SourceFiles/SunSensor/Led.c: 47:             if (counter >= (100 + 200))
  8764  00C7  3001               	movlw	1
  8765  00C8  0244               	subwf	_counter+1,w
  8766  00C9  302C               	movlw	44
  8767  00CA  1903               	skipnz
  8768  00CB  0243               	subwf	_counter,w
  8769  00CC  1C03               	skipc
  8770  00CD  28D5               	goto	i1l2728
  8771                           
  8772                           ;SourceFiles/SunSensor/Led.c: 48:             {;SourceFiles/SunSensor/Led.c: 49:        
      +                                   BreathState = 3;
  8773  00CE  3003               	movlw	3
  8774  00CF  00F4               	movwf	??_Led2_PWM
  8775  00D0  0874               	movf	??_Led2_PWM,w
  8776  00D1  00FB               	movwf	_BreathState
  8777  00D2                     i1l2726:
  8778                           
  8779                           ;SourceFiles/SunSensor/Led.c: 51:                 dutyValue = 0;
  8780  00D2  01C1               	clrf	_dutyValue
  8781  00D3  01C2               	clrf	_dutyValue+1
  8782                           
  8783                           ;SourceFiles/SunSensor/Led.c: 53:             }
  8784  00D4  2909               	goto	i1l2746
  8785  00D5                     i1l2728:
  8786                           
  8787                           ;SourceFiles/SunSensor/Led.c: 55:             {;SourceFiles/SunSensor/Led.c: 56:        
      +                                   if (dutyValue > 0)
  8788  00D5  0841               	movf	_dutyValue,w
  8789  00D6  0442               	iorwf	_dutyValue+1,w
  8790  00D7  1903               	btfsc	3,2
  8791  00D8  2909               	goto	i1l2746
  8792                           
  8793                           ;SourceFiles/SunSensor/Led.c: 57:                 {;SourceFiles/SunSensor/Led.c: 58:    
      +                                           if (dutyValue > 4)
  8794  00D9  3000               	movlw	0
  8795  00DA  0242               	subwf	_dutyValue+1,w
  8796  00DB  3005               	movlw	5
  8797  00DC  1903               	skipnz
  8798  00DD  0241               	subwf	_dutyValue,w
  8799  00DE  1C03               	skipc
  8800  00DF  28D2               	goto	i1l2726
  8801                           
  8802                           ;SourceFiles/SunSensor/Led.c: 59:                     {;SourceFiles/SunSensor/Led.c: 60:
      +                                                   dutyValue-=4;
  8803  00E0  3004               	movlw	4
  8804  00E1  02C1               	subwf	_dutyValue,f
  8805  00E2  3000               	movlw	0
  8806  00E3  3BC2               	subwfb	_dutyValue+1,f
  8807                           
  8808                           ;SourceFiles/SunSensor/Led.c: 61:                     }
  8809  00E4  2909               	goto	i1l2746
  8810  00E5                     i1l2736:
  8811                           
  8812                           ;SourceFiles/SunSensor/Led.c: 71:             counter++;
  8813  00E5  3001               	movlw	1
  8814  00E6  0020               	movlb	0	; select bank0
  8815  00E7  07C3               	addwf	_counter,f
  8816  00E8  3000               	movlw	0
  8817  00E9  3DC4               	addwfc	_counter+1,f
  8818                           
  8819                           ;SourceFiles/SunSensor/Led.c: 72:             if (counter > (100 + 200 + 100))
  8820  00EA  3001               	movlw	1
  8821  00EB  0244               	subwf	_counter+1,w
  8822  00EC  3091               	movlw	145
  8823  00ED  1903               	skipnz
  8824  00EE  0243               	subwf	_counter,w
  8825  00EF  1C03               	skipc
  8826  00F0  2909               	goto	i1l2746
  8827                           
  8828                           ;SourceFiles/SunSensor/Led.c: 73:             {;SourceFiles/SunSensor/Led.c: 74:        
      +                                   counter = 0;
  8829  00F1  01C3               	clrf	_counter
  8830  00F2  01C4               	clrf	_counter+1
  8831                           
  8832                           ;SourceFiles/SunSensor/Led.c: 75:                 BreathState = 1;
  8833  00F3  01FB               	clrf	_BreathState
  8834  00F4  0AFB               	incf	_BreathState,f
  8835  00F5  2909               	goto	i1l2746
  8836  00F6                     i1l2744:
  8837  00F6  087B               	movf	_BreathState,w
  8838  00F7  00F4               	movwf	??_Led2_PWM
  8839  00F8  01F5               	clrf	??_Led2_PWM+1
  8840                           
  8841                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8842                           ; Switch size 1, requested type "simple"
  8843                           ; Number of cases is 1, Range of values is 0 to 0
  8844                           ; switch strategies available:
  8845                           ; Name         Instructions Cycles
  8846                           ; simple_byte            4     3 (average)
  8847                           ; direct_byte            8     6 (fixed)
  8848                           ; jumptable            260     6 (fixed)
  8849                           ;	Chosen strategy is simple_byte
  8850  00F9  0875               	movf	??_Led2_PWM+1,w
  8851  00FA  3A00               	xorlw	0	; case 0
  8852  00FB  1903               	skipnz
  8853  00FC  28FE               	goto	i1l3982
  8854  00FD  2909               	goto	i1l2746
  8855  00FE                     i1l3982:
  8856                           
  8857                           ; Switch size 1, requested type "simple"
  8858                           ; Number of cases is 3, Range of values is 1 to 3
  8859                           ; switch strategies available:
  8860                           ; Name         Instructions Cycles
  8861                           ; simple_byte           10     6 (average)
  8862                           ; direct_byte           15     9 (fixed)
  8863                           ; jumptable            263     9 (fixed)
  8864                           ;	Chosen strategy is simple_byte
  8865  00FE  0874               	movf	??_Led2_PWM,w
  8866  00FF  3A01               	xorlw	1	; case 1
  8867  0100  1903               	skipnz
  8868  0101  28AC               	goto	i1l2716
  8869  0102  3A03               	xorlw	3	; case 2
  8870  0103  1903               	skipnz
  8871  0104  28C2               	goto	i1l2722
  8872  0105  3A01               	xorlw	1	; case 3
  8873  0106  1903               	skipnz
  8874  0107  28E5               	goto	i1l2736
  8875  0108  2909               	goto	i1l2746
  8876  0109                     i1l2746:
  8877                           
  8878                           ;SourceFiles/SunSensor/Led.c: 82:     PWM1_LoadDutyValue(dutyValue);
  8879  0109  0020               	movlb	0	; select bank0
  8880  010A  0842               	movf	_dutyValue+1,w
  8881  010B  00F1               	movwf	PWM1_LoadDutyValue@dutyValue+1
  8882  010C  0841               	movf	_dutyValue,w
  8883  010D  00F0               	movwf	PWM1_LoadDutyValue@dutyValue
  8884  010E  3184  245D         	fcall	_PWM1_LoadDutyValue
  8885  0110  0008               	return
  8886  0111                     __end_of_Led2_PWM:
  8887                           
  8888                           	psect	text77
  8889  062A                     __ptext77:	
  8890 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  8891 ;; Defined at:
  8892 ;;		line 151 in file "mcc_generated_files/tmr2.c"
  8893 ;; Parameters:    Size  Location     Type
  8894 ;;		None
  8895 ;; Auto vars:     Size  Location     Type
  8896 ;;		None
  8897 ;; Return value:  Size  Location     Type
  8898 ;;                  1    wreg      void 
  8899 ;; Registers used:
  8900 ;;		None
  8901 ;; Tracked objects:
  8902 ;;		On entry : 0/0
  8903 ;;		On exit  : 0/0
  8904 ;;		Unchanged: 0/0
  8905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8906 ;;      Params:         0       0       0       0       0       0       0       0
  8907 ;;      Locals:         0       0       0       0       0       0       0       0
  8908 ;;      Temps:          0       0       0       0       0       0       0       0
  8909 ;;      Totals:         0       0       0       0       0       0       0       0
  8910 ;;Total ram usage:        0 bytes
  8911 ;; Hardware stack levels used:    1
  8912 ;; This function calls:
  8913 ;;		Nothing
  8914 ;; This function is called by:
  8915 ;;		_TMR2_Initialize
  8916 ;;		_TMR2_CallBack
  8917 ;; This function uses a non-reentrant model
  8918 ;;
  8919                           
  8920                           
  8921                           ;psect for function _TMR2_DefaultInterruptHandler
  8922  062A                     _TMR2_DefaultInterruptHandler:
  8923                           
  8924                           ;incstack = 0
  8925                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  8926  062A  0008               	return
  8927  062B                     __end_of_TMR2_DefaultInterruptHandler:
  8928                           
  8929                           	psect	text78
  8930  045D                     __ptext78:	
  8931 ;; *************** function _PWM1_LoadDutyValue *****************
  8932 ;; Defined at:
  8933 ;;		line 72 in file "mcc_generated_files/pwm1.c"
  8934 ;; Parameters:    Size  Location     Type
  8935 ;;  dutyValue       2    0[COMMON] unsigned short 
  8936 ;; Auto vars:     Size  Location     Type
  8937 ;;		None
  8938 ;; Return value:  Size  Location     Type
  8939 ;;                  1    wreg      void 
  8940 ;; Registers used:
  8941 ;;		wreg, status,2, status,0
  8942 ;; Tracked objects:
  8943 ;;		On entry : 0/0
  8944 ;;		On exit  : 0/0
  8945 ;;		Unchanged: 0/0
  8946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8947 ;;      Params:         2       0       0       0       0       0       0       0
  8948 ;;      Locals:         0       0       0       0       0       0       0       0
  8949 ;;      Temps:          2       0       0       0       0       0       0       0
  8950 ;;      Totals:         4       0       0       0       0       0       0       0
  8951 ;;Total ram usage:        4 bytes
  8952 ;; Hardware stack levels used:    1
  8953 ;; This function calls:
  8954 ;;		Nothing
  8955 ;; This function is called by:
  8956 ;;		_Led2_PWM
  8957 ;; This function uses a non-reentrant model
  8958 ;;
  8959                           
  8960                           
  8961                           ;psect for function _PWM1_LoadDutyValue
  8962  045D                     _PWM1_LoadDutyValue:
  8963                           
  8964                           ;mcc_generated_files/pwm1.c: 72:  void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm1.c: 73:  {;mcc_generated_files/pwm1.c: 75:      PWM1DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  8965                           
  8966                           ;incstack = 0
  8967                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2+status,0]
  8968  045D  0871               	movf	PWM1_LoadDutyValue@dutyValue+1,w
  8969  045E  00F3               	movwf	??_PWM1_LoadDutyValue+1
  8970  045F  0870               	movf	PWM1_LoadDutyValue@dutyValue,w
  8971  0460  00F2               	movwf	??_PWM1_LoadDutyValue
  8972  0461  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
  8973  0462  0CF2               	rrf	??_PWM1_LoadDutyValue,f
  8974  0463  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
  8975  0464  0CF2               	rrf	??_PWM1_LoadDutyValue,f
  8976  0465  0872               	movf	??_PWM1_LoadDutyValue,w
  8977  0466  002C               	movlb	12	; select bank12
  8978  0467  0092               	movwf	18	;volatile
  8979                           
  8980                           ;mcc_generated_files/pwm1.c: 78:      PWM1DCL = (dutyValue & 0x0003)<<6;
  8981  0468  0870               	movf	PWM1_LoadDutyValue@dutyValue,w
  8982  0469  3903               	andlw	3
  8983  046A  00F2               	movwf	??_PWM1_LoadDutyValue
  8984  046B  3005               	movlw	5
  8985  046C                     u85_25:
  8986  046C  35F2               	lslf	??_PWM1_LoadDutyValue,f
  8987  046D  3EFF               	addlw	-1
  8988  046E  1D03               	skipz
  8989  046F  2C6C               	goto	u85_25
  8990  0470  3572               	lslf	??_PWM1_LoadDutyValue,w
  8991  0471  0091               	movwf	17	;volatile
  8992  0472  0008               	return
  8993  0473                     __end_of_PWM1_LoadDutyValue:
  8994  007E                     btemp	set	126	;btemp
  8995  007E                     int$flags	set	126
  8996  007E                     wtemp0	set	126
  8997                           
  8998                           	psect	config
  8999                           
  9000                           ;Config register CONFIG1 @ 0x8007
  9001                           ;	Oscillator Selection Bits
  9002                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  9003                           ;	Watchdog Timer Enable
  9004                           ;	WDTE = OFF, WDT disabled
  9005                           ;	Power-up Timer Enable
  9006                           ;	PWRTE = OFF, PWRT disabled
  9007                           ;	MCLR Pin Function Select
  9008                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  9009                           ;	Flash Program Memory Code Protection
  9010                           ;	CP = OFF, Program memory code protection is disabled
  9011                           ;	Brown-out Reset Enable
  9012                           ;	BOREN = ON, Brown-out Reset enabled
  9013                           ;	Clock Out Enable
  9014                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  9015                           ;	Internal/External Switchover Mode
  9016                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  9017                           ;	Fail-Safe Clock Monitor Enable
  9018                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  9019  8007                     	org	32775
  9020  8007  3FE4               	dw	16356
  9021                           
  9022                           ;Config register CONFIG2 @ 0x8008
  9023                           ;	Flash Memory Self-Write Protection
  9024                           ;	WRT = OFF, Write protection off
  9025                           ;	Stack Overflow/Underflow Reset Enable
  9026                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  9027                           ;	Brown-out Reset Voltage Selection
  9028                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  9029                           ;	Low-Power Brown Out Reset
  9030                           ;	LPBOR = OFF, Low-Power BOR is disabled
  9031                           ;	Low-Voltage Programming Enable
  9032                           ;	LVP = ON, Low-voltage programming enabled
  9033  8008                     	org	32776
  9034  8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    47
    Data        3
    BSS         55
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     24      80
    BANK1            80      2       8
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_DO_TX$1817$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$1822	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$1817	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$1816	const PTR FTN()enum E3874 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    COS_TskMan$1815	const PTR FTN()void  size(2) Largest target is 1
		 -> GetTemp(), UartDisplay(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S582$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    I2C_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> TempH(BANK0[1]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), 
		 -> I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), 
		 -> I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S582$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> TempH(BANK0[1]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), 
		 -> I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), 
		 -> I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> TempH(BANK0[1]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), 
		 -> I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), 
		 -> I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S582$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S582$callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    fsmStateTable	const PTR FTN()enum E3874[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Led2_PWM(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Led2_PWM(), Absolute function(), TMR2_DefaultInterruptHandler(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S138$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0

    I2C_ReadNBytes@data	PTR unsigned char  size(1) Largest target is 1
		 -> TempH(BANK0[1]), 

    I2C_WriteNBytes@data	PTR unsigned char  size(1) Largest target is 1
		 -> TempH(BANK0[1]), 

    S30$tptr	PTR FTN()void  size(2) Largest target is 1
		 -> GetTemp(), UartDisplay(), 

    COS_tsk.tptr	PTR FTN()void  size(2) Largest target is 1
		 -> GetTemp(), UartDisplay(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR2_CallBack->_Led2_PWM
    _Led2_PWM->_PWM1_LoadDutyValue

Critical Paths under _main in BANK0

    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _COS_TskMan->_GetTemp
    _UartDisplay->_EUSART_Write
    _GetTemp->_I2C_ReadNBytes
    _GetTemp->_I2C_WriteNBytes
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_MasterRead->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_COS_TskMan

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  195236
                           _COS_Init
                     _COS_TmrHandler
                         _COS_TskMan
                  _SYSTEM_Initialize
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     574
                  _EUSART_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _COS_TskMan                                           2     2      0  194241
                                              0 BANK1      2     2      0
                            _GetTemp *
                        _UartDisplay *
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1486
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _UartDisplay                                          0     0      0      31
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _GetTemp                                              1     1      0  192724
                                             23 BANK0      1     1      0
                     _I2C_ReadNBytes
                    _I2C_WriteNBytes
                         _SendByUart
 ---------------------------------------------------------------------------------
 (3) _SendByUart                                           2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _I2C_WriteNBytes                                      4     1      3   97476
                                             19 BANK0      4     1      3
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (4) _I2C_SetAddressNackCallback                           4     1      3    2259
                                              5 BANK0      4     1      3
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterWrite                                      0     0      0   93265
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (3) _I2C_ReadNBytes                                       4     1      3   95217
                                             19 BANK0      4     1      3
                          _I2C_Close
                     _I2C_MasterRead
                           _I2C_Open
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (4) _I2C_Open                                             3     3      0      68
                                              0 BANK0      3     3      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterRead                                       0     0      0   93265
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterOperation                                  3     3      0   93265
                                             16 BANK0      3     3      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (6) _I2C_Poller                                           0     0      0   93197
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterFsm                                        3     3      0   93197
                                             13 BANK0      3     3      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_TX_EMPTY                                      3     3      0   23276
                                             10 BANK0      3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_TX                                            3     3      0   23307
                                             10 BANK0      3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_ADR_WRITE                                0     0      0      31
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_ADR_READ                                 0     0      0      31
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendTxData                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX                                            3     3      0   23276
                                             10 BANK0      3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_ADDRESS_NACK                                  3     3      0   23276
                                             10 BANK0      3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _wr2RegCompleteHandler                                1     0      1    4584
                                              9 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _wr1RegCompleteHandler                                1     0      1    4584
                                              9 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rdBlkRegCompleteHandler                              1     0      1    4615
                                              9 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd2RegCompleteHandler                                1     0      1    4584
                                              9 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd1RegCompleteHandler                                1     0      1    4584
                                              9 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _I2C_SetDataCompleteCallback                         4     1      3    2979
                                              5 BANK0      4     1      3
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C_SetCallback                                      5     2      3    1117
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (4) _I2C_SetBuffer                                        4     2      2    1574
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_CallbackReturnStop                               1     0      1       0
                                              9 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (9) _I2C_CallbackReturnReset                              1     0      1     325
                                              9 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Close                                            2     2      0      37
                                              0 BANK0      2     2      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _COS_TmrHandler                                       5     5      0     105
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _COS_Init                                             5     5      0     105
                                              0 BANK0      5     5      0
                     _COS_TimerSetup
 ---------------------------------------------------------------------------------
 (2) _COS_TimerSetup                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          0     0      0     120
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR2_ISR                                            0     0      0     120
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (14) _TMR2_CallBack                                       0     0      0     120
                   Absolute function *
                           _Led2_PWM *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _Led2_PWM                                            2     2      0     120
                                              4 COMMON     2     2      0
                 _PWM1_LoadDutyValue
 ---------------------------------------------------------------------------------
 (16) _PWM1_LoadDutyValue                                  4     2      2     120
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _COS_Init
     _COS_TimerSetup
   _COS_TmrHandler
   _COS_TskMan
     _GetTemp *
       _I2C_ReadNBytes
         _I2C_Close
           _I2C_MasterClearIrq
           _I2C_MasterClose
           _I2C_MasterDisableIrq
         _I2C_MasterRead
           _I2C_MasterOperation
             _I2C_MasterStart
             _I2C_Poller
               _I2C_MasterFsm
                 _I2C_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_IDLE *
                 _I2C_DO_RCEN *
                   _I2C_MasterStartRx
                 _I2C_DO_RESET *
                 _I2C_DO_RX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_RX_NACK_RESTART *
                     _I2C_MasterSendNack
                   _I2C_DO_RX_NACK_STOP *
                     _I2C_MasterSendNack
                   _I2C_MasterGetRxData *
                   _I2C_MasterSendAck *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_RX_ACK *
                   _I2C_MasterSendAck
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_DO_SEND_ADR_READ *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_ADR_WRITE *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_DO_TX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART_READ *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_RESTART_WRITE *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterIsNack *
                   _I2C_MasterSendTxData *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterSetIrq *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_MasterClearIrq *
                 _I2C_MasterIsNack *
               _I2C_MasterWaitForEvent
         _I2C_Open
           _I2C_MasterClearIrq
           _I2C_MasterOpen
         _I2C_SetBuffer
       _I2C_WriteNBytes
         _I2C_Close
           _I2C_MasterClearIrq
           _I2C_MasterClose
           _I2C_MasterDisableIrq
         _I2C_MasterWrite
           _I2C_MasterOperation
             _I2C_MasterStart
             _I2C_Poller
               _I2C_MasterFsm
                 _I2C_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_IDLE *
                 _I2C_DO_RCEN *
                   _I2C_MasterStartRx
                 _I2C_DO_RESET *
                 _I2C_DO_RX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_RX_NACK_RESTART *
                     _I2C_MasterSendNack
                   _I2C_DO_RX_NACK_STOP *
                     _I2C_MasterSendNack
                   _I2C_MasterGetRxData *
                   _I2C_MasterSendAck *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_RX_ACK *
                   _I2C_MasterSendAck
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_DO_SEND_ADR_READ *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_ADR_WRITE *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_DO_TX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART_READ *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_RESTART_WRITE *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterIsNack *
                   _I2C_MasterSendTxData *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterSetIrq *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_MasterClearIrq *
                 _I2C_MasterIsNack *
               _I2C_MasterWaitForEvent
         _I2C_Open
           _I2C_MasterClearIrq
           _I2C_MasterOpen
         _I2C_SetAddressNackCallback
           _I2C_SetCallback
         _I2C_SetBuffer
       _SendByUart
     _UartDisplay *
       _EUSART_Write
     ___wmul *
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize
   _TMR2_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _Led2_PWM *
         _PWM1_LoadDutyValue
       _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      64       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     18      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      2       8       8       10.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      64      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Jun 21 13:05:35 2020

                       ??_I2C_DO_SEND_ADR_READ 0053                    __size_of_I2C_MasterSendNack 0004  
                           __size_of_I2C_Close 0019               __end_of_TMR2_SetInterruptHandler 05AC  
                      ??_I2C_DO_SEND_ADR_WRITE 0054                                             l36 0126  
                                           l29 0224                                             l47 009A  
                          ___wmul@multiplicand 0055                            __size_of_I2C_Poller 000A  
                        ??_I2C_DO_SEND_RESTART 0053                                    ?_COS_TskMan 0070  
                 __size_of_I2C_MasterOperation 001A                  __size_of_I2C_MasterSendTxData 0006  
                                          l412 0270                                            l706 058B  
                                          l635 05E0                                            l478 01A2  
                                          l494 01D7                                            l886 03CA  
                                          l799 03ED                                            _PR2 001B  
                       _I2C_MasterWaitForEvent 05E0                 ?_EUSART_SetFramingErrorHandler 0053  
                              _TMR2_Initialize 049B                                            wreg 0009  
                 ??_I2C_SetAddressNackCallback 005B                       ??_I2C_CallbackReturnStop 005D  
                                 _I2C_DO_RESET 05CA                        ??_rd2RegCompleteHandler 005D  
                                         l3312 0178                                           l3330 01BB  
                                         l3322 017E                                           l3164 0352  
                                         l3316 017B                                           l3308 0175  
                                         l3422 02A9                                           l3352 01D9  
                                         l3362 01DF                                           l3418 02A6  
                                         l3356 01DC                                           l3428 02AC  
                                         l3444 02DB                                           l3382 0278  
                                         l3454 0542                                           l3544 045B  
                                         l3378 0275                                           l3394 027F  
                                         l3482 0406                                           l3562 0334  
                                         l3554 0318                                           l3730 006F  
                                         l3716 015B                                           l3388 027C  
                                         l3484 040A                                           l3572 03BA  
                                         l3566 03A6                                           l3488 040F  
                                         l3752 009B                                           l3666 03C4  
                              __end_of_COS_tsk 0504                                           l3980 0290  
                                         l3974 02C1                                           l3976 01F0  
                                         l3978 0194                        __end_of_PWM1_Initialize 0581  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           u1565 03CB  
                                         u1575 03D0                                           _TMR2 001A  
                                         _WPUA 020C                                           _WPUB 020D  
                      ??_wr2RegCompleteHandler 005D                                           _Humi 003D  
                                         _Temp 003F                                           _main 03DD  
                     ?_I2C_CallbackReturnReset 005C                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                               __end_of_I2C_Open 0272  
                                         btemp 007E                                           start 0012  
                              __end_of_GetTemp 0316               __size_of_rdBlkRegCompleteHandler 0019  
                             ?_I2C_MasterClose 0070                                _I2C_WriteNBytes 0316  
                             __end_of_COS_Init 023A                                  ?_EUSART_Write 0070  
          __size_of_I2C_SetAddressNackCallback 000D                 __size_of_OSCILLATOR_Initialize 0006  
                             ?_I2C_MasterStart 0070                                  _I2C_DO_RX_ACK 05EC  
                             ?_I2C_MasterWrite 0070                  __end_of_OSCILLATOR_Initialize 05B2  
                                        ?_main 0070                                          _T1CON 0018  
                                        _T2CON 001C                                          i1l229 0010  
                                        _RCREG 0199                   __size_of_I2C_DO_RX_NACK_STOP 0004  
                                        _RCSTA 019D                                          _TMR1H 0017  
                                        _TMR1L 0016                              ??_I2C_DO_TX_EMPTY 005D  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          u85_25 046C  
                                        _TXREG 019A                                          _TXSTA 019E  
                                        _TempH 006F                              __end_of_I2C_DO_RX 01FF  
                            __end_of_I2C_DO_TX 01BD                               __end_of_TMR2_ISR 049B  
                               _WDT_Initialize 05D4                              __end_of_I2C_Close 045D  
                       __size_of_I2C_MasterFsm 0027                 I2C_MasterOperation@returnValue 0065  
                      _I2C_MasterEnableRestart 0614                                          pclath 000A  
                             ?_I2C_SetCallback 0053                   I2C_SetAddressNackCallback@cb 0058  
                                        status 0003                               __end_of_Led2_PWM 0111  
                                        wtemp0 007E                              ?_I2C_DO_SEND_STOP 0070  
                       __size_of_I2C_SetBuffer 000E                            __size_of_COS_TskMan 007C  
                           ??_I2C_DO_SEND_STOP 0053                                  _fsmStateTable 0384  
                              __initialization 0014                                   __end_of_main 03F8  
            __size_of_I2C_DO_SEND_RESTART_READ 0004                      ?_I2C_DO_SEND_RESTART_READ 0070  
                               ??_EUSART_Write 0053                                 ?_I2C_DO_RX_ACK 0070  
                      __end_of_TMR2_Initialize 04AD                    ?_INTERRUPT_InterruptManager 0070  
                     _TMR2_SetInterruptHandler 05A6                                         ??_main 006B  
                            ?_I2C_MasterIsNack 0070                                    _BreathState 007B  
                            ?_I2C_MasterSetIrq 0070                             ??_I2C_MasterIsNack 0053  
                       __end_of_WDT_Initialize 05D8                                 _COS_TmrHandler 0111  
                           ??_I2C_MasterSetIrq 0053                                     _SendByUart 0570  
            _EUSART_DefaultFramingErrorHandler 0000                     _EUSART_OverrunErrorHandler 00A2  
              __end_of_I2C_CallbackReturnReset 0627                                 _COS_TimerSetup 05C4  
              __size_of_I2C_CallbackReturnStop 0002                                         _APFCON 011D  
                I2C_SetDataCompleteCallback@cb 0058                                         _ANSELA 018C  
                                       _ANSELB 018D                                         _ANSELC 018E  
                                       _BORCON 0116                                   ??_I2C_Poller 0063  
                             ?_PWM1_Initialize 0070                                         i1l2720 00BD  
                                       i1l2722 00C2                                         i1l2716 00AC  
                                       i1l2726 00D2                                         i1l2736 00E5  
                                       i1l2728 00D5                                         i1l2744 00F6  
                                       i1l2746 0109                                         i1l3982 00FE  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                    ??_GetTemp 006A                                         _SPBRGL 019B  
                                       _WDTCON 0097                                  ??_UartDisplay 0054  
                          _I2C_MasterGetRxData 060B                        __end_of_I2C_WriteNBytes 033B  
                                   _Timer2Flag 0050                        __size_of_I2C_ReadNBytes 001D  
                                       ___wmul 03C1                                  _I2C_MasterFsm 02CA  
                            I2C_SetCallback@cb 0053                        __size_of_I2C_MasterRead 0004  
                      __size_of_I2C_MasterOpen 000B                        __size_of_I2C_MasterStop 0003  
                      __size_of_I2C_Initialize 0009                                  _I2C_SetBuffer 0504  
                           __end_of_I2C_Poller 054C                   __end_of_I2C_MasterDisableIrq 061D  
                       __end_of_COS_TmrHandler 016E                            _I2C_DO_ADDRESS_NACK 029F  
                                 __pdataCOMMON 007A                           ?_I2C_MasterGetRxData 0070  
                                    ?_I2C_Open 0070             __end_of_I2C_SetAddressNackCallback 051F  
                   _I2C_SetAddressNackCallback 0512                                ?_WDT_Initialize 0070  
                       __end_of_COS_TimerSetup 05CA                      ??_I2C_MasterEnableRestart 0053  
     TMR2_SetInterruptHandler@InterruptHandler 0053                              _SYSTEM_Initialize 0473  
                      __end_of__initialization 002B                                      ?_COS_Init 0070  
                        __end_of_TMR2_CallBack 0542                            _I2C_MasterOperation 03F8  
                               _NewMessageFlag 0078                             ?_SYSTEM_Initialize 0070  
                         ?_I2C_DO_ADDRESS_NACK 0070                    PWM1_LoadDutyValue@dutyValue 0070  
                      _rdBlkRegCompleteHandler 042B                                 __pcstackCOMMON 0070  
                               ?_I2C_MasterFsm 0070                                ??_I2C_DO_RX_ACK 0053  
                                 __pidataBANK0 0629                         _I2C_CallbackReturnStop 0627  
                          ??_SYSTEM_Initialize 0055                            __end_of_UartDisplay 0589  
                                    ?_TMR2_ISR 0070                             _PWM1_LoadDutyValue 045D  
                             ?_TMR2_Initialize 0070                                 ?_I2C_SetBuffer 0053  
                      ?_I2C_MasterWaitForEvent 0070                 __size_of_I2C_DO_SEND_ADR_WRITE 0007  
           __size_of_I2C_DO_SEND_RESTART_WRITE 0004                  __end_of_I2C_DO_SEND_ADR_WRITE 05A0  
                                 ??_COS_TskMan 00A6                     ?_I2C_DO_SEND_RESTART_WRITE 0070  
                         ?_I2C_MasterOperation 0070                          ??_I2C_MasterGetRxData 0053  
                                    ?_Led2_PWM 0070                                ?_COS_TmrHandler 0070  
                               _OPTION_REGbits 0095                          I2C_ReadNBytes@address 0069  
                                   ??_I2C_Open 0053                            ?_PWM1_LoadDutyValue 0070  
                              ?_COS_TimerSetup 0070                     __end_of_I2C_MasterClearIrq 0623  
                                  ?_SendByUart 0070                ??_EUSART_SetOverrunErrorHandler 0055  
                    __end_of_SYSTEM_Initialize 0488                              _I2C_MasterSendAck 0600  
                                   __pbssBANK0 0020                           __end_of_EUSART_Write 0591  
                                ??_I2C_DO_IDLE 0053                 __size_of_rd2RegCompleteHandler 0012  
                                ??_I2C_DO_RCEN 0053                  __end_of_rd2RegCompleteHandler 04D1  
                 __end_of_I2C_MasterSendTxData 05C4                             ?_I2C_MasterSendAck 0070  
                            _I2C_MasterStartRx 060E                                     ??_COS_Init 0053  
               __size_of_wr2RegCompleteHandler 0012                          ??_I2C_DO_ADDRESS_NACK 005D  
                __end_of_wr2RegCompleteHandler 04F5                            _I2C_DO_RX_NACK_STOP 05E8  
                        _rd1RegCompleteHandler 04D1                             ?_I2C_MasterStartRx 0070  
                           __end_of_COS_TskMan 00AB                           ??_PWM1_LoadDutyValue 0072  
                   __end_of_I2C_MasterSendNack 0608                               ?_I2C_WriteNBytes 0066  
                       I2C_WriteNBytes@address 0069                          _wr1RegCompleteHandler 04AD  
                                   __pmaintext 03DD                            ??_I2C_MasterSendAck 0053  
                     rd1RegCompleteHandler@ptr 005C                    __end_of_I2C_DO_SEND_RESTART 05F8  
                              _I2C_DO_TX_EMPTY 0272                            I2C_SetBuffer@buffer 0056  
                                      ?___wmul 0053                                     ??_TMR2_ISR 0076  
                                   __pintentry 0004                 __end_of_I2C_MasterWaitForEvent 05E4  
                          ??_I2C_MasterStartRx 0053                  __size_of_I2C_DO_SEND_ADR_READ 0008  
                                      _BAUDCON 019F               __size_of_I2C_CallbackReturnReset 0002  
                        ??_I2C_MasterOperation 0063                 I2C_SetDataCompleteCallback@ptr 005A  
                     ??_I2C_DO_RX_NACK_RESTART 0053              __end_of_I2C_DO_SEND_RESTART_WRITE 05FC  
                         ?_I2C_DO_RX_NACK_STOP 0070                                     ??_Led2_PWM 0074  
                                      _COS_tsk 04F5                                        _PWM1DCH 0612  
                                      _PWM1DCL 0611                      __end_of_I2C_MasterSendAck 0604  
                                      _PWM1CON 0613                                        _SSP1ADD 0212  
                                      _SSP1BUF 0211                       ??_EUSART_SetErrorHandler 0055  
                    __end_of_I2C_MasterStartRx 0611                           I2C_Close@returnValue 0054  
                 ?_I2C_SetDataCompleteCallback 0058                                      _I2C_DO_RX 01BD  
                                    _I2C_DO_TX 016E               __end_of_I2C_DO_SEND_RESTART_READ 0600  
                                      _GetTemp 02F1                                      _I2C_Close 0444  
                    ??_rdBlkRegCompleteHandler 005D                                    _UartDisplay 0581  
                         _I2C_MasterDisableIrq 061A                                ??_I2C_MasterFsm 0060  
                   ??_TMR2_SetInterruptHandler 0055                                 _I2C_ReadNBytes 03A4  
                          __end_of_I2C_DO_IDLE 05D4                            __end_of_I2C_DO_RCEN 05B8  
                          __size_of_SendByUart 0009                                ??_I2C_SetBuffer 0055  
                              __size_of___wmul 001C                        I2C_SetBuffer@bufferSize 0053  
                           I2C_ReadNBytes@data 0066                                 _I2C_MasterRead 05DC  
                               _I2C_MasterOpen 052C                                 _I2C_MasterStop 0611  
                               _I2C_Initialize 054C                      __size_of_I2C_DO_SEND_STOP 0004  
                                      __ptext1 0473                                        __ptext2 05D4  
                                      __ptext3 049B                                        __ptext4 05A6  
                                      __ptext5 0579                                        __ptext6 0412  
                                      __ptext7 05AC                                        __ptext8 054C  
                                      __ptext9 0360                          ??_I2C_DO_RX_NACK_STOP 0053  
                                      _counter 0043                          _OSCILLATOR_Initialize 05AC  
                                    _T2CONbits 001C                             I2C_SetCallback@idx 0057  
                     __size_of_I2C_MasterClose 0003                       ??_PIN_MANAGER_Initialize 0053  
                I2C_CallbackReturnReset@funPtr 005C                             I2C_SetCallback@ptr 0055  
                     wr1RegCompleteHandler@ptr 005C                       __size_of_I2C_MasterStart 0003  
                     __size_of_I2C_MasterWrite 0004                     __size_of_SYSTEM_Initialize 0015  
                                      clrloop0 05A1                           end_of_initialization 002B  
                                   ?_I2C_DO_RX 0070                                     ?_I2C_DO_TX 0070  
                   _counter@UART_Display$F1229 004F          __end_of_EUSART_SetOverrunErrorHandler 055E  
       __size_of_EUSART_SetOverrunErrorHandler 0009                  _EUSART_SetOverrunErrorHandler 0555  
                    __size_of_I2C_MasterIsNack 0006                                     ?_I2C_Close 0070  
                              _TimeSlotCounter 0051                         ?_rd1RegCompleteHandler 005C  
                      __end_of_I2C_DO_TX_EMPTY 029F                      __size_of_I2C_MasterSetIrq 0003  
                        ?_I2C_MasterDisableIrq 0070                         __end_of_I2C_ReadNBytes 03C1  
                            _EUSART_Initialize 0360                         ?_wr1RegCompleteHandler 005C  
                           ?_EUSART_Initialize 0070                       __size_of_I2C_SetCallback 0025  
                                    _RCSTAbits 019D                         __end_of_I2C_MasterRead 05E0  
                       __end_of_I2C_MasterOpen 0537                         __end_of_I2C_MasterStop 0614  
                       __end_of_I2C_Initialize 0555                                      _U8Message 007A  
                          ??_EUSART_Initialize 0055                               ??_WDT_Initialize 0053  
              __end_of_rdBlkRegCompleteHandler 0444                           _I2C_MasterSendTxData 05BE  
              __size_of_I2C_DO_RX_NACK_RESTART 0004                    ?_I2C_SetAddressNackCallback 0058  
                        __size_of_EUSART_Write 0008                     __size_of_I2C_MasterSendAck 0004  
                            __size_of_I2C_Open 0038                __size_of_EUSART_SetErrorHandler 0009  
                   __size_of_I2C_MasterStartRx 0003                      __end_of_EUSART_Initialize 0384  
                                  _I2C_DO_IDLE 05CF                                    _I2C_DO_RCEN 05B2  
                   rdBlkRegCompleteHandler@ptr 005C                                      _TXSTAbits 019E  
                              ?_I2C_ReadNBytes 0066                        ?_I2C_CallbackReturnStop 005C  
                     _I2C_DO_SEND_RESTART_READ 05FC                              __size_of_COS_Init 003B  
                     __size_of_PWM1_Initialize 0008                   I2C_CallbackReturnStop@funPtr 005C  
                              ?_I2C_MasterRead 0070                                ?_I2C_MasterOpen 0070  
                              ?_I2C_MasterStop 0070                                ?_I2C_Initialize 0070  
         __end_of_TMR2_DefaultInterruptHandler 062B          __size_of_TMR2_DefaultInterruptHandler 0001  
                 _TMR2_DefaultInterruptHandler 062A                        _I2C_CallbackReturnReset 0625  
                   _EUSART_DefaultErrorHandler 0000                               ??_COS_TmrHandler 0053  
                               __end_of___wmul 03DD           __size_of_I2C_SetDataCompleteCallback 000D  
                                __pidataCOMMON 0623                                   _EUSART_Write 0589  
                            __size_of_TMR2_ISR 0013                               ??_COS_TimerSetup 0053  
                        ?_I2C_MasterSendTxData 0070                         ?_OSCILLATOR_Initialize 0070  
                  ??_I2C_DO_SEND_RESTART_WRITE 0053                            start_initialization 0014  
                                 ??_SendByUart 0053                __size_of_PIN_MANAGER_Initialize 0019  
                            __size_of_Led2_PWM 0066                                  ?_I2C_DO_RESET 0070  
                                  ??_I2C_DO_RX 005D                                    ??_I2C_DO_TX 005D  
                            ??_I2C_MasterClose 0053                         ??_I2C_MasterDisableIrq 0053  
                                  ??_I2C_Close 0053                              ??_I2C_MasterStart 0053  
                            ??_I2C_MasterWrite 0066                 __end_of_I2C_CallbackReturnStop 0629  
                       _I2C_DO_RX_NACK_RESTART 05E4                               ?_I2C_DO_TX_EMPTY 0070  
                           _I2C_MasterClearIrq 0620                 ?_EUSART_SetOverrunErrorHandler 0053  
                   _EUSART_FramingErrorHandler 00A4                                       ??___wmul 0057  
                       _EUSART_SetErrorHandler 0567                                   _COS_tcnt_val 0076  
                          ?_I2C_MasterClearIrq 0070                                   _COS_tcnt_lst 0047  
                           __end_of_SendByUart 0579                    __end_of_I2C_MasterGetRxData 060E  
                                  __pdataBANK0 006F                          __end_of_I2C_DO_RX_ACK 05F0  
                ?_TMR2_DefaultInterruptHandler 0070                               _I2C_DO_SEND_STOP 05F0  
                            ??_I2C_SetCallback 0056                            I2C_Open@returnValue 0055  
                           _I2C_MasterSendNack 0604                       ?_I2C_MasterEnableRestart 0070  
                       __size_of_TMR2_CallBack 000B                          _I2C_DO_SEND_ADR_WRITE 0599  
                                  __pbssCOMMON 0076                                      ___latbits 0002  
                                __pcstackBANK0 0053                                  __pcstackBANK1 00A6  
                               ??_I2C_DO_RESET 0053                       __size_of_TMR2_Initialize 0012  
                          ?_I2C_MasterSendNack 0070                   __end_of_I2C_DO_SEND_ADR_READ 0599  
                         ??_I2C_MasterClearIrq 0053                    __end_of_I2C_DO_ADDRESS_NACK 02CA  
                             _I2C_MasterIsNack 05B8                     __size_of_EUSART_Initialize 0024  
                                     ?_GetTemp 0070                      _I2C_DO_SEND_RESTART_WRITE 05F8  
                             _I2C_MasterSetIrq 0608                                   ?_UartDisplay 0070  
                                    __pnvBANK0 006B                                      __pnvBANK1 00A0  
                        _rd2RegCompleteHandler 04BF                          __end_of_fsmStateTable 03A4  
                  __size_of_PWM1_LoadDutyValue 0016                         _PIN_MANAGER_Initialize 0412  
                        _wr2RegCompleteHandler 04E3                      ??_I2C_CallbackReturnReset 005D  
                  __end_of_I2C_MasterOperation 0412                           ??_I2C_MasterSendNack 0053  
                     rd2RegCompleteHandler@ptr 005C                         ??_I2C_MasterSendTxData 0053  
                            ??_PWM1_Initialize 0053                   ??_INTERRUPT_InterruptManager 0076  
                     __size_of_I2C_WriteNBytes 0025                   __size_of_I2C_DO_SEND_RESTART 0004  
                      I2C_MasterOperation@read 0064                                       _I2C_Open 023A  
                            I2C_ReadNBytes@len 0067                        ??_rd1RegCompleteHandler 005D  
                                    _dutyValue 0041                        ??_wr1RegCompleteHandler 005D  
                               ___wmul@product 0057                                       _COS_Init 01FF  
       EUSART_SetErrorHandler@interruptHandler 0053                                       _LATCbits 010E  
                                    clear_ram0 05A0                                  _TMR2_CallBack 0537  
                                     _PIE1bits 0091                              _eusartRxLastError 0079  
          __size_of_INTERRUPT_InterruptManager 000E                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0055                                       _PIR2bits 0012  
                        __end_of_I2C_MasterFsm 02F1                    __end_of_I2C_DO_RX_NACK_STOP 05EC  
                                     _SSP1CON1 0215                                       _SSP1CON2 0216  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _TMR2_ISR 0488  
              __end_of_I2C_MasterEnableRestart 0617                                       _SSP1STAT 0214  
                        __end_of_I2C_SetBuffer 0512                              ___wmul@multiplier 0053  
                       ?_I2C_DO_SEND_ADR_WRITE 0070                       I2C_MasterSendTxData@data 0053  
                                     _Led2_PWM 00AB                 ??_TMR2_DefaultInterruptHandler 0070  
            __size_of_TMR2_SetInterruptHandler 0006                      ?_TMR2_SetInterruptHandler 0053  
                     wr2RegCompleteHandler@ptr 005C                              COS_Init@tempbyte1 0056  
                            COS_Init@tempbyte2 0057                     ??_I2C_DO_SEND_RESTART_READ 0053  
                     ?_rdBlkRegCompleteHandler 005C                               ??_I2C_ReadNBytes 0069  
                                   _I2C_Poller 0542                                     _I2C_Status 0020  
                                 ?_I2C_DO_IDLE 0070                                   ?_I2C_DO_RCEN 0070  
                            ??_TMR2_Initialize 0055                         ?_rd2RegCompleteHandler 005C  
                               ?_TMR2_CallBack 0070                               __size_of_GetTemp 0025  
                             ??_I2C_MasterRead 0066                            I2C_WriteNBytes@data 0066  
                             ??_I2C_MasterOpen 0053                         ?_wr2RegCompleteHandler 005C  
                             ??_I2C_MasterStop 0053                       ??_I2C_MasterWaitForEvent 0053  
                             ??_I2C_Initialize 0053                                    _COS_sec_tmr 004B  
                         __end_of_I2C_DO_RESET 05CF                        ??_OSCILLATOR_Initialize 0053  
                          _EUSART_ErrorHandler 00A0                                    _COS_tsk_ena 006D  
                                  _COS_tsk_ind 0052                                    _COS_tsk_msk 006E  
                                  _COS_tsk_tmr 0049                           _I2C_DO_SEND_ADR_READ 0591  
                              _I2C_MasterClose 061D                  I2C_SetAddressNackCallback@ptr 005A  
                              I2C_Open@address 0054                                _I2C_MasterStart 0617  
                              _I2C_MasterWrite 05D8                              ??_I2C_WriteNBytes 0069  
                                     __ptext10 0555                                       __ptext11 055E  
                                     __ptext20 0512                                       __ptext12 0567  
                                     __ptext21 05D8                                       __ptext13 002F  
                                     __ptext30 029F                                       __ptext22 03A4  
                                     __ptext14 03C1                                       __ptext31 05CA  
                                     __ptext23 023A                                       __ptext15 02F1  
                                     __ptext40 01BD                                       __ptext32 05E4  
                                     __ptext24 052C                                       __ptext16 0581  
                                     __ptext41 016E                                       __ptext33 05E8  
                                     __ptext25 05DC                                       __ptext17 0589  
                                     __ptext50 060B                                       __ptext42 0599  
                                     __ptext34 05EC                                       __ptext26 03F8  
                                     __ptext18 0570                                       __ptext51 0604  
                                     __ptext43 0591                                       __ptext35 05F0  
                                     __ptext27 0542                                       __ptext19 0316  
                                     __ptext60 051F                                       __ptext52 060E  
                                     __ptext44 05CF                                       __ptext36 05F4  
                                     __ptext28 05E0                                       __ptext61 033B  
                                     __ptext53 0625                                       __ptext45 0272  
                                     __ptext37 05F8                                       __ptext29 02CA  
                                     __ptext70 0111                                       __ptext62 0504  
                                     __ptext54 0627                                       __ptext46 0608  
                                     __ptext38 05FC                                       __ptext71 01FF  
                                     __ptext63 0611                                       __ptext55 042B  
                                     __ptext47 05B8                                       __ptext39 05B2  
                                     __ptext72 05C4                                       __ptext64 0614  
                                     __ptext56 04AD                                       __ptext48 05BE  
                                     __ptext65 0617                                       __ptext57 04BF  
                                     __ptext49 0600                                       __ptext74 0488  
                                     __ptext66 0444                                       __ptext58 04D1  
                                     __ptext75 0537                                       __ptext67 061A  
                                     __ptext59 04E3                                       __ptext76 00AB  
                                     __ptext68 061D                                       __ptext77 062A  
                                     __ptext69 0620                                       __ptext78 045D  
                                 _SSP1CON1bits 0215                                   _SSP1CON2bits 0216  
          __end_of_I2C_SetDataCompleteCallback 052C                    _I2C_SetDataCompleteCallback 051F  
                      ?_I2C_DO_RX_NACK_RESTART 0070                       __end_of_I2C_DO_SEND_STOP 05F4  
                                __size_of_main 001B                        ?_EUSART_SetErrorHandler 0053  
                              _I2C_SetCallback 033B                  ??_I2C_SetDataCompleteCallback 005B  
                         __size_of_UartDisplay 0008  EUSART_SetOverrunErrorHandler@interruptHandler 0053  
                                     int$flags 007E                          ?_I2C_DO_SEND_ADR_READ 0070  
           __end_of_INTERRUPT_InterruptManager 0012                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 0567         __size_of_EUSART_SetFramingErrorHandler 0009  
                _EUSART_SetFramingErrorHandler 055E                                   _SSP1STATbits 0214  
                     __end_of_I2C_MasterIsNack 05BE                                     _COS_TskMan 002F  
                     __end_of_I2C_MasterSetIrq 060B                                     _INTCONbits 000B  
                           I2C_WriteNBytes@len 0067                                     _COS_ms_tmr 004D  
               __end_of_I2C_DO_RX_NACK_RESTART 05E8                        __size_of_WDT_Initialize 0004  
                                     intlevel1 0000                                    ?_I2C_Poller 0070  
                              ??_TMR2_CallBack 0076               __size_of_I2C_MasterEnableRestart 0003  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0570  
                          _I2C_DO_SEND_RESTART 05F4                  __size_of_I2C_MasterDisableIrq 0003  
                              _PWM1_Initialize 0579                __size_of_I2C_MasterWaitForEvent 0004  
EUSART_SetFramingErrorHandler@interruptHandler 0053                        __end_of_I2C_MasterClose 0620  
                     __size_of_I2C_DO_TX_EMPTY 002D                        __end_of_I2C_MasterStart 061A  
                      __end_of_I2C_MasterWrite 05DC                                  __pstringtext1 0384  
                                __pstringtext2 04F5                           ?_I2C_DO_SEND_RESTART 0070  
                      COS_TmrHandler@tempbyte1 0056                        COS_TmrHandler@tempbyte2 0057  
                        TMR2_ISR@CountCallBack 0045                                  SendByUart@Txt 0054  
                 __size_of_I2C_MasterGetRxData 0003                        __size_of_COS_TmrHandler 005D  
                  __size_of_I2C_MasterClearIrq 0003                        __size_of_COS_TimerSetup 0006  
                           EUSART_Write@txData 0053                        __end_of_I2C_SetCallback 0360  
               __end_of_PIN_MANAGER_Initialize 042B                 __size_of_rd1RegCompleteHandler 0012  
                __end_of_rd1RegCompleteHandler 04E3                         __size_of_I2C_DO_RX_ACK 0004  
                   __end_of_PWM1_LoadDutyValue 0473                 __size_of_wr1RegCompleteHandler 0012  
                        __size_of_I2C_DO_RESET 0005                  __end_of_wr1RegCompleteHandler 04BF  
                        _TMR2_InterruptHandler 006B                   __size_of_I2C_DO_ADDRESS_NACK 002B  
                         __size_of_I2C_DO_IDLE 0005                           __size_of_I2C_DO_RCEN 0006  
                           __size_of_I2C_DO_RX 0042                             __size_of_I2C_DO_TX 004F  
