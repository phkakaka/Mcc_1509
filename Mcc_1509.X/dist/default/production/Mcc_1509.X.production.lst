

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Jun 20 23:20:57 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F1509
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,inline,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,inline,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 2.20
    50                           ; Generated 12/02/2020 GMT
    51                           ; 
    52                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F1509 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  000E                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  0111                     	;# 
   131  0112                     	;# 
   132  0113                     	;# 
   133  0114                     	;# 
   134  0115                     	;# 
   135  0116                     	;# 
   136  0117                     	;# 
   137  0118                     	;# 
   138  0119                     	;# 
   139  011D                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  018E                     	;# 
   143  0191                     	;# 
   144  0191                     	;# 
   145  0192                     	;# 
   146  0193                     	;# 
   147  0193                     	;# 
   148  0194                     	;# 
   149  0195                     	;# 
   150  0196                     	;# 
   151  0197                     	;# 
   152  0199                     	;# 
   153  019A                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019C                     	;# 
   157  019D                     	;# 
   158  019E                     	;# 
   159  019F                     	;# 
   160  020C                     	;# 
   161  020D                     	;# 
   162  0211                     	;# 
   163  0211                     	;# 
   164  0212                     	;# 
   165  0212                     	;# 
   166  0213                     	;# 
   167  0213                     	;# 
   168  0214                     	;# 
   169  0214                     	;# 
   170  0215                     	;# 
   171  0215                     	;# 
   172  0215                     	;# 
   173  0216                     	;# 
   174  0216                     	;# 
   175  0217                     	;# 
   176  0217                     	;# 
   177  0391                     	;# 
   178  0392                     	;# 
   179  0393                     	;# 
   180  0394                     	;# 
   181  0395                     	;# 
   182  0396                     	;# 
   183  0498                     	;# 
   184  0498                     	;# 
   185  0499                     	;# 
   186  049A                     	;# 
   187  049B                     	;# 
   188  049B                     	;# 
   189  049C                     	;# 
   190  049D                     	;# 
   191  049E                     	;# 
   192  049F                     	;# 
   193  0611                     	;# 
   194  0612                     	;# 
   195  0613                     	;# 
   196  0613                     	;# 
   197  0614                     	;# 
   198  0615                     	;# 
   199  0616                     	;# 
   200  0616                     	;# 
   201  0617                     	;# 
   202  0618                     	;# 
   203  0619                     	;# 
   204  0619                     	;# 
   205  061A                     	;# 
   206  061B                     	;# 
   207  061C                     	;# 
   208  061C                     	;# 
   209  0691                     	;# 
   210  0692                     	;# 
   211  0693                     	;# 
   212  0694                     	;# 
   213  0695                     	;# 
   214  0F0F                     	;# 
   215  0F10                     	;# 
   216  0F11                     	;# 
   217  0F12                     	;# 
   218  0F13                     	;# 
   219  0F14                     	;# 
   220  0F15                     	;# 
   221  0F16                     	;# 
   222  0F17                     	;# 
   223  0F18                     	;# 
   224  0F19                     	;# 
   225  0F1A                     	;# 
   226  0F1B                     	;# 
   227  0F1C                     	;# 
   228  0F1D                     	;# 
   229  0F1E                     	;# 
   230  0F1F                     	;# 
   231  0F20                     	;# 
   232  0F21                     	;# 
   233  0F22                     	;# 
   234  0F23                     	;# 
   235  0F24                     	;# 
   236  0F25                     	;# 
   237  0F26                     	;# 
   238  0F27                     	;# 
   239  0F28                     	;# 
   240  0F29                     	;# 
   241  0F2A                     	;# 
   242  0F2B                     	;# 
   243  0F2C                     	;# 
   244  0F2D                     	;# 
   245  0F2E                     	;# 
   246  0F2F                     	;# 
   247  0F8C                     	;# 
   248  0F8D                     	;# 
   249  0F91                     	;# 
   250  0F95                     	;# 
   251  0F96                     	;# 
   252  0F97                     	;# 
   253  0F9C                     	;# 
   254  0F9D                     	;# 
   255  0F9E                     	;# 
   256  0FE3                     	;# 
   257  0FE4                     	;# 
   258  0FE5                     	;# 
   259  0FE6                     	;# 
   260  0FE7                     	;# 
   261  0FE8                     	;# 
   262  0FE9                     	;# 
   263  0FEA                     	;# 
   264  0FEB                     	;# 
   265  0FED                     	;# 
   266  0FEE                     	;# 
   267  0FEF                     	;# 
   268  0000                     	;# 
   269  0001                     	;# 
   270  0002                     	;# 
   271  0003                     	;# 
   272  0004                     	;# 
   273  0005                     	;# 
   274  0006                     	;# 
   275  0007                     	;# 
   276  0008                     	;# 
   277  0009                     	;# 
   278  000A                     	;# 
   279  000B                     	;# 
   280  000C                     	;# 
   281  000D                     	;# 
   282  000E                     	;# 
   283  0011                     	;# 
   284  0012                     	;# 
   285  0013                     	;# 
   286  0015                     	;# 
   287  0016                     	;# 
   288  0016                     	;# 
   289  0017                     	;# 
   290  0018                     	;# 
   291  0019                     	;# 
   292  001A                     	;# 
   293  001B                     	;# 
   294  001C                     	;# 
   295  008C                     	;# 
   296  008D                     	;# 
   297  008E                     	;# 
   298  0091                     	;# 
   299  0092                     	;# 
   300  0093                     	;# 
   301  0095                     	;# 
   302  0096                     	;# 
   303  0097                     	;# 
   304  0099                     	;# 
   305  009A                     	;# 
   306  009B                     	;# 
   307  009B                     	;# 
   308  009C                     	;# 
   309  009D                     	;# 
   310  009E                     	;# 
   311  009F                     	;# 
   312  010C                     	;# 
   313  010D                     	;# 
   314  010E                     	;# 
   315  0111                     	;# 
   316  0112                     	;# 
   317  0113                     	;# 
   318  0114                     	;# 
   319  0115                     	;# 
   320  0116                     	;# 
   321  0117                     	;# 
   322  0118                     	;# 
   323  0119                     	;# 
   324  011D                     	;# 
   325  018C                     	;# 
   326  018D                     	;# 
   327  018E                     	;# 
   328  0191                     	;# 
   329  0191                     	;# 
   330  0192                     	;# 
   331  0193                     	;# 
   332  0193                     	;# 
   333  0194                     	;# 
   334  0195                     	;# 
   335  0196                     	;# 
   336  0197                     	;# 
   337  0199                     	;# 
   338  019A                     	;# 
   339  019B                     	;# 
   340  019B                     	;# 
   341  019C                     	;# 
   342  019D                     	;# 
   343  019E                     	;# 
   344  019F                     	;# 
   345  020C                     	;# 
   346  020D                     	;# 
   347  0211                     	;# 
   348  0211                     	;# 
   349  0212                     	;# 
   350  0212                     	;# 
   351  0213                     	;# 
   352  0213                     	;# 
   353  0214                     	;# 
   354  0214                     	;# 
   355  0215                     	;# 
   356  0215                     	;# 
   357  0215                     	;# 
   358  0216                     	;# 
   359  0216                     	;# 
   360  0217                     	;# 
   361  0217                     	;# 
   362  0391                     	;# 
   363  0392                     	;# 
   364  0393                     	;# 
   365  0394                     	;# 
   366  0395                     	;# 
   367  0396                     	;# 
   368  0498                     	;# 
   369  0498                     	;# 
   370  0499                     	;# 
   371  049A                     	;# 
   372  049B                     	;# 
   373  049B                     	;# 
   374  049C                     	;# 
   375  049D                     	;# 
   376  049E                     	;# 
   377  049F                     	;# 
   378  0611                     	;# 
   379  0612                     	;# 
   380  0613                     	;# 
   381  0613                     	;# 
   382  0614                     	;# 
   383  0615                     	;# 
   384  0616                     	;# 
   385  0616                     	;# 
   386  0617                     	;# 
   387  0618                     	;# 
   388  0619                     	;# 
   389  0619                     	;# 
   390  061A                     	;# 
   391  061B                     	;# 
   392  061C                     	;# 
   393  061C                     	;# 
   394  0691                     	;# 
   395  0692                     	;# 
   396  0693                     	;# 
   397  0694                     	;# 
   398  0695                     	;# 
   399  0F0F                     	;# 
   400  0F10                     	;# 
   401  0F11                     	;# 
   402  0F12                     	;# 
   403  0F13                     	;# 
   404  0F14                     	;# 
   405  0F15                     	;# 
   406  0F16                     	;# 
   407  0F17                     	;# 
   408  0F18                     	;# 
   409  0F19                     	;# 
   410  0F1A                     	;# 
   411  0F1B                     	;# 
   412  0F1C                     	;# 
   413  0F1D                     	;# 
   414  0F1E                     	;# 
   415  0F1F                     	;# 
   416  0F20                     	;# 
   417  0F21                     	;# 
   418  0F22                     	;# 
   419  0F23                     	;# 
   420  0F24                     	;# 
   421  0F25                     	;# 
   422  0F26                     	;# 
   423  0F27                     	;# 
   424  0F28                     	;# 
   425  0F29                     	;# 
   426  0F2A                     	;# 
   427  0F2B                     	;# 
   428  0F2C                     	;# 
   429  0F2D                     	;# 
   430  0F2E                     	;# 
   431  0F2F                     	;# 
   432  0F8C                     	;# 
   433  0F8D                     	;# 
   434  0F91                     	;# 
   435  0F95                     	;# 
   436  0F96                     	;# 
   437  0F97                     	;# 
   438  0F9C                     	;# 
   439  0F9D                     	;# 
   440  0F9E                     	;# 
   441  0FE3                     	;# 
   442  0FE4                     	;# 
   443  0FE5                     	;# 
   444  0FE6                     	;# 
   445  0FE7                     	;# 
   446  0FE8                     	;# 
   447  0FE9                     	;# 
   448  0FEA                     	;# 
   449  0FEB                     	;# 
   450  0FED                     	;# 
   451  0FEE                     	;# 
   452  0FEF                     	;# 
   453  0000                     	;# 
   454  0001                     	;# 
   455  0002                     	;# 
   456  0003                     	;# 
   457  0004                     	;# 
   458  0005                     	;# 
   459  0006                     	;# 
   460  0007                     	;# 
   461  0008                     	;# 
   462  0009                     	;# 
   463  000A                     	;# 
   464  000B                     	;# 
   465  000C                     	;# 
   466  000D                     	;# 
   467  000E                     	;# 
   468  0011                     	;# 
   469  0012                     	;# 
   470  0013                     	;# 
   471  0015                     	;# 
   472  0016                     	;# 
   473  0016                     	;# 
   474  0017                     	;# 
   475  0018                     	;# 
   476  0019                     	;# 
   477  001A                     	;# 
   478  001B                     	;# 
   479  001C                     	;# 
   480  008C                     	;# 
   481  008D                     	;# 
   482  008E                     	;# 
   483  0091                     	;# 
   484  0092                     	;# 
   485  0093                     	;# 
   486  0095                     	;# 
   487  0096                     	;# 
   488  0097                     	;# 
   489  0099                     	;# 
   490  009A                     	;# 
   491  009B                     	;# 
   492  009B                     	;# 
   493  009C                     	;# 
   494  009D                     	;# 
   495  009E                     	;# 
   496  009F                     	;# 
   497  010C                     	;# 
   498  010D                     	;# 
   499  010E                     	;# 
   500  0111                     	;# 
   501  0112                     	;# 
   502  0113                     	;# 
   503  0114                     	;# 
   504  0115                     	;# 
   505  0116                     	;# 
   506  0117                     	;# 
   507  0118                     	;# 
   508  0119                     	;# 
   509  011D                     	;# 
   510  018C                     	;# 
   511  018D                     	;# 
   512  018E                     	;# 
   513  0191                     	;# 
   514  0191                     	;# 
   515  0192                     	;# 
   516  0193                     	;# 
   517  0193                     	;# 
   518  0194                     	;# 
   519  0195                     	;# 
   520  0196                     	;# 
   521  0197                     	;# 
   522  0199                     	;# 
   523  019A                     	;# 
   524  019B                     	;# 
   525  019B                     	;# 
   526  019C                     	;# 
   527  019D                     	;# 
   528  019E                     	;# 
   529  019F                     	;# 
   530  020C                     	;# 
   531  020D                     	;# 
   532  0211                     	;# 
   533  0211                     	;# 
   534  0212                     	;# 
   535  0212                     	;# 
   536  0213                     	;# 
   537  0213                     	;# 
   538  0214                     	;# 
   539  0214                     	;# 
   540  0215                     	;# 
   541  0215                     	;# 
   542  0215                     	;# 
   543  0216                     	;# 
   544  0216                     	;# 
   545  0217                     	;# 
   546  0217                     	;# 
   547  0391                     	;# 
   548  0392                     	;# 
   549  0393                     	;# 
   550  0394                     	;# 
   551  0395                     	;# 
   552  0396                     	;# 
   553  0498                     	;# 
   554  0498                     	;# 
   555  0499                     	;# 
   556  049A                     	;# 
   557  049B                     	;# 
   558  049B                     	;# 
   559  049C                     	;# 
   560  049D                     	;# 
   561  049E                     	;# 
   562  049F                     	;# 
   563  0611                     	;# 
   564  0612                     	;# 
   565  0613                     	;# 
   566  0613                     	;# 
   567  0614                     	;# 
   568  0615                     	;# 
   569  0616                     	;# 
   570  0616                     	;# 
   571  0617                     	;# 
   572  0618                     	;# 
   573  0619                     	;# 
   574  0619                     	;# 
   575  061A                     	;# 
   576  061B                     	;# 
   577  061C                     	;# 
   578  061C                     	;# 
   579  0691                     	;# 
   580  0692                     	;# 
   581  0693                     	;# 
   582  0694                     	;# 
   583  0695                     	;# 
   584  0F0F                     	;# 
   585  0F10                     	;# 
   586  0F11                     	;# 
   587  0F12                     	;# 
   588  0F13                     	;# 
   589  0F14                     	;# 
   590  0F15                     	;# 
   591  0F16                     	;# 
   592  0F17                     	;# 
   593  0F18                     	;# 
   594  0F19                     	;# 
   595  0F1A                     	;# 
   596  0F1B                     	;# 
   597  0F1C                     	;# 
   598  0F1D                     	;# 
   599  0F1E                     	;# 
   600  0F1F                     	;# 
   601  0F20                     	;# 
   602  0F21                     	;# 
   603  0F22                     	;# 
   604  0F23                     	;# 
   605  0F24                     	;# 
   606  0F25                     	;# 
   607  0F26                     	;# 
   608  0F27                     	;# 
   609  0F28                     	;# 
   610  0F29                     	;# 
   611  0F2A                     	;# 
   612  0F2B                     	;# 
   613  0F2C                     	;# 
   614  0F2D                     	;# 
   615  0F2E                     	;# 
   616  0F2F                     	;# 
   617  0F8C                     	;# 
   618  0F8D                     	;# 
   619  0F91                     	;# 
   620  0F95                     	;# 
   621  0F96                     	;# 
   622  0F97                     	;# 
   623  0F9C                     	;# 
   624  0F9D                     	;# 
   625  0F9E                     	;# 
   626  0FE3                     	;# 
   627  0FE4                     	;# 
   628  0FE5                     	;# 
   629  0FE6                     	;# 
   630  0FE7                     	;# 
   631  0FE8                     	;# 
   632  0FE9                     	;# 
   633  0FEA                     	;# 
   634  0FEB                     	;# 
   635  0FED                     	;# 
   636  0FEE                     	;# 
   637  0FEF                     	;# 
   638  0000                     	;# 
   639  0001                     	;# 
   640  0002                     	;# 
   641  0003                     	;# 
   642  0004                     	;# 
   643  0005                     	;# 
   644  0006                     	;# 
   645  0007                     	;# 
   646  0008                     	;# 
   647  0009                     	;# 
   648  000A                     	;# 
   649  000B                     	;# 
   650  000C                     	;# 
   651  000D                     	;# 
   652  000E                     	;# 
   653  0011                     	;# 
   654  0012                     	;# 
   655  0013                     	;# 
   656  0015                     	;# 
   657  0016                     	;# 
   658  0016                     	;# 
   659  0017                     	;# 
   660  0018                     	;# 
   661  0019                     	;# 
   662  001A                     	;# 
   663  001B                     	;# 
   664  001C                     	;# 
   665  008C                     	;# 
   666  008D                     	;# 
   667  008E                     	;# 
   668  0091                     	;# 
   669  0092                     	;# 
   670  0093                     	;# 
   671  0095                     	;# 
   672  0096                     	;# 
   673  0097                     	;# 
   674  0099                     	;# 
   675  009A                     	;# 
   676  009B                     	;# 
   677  009B                     	;# 
   678  009C                     	;# 
   679  009D                     	;# 
   680  009E                     	;# 
   681  009F                     	;# 
   682  010C                     	;# 
   683  010D                     	;# 
   684  010E                     	;# 
   685  0111                     	;# 
   686  0112                     	;# 
   687  0113                     	;# 
   688  0114                     	;# 
   689  0115                     	;# 
   690  0116                     	;# 
   691  0117                     	;# 
   692  0118                     	;# 
   693  0119                     	;# 
   694  011D                     	;# 
   695  018C                     	;# 
   696  018D                     	;# 
   697  018E                     	;# 
   698  0191                     	;# 
   699  0191                     	;# 
   700  0192                     	;# 
   701  0193                     	;# 
   702  0193                     	;# 
   703  0194                     	;# 
   704  0195                     	;# 
   705  0196                     	;# 
   706  0197                     	;# 
   707  0199                     	;# 
   708  019A                     	;# 
   709  019B                     	;# 
   710  019B                     	;# 
   711  019C                     	;# 
   712  019D                     	;# 
   713  019E                     	;# 
   714  019F                     	;# 
   715  020C                     	;# 
   716  020D                     	;# 
   717  0211                     	;# 
   718  0211                     	;# 
   719  0212                     	;# 
   720  0212                     	;# 
   721  0213                     	;# 
   722  0213                     	;# 
   723  0214                     	;# 
   724  0214                     	;# 
   725  0215                     	;# 
   726  0215                     	;# 
   727  0215                     	;# 
   728  0216                     	;# 
   729  0216                     	;# 
   730  0217                     	;# 
   731  0217                     	;# 
   732  0391                     	;# 
   733  0392                     	;# 
   734  0393                     	;# 
   735  0394                     	;# 
   736  0395                     	;# 
   737  0396                     	;# 
   738  0498                     	;# 
   739  0498                     	;# 
   740  0499                     	;# 
   741  049A                     	;# 
   742  049B                     	;# 
   743  049B                     	;# 
   744  049C                     	;# 
   745  049D                     	;# 
   746  049E                     	;# 
   747  049F                     	;# 
   748  0611                     	;# 
   749  0612                     	;# 
   750  0613                     	;# 
   751  0613                     	;# 
   752  0614                     	;# 
   753  0615                     	;# 
   754  0616                     	;# 
   755  0616                     	;# 
   756  0617                     	;# 
   757  0618                     	;# 
   758  0619                     	;# 
   759  0619                     	;# 
   760  061A                     	;# 
   761  061B                     	;# 
   762  061C                     	;# 
   763  061C                     	;# 
   764  0691                     	;# 
   765  0692                     	;# 
   766  0693                     	;# 
   767  0694                     	;# 
   768  0695                     	;# 
   769  0F0F                     	;# 
   770  0F10                     	;# 
   771  0F11                     	;# 
   772  0F12                     	;# 
   773  0F13                     	;# 
   774  0F14                     	;# 
   775  0F15                     	;# 
   776  0F16                     	;# 
   777  0F17                     	;# 
   778  0F18                     	;# 
   779  0F19                     	;# 
   780  0F1A                     	;# 
   781  0F1B                     	;# 
   782  0F1C                     	;# 
   783  0F1D                     	;# 
   784  0F1E                     	;# 
   785  0F1F                     	;# 
   786  0F20                     	;# 
   787  0F21                     	;# 
   788  0F22                     	;# 
   789  0F23                     	;# 
   790  0F24                     	;# 
   791  0F25                     	;# 
   792  0F26                     	;# 
   793  0F27                     	;# 
   794  0F28                     	;# 
   795  0F29                     	;# 
   796  0F2A                     	;# 
   797  0F2B                     	;# 
   798  0F2C                     	;# 
   799  0F2D                     	;# 
   800  0F2E                     	;# 
   801  0F2F                     	;# 
   802  0F8C                     	;# 
   803  0F8D                     	;# 
   804  0F91                     	;# 
   805  0F95                     	;# 
   806  0F96                     	;# 
   807  0F97                     	;# 
   808  0F9C                     	;# 
   809  0F9D                     	;# 
   810  0F9E                     	;# 
   811  0FE3                     	;# 
   812  0FE4                     	;# 
   813  0FE5                     	;# 
   814  0FE6                     	;# 
   815  0FE7                     	;# 
   816  0FE8                     	;# 
   817  0FE9                     	;# 
   818  0FEA                     	;# 
   819  0FEB                     	;# 
   820  0FED                     	;# 
   821  0FEE                     	;# 
   822  0FEF                     	;# 
   823  0000                     	;# 
   824  0001                     	;# 
   825  0002                     	;# 
   826  0003                     	;# 
   827  0004                     	;# 
   828  0005                     	;# 
   829  0006                     	;# 
   830  0007                     	;# 
   831  0008                     	;# 
   832  0009                     	;# 
   833  000A                     	;# 
   834  000B                     	;# 
   835  000C                     	;# 
   836  000D                     	;# 
   837  000E                     	;# 
   838  0011                     	;# 
   839  0012                     	;# 
   840  0013                     	;# 
   841  0015                     	;# 
   842  0016                     	;# 
   843  0016                     	;# 
   844  0017                     	;# 
   845  0018                     	;# 
   846  0019                     	;# 
   847  001A                     	;# 
   848  001B                     	;# 
   849  001C                     	;# 
   850  008C                     	;# 
   851  008D                     	;# 
   852  008E                     	;# 
   853  0091                     	;# 
   854  0092                     	;# 
   855  0093                     	;# 
   856  0095                     	;# 
   857  0096                     	;# 
   858  0097                     	;# 
   859  0099                     	;# 
   860  009A                     	;# 
   861  009B                     	;# 
   862  009B                     	;# 
   863  009C                     	;# 
   864  009D                     	;# 
   865  009E                     	;# 
   866  009F                     	;# 
   867  010C                     	;# 
   868  010D                     	;# 
   869  010E                     	;# 
   870  0111                     	;# 
   871  0112                     	;# 
   872  0113                     	;# 
   873  0114                     	;# 
   874  0115                     	;# 
   875  0116                     	;# 
   876  0117                     	;# 
   877  0118                     	;# 
   878  0119                     	;# 
   879  011D                     	;# 
   880  018C                     	;# 
   881  018D                     	;# 
   882  018E                     	;# 
   883  0191                     	;# 
   884  0191                     	;# 
   885  0192                     	;# 
   886  0193                     	;# 
   887  0193                     	;# 
   888  0194                     	;# 
   889  0195                     	;# 
   890  0196                     	;# 
   891  0197                     	;# 
   892  0199                     	;# 
   893  019A                     	;# 
   894  019B                     	;# 
   895  019B                     	;# 
   896  019C                     	;# 
   897  019D                     	;# 
   898  019E                     	;# 
   899  019F                     	;# 
   900  020C                     	;# 
   901  020D                     	;# 
   902  0211                     	;# 
   903  0211                     	;# 
   904  0212                     	;# 
   905  0212                     	;# 
   906  0213                     	;# 
   907  0213                     	;# 
   908  0214                     	;# 
   909  0214                     	;# 
   910  0215                     	;# 
   911  0215                     	;# 
   912  0215                     	;# 
   913  0216                     	;# 
   914  0216                     	;# 
   915  0217                     	;# 
   916  0217                     	;# 
   917  0391                     	;# 
   918  0392                     	;# 
   919  0393                     	;# 
   920  0394                     	;# 
   921  0395                     	;# 
   922  0396                     	;# 
   923  0498                     	;# 
   924  0498                     	;# 
   925  0499                     	;# 
   926  049A                     	;# 
   927  049B                     	;# 
   928  049B                     	;# 
   929  049C                     	;# 
   930  049D                     	;# 
   931  049E                     	;# 
   932  049F                     	;# 
   933  0611                     	;# 
   934  0612                     	;# 
   935  0613                     	;# 
   936  0613                     	;# 
   937  0614                     	;# 
   938  0615                     	;# 
   939  0616                     	;# 
   940  0616                     	;# 
   941  0617                     	;# 
   942  0618                     	;# 
   943  0619                     	;# 
   944  0619                     	;# 
   945  061A                     	;# 
   946  061B                     	;# 
   947  061C                     	;# 
   948  061C                     	;# 
   949  0691                     	;# 
   950  0692                     	;# 
   951  0693                     	;# 
   952  0694                     	;# 
   953  0695                     	;# 
   954  0F0F                     	;# 
   955  0F10                     	;# 
   956  0F11                     	;# 
   957  0F12                     	;# 
   958  0F13                     	;# 
   959  0F14                     	;# 
   960  0F15                     	;# 
   961  0F16                     	;# 
   962  0F17                     	;# 
   963  0F18                     	;# 
   964  0F19                     	;# 
   965  0F1A                     	;# 
   966  0F1B                     	;# 
   967  0F1C                     	;# 
   968  0F1D                     	;# 
   969  0F1E                     	;# 
   970  0F1F                     	;# 
   971  0F20                     	;# 
   972  0F21                     	;# 
   973  0F22                     	;# 
   974  0F23                     	;# 
   975  0F24                     	;# 
   976  0F25                     	;# 
   977  0F26                     	;# 
   978  0F27                     	;# 
   979  0F28                     	;# 
   980  0F29                     	;# 
   981  0F2A                     	;# 
   982  0F2B                     	;# 
   983  0F2C                     	;# 
   984  0F2D                     	;# 
   985  0F2E                     	;# 
   986  0F2F                     	;# 
   987  0F8C                     	;# 
   988  0F8D                     	;# 
   989  0F91                     	;# 
   990  0F95                     	;# 
   991  0F96                     	;# 
   992  0F97                     	;# 
   993  0F9C                     	;# 
   994  0F9D                     	;# 
   995  0F9E                     	;# 
   996  0FE3                     	;# 
   997  0FE4                     	;# 
   998  0FE5                     	;# 
   999  0FE6                     	;# 
  1000  0FE7                     	;# 
  1001  0FE8                     	;# 
  1002  0FE9                     	;# 
  1003  0FEA                     	;# 
  1004  0FEB                     	;# 
  1005  0FED                     	;# 
  1006  0FEE                     	;# 
  1007  0FEF                     	;# 
  1008  0000                     	;# 
  1009  0001                     	;# 
  1010  0002                     	;# 
  1011  0003                     	;# 
  1012  0004                     	;# 
  1013  0005                     	;# 
  1014  0006                     	;# 
  1015  0007                     	;# 
  1016  0008                     	;# 
  1017  0009                     	;# 
  1018  000A                     	;# 
  1019  000B                     	;# 
  1020  000C                     	;# 
  1021  000D                     	;# 
  1022  000E                     	;# 
  1023  0011                     	;# 
  1024  0012                     	;# 
  1025  0013                     	;# 
  1026  0015                     	;# 
  1027  0016                     	;# 
  1028  0016                     	;# 
  1029  0017                     	;# 
  1030  0018                     	;# 
  1031  0019                     	;# 
  1032  001A                     	;# 
  1033  001B                     	;# 
  1034  001C                     	;# 
  1035  008C                     	;# 
  1036  008D                     	;# 
  1037  008E                     	;# 
  1038  0091                     	;# 
  1039  0092                     	;# 
  1040  0093                     	;# 
  1041  0095                     	;# 
  1042  0096                     	;# 
  1043  0097                     	;# 
  1044  0099                     	;# 
  1045  009A                     	;# 
  1046  009B                     	;# 
  1047  009B                     	;# 
  1048  009C                     	;# 
  1049  009D                     	;# 
  1050  009E                     	;# 
  1051  009F                     	;# 
  1052  010C                     	;# 
  1053  010D                     	;# 
  1054  010E                     	;# 
  1055  0111                     	;# 
  1056  0112                     	;# 
  1057  0113                     	;# 
  1058  0114                     	;# 
  1059  0115                     	;# 
  1060  0116                     	;# 
  1061  0117                     	;# 
  1062  0118                     	;# 
  1063  0119                     	;# 
  1064  011D                     	;# 
  1065  018C                     	;# 
  1066  018D                     	;# 
  1067  018E                     	;# 
  1068  0191                     	;# 
  1069  0191                     	;# 
  1070  0192                     	;# 
  1071  0193                     	;# 
  1072  0193                     	;# 
  1073  0194                     	;# 
  1074  0195                     	;# 
  1075  0196                     	;# 
  1076  0197                     	;# 
  1077  0199                     	;# 
  1078  019A                     	;# 
  1079  019B                     	;# 
  1080  019B                     	;# 
  1081  019C                     	;# 
  1082  019D                     	;# 
  1083  019E                     	;# 
  1084  019F                     	;# 
  1085  020C                     	;# 
  1086  020D                     	;# 
  1087  0211                     	;# 
  1088  0211                     	;# 
  1089  0212                     	;# 
  1090  0212                     	;# 
  1091  0213                     	;# 
  1092  0213                     	;# 
  1093  0214                     	;# 
  1094  0214                     	;# 
  1095  0215                     	;# 
  1096  0215                     	;# 
  1097  0215                     	;# 
  1098  0216                     	;# 
  1099  0216                     	;# 
  1100  0217                     	;# 
  1101  0217                     	;# 
  1102  0391                     	;# 
  1103  0392                     	;# 
  1104  0393                     	;# 
  1105  0394                     	;# 
  1106  0395                     	;# 
  1107  0396                     	;# 
  1108  0498                     	;# 
  1109  0498                     	;# 
  1110  0499                     	;# 
  1111  049A                     	;# 
  1112  049B                     	;# 
  1113  049B                     	;# 
  1114  049C                     	;# 
  1115  049D                     	;# 
  1116  049E                     	;# 
  1117  049F                     	;# 
  1118  0611                     	;# 
  1119  0612                     	;# 
  1120  0613                     	;# 
  1121  0613                     	;# 
  1122  0614                     	;# 
  1123  0615                     	;# 
  1124  0616                     	;# 
  1125  0616                     	;# 
  1126  0617                     	;# 
  1127  0618                     	;# 
  1128  0619                     	;# 
  1129  0619                     	;# 
  1130  061A                     	;# 
  1131  061B                     	;# 
  1132  061C                     	;# 
  1133  061C                     	;# 
  1134  0691                     	;# 
  1135  0692                     	;# 
  1136  0693                     	;# 
  1137  0694                     	;# 
  1138  0695                     	;# 
  1139  0F0F                     	;# 
  1140  0F10                     	;# 
  1141  0F11                     	;# 
  1142  0F12                     	;# 
  1143  0F13                     	;# 
  1144  0F14                     	;# 
  1145  0F15                     	;# 
  1146  0F16                     	;# 
  1147  0F17                     	;# 
  1148  0F18                     	;# 
  1149  0F19                     	;# 
  1150  0F1A                     	;# 
  1151  0F1B                     	;# 
  1152  0F1C                     	;# 
  1153  0F1D                     	;# 
  1154  0F1E                     	;# 
  1155  0F1F                     	;# 
  1156  0F20                     	;# 
  1157  0F21                     	;# 
  1158  0F22                     	;# 
  1159  0F23                     	;# 
  1160  0F24                     	;# 
  1161  0F25                     	;# 
  1162  0F26                     	;# 
  1163  0F27                     	;# 
  1164  0F28                     	;# 
  1165  0F29                     	;# 
  1166  0F2A                     	;# 
  1167  0F2B                     	;# 
  1168  0F2C                     	;# 
  1169  0F2D                     	;# 
  1170  0F2E                     	;# 
  1171  0F2F                     	;# 
  1172  0F8C                     	;# 
  1173  0F8D                     	;# 
  1174  0F91                     	;# 
  1175  0F95                     	;# 
  1176  0F96                     	;# 
  1177  0F97                     	;# 
  1178  0F9C                     	;# 
  1179  0F9D                     	;# 
  1180  0F9E                     	;# 
  1181  0FE3                     	;# 
  1182  0FE4                     	;# 
  1183  0FE5                     	;# 
  1184  0FE6                     	;# 
  1185  0FE7                     	;# 
  1186  0FE8                     	;# 
  1187  0FE9                     	;# 
  1188  0FEA                     	;# 
  1189  0FEB                     	;# 
  1190  0FED                     	;# 
  1191  0FEE                     	;# 
  1192  0FEF                     	;# 
  1193  0000                     	;# 
  1194  0001                     	;# 
  1195  0002                     	;# 
  1196  0003                     	;# 
  1197  0004                     	;# 
  1198  0005                     	;# 
  1199  0006                     	;# 
  1200  0007                     	;# 
  1201  0008                     	;# 
  1202  0009                     	;# 
  1203  000A                     	;# 
  1204  000B                     	;# 
  1205  000C                     	;# 
  1206  000D                     	;# 
  1207  000E                     	;# 
  1208  0011                     	;# 
  1209  0012                     	;# 
  1210  0013                     	;# 
  1211  0015                     	;# 
  1212  0016                     	;# 
  1213  0016                     	;# 
  1214  0017                     	;# 
  1215  0018                     	;# 
  1216  0019                     	;# 
  1217  001A                     	;# 
  1218  001B                     	;# 
  1219  001C                     	;# 
  1220  008C                     	;# 
  1221  008D                     	;# 
  1222  008E                     	;# 
  1223  0091                     	;# 
  1224  0092                     	;# 
  1225  0093                     	;# 
  1226  0095                     	;# 
  1227  0096                     	;# 
  1228  0097                     	;# 
  1229  0099                     	;# 
  1230  009A                     	;# 
  1231  009B                     	;# 
  1232  009B                     	;# 
  1233  009C                     	;# 
  1234  009D                     	;# 
  1235  009E                     	;# 
  1236  009F                     	;# 
  1237  010C                     	;# 
  1238  010D                     	;# 
  1239  010E                     	;# 
  1240  0111                     	;# 
  1241  0112                     	;# 
  1242  0113                     	;# 
  1243  0114                     	;# 
  1244  0115                     	;# 
  1245  0116                     	;# 
  1246  0117                     	;# 
  1247  0118                     	;# 
  1248  0119                     	;# 
  1249  011D                     	;# 
  1250  018C                     	;# 
  1251  018D                     	;# 
  1252  018E                     	;# 
  1253  0191                     	;# 
  1254  0191                     	;# 
  1255  0192                     	;# 
  1256  0193                     	;# 
  1257  0193                     	;# 
  1258  0194                     	;# 
  1259  0195                     	;# 
  1260  0196                     	;# 
  1261  0197                     	;# 
  1262  0199                     	;# 
  1263  019A                     	;# 
  1264  019B                     	;# 
  1265  019B                     	;# 
  1266  019C                     	;# 
  1267  019D                     	;# 
  1268  019E                     	;# 
  1269  019F                     	;# 
  1270  020C                     	;# 
  1271  020D                     	;# 
  1272  0211                     	;# 
  1273  0211                     	;# 
  1274  0212                     	;# 
  1275  0212                     	;# 
  1276  0213                     	;# 
  1277  0213                     	;# 
  1278  0214                     	;# 
  1279  0214                     	;# 
  1280  0215                     	;# 
  1281  0215                     	;# 
  1282  0215                     	;# 
  1283  0216                     	;# 
  1284  0216                     	;# 
  1285  0217                     	;# 
  1286  0217                     	;# 
  1287  0391                     	;# 
  1288  0392                     	;# 
  1289  0393                     	;# 
  1290  0394                     	;# 
  1291  0395                     	;# 
  1292  0396                     	;# 
  1293  0498                     	;# 
  1294  0498                     	;# 
  1295  0499                     	;# 
  1296  049A                     	;# 
  1297  049B                     	;# 
  1298  049B                     	;# 
  1299  049C                     	;# 
  1300  049D                     	;# 
  1301  049E                     	;# 
  1302  049F                     	;# 
  1303  0611                     	;# 
  1304  0612                     	;# 
  1305  0613                     	;# 
  1306  0613                     	;# 
  1307  0614                     	;# 
  1308  0615                     	;# 
  1309  0616                     	;# 
  1310  0616                     	;# 
  1311  0617                     	;# 
  1312  0618                     	;# 
  1313  0619                     	;# 
  1314  0619                     	;# 
  1315  061A                     	;# 
  1316  061B                     	;# 
  1317  061C                     	;# 
  1318  061C                     	;# 
  1319  0691                     	;# 
  1320  0692                     	;# 
  1321  0693                     	;# 
  1322  0694                     	;# 
  1323  0695                     	;# 
  1324  0F0F                     	;# 
  1325  0F10                     	;# 
  1326  0F11                     	;# 
  1327  0F12                     	;# 
  1328  0F13                     	;# 
  1329  0F14                     	;# 
  1330  0F15                     	;# 
  1331  0F16                     	;# 
  1332  0F17                     	;# 
  1333  0F18                     	;# 
  1334  0F19                     	;# 
  1335  0F1A                     	;# 
  1336  0F1B                     	;# 
  1337  0F1C                     	;# 
  1338  0F1D                     	;# 
  1339  0F1E                     	;# 
  1340  0F1F                     	;# 
  1341  0F20                     	;# 
  1342  0F21                     	;# 
  1343  0F22                     	;# 
  1344  0F23                     	;# 
  1345  0F24                     	;# 
  1346  0F25                     	;# 
  1347  0F26                     	;# 
  1348  0F27                     	;# 
  1349  0F28                     	;# 
  1350  0F29                     	;# 
  1351  0F2A                     	;# 
  1352  0F2B                     	;# 
  1353  0F2C                     	;# 
  1354  0F2D                     	;# 
  1355  0F2E                     	;# 
  1356  0F2F                     	;# 
  1357  0F8C                     	;# 
  1358  0F8D                     	;# 
  1359  0F91                     	;# 
  1360  0F95                     	;# 
  1361  0F96                     	;# 
  1362  0F97                     	;# 
  1363  0F9C                     	;# 
  1364  0F9D                     	;# 
  1365  0F9E                     	;# 
  1366  0FE3                     	;# 
  1367  0FE4                     	;# 
  1368  0FE5                     	;# 
  1369  0FE6                     	;# 
  1370  0FE7                     	;# 
  1371  0FE8                     	;# 
  1372  0FE9                     	;# 
  1373  0FEA                     	;# 
  1374  0FEB                     	;# 
  1375  0FED                     	;# 
  1376  0FEE                     	;# 
  1377  0FEF                     	;# 
  1378  0000                     	;# 
  1379  0001                     	;# 
  1380  0002                     	;# 
  1381  0003                     	;# 
  1382  0004                     	;# 
  1383  0005                     	;# 
  1384  0006                     	;# 
  1385  0007                     	;# 
  1386  0008                     	;# 
  1387  0009                     	;# 
  1388  000A                     	;# 
  1389  000B                     	;# 
  1390  000C                     	;# 
  1391  000D                     	;# 
  1392  000E                     	;# 
  1393  0011                     	;# 
  1394  0012                     	;# 
  1395  0013                     	;# 
  1396  0015                     	;# 
  1397  0016                     	;# 
  1398  0016                     	;# 
  1399  0017                     	;# 
  1400  0018                     	;# 
  1401  0019                     	;# 
  1402  001A                     	;# 
  1403  001B                     	;# 
  1404  001C                     	;# 
  1405  008C                     	;# 
  1406  008D                     	;# 
  1407  008E                     	;# 
  1408  0091                     	;# 
  1409  0092                     	;# 
  1410  0093                     	;# 
  1411  0095                     	;# 
  1412  0096                     	;# 
  1413  0097                     	;# 
  1414  0099                     	;# 
  1415  009A                     	;# 
  1416  009B                     	;# 
  1417  009B                     	;# 
  1418  009C                     	;# 
  1419  009D                     	;# 
  1420  009E                     	;# 
  1421  009F                     	;# 
  1422  010C                     	;# 
  1423  010D                     	;# 
  1424  010E                     	;# 
  1425  0111                     	;# 
  1426  0112                     	;# 
  1427  0113                     	;# 
  1428  0114                     	;# 
  1429  0115                     	;# 
  1430  0116                     	;# 
  1431  0117                     	;# 
  1432  0118                     	;# 
  1433  0119                     	;# 
  1434  011D                     	;# 
  1435  018C                     	;# 
  1436  018D                     	;# 
  1437  018E                     	;# 
  1438  0191                     	;# 
  1439  0191                     	;# 
  1440  0192                     	;# 
  1441  0193                     	;# 
  1442  0193                     	;# 
  1443  0194                     	;# 
  1444  0195                     	;# 
  1445  0196                     	;# 
  1446  0197                     	;# 
  1447  0199                     	;# 
  1448  019A                     	;# 
  1449  019B                     	;# 
  1450  019B                     	;# 
  1451  019C                     	;# 
  1452  019D                     	;# 
  1453  019E                     	;# 
  1454  019F                     	;# 
  1455  020C                     	;# 
  1456  020D                     	;# 
  1457  0211                     	;# 
  1458  0211                     	;# 
  1459  0212                     	;# 
  1460  0212                     	;# 
  1461  0213                     	;# 
  1462  0213                     	;# 
  1463  0214                     	;# 
  1464  0214                     	;# 
  1465  0215                     	;# 
  1466  0215                     	;# 
  1467  0215                     	;# 
  1468  0216                     	;# 
  1469  0216                     	;# 
  1470  0217                     	;# 
  1471  0217                     	;# 
  1472  0391                     	;# 
  1473  0392                     	;# 
  1474  0393                     	;# 
  1475  0394                     	;# 
  1476  0395                     	;# 
  1477  0396                     	;# 
  1478  0498                     	;# 
  1479  0498                     	;# 
  1480  0499                     	;# 
  1481  049A                     	;# 
  1482  049B                     	;# 
  1483  049B                     	;# 
  1484  049C                     	;# 
  1485  049D                     	;# 
  1486  049E                     	;# 
  1487  049F                     	;# 
  1488  0611                     	;# 
  1489  0612                     	;# 
  1490  0613                     	;# 
  1491  0613                     	;# 
  1492  0614                     	;# 
  1493  0615                     	;# 
  1494  0616                     	;# 
  1495  0616                     	;# 
  1496  0617                     	;# 
  1497  0618                     	;# 
  1498  0619                     	;# 
  1499  0619                     	;# 
  1500  061A                     	;# 
  1501  061B                     	;# 
  1502  061C                     	;# 
  1503  061C                     	;# 
  1504  0691                     	;# 
  1505  0692                     	;# 
  1506  0693                     	;# 
  1507  0694                     	;# 
  1508  0695                     	;# 
  1509  0F0F                     	;# 
  1510  0F10                     	;# 
  1511  0F11                     	;# 
  1512  0F12                     	;# 
  1513  0F13                     	;# 
  1514  0F14                     	;# 
  1515  0F15                     	;# 
  1516  0F16                     	;# 
  1517  0F17                     	;# 
  1518  0F18                     	;# 
  1519  0F19                     	;# 
  1520  0F1A                     	;# 
  1521  0F1B                     	;# 
  1522  0F1C                     	;# 
  1523  0F1D                     	;# 
  1524  0F1E                     	;# 
  1525  0F1F                     	;# 
  1526  0F20                     	;# 
  1527  0F21                     	;# 
  1528  0F22                     	;# 
  1529  0F23                     	;# 
  1530  0F24                     	;# 
  1531  0F25                     	;# 
  1532  0F26                     	;# 
  1533  0F27                     	;# 
  1534  0F28                     	;# 
  1535  0F29                     	;# 
  1536  0F2A                     	;# 
  1537  0F2B                     	;# 
  1538  0F2C                     	;# 
  1539  0F2D                     	;# 
  1540  0F2E                     	;# 
  1541  0F2F                     	;# 
  1542  0F8C                     	;# 
  1543  0F8D                     	;# 
  1544  0F91                     	;# 
  1545  0F95                     	;# 
  1546  0F96                     	;# 
  1547  0F97                     	;# 
  1548  0F9C                     	;# 
  1549  0F9D                     	;# 
  1550  0F9E                     	;# 
  1551  0FE3                     	;# 
  1552  0FE4                     	;# 
  1553  0FE5                     	;# 
  1554  0FE6                     	;# 
  1555  0FE7                     	;# 
  1556  0FE8                     	;# 
  1557  0FE9                     	;# 
  1558  0FEA                     	;# 
  1559  0FEB                     	;# 
  1560  0FED                     	;# 
  1561  0FEE                     	;# 
  1562  0FEF                     	;# 
  1563  0000                     	;# 
  1564  0001                     	;# 
  1565  0002                     	;# 
  1566  0003                     	;# 
  1567  0004                     	;# 
  1568  0005                     	;# 
  1569  0006                     	;# 
  1570  0007                     	;# 
  1571  0008                     	;# 
  1572  0009                     	;# 
  1573  000A                     	;# 
  1574  000B                     	;# 
  1575  000C                     	;# 
  1576  000D                     	;# 
  1577  000E                     	;# 
  1578  0011                     	;# 
  1579  0012                     	;# 
  1580  0013                     	;# 
  1581  0015                     	;# 
  1582  0016                     	;# 
  1583  0016                     	;# 
  1584  0017                     	;# 
  1585  0018                     	;# 
  1586  0019                     	;# 
  1587  001A                     	;# 
  1588  001B                     	;# 
  1589  001C                     	;# 
  1590  008C                     	;# 
  1591  008D                     	;# 
  1592  008E                     	;# 
  1593  0091                     	;# 
  1594  0092                     	;# 
  1595  0093                     	;# 
  1596  0095                     	;# 
  1597  0096                     	;# 
  1598  0097                     	;# 
  1599  0099                     	;# 
  1600  009A                     	;# 
  1601  009B                     	;# 
  1602  009B                     	;# 
  1603  009C                     	;# 
  1604  009D                     	;# 
  1605  009E                     	;# 
  1606  009F                     	;# 
  1607  010C                     	;# 
  1608  010D                     	;# 
  1609  010E                     	;# 
  1610  0111                     	;# 
  1611  0112                     	;# 
  1612  0113                     	;# 
  1613  0114                     	;# 
  1614  0115                     	;# 
  1615  0116                     	;# 
  1616  0117                     	;# 
  1617  0118                     	;# 
  1618  0119                     	;# 
  1619  011D                     	;# 
  1620  018C                     	;# 
  1621  018D                     	;# 
  1622  018E                     	;# 
  1623  0191                     	;# 
  1624  0191                     	;# 
  1625  0192                     	;# 
  1626  0193                     	;# 
  1627  0193                     	;# 
  1628  0194                     	;# 
  1629  0195                     	;# 
  1630  0196                     	;# 
  1631  0197                     	;# 
  1632  0199                     	;# 
  1633  019A                     	;# 
  1634  019B                     	;# 
  1635  019B                     	;# 
  1636  019C                     	;# 
  1637  019D                     	;# 
  1638  019E                     	;# 
  1639  019F                     	;# 
  1640  020C                     	;# 
  1641  020D                     	;# 
  1642  0211                     	;# 
  1643  0211                     	;# 
  1644  0212                     	;# 
  1645  0212                     	;# 
  1646  0213                     	;# 
  1647  0213                     	;# 
  1648  0214                     	;# 
  1649  0214                     	;# 
  1650  0215                     	;# 
  1651  0215                     	;# 
  1652  0215                     	;# 
  1653  0216                     	;# 
  1654  0216                     	;# 
  1655  0217                     	;# 
  1656  0217                     	;# 
  1657  0391                     	;# 
  1658  0392                     	;# 
  1659  0393                     	;# 
  1660  0394                     	;# 
  1661  0395                     	;# 
  1662  0396                     	;# 
  1663  0498                     	;# 
  1664  0498                     	;# 
  1665  0499                     	;# 
  1666  049A                     	;# 
  1667  049B                     	;# 
  1668  049B                     	;# 
  1669  049C                     	;# 
  1670  049D                     	;# 
  1671  049E                     	;# 
  1672  049F                     	;# 
  1673  0611                     	;# 
  1674  0612                     	;# 
  1675  0613                     	;# 
  1676  0613                     	;# 
  1677  0614                     	;# 
  1678  0615                     	;# 
  1679  0616                     	;# 
  1680  0616                     	;# 
  1681  0617                     	;# 
  1682  0618                     	;# 
  1683  0619                     	;# 
  1684  0619                     	;# 
  1685  061A                     	;# 
  1686  061B                     	;# 
  1687  061C                     	;# 
  1688  061C                     	;# 
  1689  0691                     	;# 
  1690  0692                     	;# 
  1691  0693                     	;# 
  1692  0694                     	;# 
  1693  0695                     	;# 
  1694  0F0F                     	;# 
  1695  0F10                     	;# 
  1696  0F11                     	;# 
  1697  0F12                     	;# 
  1698  0F13                     	;# 
  1699  0F14                     	;# 
  1700  0F15                     	;# 
  1701  0F16                     	;# 
  1702  0F17                     	;# 
  1703  0F18                     	;# 
  1704  0F19                     	;# 
  1705  0F1A                     	;# 
  1706  0F1B                     	;# 
  1707  0F1C                     	;# 
  1708  0F1D                     	;# 
  1709  0F1E                     	;# 
  1710  0F1F                     	;# 
  1711  0F20                     	;# 
  1712  0F21                     	;# 
  1713  0F22                     	;# 
  1714  0F23                     	;# 
  1715  0F24                     	;# 
  1716  0F25                     	;# 
  1717  0F26                     	;# 
  1718  0F27                     	;# 
  1719  0F28                     	;# 
  1720  0F29                     	;# 
  1721  0F2A                     	;# 
  1722  0F2B                     	;# 
  1723  0F2C                     	;# 
  1724  0F2D                     	;# 
  1725  0F2E                     	;# 
  1726  0F2F                     	;# 
  1727  0F8C                     	;# 
  1728  0F8D                     	;# 
  1729  0F91                     	;# 
  1730  0F95                     	;# 
  1731  0F96                     	;# 
  1732  0F97                     	;# 
  1733  0F9C                     	;# 
  1734  0F9D                     	;# 
  1735  0F9E                     	;# 
  1736  0FE3                     	;# 
  1737  0FE4                     	;# 
  1738  0FE5                     	;# 
  1739  0FE6                     	;# 
  1740  0FE7                     	;# 
  1741  0FE8                     	;# 
  1742  0FE9                     	;# 
  1743  0FEA                     	;# 
  1744  0FEB                     	;# 
  1745  0FED                     	;# 
  1746  0FEE                     	;# 
  1747  0FEF                     	;# 
  1748  0000                     	;# 
  1749  0001                     	;# 
  1750  0002                     	;# 
  1751  0003                     	;# 
  1752  0004                     	;# 
  1753  0005                     	;# 
  1754  0006                     	;# 
  1755  0007                     	;# 
  1756  0008                     	;# 
  1757  0009                     	;# 
  1758  000A                     	;# 
  1759  000B                     	;# 
  1760  000C                     	;# 
  1761  000D                     	;# 
  1762  000E                     	;# 
  1763  0011                     	;# 
  1764  0012                     	;# 
  1765  0013                     	;# 
  1766  0015                     	;# 
  1767  0016                     	;# 
  1768  0016                     	;# 
  1769  0017                     	;# 
  1770  0018                     	;# 
  1771  0019                     	;# 
  1772  001A                     	;# 
  1773  001B                     	;# 
  1774  001C                     	;# 
  1775  008C                     	;# 
  1776  008D                     	;# 
  1777  008E                     	;# 
  1778  0091                     	;# 
  1779  0092                     	;# 
  1780  0093                     	;# 
  1781  0095                     	;# 
  1782  0096                     	;# 
  1783  0097                     	;# 
  1784  0099                     	;# 
  1785  009A                     	;# 
  1786  009B                     	;# 
  1787  009B                     	;# 
  1788  009C                     	;# 
  1789  009D                     	;# 
  1790  009E                     	;# 
  1791  009F                     	;# 
  1792  010C                     	;# 
  1793  010D                     	;# 
  1794  010E                     	;# 
  1795  0111                     	;# 
  1796  0112                     	;# 
  1797  0113                     	;# 
  1798  0114                     	;# 
  1799  0115                     	;# 
  1800  0116                     	;# 
  1801  0117                     	;# 
  1802  0118                     	;# 
  1803  0119                     	;# 
  1804  011D                     	;# 
  1805  018C                     	;# 
  1806  018D                     	;# 
  1807  018E                     	;# 
  1808  0191                     	;# 
  1809  0191                     	;# 
  1810  0192                     	;# 
  1811  0193                     	;# 
  1812  0193                     	;# 
  1813  0194                     	;# 
  1814  0195                     	;# 
  1815  0196                     	;# 
  1816  0197                     	;# 
  1817  0199                     	;# 
  1818  019A                     	;# 
  1819  019B                     	;# 
  1820  019B                     	;# 
  1821  019C                     	;# 
  1822  019D                     	;# 
  1823  019E                     	;# 
  1824  019F                     	;# 
  1825  020C                     	;# 
  1826  020D                     	;# 
  1827  0211                     	;# 
  1828  0211                     	;# 
  1829  0212                     	;# 
  1830  0212                     	;# 
  1831  0213                     	;# 
  1832  0213                     	;# 
  1833  0214                     	;# 
  1834  0214                     	;# 
  1835  0215                     	;# 
  1836  0215                     	;# 
  1837  0215                     	;# 
  1838  0216                     	;# 
  1839  0216                     	;# 
  1840  0217                     	;# 
  1841  0217                     	;# 
  1842  0391                     	;# 
  1843  0392                     	;# 
  1844  0393                     	;# 
  1845  0394                     	;# 
  1846  0395                     	;# 
  1847  0396                     	;# 
  1848  0498                     	;# 
  1849  0498                     	;# 
  1850  0499                     	;# 
  1851  049A                     	;# 
  1852  049B                     	;# 
  1853  049B                     	;# 
  1854  049C                     	;# 
  1855  049D                     	;# 
  1856  049E                     	;# 
  1857  049F                     	;# 
  1858  0611                     	;# 
  1859  0612                     	;# 
  1860  0613                     	;# 
  1861  0613                     	;# 
  1862  0614                     	;# 
  1863  0615                     	;# 
  1864  0616                     	;# 
  1865  0616                     	;# 
  1866  0617                     	;# 
  1867  0618                     	;# 
  1868  0619                     	;# 
  1869  0619                     	;# 
  1870  061A                     	;# 
  1871  061B                     	;# 
  1872  061C                     	;# 
  1873  061C                     	;# 
  1874  0691                     	;# 
  1875  0692                     	;# 
  1876  0693                     	;# 
  1877  0694                     	;# 
  1878  0695                     	;# 
  1879  0F0F                     	;# 
  1880  0F10                     	;# 
  1881  0F11                     	;# 
  1882  0F12                     	;# 
  1883  0F13                     	;# 
  1884  0F14                     	;# 
  1885  0F15                     	;# 
  1886  0F16                     	;# 
  1887  0F17                     	;# 
  1888  0F18                     	;# 
  1889  0F19                     	;# 
  1890  0F1A                     	;# 
  1891  0F1B                     	;# 
  1892  0F1C                     	;# 
  1893  0F1D                     	;# 
  1894  0F1E                     	;# 
  1895  0F1F                     	;# 
  1896  0F20                     	;# 
  1897  0F21                     	;# 
  1898  0F22                     	;# 
  1899  0F23                     	;# 
  1900  0F24                     	;# 
  1901  0F25                     	;# 
  1902  0F26                     	;# 
  1903  0F27                     	;# 
  1904  0F28                     	;# 
  1905  0F29                     	;# 
  1906  0F2A                     	;# 
  1907  0F2B                     	;# 
  1908  0F2C                     	;# 
  1909  0F2D                     	;# 
  1910  0F2E                     	;# 
  1911  0F2F                     	;# 
  1912  0F8C                     	;# 
  1913  0F8D                     	;# 
  1914  0F91                     	;# 
  1915  0F95                     	;# 
  1916  0F96                     	;# 
  1917  0F97                     	;# 
  1918  0F9C                     	;# 
  1919  0F9D                     	;# 
  1920  0F9E                     	;# 
  1921  0FE3                     	;# 
  1922  0FE4                     	;# 
  1923  0FE5                     	;# 
  1924  0FE6                     	;# 
  1925  0FE7                     	;# 
  1926  0FE8                     	;# 
  1927  0FE9                     	;# 
  1928  0FEA                     	;# 
  1929  0FEB                     	;# 
  1930  0FED                     	;# 
  1931  0FEE                     	;# 
  1932  0FEF                     	;# 
  1933  0000                     	;# 
  1934  0001                     	;# 
  1935  0002                     	;# 
  1936  0003                     	;# 
  1937  0004                     	;# 
  1938  0005                     	;# 
  1939  0006                     	;# 
  1940  0007                     	;# 
  1941  0008                     	;# 
  1942  0009                     	;# 
  1943  000A                     	;# 
  1944  000B                     	;# 
  1945  000C                     	;# 
  1946  000D                     	;# 
  1947  000E                     	;# 
  1948  0011                     	;# 
  1949  0012                     	;# 
  1950  0013                     	;# 
  1951  0015                     	;# 
  1952  0016                     	;# 
  1953  0016                     	;# 
  1954  0017                     	;# 
  1955  0018                     	;# 
  1956  0019                     	;# 
  1957  001A                     	;# 
  1958  001B                     	;# 
  1959  001C                     	;# 
  1960  008C                     	;# 
  1961  008D                     	;# 
  1962  008E                     	;# 
  1963  0091                     	;# 
  1964  0092                     	;# 
  1965  0093                     	;# 
  1966  0095                     	;# 
  1967  0096                     	;# 
  1968  0097                     	;# 
  1969  0099                     	;# 
  1970  009A                     	;# 
  1971  009B                     	;# 
  1972  009B                     	;# 
  1973  009C                     	;# 
  1974  009D                     	;# 
  1975  009E                     	;# 
  1976  009F                     	;# 
  1977  010C                     	;# 
  1978  010D                     	;# 
  1979  010E                     	;# 
  1980  0111                     	;# 
  1981  0112                     	;# 
  1982  0113                     	;# 
  1983  0114                     	;# 
  1984  0115                     	;# 
  1985  0116                     	;# 
  1986  0117                     	;# 
  1987  0118                     	;# 
  1988  0119                     	;# 
  1989  011D                     	;# 
  1990  018C                     	;# 
  1991  018D                     	;# 
  1992  018E                     	;# 
  1993  0191                     	;# 
  1994  0191                     	;# 
  1995  0192                     	;# 
  1996  0193                     	;# 
  1997  0193                     	;# 
  1998  0194                     	;# 
  1999  0195                     	;# 
  2000  0196                     	;# 
  2001  0197                     	;# 
  2002  0199                     	;# 
  2003  019A                     	;# 
  2004  019B                     	;# 
  2005  019B                     	;# 
  2006  019C                     	;# 
  2007  019D                     	;# 
  2008  019E                     	;# 
  2009  019F                     	;# 
  2010  020C                     	;# 
  2011  020D                     	;# 
  2012  0211                     	;# 
  2013  0211                     	;# 
  2014  0212                     	;# 
  2015  0212                     	;# 
  2016  0213                     	;# 
  2017  0213                     	;# 
  2018  0214                     	;# 
  2019  0214                     	;# 
  2020  0215                     	;# 
  2021  0215                     	;# 
  2022  0215                     	;# 
  2023  0216                     	;# 
  2024  0216                     	;# 
  2025  0217                     	;# 
  2026  0217                     	;# 
  2027  0391                     	;# 
  2028  0392                     	;# 
  2029  0393                     	;# 
  2030  0394                     	;# 
  2031  0395                     	;# 
  2032  0396                     	;# 
  2033  0498                     	;# 
  2034  0498                     	;# 
  2035  0499                     	;# 
  2036  049A                     	;# 
  2037  049B                     	;# 
  2038  049B                     	;# 
  2039  049C                     	;# 
  2040  049D                     	;# 
  2041  049E                     	;# 
  2042  049F                     	;# 
  2043  0611                     	;# 
  2044  0612                     	;# 
  2045  0613                     	;# 
  2046  0613                     	;# 
  2047  0614                     	;# 
  2048  0615                     	;# 
  2049  0616                     	;# 
  2050  0616                     	;# 
  2051  0617                     	;# 
  2052  0618                     	;# 
  2053  0619                     	;# 
  2054  0619                     	;# 
  2055  061A                     	;# 
  2056  061B                     	;# 
  2057  061C                     	;# 
  2058  061C                     	;# 
  2059  0691                     	;# 
  2060  0692                     	;# 
  2061  0693                     	;# 
  2062  0694                     	;# 
  2063  0695                     	;# 
  2064  0F0F                     	;# 
  2065  0F10                     	;# 
  2066  0F11                     	;# 
  2067  0F12                     	;# 
  2068  0F13                     	;# 
  2069  0F14                     	;# 
  2070  0F15                     	;# 
  2071  0F16                     	;# 
  2072  0F17                     	;# 
  2073  0F18                     	;# 
  2074  0F19                     	;# 
  2075  0F1A                     	;# 
  2076  0F1B                     	;# 
  2077  0F1C                     	;# 
  2078  0F1D                     	;# 
  2079  0F1E                     	;# 
  2080  0F1F                     	;# 
  2081  0F20                     	;# 
  2082  0F21                     	;# 
  2083  0F22                     	;# 
  2084  0F23                     	;# 
  2085  0F24                     	;# 
  2086  0F25                     	;# 
  2087  0F26                     	;# 
  2088  0F27                     	;# 
  2089  0F28                     	;# 
  2090  0F29                     	;# 
  2091  0F2A                     	;# 
  2092  0F2B                     	;# 
  2093  0F2C                     	;# 
  2094  0F2D                     	;# 
  2095  0F2E                     	;# 
  2096  0F2F                     	;# 
  2097  0F8C                     	;# 
  2098  0F8D                     	;# 
  2099  0F91                     	;# 
  2100  0F95                     	;# 
  2101  0F96                     	;# 
  2102  0F97                     	;# 
  2103  0F9C                     	;# 
  2104  0F9D                     	;# 
  2105  0F9E                     	;# 
  2106  0FE3                     	;# 
  2107  0FE4                     	;# 
  2108  0FE5                     	;# 
  2109  0FE6                     	;# 
  2110  0FE7                     	;# 
  2111  0FE8                     	;# 
  2112  0FE9                     	;# 
  2113  0FEA                     	;# 
  2114  0FEB                     	;# 
  2115  0FED                     	;# 
  2116  0FEE                     	;# 
  2117  0FEF                     	;# 
  2118  0000                     	;# 
  2119  0001                     	;# 
  2120  0002                     	;# 
  2121  0003                     	;# 
  2122  0004                     	;# 
  2123  0005                     	;# 
  2124  0006                     	;# 
  2125  0007                     	;# 
  2126  0008                     	;# 
  2127  0009                     	;# 
  2128  000A                     	;# 
  2129  000B                     	;# 
  2130  000C                     	;# 
  2131  000D                     	;# 
  2132  000E                     	;# 
  2133  0011                     	;# 
  2134  0012                     	;# 
  2135  0013                     	;# 
  2136  0015                     	;# 
  2137  0016                     	;# 
  2138  0016                     	;# 
  2139  0017                     	;# 
  2140  0018                     	;# 
  2141  0019                     	;# 
  2142  001A                     	;# 
  2143  001B                     	;# 
  2144  001C                     	;# 
  2145  008C                     	;# 
  2146  008D                     	;# 
  2147  008E                     	;# 
  2148  0091                     	;# 
  2149  0092                     	;# 
  2150  0093                     	;# 
  2151  0095                     	;# 
  2152  0096                     	;# 
  2153  0097                     	;# 
  2154  0099                     	;# 
  2155  009A                     	;# 
  2156  009B                     	;# 
  2157  009B                     	;# 
  2158  009C                     	;# 
  2159  009D                     	;# 
  2160  009E                     	;# 
  2161  009F                     	;# 
  2162  010C                     	;# 
  2163  010D                     	;# 
  2164  010E                     	;# 
  2165  0111                     	;# 
  2166  0112                     	;# 
  2167  0113                     	;# 
  2168  0114                     	;# 
  2169  0115                     	;# 
  2170  0116                     	;# 
  2171  0117                     	;# 
  2172  0118                     	;# 
  2173  0119                     	;# 
  2174  011D                     	;# 
  2175  018C                     	;# 
  2176  018D                     	;# 
  2177  018E                     	;# 
  2178  0191                     	;# 
  2179  0191                     	;# 
  2180  0192                     	;# 
  2181  0193                     	;# 
  2182  0193                     	;# 
  2183  0194                     	;# 
  2184  0195                     	;# 
  2185  0196                     	;# 
  2186  0197                     	;# 
  2187  0199                     	;# 
  2188  019A                     	;# 
  2189  019B                     	;# 
  2190  019B                     	;# 
  2191  019C                     	;# 
  2192  019D                     	;# 
  2193  019E                     	;# 
  2194  019F                     	;# 
  2195  020C                     	;# 
  2196  020D                     	;# 
  2197  0211                     	;# 
  2198  0211                     	;# 
  2199  0212                     	;# 
  2200  0212                     	;# 
  2201  0213                     	;# 
  2202  0213                     	;# 
  2203  0214                     	;# 
  2204  0214                     	;# 
  2205  0215                     	;# 
  2206  0215                     	;# 
  2207  0215                     	;# 
  2208  0216                     	;# 
  2209  0216                     	;# 
  2210  0217                     	;# 
  2211  0217                     	;# 
  2212  0391                     	;# 
  2213  0392                     	;# 
  2214  0393                     	;# 
  2215  0394                     	;# 
  2216  0395                     	;# 
  2217  0396                     	;# 
  2218  0498                     	;# 
  2219  0498                     	;# 
  2220  0499                     	;# 
  2221  049A                     	;# 
  2222  049B                     	;# 
  2223  049B                     	;# 
  2224  049C                     	;# 
  2225  049D                     	;# 
  2226  049E                     	;# 
  2227  049F                     	;# 
  2228  0611                     	;# 
  2229  0612                     	;# 
  2230  0613                     	;# 
  2231  0613                     	;# 
  2232  0614                     	;# 
  2233  0615                     	;# 
  2234  0616                     	;# 
  2235  0616                     	;# 
  2236  0617                     	;# 
  2237  0618                     	;# 
  2238  0619                     	;# 
  2239  0619                     	;# 
  2240  061A                     	;# 
  2241  061B                     	;# 
  2242  061C                     	;# 
  2243  061C                     	;# 
  2244  0691                     	;# 
  2245  0692                     	;# 
  2246  0693                     	;# 
  2247  0694                     	;# 
  2248  0695                     	;# 
  2249  0F0F                     	;# 
  2250  0F10                     	;# 
  2251  0F11                     	;# 
  2252  0F12                     	;# 
  2253  0F13                     	;# 
  2254  0F14                     	;# 
  2255  0F15                     	;# 
  2256  0F16                     	;# 
  2257  0F17                     	;# 
  2258  0F18                     	;# 
  2259  0F19                     	;# 
  2260  0F1A                     	;# 
  2261  0F1B                     	;# 
  2262  0F1C                     	;# 
  2263  0F1D                     	;# 
  2264  0F1E                     	;# 
  2265  0F1F                     	;# 
  2266  0F20                     	;# 
  2267  0F21                     	;# 
  2268  0F22                     	;# 
  2269  0F23                     	;# 
  2270  0F24                     	;# 
  2271  0F25                     	;# 
  2272  0F26                     	;# 
  2273  0F27                     	;# 
  2274  0F28                     	;# 
  2275  0F29                     	;# 
  2276  0F2A                     	;# 
  2277  0F2B                     	;# 
  2278  0F2C                     	;# 
  2279  0F2D                     	;# 
  2280  0F2E                     	;# 
  2281  0F2F                     	;# 
  2282  0F8C                     	;# 
  2283  0F8D                     	;# 
  2284  0F91                     	;# 
  2285  0F95                     	;# 
  2286  0F96                     	;# 
  2287  0F97                     	;# 
  2288  0F9C                     	;# 
  2289  0F9D                     	;# 
  2290  0F9E                     	;# 
  2291  0FE3                     	;# 
  2292  0FE4                     	;# 
  2293  0FE5                     	;# 
  2294  0FE6                     	;# 
  2295  0FE7                     	;# 
  2296  0FE8                     	;# 
  2297  0FE9                     	;# 
  2298  0FEA                     	;# 
  2299  0FEB                     	;# 
  2300  0FED                     	;# 
  2301  0FEE                     	;# 
  2302  0FEF                     	;# 
  2303  0000                     	;# 
  2304  0001                     	;# 
  2305  0002                     	;# 
  2306  0003                     	;# 
  2307  0004                     	;# 
  2308  0005                     	;# 
  2309  0006                     	;# 
  2310  0007                     	;# 
  2311  0008                     	;# 
  2312  0009                     	;# 
  2313  000A                     	;# 
  2314  000B                     	;# 
  2315  000C                     	;# 
  2316  000D                     	;# 
  2317  000E                     	;# 
  2318  0011                     	;# 
  2319  0012                     	;# 
  2320  0013                     	;# 
  2321  0015                     	;# 
  2322  0016                     	;# 
  2323  0016                     	;# 
  2324  0017                     	;# 
  2325  0018                     	;# 
  2326  0019                     	;# 
  2327  001A                     	;# 
  2328  001B                     	;# 
  2329  001C                     	;# 
  2330  008C                     	;# 
  2331  008D                     	;# 
  2332  008E                     	;# 
  2333  0091                     	;# 
  2334  0092                     	;# 
  2335  0093                     	;# 
  2336  0095                     	;# 
  2337  0096                     	;# 
  2338  0097                     	;# 
  2339  0099                     	;# 
  2340  009A                     	;# 
  2341  009B                     	;# 
  2342  009B                     	;# 
  2343  009C                     	;# 
  2344  009D                     	;# 
  2345  009E                     	;# 
  2346  009F                     	;# 
  2347  010C                     	;# 
  2348  010D                     	;# 
  2349  010E                     	;# 
  2350  0111                     	;# 
  2351  0112                     	;# 
  2352  0113                     	;# 
  2353  0114                     	;# 
  2354  0115                     	;# 
  2355  0116                     	;# 
  2356  0117                     	;# 
  2357  0118                     	;# 
  2358  0119                     	;# 
  2359  011D                     	;# 
  2360  018C                     	;# 
  2361  018D                     	;# 
  2362  018E                     	;# 
  2363  0191                     	;# 
  2364  0191                     	;# 
  2365  0192                     	;# 
  2366  0193                     	;# 
  2367  0193                     	;# 
  2368  0194                     	;# 
  2369  0195                     	;# 
  2370  0196                     	;# 
  2371  0197                     	;# 
  2372  0199                     	;# 
  2373  019A                     	;# 
  2374  019B                     	;# 
  2375  019B                     	;# 
  2376  019C                     	;# 
  2377  019D                     	;# 
  2378  019E                     	;# 
  2379  019F                     	;# 
  2380  020C                     	;# 
  2381  020D                     	;# 
  2382  0211                     	;# 
  2383  0211                     	;# 
  2384  0212                     	;# 
  2385  0212                     	;# 
  2386  0213                     	;# 
  2387  0213                     	;# 
  2388  0214                     	;# 
  2389  0214                     	;# 
  2390  0215                     	;# 
  2391  0215                     	;# 
  2392  0215                     	;# 
  2393  0216                     	;# 
  2394  0216                     	;# 
  2395  0217                     	;# 
  2396  0217                     	;# 
  2397  0391                     	;# 
  2398  0392                     	;# 
  2399  0393                     	;# 
  2400  0394                     	;# 
  2401  0395                     	;# 
  2402  0396                     	;# 
  2403  0498                     	;# 
  2404  0498                     	;# 
  2405  0499                     	;# 
  2406  049A                     	;# 
  2407  049B                     	;# 
  2408  049B                     	;# 
  2409  049C                     	;# 
  2410  049D                     	;# 
  2411  049E                     	;# 
  2412  049F                     	;# 
  2413  0611                     	;# 
  2414  0612                     	;# 
  2415  0613                     	;# 
  2416  0613                     	;# 
  2417  0614                     	;# 
  2418  0615                     	;# 
  2419  0616                     	;# 
  2420  0616                     	;# 
  2421  0617                     	;# 
  2422  0618                     	;# 
  2423  0619                     	;# 
  2424  0619                     	;# 
  2425  061A                     	;# 
  2426  061B                     	;# 
  2427  061C                     	;# 
  2428  061C                     	;# 
  2429  0691                     	;# 
  2430  0692                     	;# 
  2431  0693                     	;# 
  2432  0694                     	;# 
  2433  0695                     	;# 
  2434  0F0F                     	;# 
  2435  0F10                     	;# 
  2436  0F11                     	;# 
  2437  0F12                     	;# 
  2438  0F13                     	;# 
  2439  0F14                     	;# 
  2440  0F15                     	;# 
  2441  0F16                     	;# 
  2442  0F17                     	;# 
  2443  0F18                     	;# 
  2444  0F19                     	;# 
  2445  0F1A                     	;# 
  2446  0F1B                     	;# 
  2447  0F1C                     	;# 
  2448  0F1D                     	;# 
  2449  0F1E                     	;# 
  2450  0F1F                     	;# 
  2451  0F20                     	;# 
  2452  0F21                     	;# 
  2453  0F22                     	;# 
  2454  0F23                     	;# 
  2455  0F24                     	;# 
  2456  0F25                     	;# 
  2457  0F26                     	;# 
  2458  0F27                     	;# 
  2459  0F28                     	;# 
  2460  0F29                     	;# 
  2461  0F2A                     	;# 
  2462  0F2B                     	;# 
  2463  0F2C                     	;# 
  2464  0F2D                     	;# 
  2465  0F2E                     	;# 
  2466  0F2F                     	;# 
  2467  0F8C                     	;# 
  2468  0F8D                     	;# 
  2469  0F91                     	;# 
  2470  0F95                     	;# 
  2471  0F96                     	;# 
  2472  0F97                     	;# 
  2473  0F9C                     	;# 
  2474  0F9D                     	;# 
  2475  0F9E                     	;# 
  2476  0FE3                     	;# 
  2477  0FE4                     	;# 
  2478  0FE5                     	;# 
  2479  0FE6                     	;# 
  2480  0FE7                     	;# 
  2481  0FE8                     	;# 
  2482  0FE9                     	;# 
  2483  0FEA                     	;# 
  2484  0FEB                     	;# 
  2485  0FED                     	;# 
  2486  0FEE                     	;# 
  2487  0FEF                     	;# 
  2488                           
  2489 ;; Function _rd1RegCompleteHandler is unused but had its address taken
  2490  0000                     
  2491 ;; Function _rd2RegCompleteHandler is unused but had its address taken
  2492  0000                     
  2493 ;; Function _wr1RegCompleteHandler is unused but had its address taken
  2494  0000                     
  2495 ;; Function _wr2RegCompleteHandler is unused but had its address taken
  2496  0000                     
  2497 ;; Function _rdBlkRegCompleteHandler is unused but had its address taken
  2498  0000                     
  2499 ;; Function _I2C_DO_IDLE is unused but had its address taken
  2500  0000                     
  2501 ;; Function _I2C_DO_SEND_ADR_READ is unused but had its address taken
  2502  0000                     
  2503 ;; Function _I2C_DO_SEND_ADR_WRITE is unused but had its address taken
  2504  0000                     
  2505 ;; Function _I2C_DO_TX is unused but had its address taken
  2506  0000                     
  2507 ;; Function _I2C_DO_RX is unused but had its address taken
  2508  0000                     
  2509 ;; Function _I2C_DO_RCEN is unused but had its address taken
  2510  0000                     
  2511 ;; Function _I2C_DO_TX_EMPTY is unused but had its address taken
  2512  0000                     
  2513 ;; Function _I2C_DO_SEND_RESTART_READ is unused but had its address taken
  2514  0000                     
  2515 ;; Function _I2C_DO_SEND_RESTART_WRITE is unused but had its address taken
  2516  0000                     
  2517 ;; Function _I2C_DO_SEND_RESTART is unused but had its address taken
  2518  0000                     
  2519 ;; Function _I2C_DO_SEND_STOP is unused but had its address taken
  2520  0000                     
  2521 ;; Function _I2C_DO_RX_ACK is unused but had its address taken
  2522  0000                     
  2523 ;; Function _I2C_DO_RX_NACK_STOP is unused but had its address taken
  2524  0000                     
  2525 ;; Function _I2C_DO_RX_NACK_RESTART is unused but had its address taken
  2526  0000                     
  2527 ;; Function _I2C_DO_RESET is unused but had its address taken
  2528  0000                     
  2529 ;; Function _I2C_DO_ADDRESS_NACK is unused but had its address taken
  2530  0000                     
  2531 ;; Function _I2C_CallbackReturnStop is unused but had its address taken
  2532  0000                     
  2533 ;; Function _I2C_CallbackReturnReset is unused but had its address taken
  2534  0000                     
  2535 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2536  0000                     
  2537 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2538  0000                     
  2539 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2540  0000                     
  2541                           	psect	idataCOMMON
  2542  033C                     __pidataCOMMON:
  2543                           
  2544                           ;initializer for _U8Message
  2545  033C  3455               	retlw	85
  2546                           
  2547                           ;initializer for _BreathState
  2548  033D  3401               	retlw	1
  2549                           
  2550                           	psect	stringtext1
  2551  01F4                     __pstringtext1:
  2552  01F4                     _fsmStateTable:
  2553  01F4  3400               	retlw	0
  2554  01F5  3400               	retlw	0
  2555  01F6  3400               	retlw	0
  2556  01F7  3400               	retlw	0
  2557  01F8  3400               	retlw	0
  2558  01F9  3400               	retlw	0
  2559  01FA  3400               	retlw	0
  2560  01FB  3400               	retlw	0
  2561  01FC  3400               	retlw	0
  2562  01FD  3400               	retlw	0
  2563  01FE  3400               	retlw	0
  2564  01FF  3400               	retlw	0
  2565  0200  3400               	retlw	0
  2566  0201  3400               	retlw	0
  2567  0202  3400               	retlw	0
  2568  0203  3400               	retlw	0
  2569  0204  3400               	retlw	0
  2570  0205  3400               	retlw	0
  2571  0206  3400               	retlw	0
  2572  0207  3400               	retlw	0
  2573  0208  3400               	retlw	0
  2574  0209  3400               	retlw	0
  2575  020A  3400               	retlw	0
  2576  020B  3400               	retlw	0
  2577  020C  3400               	retlw	0
  2578  020D  3400               	retlw	0
  2579  020E  3400               	retlw	0
  2580  020F  3400               	retlw	0
  2581  0210  3400               	retlw	0
  2582  0211  3400               	retlw	0
  2583  0212  3400               	retlw	0
  2584  0213  3400               	retlw	0
  2585  0214                     __end_of_fsmStateTable:
  2586                           
  2587                           	psect	stringtext2
  2588  02B4                     __pstringtext2:
  2589  02B4                     _COS_tsk:
  2590  02B4  34FB               	retlw	low _UartDisplay
  2591  02B5  3402               	retlw	high _UartDisplay
  2592  02B6  3480               	retlw	128
  2593  02B7  34F3               	retlw	low _GetTemp
  2594  02B8  3402               	retlw	high _GetTemp
  2595  02B9  3440               	retlw	64
  2596  02BA  3400               	retlw	0
  2597  02BB  3400               	retlw	0
  2598  02BC  3400               	retlw	0
  2599  02BD  3400               	retlw	0
  2600  02BE  3400               	retlw	0
  2601  02BF  3400               	retlw	0
  2602  02C0  3400               	retlw	0
  2603  02C1  3400               	retlw	0
  2604  02C2  3400               	retlw	0
  2605  02C3                     __end_of_COS_tsk:
  2606                           
  2607                           	psect	nvBANK0
  2608  0053                     __pnvBANK0:
  2609  0053                     _EUSART_ErrorHandler:
  2610  0053                     	ds	2
  2611  0055                     _EUSART_OverrunErrorHandler:
  2612  0055                     	ds	2
  2613  0057                     _EUSART_FramingErrorHandler:
  2614  0057                     	ds	2
  2615  0059                     _TMR2_InterruptHandler:
  2616  0059                     	ds	2
  2617  005B                     _COS_tsk_ena:
  2618  005B                     	ds	1
  2619  005C                     _COS_tsk_msk:
  2620  005C                     	ds	1
  2621  0012                     _PIR2bits	set	18
  2622  000B                     _INTCONbits	set	11
  2623  001C                     _T2CONbits	set	28
  2624  001C                     _T2CON	set	28
  2625  0011                     _PIR1bits	set	17
  2626  001A                     _TMR2	set	26
  2627  001B                     _PR2	set	27
  2628  0018                     _T1CON	set	24
  2629  0016                     _TMR1L	set	22
  2630  0017                     _TMR1H	set	23
  2631  0095                     _OPTION_REGbits	set	149
  2632  008E                     _TRISC	set	142
  2633  008D                     _TRISB	set	141
  2634  008C                     _TRISA	set	140
  2635  0097                     _WDTCON	set	151
  2636  0099                     _OSCCON	set	153
  2637  0091                     _PIE1bits	set	145
  2638  010E                     _LATCbits	set	270
  2639  011D                     _APFCON	set	285
  2640  010E                     _LATC	set	270
  2641  010D                     _LATB	set	269
  2642  010C                     _LATA	set	268
  2643  0116                     _BORCON	set	278
  2644  019A                     _TXREG	set	410
  2645  0199                     _RCREG	set	409
  2646  019D                     _RCSTAbits	set	413
  2647  019E                     _TXSTAbits	set	414
  2648  019C                     _SPBRGH	set	412
  2649  019B                     _SPBRGL	set	411
  2650  019E                     _TXSTA	set	414
  2651  019D                     _RCSTA	set	413
  2652  019F                     _BAUDCON	set	415
  2653  018C                     _ANSELA	set	396
  2654  018D                     _ANSELB	set	397
  2655  018E                     _ANSELC	set	398
  2656  0214                     _SSP1STATbits	set	532
  2657  0216                     _SSP1CON2bits	set	534
  2658  0211                     _SSP1BUF	set	529
  2659  0215                     _SSP1CON1bits	set	533
  2660  0212                     _SSP1ADD	set	530
  2661  0216                     _SSP1CON2	set	534
  2662  0215                     _SSP1CON1	set	533
  2663  0214                     _SSP1STAT	set	532
  2664  020C                     _WPUA	set	524
  2665  020D                     _WPUB	set	525
  2666  0611                     _PWM1DCL	set	1553
  2667  0612                     _PWM1DCH	set	1554
  2668  0613                     _PWM1CON	set	1555
  2669                           
  2670                           	psect	cinit
  2671  0014                     start_initialization:	
  2672                           ; #config settings
  2673                           
  2674  0014                     __initialization:
  2675                           
  2676                           ; Initialize objects allocated to COMMON
  2677  0014  3183  233C  3180   	fcall	__pidataCOMMON	;fetch initializer
  2678  0017  00FA               	movwf	__pdataCOMMON& (0+127)
  2679  0018  3183  233D  3180   	fcall	__pidataCOMMON+1	;fetch initializer
  2680  001B  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
  2681                           
  2682                           ; Clear objects allocated to COMMON
  2683  001C  01F6               	clrf	__pbssCOMMON& (0+127)
  2684  001D  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  2685  001E  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  2686  001F  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  2687                           
  2688                           ; Clear objects allocated to BANK0
  2689  0020  3020               	movlw	low __pbssBANK0
  2690  0021  0084               	movwf	4
  2691  0022  3000               	movlw	high __pbssBANK0
  2692  0023  0085               	movwf	5
  2693  0024  3033               	movlw	51
  2694  0025  3183  230B         	fcall	clear_ram0
  2695  0027                     end_of_initialization:	
  2696                           ;End of C runtime variable initialization code
  2697                           
  2698  0027                     __end_of__initialization:
  2699  0027  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2700  0028  0020               	movlb	0
  2701  0029  3182  2A30         	ljmp	_main	;jump to C main() function
  2702                           
  2703                           	psect	bssCOMMON
  2704  0076                     __pbssCOMMON:
  2705  0076                     _COS_tcnt_val:
  2706  0076                     	ds	2
  2707  0078                     _NewMessageFlag:
  2708  0078                     	ds	1
  2709  0079                     _eusartRxLastError:
  2710  0079                     	ds	1
  2711                           
  2712                           	psect	dataCOMMON
  2713  007A                     __pdataCOMMON:
  2714  007A                     _U8Message:
  2715  007A                     	ds	1
  2716  007B                     _BreathState:
  2717  007B                     	ds	1
  2718                           
  2719                           	psect	bssBANK0
  2720  0020                     __pbssBANK0:
  2721  0020                     _I2C_Status:
  2722  0020                     	ds	29
  2723  003D                     _Humi:
  2724  003D                     	ds	2
  2725  003F                     _Temp:
  2726  003F                     	ds	2
  2727  0041                     _dutyValue:
  2728  0041                     	ds	2
  2729  0043                     _counter:
  2730  0043                     	ds	2
  2731  0045                     TMR2_ISR@CountCallBack:
  2732  0045                     	ds	2
  2733  0047                     _COS_tcnt_lst:
  2734  0047                     	ds	2
  2735  0049                     _COS_tsk_tmr:
  2736  0049                     	ds	2
  2737  004B                     _COS_sec_tmr:
  2738  004B                     	ds	2
  2739  004D                     _COS_ms_tmr:
  2740  004D                     	ds	2
  2741  004F                     _counter@UART_Display$F1229:
  2742  004F                     	ds	1
  2743  0050                     _Timer2Flag:
  2744  0050                     	ds	1
  2745  0051                     _TimeSlotCounter:
  2746  0051                     	ds	1
  2747  0052                     _COS_tsk_ind:
  2748  0052                     	ds	1
  2749                           
  2750                           	psect	clrtext
  2751  030B                     clear_ram0:	
  2752                           ;	Called with FSR0 containing the base address, and
  2753                           ;	WREG with the size to clear
  2754                           
  2755  030B  0064               	clrwdt	;clear the watchdog before getting into this loop
  2756  030C                     clrloop0:
  2757  030C  0180               	clrf	0	;clear RAM location pointed to by FSR
  2758  030D  3101               	addfsr 0,1
  2759  030E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2760  030F  2B0C               	goto	clrloop0	;have we reached the end yet?
  2761  0310  3400               	retlw	0	;all done for this memory range, return
  2762                           
  2763                           	psect	cstackCOMMON
  2764  0070                     __pcstackCOMMON:
  2765  0070                     ?_COS_TimerSetup:
  2766  0070                     ?_UartDisplay:	
  2767                           ; 1 bytes @ 0x0
  2768                           
  2769  0070                     ?_GetTemp:	
  2770                           ; 1 bytes @ 0x0
  2771                           
  2772  0070                     ?_I2C_Open:	
  2773                           ; 1 bytes @ 0x0
  2774                           
  2775  0070                     ?_TMR2_DefaultInterruptHandler:	
  2776                           ; 1 bytes @ 0x0
  2777                           
  2778  0070                     ??_TMR2_DefaultInterruptHandler:	
  2779                           ; 1 bytes @ 0x0
  2780                           
  2781  0070                     ?_TMR2_CallBack:	
  2782                           ; 1 bytes @ 0x0
  2783                           
  2784  0070                     ?_I2C_Initialize:	
  2785                           ; 1 bytes @ 0x0
  2786                           
  2787  0070                     ?_PIN_MANAGER_Initialize:	
  2788                           ; 1 bytes @ 0x0
  2789                           
  2790  0070                     ?_OSCILLATOR_Initialize:	
  2791                           ; 1 bytes @ 0x0
  2792                           
  2793  0070                     ?_WDT_Initialize:	
  2794                           ; 1 bytes @ 0x0
  2795                           
  2796  0070                     ?_PWM1_Initialize:	
  2797                           ; 1 bytes @ 0x0
  2798                           
  2799  0070                     ?_EUSART_Initialize:	
  2800                           ; 1 bytes @ 0x0
  2801                           
  2802  0070                     ?_I2C_MasterClearIrq:	
  2803                           ; 1 bytes @ 0x0
  2804                           
  2805  0070                     ?_I2C_MasterOpen:	
  2806                           ; 1 bytes @ 0x0
  2807                           
  2808  0070                     ?_COS_Init:	
  2809                           ; 1 bytes @ 0x0
  2810                           
  2811  0070                     ?_COS_TmrHandler:	
  2812                           ; 1 bytes @ 0x0
  2813                           
  2814  0070                     ?_COS_TskMan:	
  2815                           ; 1 bytes @ 0x0
  2816                           
  2817  0070                     ?_TMR2_Initialize:	
  2818                           ; 1 bytes @ 0x0
  2819                           
  2820  0070                     ?_TMR2_ISR:	
  2821                           ; 1 bytes @ 0x0
  2822                           
  2823  0070                     ?_INTERRUPT_InterruptManager:	
  2824                           ; 1 bytes @ 0x0
  2825                           
  2826  0070                     ?_SYSTEM_Initialize:	
  2827                           ; 1 bytes @ 0x0
  2828                           
  2829  0070                     ?_PWM1_LoadDutyValue:	
  2830                           ; 1 bytes @ 0x0
  2831                           
  2832  0070                     ?_EUSART_Write:	
  2833                           ; 1 bytes @ 0x0
  2834                           
  2835  0070                     ?_Led2_PWM:	
  2836                           ; 1 bytes @ 0x0
  2837                           
  2838  0070                     ?_SendByUart:	
  2839                           ; 1 bytes @ 0x0
  2840                           
  2841  0070                     ?_main:	
  2842                           ; 1 bytes @ 0x0
  2843                           
  2844  0070                     PWM1_LoadDutyValue@dutyValue:	
  2845                           ; 1 bytes @ 0x0
  2846                           
  2847                           
  2848                           ; 2 bytes @ 0x0
  2849  0070                     	ds	2
  2850  0072                     ??_PWM1_LoadDutyValue:
  2851                           
  2852                           ; 1 bytes @ 0x2
  2853  0072                     	ds	2
  2854  0074                     ??_Led2_PWM:
  2855                           
  2856                           ; 1 bytes @ 0x4
  2857  0074                     	ds	2
  2858  0076                     ??_TMR2_CallBack:
  2859  0076                     ??_TMR2_ISR:	
  2860                           ; 1 bytes @ 0x6
  2861                           
  2862  0076                     ??_INTERRUPT_InterruptManager:	
  2863                           ; 1 bytes @ 0x6
  2864                           
  2865                           
  2866                           	psect	cstackBANK0
  2867  005D                     __pcstackBANK0:	
  2868                           ; 1 bytes @ 0x6
  2869                           
  2870  005D                     ??_COS_TimerSetup:
  2871  005D                     ??_I2C_Open:	
  2872                           ; 1 bytes @ 0x0
  2873                           
  2874  005D                     ?_TMR2_SetInterruptHandler:	
  2875                           ; 1 bytes @ 0x0
  2876                           
  2877  005D                     ??_I2C_Initialize:	
  2878                           ; 1 bytes @ 0x0
  2879                           
  2880  005D                     ??_PIN_MANAGER_Initialize:	
  2881                           ; 1 bytes @ 0x0
  2882                           
  2883  005D                     ??_OSCILLATOR_Initialize:	
  2884                           ; 1 bytes @ 0x0
  2885                           
  2886  005D                     ??_WDT_Initialize:	
  2887                           ; 1 bytes @ 0x0
  2888                           
  2889  005D                     ??_PWM1_Initialize:	
  2890                           ; 1 bytes @ 0x0
  2891                           
  2892  005D                     ??_I2C_MasterClearIrq:	
  2893                           ; 1 bytes @ 0x0
  2894                           
  2895  005D                     ??_I2C_MasterOpen:	
  2896                           ; 1 bytes @ 0x0
  2897                           
  2898  005D                     ?_EUSART_SetFramingErrorHandler:	
  2899                           ; 1 bytes @ 0x0
  2900                           
  2901  005D                     ?_EUSART_SetOverrunErrorHandler:	
  2902                           ; 1 bytes @ 0x0
  2903                           
  2904  005D                     ?_EUSART_SetErrorHandler:	
  2905                           ; 1 bytes @ 0x0
  2906                           
  2907  005D                     ??_COS_Init:	
  2908                           ; 1 bytes @ 0x0
  2909                           
  2910  005D                     ??_COS_TmrHandler:	
  2911                           ; 1 bytes @ 0x0
  2912                           
  2913  005D                     ??_EUSART_Write:	
  2914                           ; 1 bytes @ 0x0
  2915                           
  2916  005D                     ??_SendByUart:	
  2917                           ; 1 bytes @ 0x0
  2918                           
  2919  005D                     ?___wmul:	
  2920                           ; 1 bytes @ 0x0
  2921                           
  2922  005D                     EUSART_Write@txData:	
  2923                           ; 2 bytes @ 0x0
  2924                           
  2925  005D                     TMR2_SetInterruptHandler@InterruptHandler:	
  2926                           ; 1 bytes @ 0x0
  2927                           
  2928  005D                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2929                           ; 2 bytes @ 0x0
  2930                           
  2931  005D                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2932                           ; 2 bytes @ 0x0
  2933                           
  2934  005D                     EUSART_SetErrorHandler@interruptHandler:	
  2935                           ; 2 bytes @ 0x0
  2936                           
  2937  005D                     ___wmul@multiplier:	
  2938                           ; 2 bytes @ 0x0
  2939                           
  2940                           
  2941                           ; 2 bytes @ 0x0
  2942  005D                     	ds	1
  2943  005E                     ??_UartDisplay:
  2944  005E                     I2C_Open@address:	
  2945                           ; 1 bytes @ 0x1
  2946                           
  2947  005E                     SendByUart@Txt:	
  2948                           ; 1 bytes @ 0x1
  2949                           
  2950                           
  2951                           ; 1 bytes @ 0x1
  2952  005E                     	ds	1
  2953  005F                     ??_TMR2_SetInterruptHandler:
  2954  005F                     ??_EUSART_Initialize:	
  2955                           ; 1 bytes @ 0x2
  2956                           
  2957  005F                     ??_EUSART_SetFramingErrorHandler:	
  2958                           ; 1 bytes @ 0x2
  2959                           
  2960  005F                     ??_EUSART_SetOverrunErrorHandler:	
  2961                           ; 1 bytes @ 0x2
  2962                           
  2963  005F                     ??_EUSART_SetErrorHandler:	
  2964                           ; 1 bytes @ 0x2
  2965                           
  2966  005F                     ??_TMR2_Initialize:	
  2967                           ; 1 bytes @ 0x2
  2968                           
  2969  005F                     ??_SYSTEM_Initialize:	
  2970                           ; 1 bytes @ 0x2
  2971                           
  2972  005F                     I2C_Open@returnValue:	
  2973                           ; 1 bytes @ 0x2
  2974                           
  2975  005F                     ___wmul@multiplicand:	
  2976                           ; 1 bytes @ 0x2
  2977                           
  2978                           
  2979                           ; 2 bytes @ 0x2
  2980  005F                     	ds	1
  2981  0060                     ??_GetTemp:
  2982  0060                     COS_Init@tempbyte1:	
  2983                           ; 1 bytes @ 0x3
  2984                           
  2985  0060                     COS_TmrHandler@tempbyte1:	
  2986                           ; 1 bytes @ 0x3
  2987                           
  2988                           
  2989                           ; 1 bytes @ 0x3
  2990  0060                     	ds	1
  2991  0061                     ??___wmul:
  2992  0061                     COS_Init@tempbyte2:	
  2993                           ; 1 bytes @ 0x4
  2994                           
  2995  0061                     COS_TmrHandler@tempbyte2:	
  2996                           ; 1 bytes @ 0x4
  2997                           
  2998  0061                     ___wmul@product:	
  2999                           ; 1 bytes @ 0x4
  3000                           
  3001                           
  3002                           ; 2 bytes @ 0x4
  3003  0061                     	ds	2
  3004  0063                     ??_COS_TskMan:
  3005                           
  3006                           ; 1 bytes @ 0x6
  3007  0063                     	ds	2
  3008  0065                     ??_main:
  3009                           
  3010                           	psect	maintext
  3011  0230                     __pmaintext:	
  3012                           ; 1 bytes @ 0x8
  3013 ;;
  3014 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3015 ;;
  3016 ;; *************** function _main *****************
  3017 ;; Defined at:
  3018 ;;		line 52 in file "main.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;		None
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;		None
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  1    wreg      void 
  3025 ;; Registers used:
  3026 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3027 ;; Tracked objects:
  3028 ;;		On entry : B1F/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3032 ;;      Params:         0       0       0       0       0       0       0       0
  3033 ;;      Locals:         0       0       0       0       0       0       0       0
  3034 ;;      Temps:          0       0       0       0       0       0       0       0
  3035 ;;      Totals:         0       0       0       0       0       0       0       0
  3036 ;;Total ram usage:        0 bytes
  3037 ;; Hardware stack levels required when called:    9
  3038 ;; This function calls:
  3039 ;;		_COS_Init
  3040 ;;		_COS_TmrHandler
  3041 ;;		_COS_TskMan
  3042 ;;		_SYSTEM_Initialize
  3043 ;;		_TMR2_SetInterruptHandler
  3044 ;; This function is called by:
  3045 ;;		Startup code after reset
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049                           
  3050                           ;psect for function _main
  3051  0230                     _main:
  3052                           
  3053                           ;main.c: 55:     SYSTEM_Initialize();
  3054                           
  3055                           ;incstack = 0
  3056                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3057  0230  3182  227A  3182   	fcall	_SYSTEM_Initialize
  3058                           
  3059                           ;main.c: 56:     COS_Init();
  3060  0233  3181  215D  3182   	fcall	_COS_Init
  3061                           
  3062                           ;main.c: 57:     TMR2_SetInterruptHandler(Led2_PWM);
  3063  0236  309A               	movlw	low _Led2_PWM
  3064  0237  0020               	movlb	0	; select bank0
  3065  0238  00DD               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  3066  0239  3000               	movlw	high _Led2_PWM
  3067  023A  00DE               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  3068  023B  3183  2311  3182   	fcall	_TMR2_SetInterruptHandler
  3069                           
  3070                           ;main.c: 63:     (INTCONbits.GIE = 1);
  3071  023E  178B               	bsf	11,7	;volatile
  3072                           
  3073                           ;main.c: 66:     (INTCONbits.PEIE = 1);
  3074  023F  170B               	bsf	11,6	;volatile
  3075  0240                     l799:	
  3076                           ;main.c: 74:     while (1)
  3077                           
  3078                           
  3079                           ;main.c: 75:     {;main.c: 76:         COS_TmrHandler();
  3080  0240  3181  2100  3182   	fcall	_COS_TmrHandler
  3081                           
  3082                           ;main.c: 78:         if (COS_tsk_ena)
  3083  0243  0020               	movlb	0	; select bank0
  3084  0244  085B               	movf	_COS_tsk_ena,w
  3085  0245  1903               	btfsc	3,2
  3086  0246  2A40               	goto	l799
  3087                           
  3088                           ;main.c: 79:         {;main.c: 80:             COS_TskMan();
  3089  0247  3180  202B  3182   	fcall	_COS_TskMan
  3090  024A  2A40               	goto	l799
  3091  024B                     __end_of_main:
  3092                           
  3093                           	psect	text1
  3094  027A                     __ptext1:	
  3095 ;; *************** function _SYSTEM_Initialize *****************
  3096 ;; Defined at:
  3097 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;		None
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;		None
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  1    wreg      void 
  3104 ;; Registers used:
  3105 ;;		wreg, status,2, status,0, pclath, cstack
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3111 ;;      Params:         0       0       0       0       0       0       0       0
  3112 ;;      Locals:         0       0       0       0       0       0       0       0
  3113 ;;      Temps:          0       0       0       0       0       0       0       0
  3114 ;;      Totals:         0       0       0       0       0       0       0       0
  3115 ;;Total ram usage:        0 bytes
  3116 ;; Hardware stack levels used:    1
  3117 ;; Hardware stack levels required when called:    7
  3118 ;; This function calls:
  3119 ;;		_EUSART_Initialize
  3120 ;;		_I2C_Initialize
  3121 ;;		_OSCILLATOR_Initialize
  3122 ;;		_PIN_MANAGER_Initialize
  3123 ;;		_PWM1_Initialize
  3124 ;;		_TMR2_Initialize
  3125 ;;		_WDT_Initialize
  3126 ;; This function is called by:
  3127 ;;		_main
  3128 ;; This function uses a non-reentrant model
  3129 ;;
  3130                           
  3131                           
  3132                           ;psect for function _SYSTEM_Initialize
  3133  027A                     _SYSTEM_Initialize:
  3134                           
  3135                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  3136                           
  3137                           ;incstack = 0
  3138                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3139  027A  3182  22D9  3182   	fcall	_I2C_Initialize
  3140                           
  3141                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3142  027D  3182  224B  3182   	fcall	_PIN_MANAGER_Initialize
  3143                           
  3144                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3145  0280  3183  2317  3182   	fcall	_OSCILLATOR_Initialize
  3146                           
  3147                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  3148  0283  3183  2335  3182   	fcall	_WDT_Initialize
  3149                           
  3150                           ;mcc_generated_files/mcc.c: 57:     PWM1_Initialize();
  3151  0286  3182  22EB  3182   	fcall	_PWM1_Initialize
  3152                           
  3153                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  3154  0289  3182  22A2  3182   	fcall	_TMR2_Initialize
  3155                           
  3156                           ;mcc_generated_files/mcc.c: 59:     EUSART_Initialize();
  3157  028C  3181  21D0         	fcall	_EUSART_Initialize
  3158  028E  0008               	return
  3159  028F                     __end_of_SYSTEM_Initialize:
  3160                           
  3161                           	psect	text2
  3162  0335                     __ptext2:	
  3163 ;; *************** function _WDT_Initialize *****************
  3164 ;; Defined at:
  3165 ;;		line 70 in file "mcc_generated_files/mcc.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;		None
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;		None
  3170 ;; Return value:  Size  Location     Type
  3171 ;;                  1    wreg      void 
  3172 ;; Registers used:
  3173 ;;		wreg
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3179 ;;      Params:         0       0       0       0       0       0       0       0
  3180 ;;      Locals:         0       0       0       0       0       0       0       0
  3181 ;;      Temps:          0       0       0       0       0       0       0       0
  3182 ;;      Totals:         0       0       0       0       0       0       0       0
  3183 ;;Total ram usage:        0 bytes
  3184 ;; Hardware stack levels used:    1
  3185 ;; Hardware stack levels required when called:    5
  3186 ;; This function calls:
  3187 ;;		Nothing
  3188 ;; This function is called by:
  3189 ;;		_SYSTEM_Initialize
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           
  3193                           
  3194                           ;psect for function _WDT_Initialize
  3195  0335                     _WDT_Initialize:
  3196                           
  3197                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x16;
  3198                           
  3199                           ;incstack = 0
  3200                           ; Regs used in _WDT_Initialize: [wreg]
  3201  0335  3016               	movlw	22
  3202  0336  0021               	movlb	1	; select bank1
  3203  0337  0097               	movwf	23	;volatile
  3204  0338  0008               	return
  3205  0339                     __end_of_WDT_Initialize:
  3206                           
  3207                           	psect	text3
  3208  02A2                     __ptext3:	
  3209 ;; *************** function _TMR2_Initialize *****************
  3210 ;; Defined at:
  3211 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;		None
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;		None
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  1    wreg      void 
  3218 ;; Registers used:
  3219 ;;		wreg, status,2, status,0, pclath, cstack
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3225 ;;      Params:         0       0       0       0       0       0       0       0
  3226 ;;      Locals:         0       0       0       0       0       0       0       0
  3227 ;;      Temps:          0       0       0       0       0       0       0       0
  3228 ;;      Totals:         0       0       0       0       0       0       0       0
  3229 ;;Total ram usage:        0 bytes
  3230 ;; Hardware stack levels used:    1
  3231 ;; Hardware stack levels required when called:    6
  3232 ;; This function calls:
  3233 ;;		_TMR2_SetInterruptHandler
  3234 ;; This function is called by:
  3235 ;;		_SYSTEM_Initialize
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239                           
  3240                           ;psect for function _TMR2_Initialize
  3241  02A2                     _TMR2_Initialize:
  3242                           
  3243                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0xF9;
  3244                           
  3245                           ;incstack = 0
  3246                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3247  02A2  30F9               	movlw	249
  3248  02A3  0020               	movlb	0	; select bank0
  3249  02A4  009B               	movwf	27	;volatile
  3250                           
  3251                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  3252  02A5  019A               	clrf	26	;volatile
  3253                           
  3254                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  3255  02A6  1091               	bcf	17,1	;volatile
  3256                           
  3257                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  3258  02A7  0021               	movlb	1	; select bank1
  3259  02A8  1491               	bsf	17,1	;volatile
  3260                           
  3261                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  3262  02A9  303E               	movlw	low _TMR2_DefaultInterruptHandler
  3263  02AA  0020               	movlb	0	; select bank0
  3264  02AB  00DD               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  3265  02AC  3003               	movlw	high _TMR2_DefaultInterruptHandler
  3266  02AD  00DE               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  3267  02AE  3183  2311         	fcall	_TMR2_SetInterruptHandler
  3268                           
  3269                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x06;
  3270  02B0  3006               	movlw	6
  3271  02B1  0020               	movlb	0	; select bank0
  3272  02B2  009C               	movwf	28	;volatile
  3273  02B3  0008               	return
  3274  02B4                     __end_of_TMR2_Initialize:
  3275                           
  3276                           	psect	text4
  3277  0311                     __ptext4:	
  3278 ;; *************** function _TMR2_SetInterruptHandler *****************
  3279 ;; Defined at:
  3280 ;;		line 147 in file "mcc_generated_files/tmr2.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3283 ;;		 -> Led2_PWM(1), TMR2_DefaultInterruptHandler(1), 
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;		None
  3286 ;; Return value:  Size  Location     Type
  3287 ;;                  1    wreg      void 
  3288 ;; Registers used:
  3289 ;;		wreg
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/0
  3292 ;;		On exit  : 0/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3295 ;;      Params:         0       2       0       0       0       0       0       0
  3296 ;;      Locals:         0       0       0       0       0       0       0       0
  3297 ;;      Temps:          0       0       0       0       0       0       0       0
  3298 ;;      Totals:         0       2       0       0       0       0       0       0
  3299 ;;Total ram usage:        2 bytes
  3300 ;; Hardware stack levels used:    1
  3301 ;; Hardware stack levels required when called:    5
  3302 ;; This function calls:
  3303 ;;		Nothing
  3304 ;; This function is called by:
  3305 ;;		_TMR2_Initialize
  3306 ;;		_main
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310                           
  3311                           ;psect for function _TMR2_SetInterruptHandler
  3312  0311                     _TMR2_SetInterruptHandler:
  3313                           
  3314                           ;mcc_generated_files/tmr2.c: 148:     TMR2_InterruptHandler = InterruptHandler;
  3315                           
  3316                           ;incstack = 0
  3317                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  3318  0311  0020               	movlb	0	; select bank0
  3319  0312  085E               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  3320  0313  00DA               	movwf	_TMR2_InterruptHandler+1
  3321  0314  085D               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  3322  0315  00D9               	movwf	_TMR2_InterruptHandler
  3323  0316  0008               	return
  3324  0317                     __end_of_TMR2_SetInterruptHandler:
  3325                           
  3326                           	psect	text5
  3327  02EB                     __ptext5:	
  3328 ;; *************** function _PWM1_Initialize *****************
  3329 ;; Defined at:
  3330 ;;		line 58 in file "mcc_generated_files/pwm1.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;		None
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;		None
  3335 ;; Return value:  Size  Location     Type
  3336 ;;                  1    wreg      void 
  3337 ;; Registers used:
  3338 ;;		wreg
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3344 ;;      Params:         0       0       0       0       0       0       0       0
  3345 ;;      Locals:         0       0       0       0       0       0       0       0
  3346 ;;      Temps:          0       0       0       0       0       0       0       0
  3347 ;;      Totals:         0       0       0       0       0       0       0       0
  3348 ;;Total ram usage:        0 bytes
  3349 ;; Hardware stack levels used:    1
  3350 ;; Hardware stack levels required when called:    5
  3351 ;; This function calls:
  3352 ;;		Nothing
  3353 ;; This function is called by:
  3354 ;;		_SYSTEM_Initialize
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357                           
  3358                           
  3359                           ;psect for function _PWM1_Initialize
  3360  02EB                     _PWM1_Initialize:
  3361                           
  3362                           ;mcc_generated_files/pwm1.c: 62:     PWM1CON = 0xC0;
  3363                           
  3364                           ;incstack = 0
  3365                           ; Regs used in _PWM1_Initialize: [wreg]
  3366  02EB  30C0               	movlw	192
  3367  02EC  002C               	movlb	12	; select bank12
  3368  02ED  0093               	movwf	19	;volatile
  3369                           
  3370                           ;mcc_generated_files/pwm1.c: 65:     PWM1DCH = 0x7C;
  3371  02EE  307C               	movlw	124
  3372  02EF  0092               	movwf	18	;volatile
  3373                           
  3374                           ;mcc_generated_files/pwm1.c: 68:     PWM1DCL = 0xC0;
  3375  02F0  30C0               	movlw	192
  3376  02F1  0091               	movwf	17	;volatile
  3377  02F2  0008               	return
  3378  02F3                     __end_of_PWM1_Initialize:
  3379                           
  3380                           	psect	text6
  3381  024B                     __ptext6:	
  3382 ;; *************** function _PIN_MANAGER_Initialize *****************
  3383 ;; Defined at:
  3384 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;		None
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;		None
  3389 ;; Return value:  Size  Location     Type
  3390 ;;                  1    wreg      void 
  3391 ;; Registers used:
  3392 ;;		wreg, status,2
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3398 ;;      Params:         0       0       0       0       0       0       0       0
  3399 ;;      Locals:         0       0       0       0       0       0       0       0
  3400 ;;      Temps:          0       0       0       0       0       0       0       0
  3401 ;;      Totals:         0       0       0       0       0       0       0       0
  3402 ;;Total ram usage:        0 bytes
  3403 ;; Hardware stack levels used:    1
  3404 ;; Hardware stack levels required when called:    5
  3405 ;; This function calls:
  3406 ;;		Nothing
  3407 ;; This function is called by:
  3408 ;;		_SYSTEM_Initialize
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           
  3413                           ;psect for function _PIN_MANAGER_Initialize
  3414  024B                     _PIN_MANAGER_Initialize:
  3415                           
  3416                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3417                           
  3418                           ;incstack = 0
  3419                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3420  024B  0022               	movlb	2	; select bank2
  3421  024C  018C               	clrf	12	;volatile
  3422                           
  3423                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3424  024D  018D               	clrf	13	;volatile
  3425                           
  3426                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  3427  024E  018E               	clrf	14	;volatile
  3428                           
  3429                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  3430  024F  303F               	movlw	63
  3431  0250  0021               	movlb	1	; select bank1
  3432  0251  008C               	movwf	12	;volatile
  3433                           
  3434                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x70;
  3435  0252  3070               	movlw	112
  3436  0253  008D               	movwf	13	;volatile
  3437                           
  3438                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x9B;
  3439  0254  309B               	movlw	155
  3440  0255  008E               	movwf	14	;volatile
  3441                           
  3442                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x8B;
  3443  0256  308B               	movlw	139
  3444  0257  0023               	movlb	3	; select bank3
  3445  0258  008E               	movwf	14	;volatile
  3446                           
  3447                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  3448  0259  018D               	clrf	13	;volatile
  3449                           
  3450                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x17;
  3451  025A  3017               	movlw	23
  3452  025B  008C               	movwf	12	;volatile
  3453                           
  3454                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  3455  025C  0024               	movlb	4	; select bank4
  3456  025D  018D               	clrf	13	;volatile
  3457                           
  3458                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  3459  025E  018C               	clrf	12	;volatile
  3460                           
  3461                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 1;
  3462  025F  0021               	movlb	1	; select bank1
  3463  0260  1795               	bsf	21,7	;volatile
  3464                           
  3465                           ;mcc_generated_files/pin_manager.c: 89:     APFCON = 0x00;
  3466  0261  0022               	movlb	2	; select bank2
  3467  0262  019D               	clrf	29	;volatile
  3468  0263  0008               	return
  3469  0264                     __end_of_PIN_MANAGER_Initialize:
  3470                           
  3471                           	psect	text7
  3472  0317                     __ptext7:	
  3473 ;; *************** function _OSCILLATOR_Initialize *****************
  3474 ;; Defined at:
  3475 ;;		line 62 in file "mcc_generated_files/mcc.c"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;		None
  3478 ;; Auto vars:     Size  Location     Type
  3479 ;;		None
  3480 ;; Return value:  Size  Location     Type
  3481 ;;                  1    wreg      void 
  3482 ;; Registers used:
  3483 ;;		wreg, status,2
  3484 ;; Tracked objects:
  3485 ;;		On entry : 0/0
  3486 ;;		On exit  : 0/0
  3487 ;;		Unchanged: 0/0
  3488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3489 ;;      Params:         0       0       0       0       0       0       0       0
  3490 ;;      Locals:         0       0       0       0       0       0       0       0
  3491 ;;      Temps:          0       0       0       0       0       0       0       0
  3492 ;;      Totals:         0       0       0       0       0       0       0       0
  3493 ;;Total ram usage:        0 bytes
  3494 ;; Hardware stack levels used:    1
  3495 ;; Hardware stack levels required when called:    5
  3496 ;; This function calls:
  3497 ;;		Nothing
  3498 ;; This function is called by:
  3499 ;;		_SYSTEM_Initialize
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503                           
  3504                           ;psect for function _OSCILLATOR_Initialize
  3505  0317                     _OSCILLATOR_Initialize:
  3506                           
  3507                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x78;
  3508                           
  3509                           ;incstack = 0
  3510                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3511  0317  3078               	movlw	120
  3512  0318  0021               	movlb	1	; select bank1
  3513  0319  0099               	movwf	25	;volatile
  3514                           
  3515                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  3516  031A  0022               	movlb	2	; select bank2
  3517  031B  0196               	clrf	22	;volatile
  3518  031C  0008               	return
  3519  031D                     __end_of_OSCILLATOR_Initialize:
  3520                           
  3521                           	psect	text8
  3522  02D9                     __ptext8:	
  3523 ;; *************** function _I2C_Initialize *****************
  3524 ;; Defined at:
  3525 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;		None
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;		None
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  1    wreg      void 
  3532 ;; Registers used:
  3533 ;;		wreg, status,2
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3539 ;;      Params:         0       0       0       0       0       0       0       0
  3540 ;;      Locals:         0       0       0       0       0       0       0       0
  3541 ;;      Temps:          0       0       0       0       0       0       0       0
  3542 ;;      Totals:         0       0       0       0       0       0       0       0
  3543 ;;Total ram usage:        0 bytes
  3544 ;; Hardware stack levels used:    1
  3545 ;; Hardware stack levels required when called:    5
  3546 ;; This function calls:
  3547 ;;		Nothing
  3548 ;; This function is called by:
  3549 ;;		_SYSTEM_Initialize
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           
  3554                           ;psect for function _I2C_Initialize
  3555  02D9                     _I2C_Initialize:
  3556                           
  3557                           ;mcc_generated_files/i2c_master.c: 169:     SSP1STAT = 0x00;
  3558                           
  3559                           ;incstack = 0
  3560                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  3561  02D9  0024               	movlb	4	; select bank4
  3562  02DA  0194               	clrf	20	;volatile
  3563                           
  3564                           ;mcc_generated_files/i2c_master.c: 170:     SSP1CON1 = 0x08;
  3565  02DB  3008               	movlw	8
  3566  02DC  0095               	movwf	21	;volatile
  3567                           
  3568                           ;mcc_generated_files/i2c_master.c: 171:     SSP1CON2 = 0x00;
  3569  02DD  0196               	clrf	22	;volatile
  3570                           
  3571                           ;mcc_generated_files/i2c_master.c: 172:     SSP1ADD = 0x27;
  3572  02DE  3027               	movlw	39
  3573  02DF  0092               	movwf	18	;volatile
  3574                           
  3575                           ;mcc_generated_files/i2c_master.c: 173:     SSP1CON1bits.SSPEN = 0;
  3576  02E0  1295               	bcf	21,5	;volatile
  3577  02E1  0008               	return
  3578  02E2                     __end_of_I2C_Initialize:
  3579                           
  3580                           	psect	text9
  3581  01D0                     __ptext9:	
  3582 ;; *************** function _EUSART_Initialize *****************
  3583 ;; Defined at:
  3584 ;;		line 66 in file "mcc_generated_files/eusart.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;		None
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;		None
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  1    wreg      void 
  3591 ;; Registers used:
  3592 ;;		wreg, status,2, status,0, pclath, cstack
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3598 ;;      Params:         0       0       0       0       0       0       0       0
  3599 ;;      Locals:         0       0       0       0       0       0       0       0
  3600 ;;      Temps:          0       0       0       0       0       0       0       0
  3601 ;;      Totals:         0       0       0       0       0       0       0       0
  3602 ;;Total ram usage:        0 bytes
  3603 ;; Hardware stack levels used:    1
  3604 ;; Hardware stack levels required when called:    6
  3605 ;; This function calls:
  3606 ;;		_EUSART_SetErrorHandler
  3607 ;;		_EUSART_SetFramingErrorHandler
  3608 ;;		_EUSART_SetOverrunErrorHandler
  3609 ;; This function is called by:
  3610 ;;		_SYSTEM_Initialize
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           
  3614                           
  3615                           ;psect for function _EUSART_Initialize
  3616  01D0                     _EUSART_Initialize:
  3617                           
  3618                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  3619                           
  3620                           ;incstack = 0
  3621                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3622  01D0  3008               	movlw	8
  3623  01D1  0023               	movlb	3	; select bank3
  3624  01D2  009F               	movwf	31	;volatile
  3625                           
  3626                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  3627  01D3  3090               	movlw	144
  3628  01D4  009D               	movwf	29	;volatile
  3629                           
  3630                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  3631  01D5  3024               	movlw	36
  3632  01D6  009E               	movwf	30	;volatile
  3633                           
  3634                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0xA0;
  3635  01D7  30A0               	movlw	160
  3636  01D8  009B               	movwf	27	;volatile
  3637                           
  3638                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x01;
  3639  01D9  3001               	movlw	1
  3640  01DA  009C               	movwf	28	;volatile
  3641                           
  3642                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  3643  01DB  3000               	movlw	0
  3644  01DC  0020               	movlb	0	; select bank0
  3645  01DD  00DD               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  3646  01DE  3000               	movlw	0
  3647  01DF  00DE               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  3648  01E0  3183  2323  3181   	fcall	_EUSART_SetFramingErrorHandler
  3649                           
  3650                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  3651  01E3  3000               	movlw	0
  3652  01E4  0020               	movlb	0	; select bank0
  3653  01E5  00DD               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  3654  01E6  3000               	movlw	0
  3655  01E7  00DE               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  3656  01E8  3183  231D  3181   	fcall	_EUSART_SetOverrunErrorHandler
  3657                           
  3658                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  3659  01EB  3000               	movlw	0
  3660  01EC  0020               	movlb	0	; select bank0
  3661  01ED  00DD               	movwf	EUSART_SetErrorHandler@interruptHandler
  3662  01EE  3000               	movlw	0
  3663  01EF  00DE               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  3664  01F0  3183  2329         	fcall	_EUSART_SetErrorHandler
  3665                           
  3666                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  3667  01F2  01F9               	clrf	_eusartRxLastError	;volatile
  3668  01F3  0008               	return
  3669  01F4                     __end_of_EUSART_Initialize:
  3670                           
  3671                           	psect	text10
  3672  031D                     __ptext10:	
  3673 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3674 ;; Defined at:
  3675 ;;		line 161 in file "mcc_generated_files/eusart.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3678 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3679 ;; Auto vars:     Size  Location     Type
  3680 ;;		None
  3681 ;; Return value:  Size  Location     Type
  3682 ;;                  1    wreg      void 
  3683 ;; Registers used:
  3684 ;;		wreg
  3685 ;; Tracked objects:
  3686 ;;		On entry : 0/0
  3687 ;;		On exit  : 0/0
  3688 ;;		Unchanged: 0/0
  3689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3690 ;;      Params:         0       2       0       0       0       0       0       0
  3691 ;;      Locals:         0       0       0       0       0       0       0       0
  3692 ;;      Temps:          0       0       0       0       0       0       0       0
  3693 ;;      Totals:         0       2       0       0       0       0       0       0
  3694 ;;Total ram usage:        2 bytes
  3695 ;; Hardware stack levels used:    1
  3696 ;; Hardware stack levels required when called:    5
  3697 ;; This function calls:
  3698 ;;		Nothing
  3699 ;; This function is called by:
  3700 ;;		_EUSART_Initialize
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703                           
  3704                           
  3705                           ;psect for function _EUSART_SetOverrunErrorHandler
  3706  031D                     _EUSART_SetOverrunErrorHandler:
  3707                           
  3708                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  3709                           
  3710                           ;incstack = 0
  3711                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  3712  031D  0020               	movlb	0	; select bank0
  3713  031E  085E               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  3714  031F  00D6               	movwf	_EUSART_OverrunErrorHandler+1
  3715  0320  085D               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  3716  0321  00D5               	movwf	_EUSART_OverrunErrorHandler
  3717  0322  0008               	return
  3718  0323                     __end_of_EUSART_SetOverrunErrorHandler:
  3719                           
  3720                           	psect	text11
  3721  0323                     __ptext11:	
  3722 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3723 ;; Defined at:
  3724 ;;		line 157 in file "mcc_generated_files/eusart.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3727 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3728 ;; Auto vars:     Size  Location     Type
  3729 ;;		None
  3730 ;; Return value:  Size  Location     Type
  3731 ;;                  1    wreg      void 
  3732 ;; Registers used:
  3733 ;;		wreg
  3734 ;; Tracked objects:
  3735 ;;		On entry : 0/0
  3736 ;;		On exit  : 0/0
  3737 ;;		Unchanged: 0/0
  3738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3739 ;;      Params:         0       2       0       0       0       0       0       0
  3740 ;;      Locals:         0       0       0       0       0       0       0       0
  3741 ;;      Temps:          0       0       0       0       0       0       0       0
  3742 ;;      Totals:         0       2       0       0       0       0       0       0
  3743 ;;Total ram usage:        2 bytes
  3744 ;; Hardware stack levels used:    1
  3745 ;; Hardware stack levels required when called:    5
  3746 ;; This function calls:
  3747 ;;		Nothing
  3748 ;; This function is called by:
  3749 ;;		_EUSART_Initialize
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752                           
  3753                           
  3754                           ;psect for function _EUSART_SetFramingErrorHandler
  3755  0323                     _EUSART_SetFramingErrorHandler:
  3756                           
  3757                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  3758                           
  3759                           ;incstack = 0
  3760                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  3761  0323  0020               	movlb	0	; select bank0
  3762  0324  085E               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  3763  0325  00D8               	movwf	_EUSART_FramingErrorHandler+1
  3764  0326  085D               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  3765  0327  00D7               	movwf	_EUSART_FramingErrorHandler
  3766  0328  0008               	return
  3767  0329                     __end_of_EUSART_SetFramingErrorHandler:
  3768                           
  3769                           	psect	text12
  3770  0329                     __ptext12:	
  3771 ;; *************** function _EUSART_SetErrorHandler *****************
  3772 ;; Defined at:
  3773 ;;		line 165 in file "mcc_generated_files/eusart.c"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3776 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;		None
  3779 ;; Return value:  Size  Location     Type
  3780 ;;                  1    wreg      void 
  3781 ;; Registers used:
  3782 ;;		wreg
  3783 ;; Tracked objects:
  3784 ;;		On entry : 0/0
  3785 ;;		On exit  : 0/0
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3788 ;;      Params:         0       2       0       0       0       0       0       0
  3789 ;;      Locals:         0       0       0       0       0       0       0       0
  3790 ;;      Temps:          0       0       0       0       0       0       0       0
  3791 ;;      Totals:         0       2       0       0       0       0       0       0
  3792 ;;Total ram usage:        2 bytes
  3793 ;; Hardware stack levels used:    1
  3794 ;; Hardware stack levels required when called:    5
  3795 ;; This function calls:
  3796 ;;		Nothing
  3797 ;; This function is called by:
  3798 ;;		_EUSART_Initialize
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802                           
  3803                           ;psect for function _EUSART_SetErrorHandler
  3804  0329                     _EUSART_SetErrorHandler:
  3805                           
  3806                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  3807                           
  3808                           ;incstack = 0
  3809                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  3810  0329  0020               	movlb	0	; select bank0
  3811  032A  085E               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  3812  032B  00D4               	movwf	_EUSART_ErrorHandler+1
  3813  032C  085D               	movf	EUSART_SetErrorHandler@interruptHandler,w
  3814  032D  00D3               	movwf	_EUSART_ErrorHandler
  3815  032E  0008               	return
  3816  032F                     __end_of_EUSART_SetErrorHandler:
  3817                           
  3818                           	psect	text13
  3819  002B                     __ptext13:	
  3820 ;; *************** function _COS_TskMan *****************
  3821 ;; Defined at:
  3822 ;;		line 133 in file "SourceFiles/COS/COS_Main.c"
  3823 ;; Parameters:    Size  Location     Type
  3824 ;;		None
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;		None
  3827 ;; Return value:  Size  Location     Type
  3828 ;;                  1    wreg      void 
  3829 ;; Registers used:
  3830 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3836 ;;      Params:         0       0       0       0       0       0       0       0
  3837 ;;      Locals:         0       0       0       0       0       0       0       0
  3838 ;;      Temps:          0       2       0       0       0       0       0       0
  3839 ;;      Totals:         0       2       0       0       0       0       0       0
  3840 ;;Total ram usage:        2 bytes
  3841 ;; Hardware stack levels used:    1
  3842 ;; Hardware stack levels required when called:    8
  3843 ;; This function calls:
  3844 ;;		_GetTemp
  3845 ;;		_UartDisplay
  3846 ;;		___wmul
  3847 ;; This function is called by:
  3848 ;;		_main
  3849 ;; This function uses a non-reentrant model
  3850 ;;
  3851                           
  3852                           
  3853                           ;psect for function _COS_TskMan
  3854  002B                     _COS_TskMan:
  3855                           
  3856                           ;SourceFiles/COS/COS_Main.c: 135:  if ((COS_tsk[COS_tsk_ind].sched & COS_tsk_msk) != 0)
  3857                           
  3858                           ;incstack = 0
  3859                           ; Regs used in _COS_TskMan: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3860  002B  0020               	movlb	0	; select bank0
  3861  002C  0852               	movf	_COS_tsk_ind,w
  3862  002D  00E3               	movwf	??_COS_TskMan
  3863  002E  01E4               	clrf	??_COS_TskMan+1
  3864  002F  0863               	movf	??_COS_TskMan,w
  3865  0030  00DD               	movwf	___wmul@multiplier
  3866  0031  0864               	movf	??_COS_TskMan+1,w
  3867  0032  00DE               	movwf	___wmul@multiplier+1
  3868  0033  3003               	movlw	3
  3869  0034  00DF               	movwf	___wmul@multiplicand
  3870  0035  3000               	movlw	0
  3871  0036  00E0               	movwf	___wmul@multiplicand+1
  3872  0037  3182  2214  3180   	fcall	___wmul
  3873  003A  0020               	movlb	0	; select bank0
  3874  003B  085E               	movf	?___wmul+1,w
  3875  003C  0085               	movwf	5
  3876  003D  085D               	movf	?___wmul,w
  3877  003E  0084               	movwf	4
  3878  003F  30B6               	movlw	low ((_COS_tsk+2)| (0+32768))
  3879  0040  0784               	addwf	4,f
  3880  0041  3082               	movlw	high ((_COS_tsk+2)| (0+32768))
  3881  0042  3D85               	addwfc	5,f
  3882  0043  0800               	movf	0,w	;code access
  3883  0044  055C               	andwf	_COS_tsk_msk,w
  3884  0045  1903               	btfsc	3,2
  3885  0046  2863               	goto	l2864
  3886                           
  3887                           ;SourceFiles/COS/COS_Main.c: 136:  {;SourceFiles/COS/COS_Main.c: 143:   (*COS_tsk[COS_ts
      +                          k_ind].tptr)();
  3888  0047  0852               	movf	_COS_tsk_ind,w
  3889  0048  00E3               	movwf	??_COS_TskMan
  3890  0049  01E4               	clrf	??_COS_TskMan+1
  3891  004A  0863               	movf	??_COS_TskMan,w
  3892  004B  00DD               	movwf	___wmul@multiplier
  3893  004C  0864               	movf	??_COS_TskMan+1,w
  3894  004D  00DE               	movwf	___wmul@multiplier+1
  3895  004E  3003               	movlw	3
  3896  004F  00DF               	movwf	___wmul@multiplicand
  3897  0050  3000               	movlw	0
  3898  0051  00E0               	movwf	___wmul@multiplicand+1
  3899  0052  3182  2214  3180   	fcall	___wmul
  3900  0055  0020               	movlb	0	; select bank0
  3901  0056  085E               	movf	?___wmul+1,w
  3902  0057  0085               	movwf	5
  3903  0058  085D               	movf	?___wmul,w
  3904  0059  0084               	movwf	4
  3905  005A  30B4               	movlw	low (_COS_tsk| (0+32768))
  3906  005B  0784               	addwf	4,f
  3907  005C  3082               	movlw	high (_COS_tsk| (0+32768))
  3908  005D  3D85               	addwfc	5,f
  3909  005E  3F01               	moviw [1]fsr0
  3910  005F  008A               	movwf	10
  3911  0060  3F00               	moviw [0]fsr0
  3912  0061  000A               	callw
  3913  0062  3180               	pagesel	$
  3914  0063                     l2864:
  3915                           
  3916                           ;SourceFiles/COS/COS_Main.c: 150:  COS_tsk_ind++;
  3917  0063  3001               	movlw	1
  3918  0064  0020               	movlb	0	; select bank0
  3919  0065  00E3               	movwf	??_COS_TskMan
  3920  0066  0863               	movf	??_COS_TskMan,w
  3921  0067  07D2               	addwf	_COS_tsk_ind,f
  3922                           
  3923                           ;SourceFiles/COS/COS_Main.c: 151:  if (COS_tsk_ind >= (3 +2))
  3924  0068  3005               	movlw	5
  3925  0069  0252               	subwf	_COS_tsk_ind,w
  3926  006A  1C03               	skipc
  3927  006B  0008               	return
  3928                           
  3929                           ;SourceFiles/COS/COS_Main.c: 152:  {;SourceFiles/COS/COS_Main.c: 153:   COS_tsk_ena = 0;
  3930  006C  01DB               	clrf	_COS_tsk_ena
  3931                           
  3932                           ;SourceFiles/COS/COS_Main.c: 154:   COS_tsk_ind = 0;
  3933  006D  01D2               	clrf	_COS_tsk_ind
  3934                           
  3935                           ;SourceFiles/COS/COS_Main.c: 157:   if (!((COS_tsk_msk == 0x80) ||
  3936  006E  3080               	movlw	128
  3937  006F  065C               	xorwf	_COS_tsk_msk,w
  3938  0070  1903               	btfsc	3,2
  3939  0071  288E               	goto	l2886
  3940  0072  3040               	movlw	64
  3941  0073  065C               	xorwf	_COS_tsk_msk,w
  3942  0074  1903               	btfsc	3,2
  3943  0075  288E               	goto	l2886
  3944  0076  3020               	movlw	32
  3945  0077  065C               	xorwf	_COS_tsk_msk,w
  3946  0078  1903               	btfsc	3,2
  3947  0079  288E               	goto	l2886
  3948  007A  3010               	movlw	16
  3949  007B  065C               	xorwf	_COS_tsk_msk,w
  3950  007C  1903               	btfsc	3,2
  3951  007D  288E               	goto	l2886
  3952  007E  3008               	movlw	8
  3953  007F  065C               	xorwf	_COS_tsk_msk,w
  3954  0080  1903               	btfsc	3,2
  3955  0081  288E               	goto	l2886
  3956  0082  3004               	movlw	4
  3957  0083  065C               	xorwf	_COS_tsk_msk,w
  3958  0084  1903               	btfsc	3,2
  3959  0085  288E               	goto	l2886
  3960  0086  3002               	movlw	2
  3961  0087  065C               	xorwf	_COS_tsk_msk,w
  3962  0088  1903               	btfsc	3,2
  3963  0089  288E               	goto	l2886
  3964  008A  035C               	decf	_COS_tsk_msk,w
  3965  008B  1903               	btfsc	3,2
  3966  008C  288E               	goto	l2886
  3967  008D                     l47:	
  3968                           ;SourceFiles/COS/COS_Main.c: 165:   {;SourceFiles/COS/COS_Main.c: 169:     while(1);
  3969                           
  3970  008D  288D               	goto	l47
  3971  008E                     l2886:
  3972                           
  3973                           ;SourceFiles/COS/COS_Main.c: 174:   COS_tsk_msk = COS_tsk_msk >> 1;
  3974  008E  365C               	lsrf	_COS_tsk_msk,w
  3975  008F  00E3               	movwf	??_COS_TskMan
  3976  0090  0863               	movf	??_COS_TskMan,w
  3977  0091  00DC               	movwf	_COS_tsk_msk
  3978                           
  3979                           ;SourceFiles/COS/COS_Main.c: 175:   if (COS_tsk_msk == 0x00)
  3980  0092  085C               	movf	_COS_tsk_msk,w
  3981  0093  1D03               	btfss	3,2
  3982  0094  0008               	return
  3983                           
  3984                           ;SourceFiles/COS/COS_Main.c: 176:   {;SourceFiles/COS/COS_Main.c: 177:    COS_tsk_msk = 
      +                          0x80;
  3985  0095  3080               	movlw	128
  3986  0096  00E3               	movwf	??_COS_TskMan
  3987  0097  0863               	movf	??_COS_TskMan,w
  3988  0098  00DC               	movwf	_COS_tsk_msk
  3989  0099  0008               	return
  3990  009A                     __end_of_COS_TskMan:
  3991                           
  3992                           	psect	text14
  3993  0214                     __ptext14:	
  3994 ;; *************** function ___wmul *****************
  3995 ;; Defined at:
  3996 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3999 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4000 ;; Auto vars:     Size  Location     Type
  4001 ;;  product         2    4[BANK0 ] unsigned int 
  4002 ;; Return value:  Size  Location     Type
  4003 ;;                  2    0[BANK0 ] unsigned int 
  4004 ;; Registers used:
  4005 ;;		wreg, status,2, status,0
  4006 ;; Tracked objects:
  4007 ;;		On entry : 0/0
  4008 ;;		On exit  : 0/0
  4009 ;;		Unchanged: 0/0
  4010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4011 ;;      Params:         0       4       0       0       0       0       0       0
  4012 ;;      Locals:         0       2       0       0       0       0       0       0
  4013 ;;      Temps:          0       0       0       0       0       0       0       0
  4014 ;;      Totals:         0       6       0       0       0       0       0       0
  4015 ;;Total ram usage:        6 bytes
  4016 ;; Hardware stack levels used:    1
  4017 ;; Hardware stack levels required when called:    5
  4018 ;; This function calls:
  4019 ;;		Nothing
  4020 ;; This function is called by:
  4021 ;;		_COS_TskMan
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024                           
  4025                           
  4026                           ;psect for function ___wmul
  4027  0214                     ___wmul:
  4028                           
  4029                           ;incstack = 0
  4030                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4031  0214  0020               	movlb	0	; select bank0
  4032  0215  01E1               	clrf	___wmul@product
  4033  0216  01E2               	clrf	___wmul@product+1
  4034  0217                     l2800:
  4035  0217  1C5D               	btfss	___wmul@multiplier,0
  4036  0218  2A1D               	goto	l882
  4037  0219  085F               	movf	___wmul@multiplicand,w
  4038  021A  07E1               	addwf	___wmul@product,f
  4039  021B  0860               	movf	___wmul@multiplicand+1,w
  4040  021C  3DE2               	addwfc	___wmul@product+1,f
  4041  021D                     l882:
  4042  021D  3001               	movlw	1
  4043  021E                     u1335:
  4044  021E  35DF               	lslf	___wmul@multiplicand,f
  4045  021F  0DE0               	rlf	___wmul@multiplicand+1,f
  4046  0220  0B89               	decfsz	9,f
  4047  0221  2A1E               	goto	u1335
  4048  0222  3001               	movlw	1
  4049  0223                     u1345:
  4050  0223  36DE               	lsrf	___wmul@multiplier+1,f
  4051  0224  0CDD               	rrf	___wmul@multiplier,f
  4052  0225  0B89               	decfsz	9,f
  4053  0226  2A23               	goto	u1345
  4054  0227  085D               	movf	___wmul@multiplier,w
  4055  0228  045E               	iorwf	___wmul@multiplier+1,w
  4056  0229  1D03               	btfss	3,2
  4057  022A  2A17               	goto	l2800
  4058  022B  0862               	movf	___wmul@product+1,w
  4059  022C  00DE               	movwf	?___wmul+1
  4060  022D  0861               	movf	___wmul@product,w
  4061  022E  00DD               	movwf	?___wmul
  4062  022F  0008               	return
  4063  0230                     __end_of___wmul:
  4064                           
  4065                           	psect	text15
  4066  02F3                     __ptext15:	
  4067 ;; *************** function _GetTemp *****************
  4068 ;; Defined at:
  4069 ;;		line 18 in file "SourceFiles/SunSensor/SHT25.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;		None
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;		None
  4074 ;; Return value:  Size  Location     Type
  4075 ;;                  1    wreg      void 
  4076 ;; Registers used:
  4077 ;;		wreg, status,2, status,0, pclath, cstack
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4083 ;;      Params:         0       0       0       0       0       0       0       0
  4084 ;;      Locals:         0       0       0       0       0       0       0       0
  4085 ;;      Temps:          0       0       0       0       0       0       0       0
  4086 ;;      Totals:         0       0       0       0       0       0       0       0
  4087 ;;Total ram usage:        0 bytes
  4088 ;; Hardware stack levels used:    1
  4089 ;; Hardware stack levels required when called:    7
  4090 ;; This function calls:
  4091 ;;		_I2C_Open
  4092 ;;		_SendByUart
  4093 ;; This function is called by:
  4094 ;;		_COS_TskMan
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           
  4099                           ;psect for function _GetTemp
  4100  02F3                     _GetTemp:
  4101                           
  4102                           ;SourceFiles/SunSensor/SHT25.c: 20:     I2C_Open(128);
  4103                           
  4104                           ;incstack = 0
  4105                           ; Regs used in _GetTemp: [wreg+status,2+status,0+pclath+cstack]
  4106  02F3  3080               	movlw	128
  4107  02F4  3181  2198  3182   	fcall	_I2C_Open
  4108                           
  4109                           ;SourceFiles/SunSensor/SHT25.c: 22:     SendByUart('I2C');
  4110  02F7  3043               	movlw	67
  4111  02F8  3182  22E2         	fcall	_SendByUart
  4112  02FA  0008               	return
  4113  02FB                     __end_of_GetTemp:
  4114                           
  4115                           	psect	text16
  4116  02FB                     __ptext16:	
  4117 ;; *************** function _UartDisplay *****************
  4118 ;; Defined at:
  4119 ;;		line 23 in file "SourceFiles/SunSensor/UART_Display.c"
  4120 ;; Parameters:    Size  Location     Type
  4121 ;;		None
  4122 ;; Auto vars:     Size  Location     Type
  4123 ;;		None
  4124 ;; Return value:  Size  Location     Type
  4125 ;;                  1    wreg      void 
  4126 ;; Registers used:
  4127 ;;		wreg, status,2, status,0, pclath, cstack
  4128 ;; Tracked objects:
  4129 ;;		On entry : 0/0
  4130 ;;		On exit  : 0/0
  4131 ;;		Unchanged: 0/0
  4132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4133 ;;      Params:         0       0       0       0       0       0       0       0
  4134 ;;      Locals:         0       0       0       0       0       0       0       0
  4135 ;;      Temps:          0       0       0       0       0       0       0       0
  4136 ;;      Totals:         0       0       0       0       0       0       0       0
  4137 ;;Total ram usage:        0 bytes
  4138 ;; Hardware stack levels used:    1
  4139 ;; Hardware stack levels required when called:    6
  4140 ;; This function calls:
  4141 ;;		_EUSART_Write
  4142 ;; This function is called by:
  4143 ;;		_COS_TskMan
  4144 ;; This function uses a non-reentrant model
  4145 ;;
  4146                           
  4147                           
  4148                           ;psect for function _UartDisplay
  4149  02FB                     _UartDisplay:
  4150                           
  4151                           ;SourceFiles/SunSensor/UART_Display.c: 25:     if (NewMessageFlag == 1)
  4152                           
  4153                           ;incstack = 0
  4154                           ; Regs used in _UartDisplay: [wreg+status,2+status,0+pclath+cstack]
  4155  02FB  0378               	decf	_NewMessageFlag,w
  4156  02FC  1D03               	btfss	3,2
  4157  02FD  0008               	return
  4158                           
  4159                           ;SourceFiles/SunSensor/UART_Display.c: 26:     {;SourceFiles/SunSensor/UART_Display.c: 2
      +                          7:         EUSART_Write(U8Message);
  4160  02FE  087A               	movf	_U8Message,w
  4161  02FF  3183  2303         	fcall	_EUSART_Write
  4162                           
  4163                           ;SourceFiles/SunSensor/UART_Display.c: 28:         NewMessageFlag = 0;
  4164  0301  01F8               	clrf	_NewMessageFlag
  4165  0302  0008               	return
  4166  0303                     __end_of_UartDisplay:
  4167                           
  4168                           	psect	text17
  4169  0303                     __ptext17:	
  4170 ;; *************** function _EUSART_Write *****************
  4171 ;; Defined at:
  4172 ;;		line 132 in file "mcc_generated_files/eusart.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;  txData          1    wreg     unsigned char 
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;  txData          1    0[BANK0 ] unsigned char 
  4177 ;; Return value:  Size  Location     Type
  4178 ;;                  1    wreg      void 
  4179 ;; Registers used:
  4180 ;;		wreg
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4186 ;;      Params:         0       0       0       0       0       0       0       0
  4187 ;;      Locals:         0       1       0       0       0       0       0       0
  4188 ;;      Temps:          0       0       0       0       0       0       0       0
  4189 ;;      Totals:         0       1       0       0       0       0       0       0
  4190 ;;Total ram usage:        1 bytes
  4191 ;; Hardware stack levels used:    1
  4192 ;; Hardware stack levels required when called:    5
  4193 ;; This function calls:
  4194 ;;		Nothing
  4195 ;; This function is called by:
  4196 ;;		_UartDisplay
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           
  4200                           
  4201                           ;psect for function _EUSART_Write
  4202  0303                     _EUSART_Write:
  4203                           
  4204                           ;incstack = 0
  4205                           ; Regs used in _EUSART_Write: [wreg]
  4206                           ;EUSART_Write@txData stored from wreg
  4207  0303  0020               	movlb	0	; select bank0
  4208  0304  00DD               	movwf	EUSART_Write@txData
  4209  0305                     l706:	
  4210                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  4211                           
  4212                           
  4213                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  4214  0305  1E11               	btfss	17,4	;volatile
  4215  0306  2B05               	goto	l706
  4216                           
  4217                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  4218  0307  085D               	movf	EUSART_Write@txData,w
  4219  0308  0023               	movlb	3	; select bank3
  4220  0309  009A               	movwf	26	;volatile
  4221  030A  0008               	return
  4222  030B                     __end_of_EUSART_Write:
  4223                           
  4224                           	psect	text18
  4225  02E2                     __ptext18:	
  4226 ;; *************** function _SendByUart *****************
  4227 ;; Defined at:
  4228 ;;		line 17 in file "SourceFiles/SunSensor/UART_Display.c"
  4229 ;; Parameters:    Size  Location     Type
  4230 ;;  Txt             1    wreg     unsigned char 
  4231 ;; Auto vars:     Size  Location     Type
  4232 ;;  Txt             1    1[BANK0 ] unsigned char 
  4233 ;; Return value:  Size  Location     Type
  4234 ;;                  1    wreg      void 
  4235 ;; Registers used:
  4236 ;;		wreg
  4237 ;; Tracked objects:
  4238 ;;		On entry : 0/0
  4239 ;;		On exit  : 0/0
  4240 ;;		Unchanged: 0/0
  4241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4242 ;;      Params:         0       0       0       0       0       0       0       0
  4243 ;;      Locals:         0       1       0       0       0       0       0       0
  4244 ;;      Temps:          0       1       0       0       0       0       0       0
  4245 ;;      Totals:         0       2       0       0       0       0       0       0
  4246 ;;Total ram usage:        2 bytes
  4247 ;; Hardware stack levels used:    1
  4248 ;; Hardware stack levels required when called:    5
  4249 ;; This function calls:
  4250 ;;		Nothing
  4251 ;; This function is called by:
  4252 ;;		_GetTemp
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256                           
  4257                           ;psect for function _SendByUart
  4258  02E2                     _SendByUart:
  4259                           
  4260                           ;incstack = 0
  4261                           ; Regs used in _SendByUart: [wreg]
  4262                           ;SendByUart@Txt stored from wreg
  4263  02E2  0020               	movlb	0	; select bank0
  4264  02E3  00DE               	movwf	SendByUart@Txt
  4265                           
  4266                           ;SourceFiles/SunSensor/UART_Display.c: 17: void SendByUart(uint8_t Txt);SourceFiles/SunS
      +                          ensor/UART_Display.c: 18: {;SourceFiles/SunSensor/UART_Display.c: 19:     U8Message = Tx
      +                          t;
  4267  02E4  085E               	movf	SendByUart@Txt,w
  4268  02E5  00DD               	movwf	??_SendByUart
  4269  02E6  085D               	movf	??_SendByUart,w
  4270  02E7  00FA               	movwf	_U8Message
  4271                           
  4272                           ;SourceFiles/SunSensor/UART_Display.c: 20:     NewMessageFlag = 1;
  4273  02E8  01F8               	clrf	_NewMessageFlag
  4274  02E9  0AF8               	incf	_NewMessageFlag,f
  4275  02EA  0008               	return
  4276  02EB                     __end_of_SendByUart:
  4277                           
  4278                           	psect	text19
  4279  0198                     __ptext19:	
  4280 ;; *************** function _I2C_Open *****************
  4281 ;; Defined at:
  4282 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;  address         1    wreg     unsigned char 
  4285 ;; Auto vars:     Size  Location     Type
  4286 ;;  address         1    1[BANK0 ] unsigned char 
  4287 ;;  returnValue     1    2[BANK0 ] enum E353
  4288 ;; Return value:  Size  Location     Type
  4289 ;;                  1    wreg      enum E353
  4290 ;; Registers used:
  4291 ;;		wreg, status,2, status,0, pclath, cstack
  4292 ;; Tracked objects:
  4293 ;;		On entry : 0/0
  4294 ;;		On exit  : 0/0
  4295 ;;		Unchanged: 0/0
  4296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4297 ;;      Params:         0       0       0       0       0       0       0       0
  4298 ;;      Locals:         0       2       0       0       0       0       0       0
  4299 ;;      Temps:          0       1       0       0       0       0       0       0
  4300 ;;      Totals:         0       3       0       0       0       0       0       0
  4301 ;;Total ram usage:        3 bytes
  4302 ;; Hardware stack levels used:    1
  4303 ;; Hardware stack levels required when called:    6
  4304 ;; This function calls:
  4305 ;;		_I2C_MasterClearIrq
  4306 ;;		_I2C_MasterOpen
  4307 ;; This function is called by:
  4308 ;;		_GetTemp
  4309 ;;		_I2C_Read1ByteRegister
  4310 ;;		_I2C_Read2ByteRegister
  4311 ;;		_I2C_Write1ByteRegister
  4312 ;;		_I2C_Write2ByteRegister
  4313 ;;		_I2C_WriteNBytes
  4314 ;;		_I2C_ReadNBytes
  4315 ;;		_I2C_ReadDataBlock
  4316 ;; This function uses a non-reentrant model
  4317 ;;
  4318                           
  4319                           
  4320                           ;psect for function _I2C_Open
  4321  0198                     _I2C_Open:
  4322                           
  4323                           ;incstack = 0
  4324                           ; Regs used in _I2C_Open: [wreg+status,2+status,0+pclath+cstack]
  4325                           ;I2C_Open@address stored from wreg
  4326  0198  0020               	movlb	0	; select bank0
  4327  0199  00DE               	movwf	I2C_Open@address
  4328                           
  4329                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  4330  019A  01DF               	clrf	I2C_Open@returnValue
  4331  019B  0ADF               	incf	I2C_Open@returnValue,f
  4332                           
  4333                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
  4334  019C  193C               	btfsc	_I2C_Status+28,2
  4335  019D  29CE               	goto	l412
  4336                           
  4337                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
  4338  019E  085E               	movf	I2C_Open@address,w
  4339  019F  00DD               	movwf	??_I2C_Open
  4340  01A0  085D               	movf	??_I2C_Open,w
  4341  01A1  00B6               	movwf	_I2C_Status+22
  4342                           
  4343                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
  4344  01A2  10BC               	bcf	_I2C_Status+28,1
  4345                           
  4346                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
  4347  01A3  153C               	bsf	_I2C_Status+28,2
  4348                           
  4349                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
  4350  01A4  103C               	bcf	_I2C_Status+28,0
  4351                           
  4352                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
  4353  01A5  300E               	movlw	14
  4354  01A6  00DD               	movwf	??_I2C_Open
  4355  01A7  085D               	movf	??_I2C_Open,w
  4356  01A8  00BA               	movwf	_I2C_Status+26
  4357                           
  4358                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
  4359  01A9  30F4               	movlw	244
  4360  01AA  00B4               	movwf	_I2C_Status+20
  4361  01AB  3001               	movlw	1
  4362  01AC  00B5               	movwf	_I2C_Status+21
  4363                           
  4364                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
  4365  01AD  15BC               	bsf	_I2C_Status+28,3
  4366                           
  4367                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
  4368  01AE  3000               	movlw	0
  4369  01AF  00A0               	movwf	_I2C_Status
  4370  01B0  3000               	movlw	0
  4371  01B1  00A1               	movwf	_I2C_Status+1
  4372                           
  4373                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
  4374  01B2  01AC               	clrf	low ((_I2C_Status| 0+12))
  4375                           
  4376                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
  4377  01B3  3000               	movlw	0
  4378  01B4  00A2               	movwf	low ((_I2C_Status| 0+2))
  4379  01B5  3000               	movlw	0
  4380  01B6  00A3               	movwf	(low ((_I2C_Status| 0+2))+1)
  4381                           
  4382                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
  4383  01B7  01AD               	clrf	low ((_I2C_Status| 0+13))
  4384                           
  4385                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
  4386  01B8  3000               	movlw	0
  4387  01B9  00A4               	movwf	low ((_I2C_Status| 0+4))
  4388  01BA  3000               	movlw	0
  4389  01BB  00A5               	movwf	(low ((_I2C_Status| 0+4))+1)
  4390                           
  4391                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
  4392  01BC  01AE               	clrf	low ((_I2C_Status| 0+14))
  4393                           
  4394                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
  4395  01BD  3000               	movlw	0
  4396  01BE  00A6               	movwf	low ((_I2C_Status| 0+6))
  4397  01BF  3000               	movlw	0
  4398  01C0  00A7               	movwf	(low ((_I2C_Status| 0+6))+1)
  4399                           
  4400                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
  4401  01C1  01AF               	clrf	low ((_I2C_Status| 0+15))
  4402                           
  4403                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
  4404  01C2  3000               	movlw	0
  4405  01C3  00A8               	movwf	low ((_I2C_Status| 0+8))
  4406  01C4  3000               	movlw	0
  4407  01C5  00A9               	movwf	(low ((_I2C_Status| 0+8))+1)
  4408                           
  4409                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
  4410  01C6  01B0               	clrf	low ((_I2C_Status| 0+16))
  4411                           
  4412                           ;mcc_generated_files/i2c_master.c: 202:         I2C_MasterClearIrq();
  4413  01C7  3183  2339  3181   	fcall	_I2C_MasterClearIrq
  4414                           
  4415                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterOpen();
  4416  01CA  3182  22C3         	fcall	_I2C_MasterOpen
  4417                           
  4418                           ;mcc_generated_files/i2c_master.c: 204:         returnValue = I2C_NOERR;
  4419  01CC  0020               	movlb	0	; select bank0
  4420  01CD  01DF               	clrf	I2C_Open@returnValue
  4421  01CE                     l412:	
  4422                           ;mcc_generated_files/i2c_master.c: 205:     }
  4423                           
  4424                           
  4425                           ;mcc_generated_files/i2c_master.c: 206:     return returnValue;
  4426  01CE  085F               	movf	I2C_Open@returnValue,w
  4427  01CF  0008               	return
  4428  01D0                     __end_of_I2C_Open:
  4429                           
  4430                           	psect	text20
  4431  02C3                     __ptext20:	
  4432 ;; *************** function _I2C_MasterOpen *****************
  4433 ;; Defined at:
  4434 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
  4435 ;; Parameters:    Size  Location     Type
  4436 ;;		None
  4437 ;; Auto vars:     Size  Location     Type
  4438 ;;		None
  4439 ;; Return value:  Size  Location     Type
  4440 ;;                  1    wreg      _Bool 
  4441 ;; Registers used:
  4442 ;;		wreg, status,2
  4443 ;; Tracked objects:
  4444 ;;		On entry : 0/0
  4445 ;;		On exit  : 0/0
  4446 ;;		Unchanged: 0/0
  4447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4448 ;;      Params:         0       0       0       0       0       0       0       0
  4449 ;;      Locals:         0       0       0       0       0       0       0       0
  4450 ;;      Temps:          0       0       0       0       0       0       0       0
  4451 ;;      Totals:         0       0       0       0       0       0       0       0
  4452 ;;Total ram usage:        0 bytes
  4453 ;; Hardware stack levels used:    1
  4454 ;; Hardware stack levels required when called:    5
  4455 ;; This function calls:
  4456 ;;		Nothing
  4457 ;; This function is called by:
  4458 ;;		_I2C_Open
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462                           
  4463                           ;psect for function _I2C_MasterOpen
  4464  02C3                     _I2C_MasterOpen:
  4465                           
  4466                           ;mcc_generated_files/i2c_master.c: 545:     if(!SSP1CON1bits.SSPEN)
  4467                           
  4468                           ;incstack = 0
  4469                           ; Regs used in _I2C_MasterOpen: [wreg+status,2]
  4470  02C3  0024               	movlb	4	; select bank4
  4471  02C4  1A95               	btfsc	21,5	;volatile
  4472  02C5  0008               	return
  4473                           
  4474                           ;mcc_generated_files/i2c_master.c: 546:     {;mcc_generated_files/i2c_master.c: 547:    
      +                               SSP1STAT = 0x00;
  4475  02C6  0194               	clrf	20	;volatile
  4476                           
  4477                           ;mcc_generated_files/i2c_master.c: 548:         SSP1CON1 = 0x08;
  4478  02C7  3008               	movlw	8
  4479  02C8  0095               	movwf	21	;volatile
  4480                           
  4481                           ;mcc_generated_files/i2c_master.c: 549:         SSP1CON2 = 0x00;
  4482  02C9  0196               	clrf	22	;volatile
  4483                           
  4484                           ;mcc_generated_files/i2c_master.c: 550:         SSP1ADD = 0x27;
  4485  02CA  3027               	movlw	39
  4486  02CB  0092               	movwf	18	;volatile
  4487                           
  4488                           ;mcc_generated_files/i2c_master.c: 551:         SSP1CON1bits.SSPEN = 1;
  4489  02CC  1695               	bsf	21,5	;volatile
  4490  02CD  0008               	return
  4491  02CE                     __end_of_I2C_MasterOpen:
  4492                           
  4493                           	psect	text21
  4494  0339                     __ptext21:	
  4495 ;; *************** function _I2C_MasterClearIrq *****************
  4496 ;; Defined at:
  4497 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
  4498 ;; Parameters:    Size  Location     Type
  4499 ;;		None
  4500 ;; Auto vars:     Size  Location     Type
  4501 ;;		None
  4502 ;; Return value:  Size  Location     Type
  4503 ;;                  1    wreg      void 
  4504 ;; Registers used:
  4505 ;;		None
  4506 ;; Tracked objects:
  4507 ;;		On entry : 0/0
  4508 ;;		On exit  : 0/0
  4509 ;;		Unchanged: 0/0
  4510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4511 ;;      Params:         0       0       0       0       0       0       0       0
  4512 ;;      Locals:         0       0       0       0       0       0       0       0
  4513 ;;      Temps:          0       0       0       0       0       0       0       0
  4514 ;;      Totals:         0       0       0       0       0       0       0       0
  4515 ;;Total ram usage:        0 bytes
  4516 ;; Hardware stack levels used:    1
  4517 ;; Hardware stack levels required when called:    5
  4518 ;; This function calls:
  4519 ;;		Nothing
  4520 ;; This function is called by:
  4521 ;;		_I2C_Open
  4522 ;;		_I2C_Close
  4523 ;;		_I2C_MasterFsm
  4524 ;; This function uses a non-reentrant model
  4525 ;;
  4526                           
  4527                           
  4528                           ;psect for function _I2C_MasterClearIrq
  4529  0339                     _I2C_MasterClearIrq:
  4530                           
  4531                           ;mcc_generated_files/i2c_master.c: 642:     PIR1bits.SSP1IF = 0;
  4532                           
  4533                           ;incstack = 0
  4534                           ; Regs used in _I2C_MasterClearIrq: []
  4535  0339  0020               	movlb	0	; select bank0
  4536  033A  1191               	bcf	17,3	;volatile
  4537  033B  0008               	return
  4538  033C                     __end_of_I2C_MasterClearIrq:
  4539                           
  4540                           	psect	text22
  4541  0100                     __ptext22:	
  4542 ;; *************** function _COS_TmrHandler *****************
  4543 ;; Defined at:
  4544 ;;		line 92 in file "SourceFiles/COS/COS_Main.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;		None
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;  tempbyte2       1    4[BANK0 ] unsigned char 
  4549 ;;  tempbyte1       1    3[BANK0 ] unsigned char 
  4550 ;; Return value:  Size  Location     Type
  4551 ;;                  1    wreg      void 
  4552 ;; Registers used:
  4553 ;;		wreg, status,2, status,0
  4554 ;; Tracked objects:
  4555 ;;		On entry : 0/0
  4556 ;;		On exit  : 0/0
  4557 ;;		Unchanged: 0/0
  4558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4559 ;;      Params:         0       0       0       0       0       0       0       0
  4560 ;;      Locals:         0       2       0       0       0       0       0       0
  4561 ;;      Temps:          0       3       0       0       0       0       0       0
  4562 ;;      Totals:         0       5       0       0       0       0       0       0
  4563 ;;Total ram usage:        5 bytes
  4564 ;; Hardware stack levels used:    1
  4565 ;; Hardware stack levels required when called:    5
  4566 ;; This function calls:
  4567 ;;		Nothing
  4568 ;; This function is called by:
  4569 ;;		_main
  4570 ;; This function uses a non-reentrant model
  4571 ;;
  4572                           
  4573                           
  4574                           ;psect for function _COS_TmrHandler
  4575  0100                     _COS_TmrHandler:
  4576                           
  4577                           ;SourceFiles/COS/COS_Main.c: 94:  UINT_8 tempbyte1, tempbyte2;;SourceFiles/COS/COS_Main.
      +                          c: 95:  tempbyte2 = TMR1H;
  4578                           
  4579                           ;incstack = 0
  4580                           ; Regs used in _COS_TmrHandler: [wreg+status,2+status,0]
  4581  0100  0020               	movlb	0	; select bank0
  4582  0101  0817               	movf	23,w	;volatile
  4583  0102  00DD               	movwf	??_COS_TmrHandler
  4584  0103  085D               	movf	??_COS_TmrHandler,w
  4585  0104  00E1               	movwf	COS_TmrHandler@tempbyte2
  4586                           
  4587                           ;SourceFiles/COS/COS_Main.c: 96:  tempbyte1 = TMR1L;
  4588  0105  0816               	movf	22,w	;volatile
  4589  0106  00DD               	movwf	??_COS_TmrHandler
  4590  0107  085D               	movf	??_COS_TmrHandler,w
  4591  0108  00E0               	movwf	COS_TmrHandler@tempbyte1
  4592                           
  4593                           ;SourceFiles/COS/COS_Main.c: 97:  if (tempbyte2 != TMR1H)
  4594  0109  0861               	movf	COS_TmrHandler@tempbyte2,w
  4595  010A  0617               	xorwf	23,w	;volatile
  4596  010B  1903               	skipnz
  4597  010C  2915               	goto	l36
  4598                           
  4599                           ;SourceFiles/COS/COS_Main.c: 98:  {;SourceFiles/COS/COS_Main.c: 99:   tempbyte2 = TMR1H;
  4600  010D  0817               	movf	23,w	;volatile
  4601  010E  00DD               	movwf	??_COS_TmrHandler
  4602  010F  085D               	movf	??_COS_TmrHandler,w
  4603  0110  00E1               	movwf	COS_TmrHandler@tempbyte2
  4604                           
  4605                           ;SourceFiles/COS/COS_Main.c: 100:   tempbyte1 = TMR1L;
  4606  0111  0816               	movf	22,w	;volatile
  4607  0112  00DD               	movwf	??_COS_TmrHandler
  4608  0113  085D               	movf	??_COS_TmrHandler,w
  4609  0114  00E0               	movwf	COS_TmrHandler@tempbyte1
  4610  0115                     l36:	
  4611                           ;SourceFiles/COS/COS_Main.c: 101:  }
  4612                           
  4613                           
  4614                           ;SourceFiles/COS/COS_Main.c: 102:  COS_tcnt_val = (UINT_16) (tempbyte2 << 8)&0xff00;
  4615  0115  0861               	movf	COS_TmrHandler@tempbyte2,w
  4616  0116  00DD               	movwf	??_COS_TmrHandler
  4617  0117  01DE               	clrf	??_COS_TmrHandler+1
  4618  0118  085D               	movf	??_COS_TmrHandler,w
  4619  0119  00DE               	movwf	??_COS_TmrHandler+1
  4620  011A  01DD               	clrf	??_COS_TmrHandler
  4621  011B  3000               	movlw	0
  4622  011C  055D               	andwf	??_COS_TmrHandler,w
  4623  011D  00F6               	movwf	_COS_tcnt_val
  4624  011E  30FF               	movlw	255
  4625  011F  055E               	andwf	??_COS_TmrHandler+1,w
  4626  0120  00F7               	movwf	_COS_tcnt_val+1
  4627                           
  4628                           ;SourceFiles/COS/COS_Main.c: 103:  COS_tcnt_val = COS_tcnt_val | (UINT_16) (tempbyte1 & 
      +                          0x00ff);
  4629  0121  0876               	movf	_COS_tcnt_val,w
  4630  0122  0460               	iorwf	COS_TmrHandler@tempbyte1,w
  4631  0123  00F6               	movwf	_COS_tcnt_val
  4632  0124  0877               	movf	_COS_tcnt_val+1,w
  4633  0125  00F7               	movwf	_COS_tcnt_val+1
  4634                           
  4635                           ;SourceFiles/COS/COS_Main.c: 105:  if (((UINT_16) ((UINT_16) COS_tcnt_val - (UINT_16) CO
      +                          S_tcnt_lst) >= (UINT_16) 1000))
  4636  0126  0847               	movf	_COS_tcnt_lst,w
  4637  0127  0276               	subwf	_COS_tcnt_val,w
  4638  0128  00DD               	movwf	??_COS_TmrHandler
  4639  0129  0848               	movf	_COS_tcnt_lst+1,w
  4640  012A  3B77               	subwfb	_COS_tcnt_val+1,w
  4641  012B  00DE               	movwf	??_COS_TmrHandler+1
  4642  012C  3003               	movlw	3
  4643  012D  025E               	subwf	??_COS_TmrHandler+1,w
  4644  012E  30E8               	movlw	232
  4645  012F  1903               	skipnz
  4646  0130  025D               	subwf	??_COS_TmrHandler,w
  4647  0131  1C03               	skipc
  4648  0132  0008               	return
  4649                           
  4650                           ;SourceFiles/COS/COS_Main.c: 106:  {;SourceFiles/COS/COS_Main.c: 107:   COS_tcnt_lst = C
      +                          OS_tcnt_lst + 1000;
  4651  0133  0847               	movf	_COS_tcnt_lst,w
  4652  0134  3EE8               	addlw	232
  4653  0135  00C7               	movwf	_COS_tcnt_lst
  4654  0136  3003               	movlw	3
  4655  0137  3D48               	addwfc	_COS_tcnt_lst+1,w
  4656  0138  00C8               	movwf	_COS_tcnt_lst+1
  4657                           
  4658                           ;SourceFiles/COS/COS_Main.c: 108:   COS_ms_tmr++;
  4659  0139  3001               	movlw	1
  4660  013A  07CD               	addwf	_COS_ms_tmr,f
  4661  013B  3000               	movlw	0
  4662  013C  3DCE               	addwfc	_COS_ms_tmr+1,f
  4663                           
  4664                           ;SourceFiles/COS/COS_Main.c: 110:   if (COS_ms_tmr >= 1000)
  4665  013D  3003               	movlw	3
  4666  013E  024E               	subwf	_COS_ms_tmr+1,w
  4667  013F  30E8               	movlw	232
  4668  0140  1903               	skipnz
  4669  0141  024D               	subwf	_COS_ms_tmr,w
  4670  0142  1C03               	skipc
  4671  0143  294A               	goto	l2850
  4672                           
  4673                           ;SourceFiles/COS/COS_Main.c: 111:   {;SourceFiles/COS/COS_Main.c: 112:    COS_ms_tmr = 0
      +                          ;
  4674  0144  01CD               	clrf	_COS_ms_tmr
  4675  0145  01CE               	clrf	_COS_ms_tmr+1
  4676                           
  4677                           ;SourceFiles/COS/COS_Main.c: 113:    COS_sec_tmr++;
  4678  0146  3001               	movlw	1
  4679  0147  07CB               	addwf	_COS_sec_tmr,f	;volatile
  4680  0148  3000               	movlw	0
  4681  0149  3DCC               	addwfc	_COS_sec_tmr+1,f	;volatile
  4682  014A                     l2850:
  4683                           
  4684                           ;SourceFiles/COS/COS_Main.c: 115:   COS_tsk_tmr++;
  4685  014A  3001               	movlw	1
  4686  014B  07C9               	addwf	_COS_tsk_tmr,f
  4687  014C  3000               	movlw	0
  4688  014D  3DCA               	addwfc	_COS_tsk_tmr+1,f
  4689                           
  4690                           ;SourceFiles/COS/COS_Main.c: 116:   if ((COS_tsk_tmr >= 10) && (!COS_tsk_ena))
  4691  014E  3000               	movlw	0
  4692  014F  024A               	subwf	_COS_tsk_tmr+1,w
  4693  0150  300A               	movlw	10
  4694  0151  1903               	skipnz
  4695  0152  0249               	subwf	_COS_tsk_tmr,w
  4696  0153  1C03               	skipc
  4697  0154  0008               	return
  4698  0155  085B               	movf	_COS_tsk_ena,w
  4699  0156  1D03               	btfss	3,2
  4700  0157  0008               	return
  4701                           
  4702                           ;SourceFiles/COS/COS_Main.c: 117:   {;SourceFiles/COS/COS_Main.c: 118:    COS_tsk_tmr = 
      +                          0;
  4703  0158  01C9               	clrf	_COS_tsk_tmr
  4704  0159  01CA               	clrf	_COS_tsk_tmr+1
  4705                           
  4706                           ;SourceFiles/COS/COS_Main.c: 119:    COS_tsk_ena = 1;
  4707  015A  01DB               	clrf	_COS_tsk_ena
  4708  015B  0ADB               	incf	_COS_tsk_ena,f
  4709  015C  0008               	return
  4710  015D                     __end_of_COS_TmrHandler:
  4711                           
  4712                           	psect	text23
  4713  015D                     __ptext23:	
  4714 ;; *************** function _COS_Init *****************
  4715 ;; Defined at:
  4716 ;;		line 32 in file "SourceFiles/COS/COS_Main.c"
  4717 ;; Parameters:    Size  Location     Type
  4718 ;;		None
  4719 ;; Auto vars:     Size  Location     Type
  4720 ;;  tempbyte2       1    4[BANK0 ] unsigned char 
  4721 ;;  tempbyte1       1    3[BANK0 ] unsigned char 
  4722 ;; Return value:  Size  Location     Type
  4723 ;;                  1    wreg      void 
  4724 ;; Registers used:
  4725 ;;		wreg, status,2, status,0, pclath, cstack
  4726 ;; Tracked objects:
  4727 ;;		On entry : 0/0
  4728 ;;		On exit  : 0/0
  4729 ;;		Unchanged: 0/0
  4730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4731 ;;      Params:         0       0       0       0       0       0       0       0
  4732 ;;      Locals:         0       2       0       0       0       0       0       0
  4733 ;;      Temps:          0       3       0       0       0       0       0       0
  4734 ;;      Totals:         0       5       0       0       0       0       0       0
  4735 ;;Total ram usage:        5 bytes
  4736 ;; Hardware stack levels used:    1
  4737 ;; Hardware stack levels required when called:    6
  4738 ;; This function calls:
  4739 ;;		_COS_TimerSetup
  4740 ;; This function is called by:
  4741 ;;		_main
  4742 ;; This function uses a non-reentrant model
  4743 ;;
  4744                           
  4745                           
  4746                           ;psect for function _COS_Init
  4747  015D                     _COS_Init:
  4748                           
  4749                           ;SourceFiles/COS/COS_Main.c: 34:  UINT_8 tempbyte1, tempbyte2;;SourceFiles/COS/COS_Main.
      +                          c: 36:  COS_TimerSetup();
  4750                           
  4751                           ;incstack = 0
  4752                           ; Regs used in _COS_Init: [wreg+status,2+status,0+pclath+cstack]
  4753  015D  3183  232F  3181   	fcall	_COS_TimerSetup
  4754                           
  4755                           ;SourceFiles/COS/COS_Main.c: 41:  COS_tsk_ind = 0;
  4756  0160  0020               	movlb	0	; select bank0
  4757  0161  01D2               	clrf	_COS_tsk_ind
  4758                           
  4759                           ;SourceFiles/COS/COS_Main.c: 42:  COS_tsk_msk = 0x80;
  4760  0162  3080               	movlw	128
  4761  0163  00DD               	movwf	??_COS_Init
  4762  0164  085D               	movf	??_COS_Init,w
  4763  0165  00DC               	movwf	_COS_tsk_msk
  4764                           
  4765                           ;SourceFiles/COS/COS_Main.c: 43:  COS_tsk_ena = 1;
  4766  0166  01DB               	clrf	_COS_tsk_ena
  4767  0167  0ADB               	incf	_COS_tsk_ena,f
  4768                           
  4769                           ;SourceFiles/COS/COS_Main.c: 44:  COS_ms_tmr = 0;
  4770  0168  01CD               	clrf	_COS_ms_tmr
  4771  0169  01CE               	clrf	_COS_ms_tmr+1
  4772                           
  4773                           ;SourceFiles/COS/COS_Main.c: 45:  COS_sec_tmr = 0;
  4774  016A  01CB               	clrf	_COS_sec_tmr	;volatile
  4775  016B  01CC               	clrf	_COS_sec_tmr+1	;volatile
  4776                           
  4777                           ;SourceFiles/COS/COS_Main.c: 46:  COS_tsk_tmr = 0;
  4778  016C  01C9               	clrf	_COS_tsk_tmr
  4779  016D  01CA               	clrf	_COS_tsk_tmr+1
  4780                           
  4781                           ;SourceFiles/COS/COS_Main.c: 48:  tempbyte2 = TMR1H;
  4782  016E  0817               	movf	23,w	;volatile
  4783  016F  00DD               	movwf	??_COS_Init
  4784  0170  085D               	movf	??_COS_Init,w
  4785  0171  00E1               	movwf	COS_Init@tempbyte2
  4786                           
  4787                           ;SourceFiles/COS/COS_Main.c: 49:  tempbyte1 = TMR1L;
  4788  0172  0816               	movf	22,w	;volatile
  4789  0173  00DD               	movwf	??_COS_Init
  4790  0174  085D               	movf	??_COS_Init,w
  4791  0175  00E0               	movwf	COS_Init@tempbyte1
  4792                           
  4793                           ;SourceFiles/COS/COS_Main.c: 50:  if (tempbyte2 != TMR1H)
  4794  0176  0861               	movf	COS_Init@tempbyte2,w
  4795  0177  0617               	xorwf	23,w	;volatile
  4796  0178  1903               	skipnz
  4797  0179  2982               	goto	l29
  4798                           
  4799                           ;SourceFiles/COS/COS_Main.c: 51:  {;SourceFiles/COS/COS_Main.c: 52:   tempbyte2 = TMR1H;
  4800  017A  0817               	movf	23,w	;volatile
  4801  017B  00DD               	movwf	??_COS_Init
  4802  017C  085D               	movf	??_COS_Init,w
  4803  017D  00E1               	movwf	COS_Init@tempbyte2
  4804                           
  4805                           ;SourceFiles/COS/COS_Main.c: 53:   tempbyte1 = TMR1L;
  4806  017E  0816               	movf	22,w	;volatile
  4807  017F  00DD               	movwf	??_COS_Init
  4808  0180  085D               	movf	??_COS_Init,w
  4809  0181  00E0               	movwf	COS_Init@tempbyte1
  4810  0182                     l29:	
  4811                           ;SourceFiles/COS/COS_Main.c: 54:  }
  4812                           
  4813                           
  4814                           ;SourceFiles/COS/COS_Main.c: 55:  COS_tcnt_val = ((UINT_16)tempbyte2 << 8)&0xff00;
  4815  0182  0861               	movf	COS_Init@tempbyte2,w
  4816  0183  00DD               	movwf	??_COS_Init
  4817  0184  01DE               	clrf	??_COS_Init+1
  4818  0185  085D               	movf	??_COS_Init,w
  4819  0186  00DE               	movwf	??_COS_Init+1
  4820  0187  01DD               	clrf	??_COS_Init
  4821  0188  3000               	movlw	0
  4822  0189  055D               	andwf	??_COS_Init,w
  4823  018A  00F6               	movwf	_COS_tcnt_val
  4824  018B  30FF               	movlw	255
  4825  018C  055E               	andwf	??_COS_Init+1,w
  4826  018D  00F7               	movwf	_COS_tcnt_val+1
  4827                           
  4828                           ;SourceFiles/COS/COS_Main.c: 56:  COS_tcnt_val = COS_tcnt_val | ((UINT_16)tempbyte1 & 0x
      +                          00ff);
  4829  018E  0876               	movf	_COS_tcnt_val,w
  4830  018F  0460               	iorwf	COS_Init@tempbyte1,w
  4831  0190  00F6               	movwf	_COS_tcnt_val
  4832  0191  0877               	movf	_COS_tcnt_val+1,w
  4833  0192  00F7               	movwf	_COS_tcnt_val+1
  4834                           
  4835                           ;SourceFiles/COS/COS_Main.c: 57:  COS_tcnt_lst = COS_tcnt_val;
  4836  0193  0877               	movf	_COS_tcnt_val+1,w
  4837  0194  00C8               	movwf	_COS_tcnt_lst+1
  4838  0195  0876               	movf	_COS_tcnt_val,w
  4839  0196  00C7               	movwf	_COS_tcnt_lst
  4840  0197  0008               	return
  4841  0198                     __end_of_COS_Init:
  4842                           
  4843                           	psect	text24
  4844  032F                     __ptext24:	
  4845 ;; *************** function _COS_TimerSetup *****************
  4846 ;; Defined at:
  4847 ;;		line 68 in file "SourceFiles/COS/COS_Main.c"
  4848 ;; Parameters:    Size  Location     Type
  4849 ;;		None
  4850 ;; Auto vars:     Size  Location     Type
  4851 ;;		None
  4852 ;; Return value:  Size  Location     Type
  4853 ;;                  1    wreg      void 
  4854 ;; Registers used:
  4855 ;;		wreg, status,2
  4856 ;; Tracked objects:
  4857 ;;		On entry : 0/0
  4858 ;;		On exit  : 0/0
  4859 ;;		Unchanged: 0/0
  4860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4861 ;;      Params:         0       0       0       0       0       0       0       0
  4862 ;;      Locals:         0       0       0       0       0       0       0       0
  4863 ;;      Temps:          0       0       0       0       0       0       0       0
  4864 ;;      Totals:         0       0       0       0       0       0       0       0
  4865 ;;Total ram usage:        0 bytes
  4866 ;; Hardware stack levels used:    1
  4867 ;; Hardware stack levels required when called:    5
  4868 ;; This function calls:
  4869 ;;		Nothing
  4870 ;; This function is called by:
  4871 ;;		_COS_Init
  4872 ;; This function uses a non-reentrant model
  4873 ;;
  4874                           
  4875                           
  4876                           ;psect for function _COS_TimerSetup
  4877  032F                     _COS_TimerSetup:
  4878                           
  4879                           ;SourceFiles/COS/COS_Main.c: 72:  TMR1H = 0;
  4880                           
  4881                           ;incstack = 0
  4882                           ; Regs used in _COS_TimerSetup: [wreg+status,2]
  4883  032F  0020               	movlb	0	; select bank0
  4884  0330  0197               	clrf	23	;volatile
  4885                           
  4886                           ;SourceFiles/COS/COS_Main.c: 73:  TMR1L = 0;
  4887  0331  0196               	clrf	22	;volatile
  4888                           
  4889                           ;SourceFiles/COS/COS_Main.c: 78:  T1CON = 0b00100001;
  4890  0332  3021               	movlw	33
  4891  0333  0098               	movwf	24	;volatile
  4892  0334  0008               	return
  4893  0335                     __end_of_COS_TimerSetup:
  4894                           
  4895                           	psect	intentry
  4896  0004                     __pintentry:	
  4897 ;; *************** function _INTERRUPT_InterruptManager *****************
  4898 ;; Defined at:
  4899 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4900 ;; Parameters:    Size  Location     Type
  4901 ;;		None
  4902 ;; Auto vars:     Size  Location     Type
  4903 ;;		None
  4904 ;; Return value:  Size  Location     Type
  4905 ;;                  1    wreg      void 
  4906 ;; Registers used:
  4907 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4908 ;; Tracked objects:
  4909 ;;		On entry : 0/0
  4910 ;;		On exit  : 0/0
  4911 ;;		Unchanged: 0/0
  4912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4913 ;;      Params:         0       0       0       0       0       0       0       0
  4914 ;;      Locals:         0       0       0       0       0       0       0       0
  4915 ;;      Temps:          0       0       0       0       0       0       0       0
  4916 ;;      Totals:         0       0       0       0       0       0       0       0
  4917 ;;Total ram usage:        0 bytes
  4918 ;; Hardware stack levels used:    1
  4919 ;; Hardware stack levels required when called:    4
  4920 ;; This function calls:
  4921 ;;		_TMR2_ISR
  4922 ;; This function is called by:
  4923 ;;		Interrupt level 1
  4924 ;; This function uses a non-reentrant model
  4925 ;;
  4926                           
  4927  0004                     _INTERRUPT_InterruptManager:
  4928                           
  4929                           ;incstack = 0
  4930  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4931                           
  4932                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4933  0005  3180               	pagesel	$
  4934                           
  4935                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  4936  0006  1F0B               	btfss	11,6	;volatile
  4937  0007  2810               	goto	i1l229
  4938                           
  4939                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  4940  0008  0021               	movlb	1	; select bank1
  4941  0009  1C91               	btfss	17,1	;volatile
  4942  000A  2810               	goto	i1l229
  4943  000B  0020               	movlb	0	; select bank0
  4944  000C  1C91               	btfss	17,1	;volatile
  4945  000D  2810               	goto	i1l229
  4946                           
  4947                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR2_ISR();
  4948  000E  3182  228F         	fcall	_TMR2_ISR
  4949  0010                     i1l229:	
  4950                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  4951                           
  4952  0010  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4953  0011  0009               	retfie
  4954  0012                     __end_of_INTERRUPT_InterruptManager:
  4955                           
  4956                           	psect	text26
  4957  028F                     __ptext26:	
  4958 ;; *************** function _TMR2_ISR *****************
  4959 ;; Defined at:
  4960 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  4961 ;; Parameters:    Size  Location     Type
  4962 ;;		None
  4963 ;; Auto vars:     Size  Location     Type
  4964 ;;		None
  4965 ;; Return value:  Size  Location     Type
  4966 ;;                  1    wreg      void 
  4967 ;; Registers used:
  4968 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4969 ;; Tracked objects:
  4970 ;;		On entry : 0/0
  4971 ;;		On exit  : 0/0
  4972 ;;		Unchanged: 0/0
  4973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4974 ;;      Params:         0       0       0       0       0       0       0       0
  4975 ;;      Locals:         0       0       0       0       0       0       0       0
  4976 ;;      Temps:          0       0       0       0       0       0       0       0
  4977 ;;      Totals:         0       0       0       0       0       0       0       0
  4978 ;;Total ram usage:        0 bytes
  4979 ;; Hardware stack levels used:    1
  4980 ;; Hardware stack levels required when called:    3
  4981 ;; This function calls:
  4982 ;;		_TMR2_CallBack
  4983 ;; This function is called by:
  4984 ;;		_INTERRUPT_InterruptManager
  4985 ;; This function uses a non-reentrant model
  4986 ;;
  4987                           
  4988                           
  4989                           ;psect for function _TMR2_ISR
  4990  028F                     _TMR2_ISR:
  4991                           
  4992                           ;mcc_generated_files/tmr2.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr2.c: 124:     PIR1bits.TMR2IF = 0;
  4993                           
  4994                           ;incstack = 0
  4995                           ; Regs used in _TMR2_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4996  028F  0020               	movlb	0	; select bank0
  4997  0290  1091               	bcf	17,1	;volatile
  4998                           
  4999                           ;mcc_generated_files/tmr2.c: 127:     if (++CountCallBack >= 5)
  5000  0291  3001               	movlw	1
  5001  0292  07C5               	addwf	TMR2_ISR@CountCallBack,f	;volatile
  5002  0293  3000               	movlw	0
  5003  0294  3DC6               	addwfc	TMR2_ISR@CountCallBack+1,f	;volatile
  5004  0295  3000               	movlw	0
  5005  0296  0246               	subwf	TMR2_ISR@CountCallBack+1,w	;volatile
  5006  0297  3005               	movlw	5
  5007  0298  1903               	skipnz
  5008  0299  0245               	subwf	TMR2_ISR@CountCallBack,w	;volatile
  5009  029A  1C03               	skipc
  5010  029B  0008               	return
  5011                           
  5012                           ;mcc_generated_files/tmr2.c: 128:     {;mcc_generated_files/tmr2.c: 130:         TMR2_Ca
      +                          llBack();
  5013  029C  3182  22CE         	fcall	_TMR2_CallBack
  5014                           
  5015                           ;mcc_generated_files/tmr2.c: 133:         CountCallBack = 0;
  5016  029E  0020               	movlb	0	; select bank0
  5017  029F  01C5               	clrf	TMR2_ISR@CountCallBack	;volatile
  5018  02A0  01C6               	clrf	TMR2_ISR@CountCallBack+1	;volatile
  5019  02A1  0008               	return
  5020  02A2                     __end_of_TMR2_ISR:
  5021                           
  5022                           	psect	text27
  5023  02CE                     __ptext27:	
  5024 ;; *************** function _TMR2_CallBack *****************
  5025 ;; Defined at:
  5026 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  5027 ;; Parameters:    Size  Location     Type
  5028 ;;		None
  5029 ;; Auto vars:     Size  Location     Type
  5030 ;;		None
  5031 ;; Return value:  Size  Location     Type
  5032 ;;                  1    wreg      void 
  5033 ;; Registers used:
  5034 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5035 ;; Tracked objects:
  5036 ;;		On entry : 0/0
  5037 ;;		On exit  : 0/0
  5038 ;;		Unchanged: 0/0
  5039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5040 ;;      Params:         0       0       0       0       0       0       0       0
  5041 ;;      Locals:         0       0       0       0       0       0       0       0
  5042 ;;      Temps:          0       0       0       0       0       0       0       0
  5043 ;;      Totals:         0       0       0       0       0       0       0       0
  5044 ;;Total ram usage:        0 bytes
  5045 ;; Hardware stack levels used:    1
  5046 ;; Hardware stack levels required when called:    2
  5047 ;; This function calls:
  5048 ;;		Absolute function
  5049 ;;		_Led2_PWM
  5050 ;;		_TMR2_DefaultInterruptHandler
  5051 ;; This function is called by:
  5052 ;;		_TMR2_ISR
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055                           
  5056                           
  5057                           ;psect for function _TMR2_CallBack
  5058  02CE                     _TMR2_CallBack:
  5059                           
  5060                           ;mcc_generated_files/tmr2.c: 141:     if(TMR2_InterruptHandler)
  5061                           
  5062                           ;incstack = 0
  5063                           ; Regs used in _TMR2_CallBack: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5064  02CE  0020               	movlb	0	; select bank0
  5065  02CF  0859               	movf	_TMR2_InterruptHandler,w
  5066  02D0  045A               	iorwf	_TMR2_InterruptHandler+1,w
  5067  02D1  1903               	btfsc	3,2
  5068  02D2  0008               	return
  5069                           
  5070                           ;mcc_generated_files/tmr2.c: 142:     {;mcc_generated_files/tmr2.c: 143:         TMR2_In
      +                          terruptHandler();
  5071  02D3  085A               	movf	_TMR2_InterruptHandler+1,w
  5072  02D4  008A               	movwf	10
  5073  02D5  0859               	movf	_TMR2_InterruptHandler,w
  5074  02D6  000A               	callw
  5075  02D7  3182               	pagesel	$
  5076  02D8  0008               	return
  5077  02D9                     __end_of_TMR2_CallBack:
  5078                           
  5079                           	psect	text28
  5080  009A                     __ptext28:	
  5081 ;; *************** function _Led2_PWM *****************
  5082 ;; Defined at:
  5083 ;;		line 30 in file "SourceFiles/SunSensor/Led.c"
  5084 ;; Parameters:    Size  Location     Type
  5085 ;;		None
  5086 ;; Auto vars:     Size  Location     Type
  5087 ;;		None
  5088 ;; Return value:  Size  Location     Type
  5089 ;;                  1    wreg      void 
  5090 ;; Registers used:
  5091 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5092 ;; Tracked objects:
  5093 ;;		On entry : 0/0
  5094 ;;		On exit  : 0/0
  5095 ;;		Unchanged: 0/0
  5096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5097 ;;      Params:         0       0       0       0       0       0       0       0
  5098 ;;      Locals:         0       0       0       0       0       0       0       0
  5099 ;;      Temps:          2       0       0       0       0       0       0       0
  5100 ;;      Totals:         2       0       0       0       0       0       0       0
  5101 ;;Total ram usage:        2 bytes
  5102 ;; Hardware stack levels used:    1
  5103 ;; Hardware stack levels required when called:    1
  5104 ;; This function calls:
  5105 ;;		_PWM1_LoadDutyValue
  5106 ;; This function is called by:
  5107 ;;		_main
  5108 ;;		_TMR2_CallBack
  5109 ;; This function uses a non-reentrant model
  5110 ;;
  5111                           
  5112                           
  5113                           ;psect for function _Led2_PWM
  5114  009A                     _Led2_PWM:
  5115                           
  5116                           ;SourceFiles/SunSensor/Led.c: 32:     switch (BreathState)
  5117                           
  5118                           ;incstack = 0
  5119                           ; Regs used in _Led2_PWM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5120  009A  28E5               	goto	i1l2284
  5121  009B                     i1l2256:
  5122                           
  5123                           ;SourceFiles/SunSensor/Led.c: 35:             counter++;
  5124  009B  3001               	movlw	1
  5125  009C  0020               	movlb	0	; select bank0
  5126  009D  07C3               	addwf	_counter,f
  5127  009E  3000               	movlw	0
  5128  009F  3DC4               	addwfc	_counter+1,f
  5129                           
  5130                           ;SourceFiles/SunSensor/Led.c: 36:             if(counter > 100)
  5131  00A0  3000               	movlw	0
  5132  00A1  0244               	subwf	_counter+1,w
  5133  00A2  3065               	movlw	101
  5134  00A3  1903               	skipnz
  5135  00A4  0243               	subwf	_counter,w
  5136  00A5  1C03               	skipc
  5137  00A6  28AC               	goto	i1l2260
  5138                           
  5139                           ;SourceFiles/SunSensor/Led.c: 37:             {;SourceFiles/SunSensor/Led.c: 38:        
      +                                   BreathState = 2;
  5140  00A7  3002               	movlw	2
  5141  00A8  00F4               	movwf	??_Led2_PWM
  5142  00A9  0874               	movf	??_Led2_PWM,w
  5143  00AA  00FB               	movwf	_BreathState
  5144                           
  5145                           ;SourceFiles/SunSensor/Led.c: 39:             }
  5146  00AB  28F8               	goto	i1l2286
  5147  00AC                     i1l2260:
  5148                           
  5149                           ;SourceFiles/SunSensor/Led.c: 41:             {;SourceFiles/SunSensor/Led.c: 42:        
      +                                   dutyValue += 8;
  5150  00AC  3008               	movlw	8
  5151  00AD  07C1               	addwf	_dutyValue,f
  5152  00AE  3000               	movlw	0
  5153  00AF  3DC2               	addwfc	_dutyValue+1,f
  5154  00B0  28F8               	goto	i1l2286
  5155  00B1                     i1l2262:
  5156                           
  5157                           ;SourceFiles/SunSensor/Led.c: 46:             counter++;
  5158  00B1  3001               	movlw	1
  5159  00B2  0020               	movlb	0	; select bank0
  5160  00B3  07C3               	addwf	_counter,f
  5161  00B4  3000               	movlw	0
  5162  00B5  3DC4               	addwfc	_counter+1,f
  5163                           
  5164                           ;SourceFiles/SunSensor/Led.c: 47:             if (counter >= (100 + 200))
  5165  00B6  3001               	movlw	1
  5166  00B7  0244               	subwf	_counter+1,w
  5167  00B8  302C               	movlw	44
  5168  00B9  1903               	skipnz
  5169  00BA  0243               	subwf	_counter,w
  5170  00BB  1C03               	skipc
  5171  00BC  28C4               	goto	i1l2268
  5172                           
  5173                           ;SourceFiles/SunSensor/Led.c: 48:             {;SourceFiles/SunSensor/Led.c: 49:        
      +                                   BreathState = 3;
  5174  00BD  3003               	movlw	3
  5175  00BE  00F4               	movwf	??_Led2_PWM
  5176  00BF  0874               	movf	??_Led2_PWM,w
  5177  00C0  00FB               	movwf	_BreathState
  5178  00C1                     i1l2266:
  5179                           
  5180                           ;SourceFiles/SunSensor/Led.c: 51:                 dutyValue = 0;
  5181  00C1  01C1               	clrf	_dutyValue
  5182  00C2  01C2               	clrf	_dutyValue+1
  5183                           
  5184                           ;SourceFiles/SunSensor/Led.c: 53:             }
  5185  00C3  28F8               	goto	i1l2286
  5186  00C4                     i1l2268:
  5187                           
  5188                           ;SourceFiles/SunSensor/Led.c: 55:             {;SourceFiles/SunSensor/Led.c: 56:        
      +                                   if (dutyValue > 0)
  5189  00C4  0841               	movf	_dutyValue,w
  5190  00C5  0442               	iorwf	_dutyValue+1,w
  5191  00C6  1903               	btfsc	3,2
  5192  00C7  28F8               	goto	i1l2286
  5193                           
  5194                           ;SourceFiles/SunSensor/Led.c: 57:                 {;SourceFiles/SunSensor/Led.c: 58:    
      +                                           if (dutyValue > 4)
  5195  00C8  3000               	movlw	0
  5196  00C9  0242               	subwf	_dutyValue+1,w
  5197  00CA  3005               	movlw	5
  5198  00CB  1903               	skipnz
  5199  00CC  0241               	subwf	_dutyValue,w
  5200  00CD  1C03               	skipc
  5201  00CE  28C1               	goto	i1l2266
  5202                           
  5203                           ;SourceFiles/SunSensor/Led.c: 59:                     {;SourceFiles/SunSensor/Led.c: 60:
      +                                                   dutyValue-=4;
  5204  00CF  3004               	movlw	4
  5205  00D0  02C1               	subwf	_dutyValue,f
  5206  00D1  3000               	movlw	0
  5207  00D2  3BC2               	subwfb	_dutyValue+1,f
  5208                           
  5209                           ;SourceFiles/SunSensor/Led.c: 61:                     }
  5210  00D3  28F8               	goto	i1l2286
  5211  00D4                     i1l2276:
  5212                           
  5213                           ;SourceFiles/SunSensor/Led.c: 71:             counter++;
  5214  00D4  3001               	movlw	1
  5215  00D5  0020               	movlb	0	; select bank0
  5216  00D6  07C3               	addwf	_counter,f
  5217  00D7  3000               	movlw	0
  5218  00D8  3DC4               	addwfc	_counter+1,f
  5219                           
  5220                           ;SourceFiles/SunSensor/Led.c: 72:             if (counter > (100 + 200 + 100))
  5221  00D9  3001               	movlw	1
  5222  00DA  0244               	subwf	_counter+1,w
  5223  00DB  3091               	movlw	145
  5224  00DC  1903               	skipnz
  5225  00DD  0243               	subwf	_counter,w
  5226  00DE  1C03               	skipc
  5227  00DF  28F8               	goto	i1l2286
  5228                           
  5229                           ;SourceFiles/SunSensor/Led.c: 73:             {;SourceFiles/SunSensor/Led.c: 74:        
      +                                   counter = 0;
  5230  00E0  01C3               	clrf	_counter
  5231  00E1  01C4               	clrf	_counter+1
  5232                           
  5233                           ;SourceFiles/SunSensor/Led.c: 75:                 BreathState = 1;
  5234  00E2  01FB               	clrf	_BreathState
  5235  00E3  0AFB               	incf	_BreathState,f
  5236  00E4  28F8               	goto	i1l2286
  5237  00E5                     i1l2284:
  5238  00E5  087B               	movf	_BreathState,w
  5239  00E6  00F4               	movwf	??_Led2_PWM
  5240  00E7  01F5               	clrf	??_Led2_PWM+1
  5241                           
  5242                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5243                           ; Switch size 1, requested type "simple"
  5244                           ; Number of cases is 1, Range of values is 0 to 0
  5245                           ; switch strategies available:
  5246                           ; Name         Instructions Cycles
  5247                           ; simple_byte            4     3 (average)
  5248                           ; direct_byte            8     6 (fixed)
  5249                           ; jumptable            260     6 (fixed)
  5250                           ;	Chosen strategy is simple_byte
  5251  00E8  0875               	movf	??_Led2_PWM+1,w
  5252  00E9  3A00               	xorlw	0	; case 0
  5253  00EA  1903               	skipnz
  5254  00EB  28ED               	goto	i1l3078
  5255  00EC  28F8               	goto	i1l2286
  5256  00ED                     i1l3078:
  5257                           
  5258                           ; Switch size 1, requested type "simple"
  5259                           ; Number of cases is 3, Range of values is 1 to 3
  5260                           ; switch strategies available:
  5261                           ; Name         Instructions Cycles
  5262                           ; simple_byte           10     6 (average)
  5263                           ; direct_byte           15     9 (fixed)
  5264                           ; jumptable            263     9 (fixed)
  5265                           ;	Chosen strategy is simple_byte
  5266  00ED  0874               	movf	??_Led2_PWM,w
  5267  00EE  3A01               	xorlw	1	; case 1
  5268  00EF  1903               	skipnz
  5269  00F0  289B               	goto	i1l2256
  5270  00F1  3A03               	xorlw	3	; case 2
  5271  00F2  1903               	skipnz
  5272  00F3  28B1               	goto	i1l2262
  5273  00F4  3A01               	xorlw	1	; case 3
  5274  00F5  1903               	skipnz
  5275  00F6  28D4               	goto	i1l2276
  5276  00F7  28F8               	goto	i1l2286
  5277  00F8                     i1l2286:
  5278                           
  5279                           ;SourceFiles/SunSensor/Led.c: 82:     PWM1_LoadDutyValue(dutyValue);
  5280  00F8  0020               	movlb	0	; select bank0
  5281  00F9  0842               	movf	_dutyValue+1,w
  5282  00FA  00F1               	movwf	PWM1_LoadDutyValue@dutyValue+1
  5283  00FB  0841               	movf	_dutyValue,w
  5284  00FC  00F0               	movwf	PWM1_LoadDutyValue@dutyValue
  5285  00FD  3182  2264         	fcall	_PWM1_LoadDutyValue
  5286  00FF  0008               	return
  5287  0100                     __end_of_Led2_PWM:
  5288                           
  5289                           	psect	text29
  5290  033E                     __ptext29:	
  5291 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  5292 ;; Defined at:
  5293 ;;		line 151 in file "mcc_generated_files/tmr2.c"
  5294 ;; Parameters:    Size  Location     Type
  5295 ;;		None
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;		None
  5298 ;; Return value:  Size  Location     Type
  5299 ;;                  1    wreg      void 
  5300 ;; Registers used:
  5301 ;;		None
  5302 ;; Tracked objects:
  5303 ;;		On entry : 0/0
  5304 ;;		On exit  : 0/0
  5305 ;;		Unchanged: 0/0
  5306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5307 ;;      Params:         0       0       0       0       0       0       0       0
  5308 ;;      Locals:         0       0       0       0       0       0       0       0
  5309 ;;      Temps:          0       0       0       0       0       0       0       0
  5310 ;;      Totals:         0       0       0       0       0       0       0       0
  5311 ;;Total ram usage:        0 bytes
  5312 ;; Hardware stack levels used:    1
  5313 ;; This function calls:
  5314 ;;		Nothing
  5315 ;; This function is called by:
  5316 ;;		_TMR2_Initialize
  5317 ;;		_TMR2_CallBack
  5318 ;; This function uses a non-reentrant model
  5319 ;;
  5320                           
  5321                           
  5322                           ;psect for function _TMR2_DefaultInterruptHandler
  5323  033E                     _TMR2_DefaultInterruptHandler:
  5324                           
  5325                           ;incstack = 0
  5326                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  5327  033E  0008               	return
  5328  033F                     __end_of_TMR2_DefaultInterruptHandler:
  5329                           
  5330                           	psect	text30
  5331  0264                     __ptext30:	
  5332 ;; *************** function _PWM1_LoadDutyValue *****************
  5333 ;; Defined at:
  5334 ;;		line 72 in file "mcc_generated_files/pwm1.c"
  5335 ;; Parameters:    Size  Location     Type
  5336 ;;  dutyValue       2    0[COMMON] unsigned short 
  5337 ;; Auto vars:     Size  Location     Type
  5338 ;;		None
  5339 ;; Return value:  Size  Location     Type
  5340 ;;                  1    wreg      void 
  5341 ;; Registers used:
  5342 ;;		wreg, status,2, status,0
  5343 ;; Tracked objects:
  5344 ;;		On entry : 0/0
  5345 ;;		On exit  : 0/0
  5346 ;;		Unchanged: 0/0
  5347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5348 ;;      Params:         2       0       0       0       0       0       0       0
  5349 ;;      Locals:         0       0       0       0       0       0       0       0
  5350 ;;      Temps:          2       0       0       0       0       0       0       0
  5351 ;;      Totals:         4       0       0       0       0       0       0       0
  5352 ;;Total ram usage:        4 bytes
  5353 ;; Hardware stack levels used:    1
  5354 ;; This function calls:
  5355 ;;		Nothing
  5356 ;; This function is called by:
  5357 ;;		_Led2_PWM
  5358 ;; This function uses a non-reentrant model
  5359 ;;
  5360                           
  5361                           
  5362                           ;psect for function _PWM1_LoadDutyValue
  5363  0264                     _PWM1_LoadDutyValue:
  5364                           
  5365                           ;mcc_generated_files/pwm1.c: 72:  void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm1.c: 73:  {;mcc_generated_files/pwm1.c: 75:      PWM1DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  5366                           
  5367                           ;incstack = 0
  5368                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2+status,0]
  5369  0264  0871               	movf	PWM1_LoadDutyValue@dutyValue+1,w
  5370  0265  00F3               	movwf	??_PWM1_LoadDutyValue+1
  5371  0266  0870               	movf	PWM1_LoadDutyValue@dutyValue,w
  5372  0267  00F2               	movwf	??_PWM1_LoadDutyValue
  5373  0268  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
  5374  0269  0CF2               	rrf	??_PWM1_LoadDutyValue,f
  5375  026A  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
  5376  026B  0CF2               	rrf	??_PWM1_LoadDutyValue,f
  5377  026C  0872               	movf	??_PWM1_LoadDutyValue,w
  5378  026D  002C               	movlb	12	; select bank12
  5379  026E  0092               	movwf	18	;volatile
  5380                           
  5381                           ;mcc_generated_files/pwm1.c: 78:      PWM1DCL = (dutyValue & 0x0003)<<6;
  5382  026F  0870               	movf	PWM1_LoadDutyValue@dutyValue,w
  5383  0270  3903               	andlw	3
  5384  0271  00F2               	movwf	??_PWM1_LoadDutyValue
  5385  0272  3005               	movlw	5
  5386  0273                     u71_25:
  5387  0273  35F2               	lslf	??_PWM1_LoadDutyValue,f
  5388  0274  3EFF               	addlw	-1
  5389  0275  1D03               	skipz
  5390  0276  2A73               	goto	u71_25
  5391  0277  3572               	lslf	??_PWM1_LoadDutyValue,w
  5392  0278  0091               	movwf	17	;volatile
  5393  0279  0008               	return
  5394  027A                     __end_of_PWM1_LoadDutyValue:
  5395  007E                     btemp	set	126	;btemp
  5396  007E                     int$flags	set	126
  5397  007E                     wtemp0	set	126
  5398                           
  5399                           	psect	config
  5400                           
  5401                           ;Config register CONFIG1 @ 0x8007
  5402                           ;	Oscillator Selection Bits
  5403                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5404                           ;	Watchdog Timer Enable
  5405                           ;	WDTE = OFF, WDT disabled
  5406                           ;	Power-up Timer Enable
  5407                           ;	PWRTE = OFF, PWRT disabled
  5408                           ;	MCLR Pin Function Select
  5409                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5410                           ;	Flash Program Memory Code Protection
  5411                           ;	CP = OFF, Program memory code protection is disabled
  5412                           ;	Brown-out Reset Enable
  5413                           ;	BOREN = ON, Brown-out Reset enabled
  5414                           ;	Clock Out Enable
  5415                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5416                           ;	Internal/External Switchover Mode
  5417                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  5418                           ;	Fail-Safe Clock Monitor Enable
  5419                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5420  8007                     	org	32775
  5421  8007  3FE4               	dw	16356
  5422                           
  5423                           ;Config register CONFIG2 @ 0x8008
  5424                           ;	Flash Memory Self-Write Protection
  5425                           ;	WRT = OFF, Write protection off
  5426                           ;	Stack Overflow/Underflow Reset Enable
  5427                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5428                           ;	Brown-out Reset Voltage Selection
  5429                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5430                           ;	Low-Power Brown Out Reset
  5431                           ;	LPBOR = OFF, Low-Power BOR is disabled
  5432                           ;	Low-Voltage Programming Enable
  5433                           ;	LVP = ON, Low-voltage programming enabled
  5434  8008                     	org	32776
  5435  8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    47
    Data        2
    BSS         55
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80      8      69
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_DO_TX$1819$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    COS_TskMan$1817	const PTR FTN()void  size(2) Largest target is 1
		 -> GetTemp(), UartDisplay(), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S582$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    S582$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S582$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S582$callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    fsmStateTable	const PTR FTN()enum E3874[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Led2_PWM(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Led2_PWM(), Absolute function(), TMR2_DefaultInterruptHandler(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    S138$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0

    S30$tptr	PTR FTN()void  size(2) Largest target is 1
		 -> GetTemp(), UartDisplay(), 

    COS_tsk.tptr	PTR FTN()void  size(2) Largest target is 1
		 -> GetTemp(), UartDisplay(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR2_CallBack->_Led2_PWM
    _Led2_PWM->_PWM1_LoadDutyValue

Critical Paths under _main in BANK0

    _main->_COS_TskMan
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _COS_TskMan->___wmul
    _UartDisplay->_EUSART_Write
    _GetTemp->_I2C_Open

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2611
                           _COS_Init
                     _COS_TmrHandler
                         _COS_TskMan
                  _SYSTEM_Initialize
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     574
                  _EUSART_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _COS_TskMan                                           2     2      0    1616
                                              6 BANK0      2     2      0
                            _GetTemp *
                        _UartDisplay *
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1486
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _UartDisplay                                          0     0      0      31
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _GetTemp                                              0     0      0      99
                           _I2C_Open
                         _SendByUart
 ---------------------------------------------------------------------------------
 (3) _SendByUart                                           2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Open                                             3     3      0      68
                                              0 BANK0      3     3      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _COS_TmrHandler                                       5     5      0     105
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _COS_Init                                             5     5      0     105
                                              0 BANK0      5     5      0
                     _COS_TimerSetup
 ---------------------------------------------------------------------------------
 (2) _COS_TimerSetup                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0     120
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0     120
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR2_CallBack                                        0     0      0     120
                   Absolute function *
                           _Led2_PWM *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Led2_PWM                                             2     2      0     120
                                              4 COMMON     2     2      0
                 _PWM1_LoadDutyValue
 ---------------------------------------------------------------------------------
 (9) _PWM1_LoadDutyValue                                   4     2      2     120
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _COS_Init
     _COS_TimerSetup
   _COS_TmrHandler
   _COS_TskMan
     _GetTemp *
       _I2C_Open
         _I2C_MasterClearIrq
         _I2C_MasterOpen
       _SendByUart
     _UartDisplay *
       _EUSART_Write
     ___wmul *
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize
   _TMR2_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _Led2_PWM *
         _PWM1_LoadDutyValue
       _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      51       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      8      45       6       86.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      51      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Jun 20 23:20:57 2020

             __end_of_TMR2_SetInterruptHandler 0317                                             l36 0115  
                                           l29 0182                                             l47 008D  
                          ___wmul@multiplicand 005F                                    ?_COS_TskMan 0070  
                                          l412 01CE                                            l706 0305  
                                          l882 021D                                            l799 0240  
                                          _PR2 001B                 ?_EUSART_SetFramingErrorHandler 005D  
                              _TMR2_Initialize 02A2                                            wreg 0009  
                                 _I2C_DO_RESET 0000                                           l2800 0217  
                                         l2850 014A                                           l2864 0063  
                              __end_of_COS_tsk 02C3                                           l2886 008E  
                      __end_of_PWM1_Initialize 02F3                                           _LATA 010C  
                                         _LATB 010D                                           u1335 021E  
                                         _LATC 010E                                           u1345 0223  
                                         _TMR2 001A                                           _WPUA 020C  
                                         _WPUB 020D                                           _Humi 003D  
                                         _Temp 003F                                           _main 0230  
                                         fsr0h 0005                                           indf0 0000  
                                         fsr0l 0004                               __end_of_I2C_Open 01D0  
                                         btemp 007E                                           start 0012  
                              __end_of_GetTemp 02FB                               __end_of_COS_Init 0198  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 0006  
                                _I2C_DO_RX_ACK 0000                  __end_of_OSCILLATOR_Initialize 031D  
                                        ?_main 0070                                          _T1CON 0018  
                                        _T2CON 001C                                          i1l229 0010  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                        u71_25 0273                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _TXREG 019A                                          _TXSTA 019E  
                             __end_of_TMR2_ISR 02A2                                 _WDT_Initialize 0335  
                                        pclath 000A                                          status 0003  
                             __end_of_Led2_PWM 0100                                          wtemp0 007E  
                          __size_of_COS_TskMan 006F                                  _fsmStateTable 01F4  
                              __initialization 0014                                   __end_of_main 024B  
                               ??_EUSART_Write 005D                        __end_of_TMR2_Initialize 02B4  
                  ?_INTERRUPT_InterruptManager 0070                       _TMR2_SetInterruptHandler 0311  
                                       ??_main 0065                                    _BreathState 007B  
                       __end_of_WDT_Initialize 0339                                 _COS_TmrHandler 0100  
                                   _SendByUart 02E2              _EUSART_DefaultFramingErrorHandler 0000  
                   _EUSART_OverrunErrorHandler 0055                                 _COS_TimerSetup 032F  
                                       _APFCON 011D                                         _ANSELA 018C  
                                       _ANSELB 018D                                         _ANSELC 018E  
                                       _BORCON 0116                               ?_PWM1_Initialize 0070  
                                       i1l2260 00AC                                         i1l2262 00B1  
                                       i1l2256 009B                                         i1l2266 00C1  
                                       i1l2276 00D4                                         i1l2268 00C4  
                                       i1l2284 00E5                                         i1l3078 00ED  
                                       i1l2286 00F8                                         _OSCCON 0099  
                                       _SPBRGH 019C                                      ??_GetTemp 0060  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                                ??_UartDisplay 005E                                     _Timer2Flag 0050  
                                       ___wmul 0214                        __size_of_I2C_MasterOpen 000B  
                      __size_of_I2C_Initialize 0009                         __end_of_COS_TmrHandler 015D  
                          _I2C_DO_ADDRESS_NACK 0000                                   __pdataCOMMON 007A  
                                    ?_I2C_Open 0070                                ?_WDT_Initialize 0070  
                       __end_of_COS_TimerSetup 0335       TMR2_SetInterruptHandler@InterruptHandler 005D  
                            _SYSTEM_Initialize 027A                        __end_of__initialization 0027  
                                    ?_COS_Init 0070                          __end_of_TMR2_CallBack 02D9  
                               _NewMessageFlag 0078                             ?_SYSTEM_Initialize 0070  
                  PWM1_LoadDutyValue@dutyValue 0070                        _rdBlkRegCompleteHandler 0000  
                               __pcstackCOMMON 0070                         _I2C_CallbackReturnStop 0000  
                          ??_SYSTEM_Initialize 005F                            __end_of_UartDisplay 0303  
                                    ?_TMR2_ISR 0070                             _PWM1_LoadDutyValue 0264  
                             ?_TMR2_Initialize 0070                                   ??_COS_TskMan 0063  
                                    ?_Led2_PWM 0070                                ?_COS_TmrHandler 0070  
                               _OPTION_REGbits 0095                                     ??_I2C_Open 005D  
                          ?_PWM1_LoadDutyValue 0070                                ?_COS_TimerSetup 0070  
                   __end_of_I2C_MasterClearIrq 033C                                    ?_SendByUart 0070  
              ??_EUSART_SetOverrunErrorHandler 005F                      __end_of_SYSTEM_Initialize 028F  
                                   __pbssBANK0 0020                           __end_of_EUSART_Write 030B  
                                   ??_COS_Init 005D                            _I2C_DO_RX_NACK_STOP 0000  
                        _rd1RegCompleteHandler 0000                             __end_of_COS_TskMan 009A  
                         ??_PWM1_LoadDutyValue 0072                          _wr1RegCompleteHandler 0000  
                                   __pmaintext 0230                                _I2C_DO_TX_EMPTY 0000  
                                      ?___wmul 005D                                     ??_TMR2_ISR 0076  
                                   __pintentry 0004                                        _BAUDCON 019F  
                                   ??_Led2_PWM 0074                                        _COS_tsk 02B4  
                                      _PWM1DCH 0612                                        _PWM1DCL 0611  
                                      _PWM1CON 0613                                        _SSP1ADD 0212  
                                      _SSP1BUF 0211                       ??_EUSART_SetErrorHandler 005F  
                                    _I2C_DO_RX 0000                                      _I2C_DO_TX 0000  
                                      _GetTemp 02F3                                    _UartDisplay 02FB  
                   ??_TMR2_SetInterruptHandler 005F                            __size_of_SendByUart 0009  
                              __size_of___wmul 001C                                 _I2C_MasterOpen 02C3  
                               _I2C_Initialize 02D9                                        __ptext1 027A  
                                      __ptext2 0335                                        __ptext3 02A2  
                                      __ptext4 0311                                        __ptext5 02EB  
                                      __ptext6 024B                                        __ptext7 0317  
                                      __ptext8 02D9                                        __ptext9 01D0  
                                      _counter 0043                          _OSCILLATOR_Initialize 0317  
                                    _T2CONbits 001C                       ??_PIN_MANAGER_Initialize 005D  
                   __size_of_SYSTEM_Initialize 0015                                        clrloop0 030C  
                         end_of_initialization 0027                     _counter@UART_Display$F1229 004F  
        __end_of_EUSART_SetOverrunErrorHandler 0323         __size_of_EUSART_SetOverrunErrorHandler 0006  
                _EUSART_SetOverrunErrorHandler 031D                                _TimeSlotCounter 0051  
                            _EUSART_Initialize 01D0                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                         __end_of_I2C_MasterOpen 02CE  
                       __end_of_I2C_Initialize 02E2                                      _U8Message 007A  
                          ??_EUSART_Initialize 005F                               ??_WDT_Initialize 005D  
                        __size_of_EUSART_Write 0008                              __size_of_I2C_Open 0038  
              __size_of_EUSART_SetErrorHandler 0006                      __end_of_EUSART_Initialize 01F4  
                                  _I2C_DO_IDLE 0000                                    _I2C_DO_RCEN 0000  
                                    _TXSTAbits 019E                       _I2C_DO_SEND_RESTART_READ 0000  
                            __size_of_COS_Init 003B                       __size_of_PWM1_Initialize 0008  
                              ?_I2C_MasterOpen 0070                                ?_I2C_Initialize 0070  
         __end_of_TMR2_DefaultInterruptHandler 033F          __size_of_TMR2_DefaultInterruptHandler 0001  
                 _TMR2_DefaultInterruptHandler 033E                        _I2C_CallbackReturnReset 0000  
                   _EUSART_DefaultErrorHandler 0000                               ??_COS_TmrHandler 005D  
                               __end_of___wmul 0230                                  __pidataCOMMON 033C  
                                 _EUSART_Write 0303                              __size_of_TMR2_ISR 0013  
                             ??_COS_TimerSetup 005D                         ?_OSCILLATOR_Initialize 0070  
                          start_initialization 0014                                   ??_SendByUart 005D  
              __size_of_PIN_MANAGER_Initialize 0019                              __size_of_Led2_PWM 0066  
                       _I2C_DO_RX_NACK_RESTART 0000                             _I2C_MasterClearIrq 0339  
               ?_EUSART_SetOverrunErrorHandler 005D                     _EUSART_FramingErrorHandler 0057  
                                     ??___wmul 0061                         _EUSART_SetErrorHandler 0329  
                                 _COS_tcnt_val 0076                            ?_I2C_MasterClearIrq 0070  
                                 _COS_tcnt_lst 0047                             __end_of_SendByUart 02EB  
                ?_TMR2_DefaultInterruptHandler 0070                               _I2C_DO_SEND_STOP 0000  
                          I2C_Open@returnValue 005F                         __size_of_TMR2_CallBack 000B  
                        _I2C_DO_SEND_ADR_WRITE 0000                                    __pbssCOMMON 0076  
                                    ___latbits 0002                                  __pcstackBANK0 005D  
                     __size_of_TMR2_Initialize 0012                           ??_I2C_MasterClearIrq 005D  
                   __size_of_EUSART_Initialize 0024                                       ?_GetTemp 0070  
                    _I2C_DO_SEND_RESTART_WRITE 0000                                   ?_UartDisplay 0070  
                                    __pnvBANK0 0053                          _rd2RegCompleteHandler 0000  
                        __end_of_fsmStateTable 0214                    __size_of_PWM1_LoadDutyValue 0016  
                       _PIN_MANAGER_Initialize 024B                          _wr2RegCompleteHandler 0000  
                            ??_PWM1_Initialize 005D                   ??_INTERRUPT_InterruptManager 0076  
                                     _I2C_Open 0198                                      _dutyValue 0041  
                               ___wmul@product 0061                                       _COS_Init 015D  
       EUSART_SetErrorHandler@interruptHandler 005D                                       _LATCbits 010E  
                                    clear_ram0 030B                                  _TMR2_CallBack 02CE  
                                     _PIE1bits 0091                              _eusartRxLastError 0079  
          __size_of_INTERRUPT_InterruptManager 000E                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 005F                                       _PIR2bits 0012  
                                     _SSP1CON1 0215                                       _SSP1CON2 0216  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _TMR2_ISR 028F  
                                     _SSP1STAT 0214                              ___wmul@multiplier 005D  
                                     _Led2_PWM 009A                 ??_TMR2_DefaultInterruptHandler 0070  
            __size_of_TMR2_SetInterruptHandler 0006                      ?_TMR2_SetInterruptHandler 005D  
                            COS_Init@tempbyte1 0060                              COS_Init@tempbyte2 0061  
                                   _I2C_Status 0020                              ??_TMR2_Initialize 005F  
                               ?_TMR2_CallBack 0070                               __size_of_GetTemp 0008  
                             ??_I2C_MasterOpen 005D                               ??_I2C_Initialize 005D  
                                  _COS_sec_tmr 004B                        ??_OSCILLATOR_Initialize 005D  
                          _EUSART_ErrorHandler 0053                                    _COS_tsk_ena 005B  
                                  _COS_tsk_ind 0052                                    _COS_tsk_msk 005C  
                                  _COS_tsk_tmr 0049                           _I2C_DO_SEND_ADR_READ 0000  
                              I2C_Open@address 005E                                       __ptext10 031D  
                                     __ptext11 0323                                       __ptext20 02C3  
                                     __ptext12 0329                                       __ptext21 0339  
                                     __ptext13 002B                                       __ptext30 0264  
                                     __ptext22 0100                                       __ptext14 0214  
                                     __ptext23 015D                                       __ptext15 02F3  
                                     __ptext24 032F                                       __ptext16 02FB  
                                     __ptext17 0303                                       __ptext26 028F  
                                     __ptext18 02E2                                       __ptext27 02CE  
                                     __ptext19 0198                                       __ptext28 009A  
                                     __ptext29 033E                                   _SSP1CON1bits 0215  
                                 _SSP1CON2bits 0216                                  __size_of_main 001B  
                      ?_EUSART_SetErrorHandler 005D                           __size_of_UartDisplay 0008  
EUSART_SetOverrunErrorHandler@interruptHandler 005D                                       int$flags 007E  
           __end_of_INTERRUPT_InterruptManager 0012                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 0329         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 0323                                   _SSP1STATbits 0214  
                                   _COS_TskMan 002B                                     _INTCONbits 000B  
                                   _COS_ms_tmr 004D                        __size_of_WDT_Initialize 0004  
                                     intlevel1 0000                                ??_TMR2_CallBack 0076  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 032F  
                          _I2C_DO_SEND_RESTART 0000                                _PWM1_Initialize 02EB  
EUSART_SetFramingErrorHandler@interruptHandler 005D                                  __pstringtext1 01F4  
                                __pstringtext2 02B4                        COS_TmrHandler@tempbyte1 0060  
                      COS_TmrHandler@tempbyte2 0061                          TMR2_ISR@CountCallBack 0045  
                                SendByUart@Txt 005E                        __size_of_COS_TmrHandler 005D  
                  __size_of_I2C_MasterClearIrq 0003                        __size_of_COS_TimerSetup 0006  
                           EUSART_Write@txData 005D                 __end_of_PIN_MANAGER_Initialize 0264  
                   __end_of_PWM1_LoadDutyValue 027A                          _TMR2_InterruptHandler 0059  
