

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Jun 21 17:57:04 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F1509
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,inline,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,inline,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,inline,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,inline,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    65                           	psect	text48,local,class=CODE,merge=1,inline,delta=2
    66                           	psect	text49,local,class=CODE,merge=1,inline,delta=2
    67                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    68                           	psect	text51,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text52,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text53,local,class=CODE,merge=1,delta=2
    71                           	psect	text54,local,class=CODE,merge=1,delta=2
    72                           	psect	text55,local,class=CODE,merge=1,delta=2
    73                           	psect	text56,local,class=CODE,merge=1,delta=2
    74                           	psect	text57,local,class=CODE,merge=1,delta=2
    75                           	psect	text58,local,class=CODE,merge=1,delta=2
    76                           	psect	text59,local,class=CODE,merge=1,delta=2
    77                           	psect	text60,local,class=CODE,merge=1,delta=2
    78                           	psect	text61,local,class=CODE,merge=1,delta=2
    79                           	psect	text62,local,class=CODE,merge=1,delta=2
    80                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
    81                           	psect	text64,local,class=CODE,merge=1,inline,delta=2
    82                           	psect	text65,local,class=CODE,merge=1,inline,delta=2
    83                           	psect	text66,local,class=CODE,merge=1,delta=2
    84                           	psect	text67,local,class=CODE,merge=1,inline,delta=2
    85                           	psect	text68,local,class=CODE,merge=1,inline,delta=2
    86                           	psect	text69,local,class=CODE,merge=1,inline,delta=2
    87                           	psect	text70,local,class=CODE,merge=1,delta=2
    88                           	psect	text71,local,class=CODE,merge=1,delta=2
    89                           	psect	text72,local,class=CODE,merge=1,delta=2
    90                           	psect	intentry,global,class=CODE,delta=2
    91                           	psect	text74,local,class=CODE,merge=1,delta=2
    92                           	psect	text75,local,class=CODE,merge=1,delta=2
    93                           	psect	text76,local,class=CODE,merge=1,delta=2
    94                           	psect	text77,local,class=CODE,merge=1,delta=2
    95                           	psect	text78,local,class=CODE,merge=1,delta=2
    96                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    97                           	dabs	1,0x7E,2
    98  0000                     
    99                           ; Version 2.20
   100                           ; Generated 12/02/2020 GMT
   101                           ; 
   102                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   103                           ; All rights reserved.
   104                           ; 
   105                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   106                           ; 
   107                           ; Redistribution and use in source and binary forms, with or without modification, are
   108                           ; permitted provided that the following conditions are met:
   109                           ; 
   110                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   111                           ;        conditions and the following disclaimer.
   112                           ; 
   113                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   114                           ;        of conditions and the following disclaimer in the documentation and/or other
   115                           ;        materials provided with the distribution.
   116                           ; 
   117                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   118                           ;        software without specific prior written permission.
   119                           ; 
   120                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   121                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   122                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   123                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   124                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   125                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   126                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   127                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   128                           ; 
   129                           ; 
   130                           ; Code-generator required, PIC16F1509 Definitions
   131                           ; 
   132                           ; SFR Addresses
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  008C                     	;# 
   161  008D                     	;# 
   162  008E                     	;# 
   163  0091                     	;# 
   164  0092                     	;# 
   165  0093                     	;# 
   166  0095                     	;# 
   167  0096                     	;# 
   168  0097                     	;# 
   169  0099                     	;# 
   170  009A                     	;# 
   171  009B                     	;# 
   172  009B                     	;# 
   173  009C                     	;# 
   174  009D                     	;# 
   175  009E                     	;# 
   176  009F                     	;# 
   177  010C                     	;# 
   178  010D                     	;# 
   179  010E                     	;# 
   180  0111                     	;# 
   181  0112                     	;# 
   182  0113                     	;# 
   183  0114                     	;# 
   184  0115                     	;# 
   185  0116                     	;# 
   186  0117                     	;# 
   187  0118                     	;# 
   188  0119                     	;# 
   189  011D                     	;# 
   190  018C                     	;# 
   191  018D                     	;# 
   192  018E                     	;# 
   193  0191                     	;# 
   194  0191                     	;# 
   195  0192                     	;# 
   196  0193                     	;# 
   197  0193                     	;# 
   198  0194                     	;# 
   199  0195                     	;# 
   200  0196                     	;# 
   201  0197                     	;# 
   202  0199                     	;# 
   203  019A                     	;# 
   204  019B                     	;# 
   205  019B                     	;# 
   206  019C                     	;# 
   207  019D                     	;# 
   208  019E                     	;# 
   209  019F                     	;# 
   210  020C                     	;# 
   211  020D                     	;# 
   212  0211                     	;# 
   213  0211                     	;# 
   214  0212                     	;# 
   215  0212                     	;# 
   216  0213                     	;# 
   217  0213                     	;# 
   218  0214                     	;# 
   219  0214                     	;# 
   220  0215                     	;# 
   221  0215                     	;# 
   222  0215                     	;# 
   223  0216                     	;# 
   224  0216                     	;# 
   225  0217                     	;# 
   226  0217                     	;# 
   227  0391                     	;# 
   228  0392                     	;# 
   229  0393                     	;# 
   230  0394                     	;# 
   231  0395                     	;# 
   232  0396                     	;# 
   233  0498                     	;# 
   234  0498                     	;# 
   235  0499                     	;# 
   236  049A                     	;# 
   237  049B                     	;# 
   238  049B                     	;# 
   239  049C                     	;# 
   240  049D                     	;# 
   241  049E                     	;# 
   242  049F                     	;# 
   243  0611                     	;# 
   244  0612                     	;# 
   245  0613                     	;# 
   246  0613                     	;# 
   247  0614                     	;# 
   248  0615                     	;# 
   249  0616                     	;# 
   250  0616                     	;# 
   251  0617                     	;# 
   252  0618                     	;# 
   253  0619                     	;# 
   254  0619                     	;# 
   255  061A                     	;# 
   256  061B                     	;# 
   257  061C                     	;# 
   258  061C                     	;# 
   259  0691                     	;# 
   260  0692                     	;# 
   261  0693                     	;# 
   262  0694                     	;# 
   263  0695                     	;# 
   264  0F0F                     	;# 
   265  0F10                     	;# 
   266  0F11                     	;# 
   267  0F12                     	;# 
   268  0F13                     	;# 
   269  0F14                     	;# 
   270  0F15                     	;# 
   271  0F16                     	;# 
   272  0F17                     	;# 
   273  0F18                     	;# 
   274  0F19                     	;# 
   275  0F1A                     	;# 
   276  0F1B                     	;# 
   277  0F1C                     	;# 
   278  0F1D                     	;# 
   279  0F1E                     	;# 
   280  0F1F                     	;# 
   281  0F20                     	;# 
   282  0F21                     	;# 
   283  0F22                     	;# 
   284  0F23                     	;# 
   285  0F24                     	;# 
   286  0F25                     	;# 
   287  0F26                     	;# 
   288  0F27                     	;# 
   289  0F28                     	;# 
   290  0F29                     	;# 
   291  0F2A                     	;# 
   292  0F2B                     	;# 
   293  0F2C                     	;# 
   294  0F2D                     	;# 
   295  0F2E                     	;# 
   296  0F2F                     	;# 
   297  0F8C                     	;# 
   298  0F8D                     	;# 
   299  0F91                     	;# 
   300  0F95                     	;# 
   301  0F96                     	;# 
   302  0F97                     	;# 
   303  0F9C                     	;# 
   304  0F9D                     	;# 
   305  0F9E                     	;# 
   306  0FE3                     	;# 
   307  0FE4                     	;# 
   308  0FE5                     	;# 
   309  0FE6                     	;# 
   310  0FE7                     	;# 
   311  0FE8                     	;# 
   312  0FE9                     	;# 
   313  0FEA                     	;# 
   314  0FEB                     	;# 
   315  0FED                     	;# 
   316  0FEE                     	;# 
   317  0FEF                     	;# 
   318  0000                     	;# 
   319  0001                     	;# 
   320  0002                     	;# 
   321  0003                     	;# 
   322  0004                     	;# 
   323  0005                     	;# 
   324  0006                     	;# 
   325  0007                     	;# 
   326  0008                     	;# 
   327  0009                     	;# 
   328  000A                     	;# 
   329  000B                     	;# 
   330  000C                     	;# 
   331  000D                     	;# 
   332  000E                     	;# 
   333  0011                     	;# 
   334  0012                     	;# 
   335  0013                     	;# 
   336  0015                     	;# 
   337  0016                     	;# 
   338  0016                     	;# 
   339  0017                     	;# 
   340  0018                     	;# 
   341  0019                     	;# 
   342  001A                     	;# 
   343  001B                     	;# 
   344  001C                     	;# 
   345  008C                     	;# 
   346  008D                     	;# 
   347  008E                     	;# 
   348  0091                     	;# 
   349  0092                     	;# 
   350  0093                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  010C                     	;# 
   363  010D                     	;# 
   364  010E                     	;# 
   365  0111                     	;# 
   366  0112                     	;# 
   367  0113                     	;# 
   368  0114                     	;# 
   369  0115                     	;# 
   370  0116                     	;# 
   371  0117                     	;# 
   372  0118                     	;# 
   373  0119                     	;# 
   374  011D                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  018E                     	;# 
   378  0191                     	;# 
   379  0191                     	;# 
   380  0192                     	;# 
   381  0193                     	;# 
   382  0193                     	;# 
   383  0194                     	;# 
   384  0195                     	;# 
   385  0196                     	;# 
   386  0197                     	;# 
   387  0199                     	;# 
   388  019A                     	;# 
   389  019B                     	;# 
   390  019B                     	;# 
   391  019C                     	;# 
   392  019D                     	;# 
   393  019E                     	;# 
   394  019F                     	;# 
   395  020C                     	;# 
   396  020D                     	;# 
   397  0211                     	;# 
   398  0211                     	;# 
   399  0212                     	;# 
   400  0212                     	;# 
   401  0213                     	;# 
   402  0213                     	;# 
   403  0214                     	;# 
   404  0214                     	;# 
   405  0215                     	;# 
   406  0215                     	;# 
   407  0215                     	;# 
   408  0216                     	;# 
   409  0216                     	;# 
   410  0217                     	;# 
   411  0217                     	;# 
   412  0391                     	;# 
   413  0392                     	;# 
   414  0393                     	;# 
   415  0394                     	;# 
   416  0395                     	;# 
   417  0396                     	;# 
   418  0498                     	;# 
   419  0498                     	;# 
   420  0499                     	;# 
   421  049A                     	;# 
   422  049B                     	;# 
   423  049B                     	;# 
   424  049C                     	;# 
   425  049D                     	;# 
   426  049E                     	;# 
   427  049F                     	;# 
   428  0611                     	;# 
   429  0612                     	;# 
   430  0613                     	;# 
   431  0613                     	;# 
   432  0614                     	;# 
   433  0615                     	;# 
   434  0616                     	;# 
   435  0616                     	;# 
   436  0617                     	;# 
   437  0618                     	;# 
   438  0619                     	;# 
   439  0619                     	;# 
   440  061A                     	;# 
   441  061B                     	;# 
   442  061C                     	;# 
   443  061C                     	;# 
   444  0691                     	;# 
   445  0692                     	;# 
   446  0693                     	;# 
   447  0694                     	;# 
   448  0695                     	;# 
   449  0F0F                     	;# 
   450  0F10                     	;# 
   451  0F11                     	;# 
   452  0F12                     	;# 
   453  0F13                     	;# 
   454  0F14                     	;# 
   455  0F15                     	;# 
   456  0F16                     	;# 
   457  0F17                     	;# 
   458  0F18                     	;# 
   459  0F19                     	;# 
   460  0F1A                     	;# 
   461  0F1B                     	;# 
   462  0F1C                     	;# 
   463  0F1D                     	;# 
   464  0F1E                     	;# 
   465  0F1F                     	;# 
   466  0F20                     	;# 
   467  0F21                     	;# 
   468  0F22                     	;# 
   469  0F23                     	;# 
   470  0F24                     	;# 
   471  0F25                     	;# 
   472  0F26                     	;# 
   473  0F27                     	;# 
   474  0F28                     	;# 
   475  0F29                     	;# 
   476  0F2A                     	;# 
   477  0F2B                     	;# 
   478  0F2C                     	;# 
   479  0F2D                     	;# 
   480  0F2E                     	;# 
   481  0F2F                     	;# 
   482  0F8C                     	;# 
   483  0F8D                     	;# 
   484  0F91                     	;# 
   485  0F95                     	;# 
   486  0F96                     	;# 
   487  0F97                     	;# 
   488  0F9C                     	;# 
   489  0F9D                     	;# 
   490  0F9E                     	;# 
   491  0FE3                     	;# 
   492  0FE4                     	;# 
   493  0FE5                     	;# 
   494  0FE6                     	;# 
   495  0FE7                     	;# 
   496  0FE8                     	;# 
   497  0FE9                     	;# 
   498  0FEA                     	;# 
   499  0FEB                     	;# 
   500  0FED                     	;# 
   501  0FEE                     	;# 
   502  0FEF                     	;# 
   503  0000                     	;# 
   504  0001                     	;# 
   505  0002                     	;# 
   506  0003                     	;# 
   507  0004                     	;# 
   508  0005                     	;# 
   509  0006                     	;# 
   510  0007                     	;# 
   511  0008                     	;# 
   512  0009                     	;# 
   513  000A                     	;# 
   514  000B                     	;# 
   515  000C                     	;# 
   516  000D                     	;# 
   517  000E                     	;# 
   518  0011                     	;# 
   519  0012                     	;# 
   520  0013                     	;# 
   521  0015                     	;# 
   522  0016                     	;# 
   523  0016                     	;# 
   524  0017                     	;# 
   525  0018                     	;# 
   526  0019                     	;# 
   527  001A                     	;# 
   528  001B                     	;# 
   529  001C                     	;# 
   530  008C                     	;# 
   531  008D                     	;# 
   532  008E                     	;# 
   533  0091                     	;# 
   534  0092                     	;# 
   535  0093                     	;# 
   536  0095                     	;# 
   537  0096                     	;# 
   538  0097                     	;# 
   539  0099                     	;# 
   540  009A                     	;# 
   541  009B                     	;# 
   542  009B                     	;# 
   543  009C                     	;# 
   544  009D                     	;# 
   545  009E                     	;# 
   546  009F                     	;# 
   547  010C                     	;# 
   548  010D                     	;# 
   549  010E                     	;# 
   550  0111                     	;# 
   551  0112                     	;# 
   552  0113                     	;# 
   553  0114                     	;# 
   554  0115                     	;# 
   555  0116                     	;# 
   556  0117                     	;# 
   557  0118                     	;# 
   558  0119                     	;# 
   559  011D                     	;# 
   560  018C                     	;# 
   561  018D                     	;# 
   562  018E                     	;# 
   563  0191                     	;# 
   564  0191                     	;# 
   565  0192                     	;# 
   566  0193                     	;# 
   567  0193                     	;# 
   568  0194                     	;# 
   569  0195                     	;# 
   570  0196                     	;# 
   571  0197                     	;# 
   572  0199                     	;# 
   573  019A                     	;# 
   574  019B                     	;# 
   575  019B                     	;# 
   576  019C                     	;# 
   577  019D                     	;# 
   578  019E                     	;# 
   579  019F                     	;# 
   580  020C                     	;# 
   581  020D                     	;# 
   582  0211                     	;# 
   583  0211                     	;# 
   584  0212                     	;# 
   585  0212                     	;# 
   586  0213                     	;# 
   587  0213                     	;# 
   588  0214                     	;# 
   589  0214                     	;# 
   590  0215                     	;# 
   591  0215                     	;# 
   592  0215                     	;# 
   593  0216                     	;# 
   594  0216                     	;# 
   595  0217                     	;# 
   596  0217                     	;# 
   597  0391                     	;# 
   598  0392                     	;# 
   599  0393                     	;# 
   600  0394                     	;# 
   601  0395                     	;# 
   602  0396                     	;# 
   603  0498                     	;# 
   604  0498                     	;# 
   605  0499                     	;# 
   606  049A                     	;# 
   607  049B                     	;# 
   608  049B                     	;# 
   609  049C                     	;# 
   610  049D                     	;# 
   611  049E                     	;# 
   612  049F                     	;# 
   613  0611                     	;# 
   614  0612                     	;# 
   615  0613                     	;# 
   616  0613                     	;# 
   617  0614                     	;# 
   618  0615                     	;# 
   619  0616                     	;# 
   620  0616                     	;# 
   621  0617                     	;# 
   622  0618                     	;# 
   623  0619                     	;# 
   624  0619                     	;# 
   625  061A                     	;# 
   626  061B                     	;# 
   627  061C                     	;# 
   628  061C                     	;# 
   629  0691                     	;# 
   630  0692                     	;# 
   631  0693                     	;# 
   632  0694                     	;# 
   633  0695                     	;# 
   634  0F0F                     	;# 
   635  0F10                     	;# 
   636  0F11                     	;# 
   637  0F12                     	;# 
   638  0F13                     	;# 
   639  0F14                     	;# 
   640  0F15                     	;# 
   641  0F16                     	;# 
   642  0F17                     	;# 
   643  0F18                     	;# 
   644  0F19                     	;# 
   645  0F1A                     	;# 
   646  0F1B                     	;# 
   647  0F1C                     	;# 
   648  0F1D                     	;# 
   649  0F1E                     	;# 
   650  0F1F                     	;# 
   651  0F20                     	;# 
   652  0F21                     	;# 
   653  0F22                     	;# 
   654  0F23                     	;# 
   655  0F24                     	;# 
   656  0F25                     	;# 
   657  0F26                     	;# 
   658  0F27                     	;# 
   659  0F28                     	;# 
   660  0F29                     	;# 
   661  0F2A                     	;# 
   662  0F2B                     	;# 
   663  0F2C                     	;# 
   664  0F2D                     	;# 
   665  0F2E                     	;# 
   666  0F2F                     	;# 
   667  0F8C                     	;# 
   668  0F8D                     	;# 
   669  0F91                     	;# 
   670  0F95                     	;# 
   671  0F96                     	;# 
   672  0F97                     	;# 
   673  0F9C                     	;# 
   674  0F9D                     	;# 
   675  0F9E                     	;# 
   676  0FE3                     	;# 
   677  0FE4                     	;# 
   678  0FE5                     	;# 
   679  0FE6                     	;# 
   680  0FE7                     	;# 
   681  0FE8                     	;# 
   682  0FE9                     	;# 
   683  0FEA                     	;# 
   684  0FEB                     	;# 
   685  0FED                     	;# 
   686  0FEE                     	;# 
   687  0FEF                     	;# 
   688  0000                     	;# 
   689  0001                     	;# 
   690  0002                     	;# 
   691  0003                     	;# 
   692  0004                     	;# 
   693  0005                     	;# 
   694  0006                     	;# 
   695  0007                     	;# 
   696  0008                     	;# 
   697  0009                     	;# 
   698  000A                     	;# 
   699  000B                     	;# 
   700  000C                     	;# 
   701  000D                     	;# 
   702  000E                     	;# 
   703  0011                     	;# 
   704  0012                     	;# 
   705  0013                     	;# 
   706  0015                     	;# 
   707  0016                     	;# 
   708  0016                     	;# 
   709  0017                     	;# 
   710  0018                     	;# 
   711  0019                     	;# 
   712  001A                     	;# 
   713  001B                     	;# 
   714  001C                     	;# 
   715  008C                     	;# 
   716  008D                     	;# 
   717  008E                     	;# 
   718  0091                     	;# 
   719  0092                     	;# 
   720  0093                     	;# 
   721  0095                     	;# 
   722  0096                     	;# 
   723  0097                     	;# 
   724  0099                     	;# 
   725  009A                     	;# 
   726  009B                     	;# 
   727  009B                     	;# 
   728  009C                     	;# 
   729  009D                     	;# 
   730  009E                     	;# 
   731  009F                     	;# 
   732  010C                     	;# 
   733  010D                     	;# 
   734  010E                     	;# 
   735  0111                     	;# 
   736  0112                     	;# 
   737  0113                     	;# 
   738  0114                     	;# 
   739  0115                     	;# 
   740  0116                     	;# 
   741  0117                     	;# 
   742  0118                     	;# 
   743  0119                     	;# 
   744  011D                     	;# 
   745  018C                     	;# 
   746  018D                     	;# 
   747  018E                     	;# 
   748  0191                     	;# 
   749  0191                     	;# 
   750  0192                     	;# 
   751  0193                     	;# 
   752  0193                     	;# 
   753  0194                     	;# 
   754  0195                     	;# 
   755  0196                     	;# 
   756  0197                     	;# 
   757  0199                     	;# 
   758  019A                     	;# 
   759  019B                     	;# 
   760  019B                     	;# 
   761  019C                     	;# 
   762  019D                     	;# 
   763  019E                     	;# 
   764  019F                     	;# 
   765  020C                     	;# 
   766  020D                     	;# 
   767  0211                     	;# 
   768  0211                     	;# 
   769  0212                     	;# 
   770  0212                     	;# 
   771  0213                     	;# 
   772  0213                     	;# 
   773  0214                     	;# 
   774  0214                     	;# 
   775  0215                     	;# 
   776  0215                     	;# 
   777  0215                     	;# 
   778  0216                     	;# 
   779  0216                     	;# 
   780  0217                     	;# 
   781  0217                     	;# 
   782  0391                     	;# 
   783  0392                     	;# 
   784  0393                     	;# 
   785  0394                     	;# 
   786  0395                     	;# 
   787  0396                     	;# 
   788  0498                     	;# 
   789  0498                     	;# 
   790  0499                     	;# 
   791  049A                     	;# 
   792  049B                     	;# 
   793  049B                     	;# 
   794  049C                     	;# 
   795  049D                     	;# 
   796  049E                     	;# 
   797  049F                     	;# 
   798  0611                     	;# 
   799  0612                     	;# 
   800  0613                     	;# 
   801  0613                     	;# 
   802  0614                     	;# 
   803  0615                     	;# 
   804  0616                     	;# 
   805  0616                     	;# 
   806  0617                     	;# 
   807  0618                     	;# 
   808  0619                     	;# 
   809  0619                     	;# 
   810  061A                     	;# 
   811  061B                     	;# 
   812  061C                     	;# 
   813  061C                     	;# 
   814  0691                     	;# 
   815  0692                     	;# 
   816  0693                     	;# 
   817  0694                     	;# 
   818  0695                     	;# 
   819  0F0F                     	;# 
   820  0F10                     	;# 
   821  0F11                     	;# 
   822  0F12                     	;# 
   823  0F13                     	;# 
   824  0F14                     	;# 
   825  0F15                     	;# 
   826  0F16                     	;# 
   827  0F17                     	;# 
   828  0F18                     	;# 
   829  0F19                     	;# 
   830  0F1A                     	;# 
   831  0F1B                     	;# 
   832  0F1C                     	;# 
   833  0F1D                     	;# 
   834  0F1E                     	;# 
   835  0F1F                     	;# 
   836  0F20                     	;# 
   837  0F21                     	;# 
   838  0F22                     	;# 
   839  0F23                     	;# 
   840  0F24                     	;# 
   841  0F25                     	;# 
   842  0F26                     	;# 
   843  0F27                     	;# 
   844  0F28                     	;# 
   845  0F29                     	;# 
   846  0F2A                     	;# 
   847  0F2B                     	;# 
   848  0F2C                     	;# 
   849  0F2D                     	;# 
   850  0F2E                     	;# 
   851  0F2F                     	;# 
   852  0F8C                     	;# 
   853  0F8D                     	;# 
   854  0F91                     	;# 
   855  0F95                     	;# 
   856  0F96                     	;# 
   857  0F97                     	;# 
   858  0F9C                     	;# 
   859  0F9D                     	;# 
   860  0F9E                     	;# 
   861  0FE3                     	;# 
   862  0FE4                     	;# 
   863  0FE5                     	;# 
   864  0FE6                     	;# 
   865  0FE7                     	;# 
   866  0FE8                     	;# 
   867  0FE9                     	;# 
   868  0FEA                     	;# 
   869  0FEB                     	;# 
   870  0FED                     	;# 
   871  0FEE                     	;# 
   872  0FEF                     	;# 
   873  0000                     	;# 
   874  0001                     	;# 
   875  0002                     	;# 
   876  0003                     	;# 
   877  0004                     	;# 
   878  0005                     	;# 
   879  0006                     	;# 
   880  0007                     	;# 
   881  0008                     	;# 
   882  0009                     	;# 
   883  000A                     	;# 
   884  000B                     	;# 
   885  000C                     	;# 
   886  000D                     	;# 
   887  000E                     	;# 
   888  0011                     	;# 
   889  0012                     	;# 
   890  0013                     	;# 
   891  0015                     	;# 
   892  0016                     	;# 
   893  0016                     	;# 
   894  0017                     	;# 
   895  0018                     	;# 
   896  0019                     	;# 
   897  001A                     	;# 
   898  001B                     	;# 
   899  001C                     	;# 
   900  008C                     	;# 
   901  008D                     	;# 
   902  008E                     	;# 
   903  0091                     	;# 
   904  0092                     	;# 
   905  0093                     	;# 
   906  0095                     	;# 
   907  0096                     	;# 
   908  0097                     	;# 
   909  0099                     	;# 
   910  009A                     	;# 
   911  009B                     	;# 
   912  009B                     	;# 
   913  009C                     	;# 
   914  009D                     	;# 
   915  009E                     	;# 
   916  009F                     	;# 
   917  010C                     	;# 
   918  010D                     	;# 
   919  010E                     	;# 
   920  0111                     	;# 
   921  0112                     	;# 
   922  0113                     	;# 
   923  0114                     	;# 
   924  0115                     	;# 
   925  0116                     	;# 
   926  0117                     	;# 
   927  0118                     	;# 
   928  0119                     	;# 
   929  011D                     	;# 
   930  018C                     	;# 
   931  018D                     	;# 
   932  018E                     	;# 
   933  0191                     	;# 
   934  0191                     	;# 
   935  0192                     	;# 
   936  0193                     	;# 
   937  0193                     	;# 
   938  0194                     	;# 
   939  0195                     	;# 
   940  0196                     	;# 
   941  0197                     	;# 
   942  0199                     	;# 
   943  019A                     	;# 
   944  019B                     	;# 
   945  019B                     	;# 
   946  019C                     	;# 
   947  019D                     	;# 
   948  019E                     	;# 
   949  019F                     	;# 
   950  020C                     	;# 
   951  020D                     	;# 
   952  0211                     	;# 
   953  0211                     	;# 
   954  0212                     	;# 
   955  0212                     	;# 
   956  0213                     	;# 
   957  0213                     	;# 
   958  0214                     	;# 
   959  0214                     	;# 
   960  0215                     	;# 
   961  0215                     	;# 
   962  0215                     	;# 
   963  0216                     	;# 
   964  0216                     	;# 
   965  0217                     	;# 
   966  0217                     	;# 
   967  0391                     	;# 
   968  0392                     	;# 
   969  0393                     	;# 
   970  0394                     	;# 
   971  0395                     	;# 
   972  0396                     	;# 
   973  0498                     	;# 
   974  0498                     	;# 
   975  0499                     	;# 
   976  049A                     	;# 
   977  049B                     	;# 
   978  049B                     	;# 
   979  049C                     	;# 
   980  049D                     	;# 
   981  049E                     	;# 
   982  049F                     	;# 
   983  0611                     	;# 
   984  0612                     	;# 
   985  0613                     	;# 
   986  0613                     	;# 
   987  0614                     	;# 
   988  0615                     	;# 
   989  0616                     	;# 
   990  0616                     	;# 
   991  0617                     	;# 
   992  0618                     	;# 
   993  0619                     	;# 
   994  0619                     	;# 
   995  061A                     	;# 
   996  061B                     	;# 
   997  061C                     	;# 
   998  061C                     	;# 
   999  0691                     	;# 
  1000  0692                     	;# 
  1001  0693                     	;# 
  1002  0694                     	;# 
  1003  0695                     	;# 
  1004  0F0F                     	;# 
  1005  0F10                     	;# 
  1006  0F11                     	;# 
  1007  0F12                     	;# 
  1008  0F13                     	;# 
  1009  0F14                     	;# 
  1010  0F15                     	;# 
  1011  0F16                     	;# 
  1012  0F17                     	;# 
  1013  0F18                     	;# 
  1014  0F19                     	;# 
  1015  0F1A                     	;# 
  1016  0F1B                     	;# 
  1017  0F1C                     	;# 
  1018  0F1D                     	;# 
  1019  0F1E                     	;# 
  1020  0F1F                     	;# 
  1021  0F20                     	;# 
  1022  0F21                     	;# 
  1023  0F22                     	;# 
  1024  0F23                     	;# 
  1025  0F24                     	;# 
  1026  0F25                     	;# 
  1027  0F26                     	;# 
  1028  0F27                     	;# 
  1029  0F28                     	;# 
  1030  0F29                     	;# 
  1031  0F2A                     	;# 
  1032  0F2B                     	;# 
  1033  0F2C                     	;# 
  1034  0F2D                     	;# 
  1035  0F2E                     	;# 
  1036  0F2F                     	;# 
  1037  0F8C                     	;# 
  1038  0F8D                     	;# 
  1039  0F91                     	;# 
  1040  0F95                     	;# 
  1041  0F96                     	;# 
  1042  0F97                     	;# 
  1043  0F9C                     	;# 
  1044  0F9D                     	;# 
  1045  0F9E                     	;# 
  1046  0FE3                     	;# 
  1047  0FE4                     	;# 
  1048  0FE5                     	;# 
  1049  0FE6                     	;# 
  1050  0FE7                     	;# 
  1051  0FE8                     	;# 
  1052  0FE9                     	;# 
  1053  0FEA                     	;# 
  1054  0FEB                     	;# 
  1055  0FED                     	;# 
  1056  0FEE                     	;# 
  1057  0FEF                     	;# 
  1058  0000                     	;# 
  1059  0001                     	;# 
  1060  0002                     	;# 
  1061  0003                     	;# 
  1062  0004                     	;# 
  1063  0005                     	;# 
  1064  0006                     	;# 
  1065  0007                     	;# 
  1066  0008                     	;# 
  1067  0009                     	;# 
  1068  000A                     	;# 
  1069  000B                     	;# 
  1070  000C                     	;# 
  1071  000D                     	;# 
  1072  000E                     	;# 
  1073  0011                     	;# 
  1074  0012                     	;# 
  1075  0013                     	;# 
  1076  0015                     	;# 
  1077  0016                     	;# 
  1078  0016                     	;# 
  1079  0017                     	;# 
  1080  0018                     	;# 
  1081  0019                     	;# 
  1082  001A                     	;# 
  1083  001B                     	;# 
  1084  001C                     	;# 
  1085  008C                     	;# 
  1086  008D                     	;# 
  1087  008E                     	;# 
  1088  0091                     	;# 
  1089  0092                     	;# 
  1090  0093                     	;# 
  1091  0095                     	;# 
  1092  0096                     	;# 
  1093  0097                     	;# 
  1094  0099                     	;# 
  1095  009A                     	;# 
  1096  009B                     	;# 
  1097  009B                     	;# 
  1098  009C                     	;# 
  1099  009D                     	;# 
  1100  009E                     	;# 
  1101  009F                     	;# 
  1102  010C                     	;# 
  1103  010D                     	;# 
  1104  010E                     	;# 
  1105  0111                     	;# 
  1106  0112                     	;# 
  1107  0113                     	;# 
  1108  0114                     	;# 
  1109  0115                     	;# 
  1110  0116                     	;# 
  1111  0117                     	;# 
  1112  0118                     	;# 
  1113  0119                     	;# 
  1114  011D                     	;# 
  1115  018C                     	;# 
  1116  018D                     	;# 
  1117  018E                     	;# 
  1118  0191                     	;# 
  1119  0191                     	;# 
  1120  0192                     	;# 
  1121  0193                     	;# 
  1122  0193                     	;# 
  1123  0194                     	;# 
  1124  0195                     	;# 
  1125  0196                     	;# 
  1126  0197                     	;# 
  1127  0199                     	;# 
  1128  019A                     	;# 
  1129  019B                     	;# 
  1130  019B                     	;# 
  1131  019C                     	;# 
  1132  019D                     	;# 
  1133  019E                     	;# 
  1134  019F                     	;# 
  1135  020C                     	;# 
  1136  020D                     	;# 
  1137  0211                     	;# 
  1138  0211                     	;# 
  1139  0212                     	;# 
  1140  0212                     	;# 
  1141  0213                     	;# 
  1142  0213                     	;# 
  1143  0214                     	;# 
  1144  0214                     	;# 
  1145  0215                     	;# 
  1146  0215                     	;# 
  1147  0215                     	;# 
  1148  0216                     	;# 
  1149  0216                     	;# 
  1150  0217                     	;# 
  1151  0217                     	;# 
  1152  0391                     	;# 
  1153  0392                     	;# 
  1154  0393                     	;# 
  1155  0394                     	;# 
  1156  0395                     	;# 
  1157  0396                     	;# 
  1158  0498                     	;# 
  1159  0498                     	;# 
  1160  0499                     	;# 
  1161  049A                     	;# 
  1162  049B                     	;# 
  1163  049B                     	;# 
  1164  049C                     	;# 
  1165  049D                     	;# 
  1166  049E                     	;# 
  1167  049F                     	;# 
  1168  0611                     	;# 
  1169  0612                     	;# 
  1170  0613                     	;# 
  1171  0613                     	;# 
  1172  0614                     	;# 
  1173  0615                     	;# 
  1174  0616                     	;# 
  1175  0616                     	;# 
  1176  0617                     	;# 
  1177  0618                     	;# 
  1178  0619                     	;# 
  1179  0619                     	;# 
  1180  061A                     	;# 
  1181  061B                     	;# 
  1182  061C                     	;# 
  1183  061C                     	;# 
  1184  0691                     	;# 
  1185  0692                     	;# 
  1186  0693                     	;# 
  1187  0694                     	;# 
  1188  0695                     	;# 
  1189  0F0F                     	;# 
  1190  0F10                     	;# 
  1191  0F11                     	;# 
  1192  0F12                     	;# 
  1193  0F13                     	;# 
  1194  0F14                     	;# 
  1195  0F15                     	;# 
  1196  0F16                     	;# 
  1197  0F17                     	;# 
  1198  0F18                     	;# 
  1199  0F19                     	;# 
  1200  0F1A                     	;# 
  1201  0F1B                     	;# 
  1202  0F1C                     	;# 
  1203  0F1D                     	;# 
  1204  0F1E                     	;# 
  1205  0F1F                     	;# 
  1206  0F20                     	;# 
  1207  0F21                     	;# 
  1208  0F22                     	;# 
  1209  0F23                     	;# 
  1210  0F24                     	;# 
  1211  0F25                     	;# 
  1212  0F26                     	;# 
  1213  0F27                     	;# 
  1214  0F28                     	;# 
  1215  0F29                     	;# 
  1216  0F2A                     	;# 
  1217  0F2B                     	;# 
  1218  0F2C                     	;# 
  1219  0F2D                     	;# 
  1220  0F2E                     	;# 
  1221  0F2F                     	;# 
  1222  0F8C                     	;# 
  1223  0F8D                     	;# 
  1224  0F91                     	;# 
  1225  0F95                     	;# 
  1226  0F96                     	;# 
  1227  0F97                     	;# 
  1228  0F9C                     	;# 
  1229  0F9D                     	;# 
  1230  0F9E                     	;# 
  1231  0FE3                     	;# 
  1232  0FE4                     	;# 
  1233  0FE5                     	;# 
  1234  0FE6                     	;# 
  1235  0FE7                     	;# 
  1236  0FE8                     	;# 
  1237  0FE9                     	;# 
  1238  0FEA                     	;# 
  1239  0FEB                     	;# 
  1240  0FED                     	;# 
  1241  0FEE                     	;# 
  1242  0FEF                     	;# 
  1243  0000                     	;# 
  1244  0001                     	;# 
  1245  0002                     	;# 
  1246  0003                     	;# 
  1247  0004                     	;# 
  1248  0005                     	;# 
  1249  0006                     	;# 
  1250  0007                     	;# 
  1251  0008                     	;# 
  1252  0009                     	;# 
  1253  000A                     	;# 
  1254  000B                     	;# 
  1255  000C                     	;# 
  1256  000D                     	;# 
  1257  000E                     	;# 
  1258  0011                     	;# 
  1259  0012                     	;# 
  1260  0013                     	;# 
  1261  0015                     	;# 
  1262  0016                     	;# 
  1263  0016                     	;# 
  1264  0017                     	;# 
  1265  0018                     	;# 
  1266  0019                     	;# 
  1267  001A                     	;# 
  1268  001B                     	;# 
  1269  001C                     	;# 
  1270  008C                     	;# 
  1271  008D                     	;# 
  1272  008E                     	;# 
  1273  0091                     	;# 
  1274  0092                     	;# 
  1275  0093                     	;# 
  1276  0095                     	;# 
  1277  0096                     	;# 
  1278  0097                     	;# 
  1279  0099                     	;# 
  1280  009A                     	;# 
  1281  009B                     	;# 
  1282  009B                     	;# 
  1283  009C                     	;# 
  1284  009D                     	;# 
  1285  009E                     	;# 
  1286  009F                     	;# 
  1287  010C                     	;# 
  1288  010D                     	;# 
  1289  010E                     	;# 
  1290  0111                     	;# 
  1291  0112                     	;# 
  1292  0113                     	;# 
  1293  0114                     	;# 
  1294  0115                     	;# 
  1295  0116                     	;# 
  1296  0117                     	;# 
  1297  0118                     	;# 
  1298  0119                     	;# 
  1299  011D                     	;# 
  1300  018C                     	;# 
  1301  018D                     	;# 
  1302  018E                     	;# 
  1303  0191                     	;# 
  1304  0191                     	;# 
  1305  0192                     	;# 
  1306  0193                     	;# 
  1307  0193                     	;# 
  1308  0194                     	;# 
  1309  0195                     	;# 
  1310  0196                     	;# 
  1311  0197                     	;# 
  1312  0199                     	;# 
  1313  019A                     	;# 
  1314  019B                     	;# 
  1315  019B                     	;# 
  1316  019C                     	;# 
  1317  019D                     	;# 
  1318  019E                     	;# 
  1319  019F                     	;# 
  1320  020C                     	;# 
  1321  020D                     	;# 
  1322  0211                     	;# 
  1323  0211                     	;# 
  1324  0212                     	;# 
  1325  0212                     	;# 
  1326  0213                     	;# 
  1327  0213                     	;# 
  1328  0214                     	;# 
  1329  0214                     	;# 
  1330  0215                     	;# 
  1331  0215                     	;# 
  1332  0215                     	;# 
  1333  0216                     	;# 
  1334  0216                     	;# 
  1335  0217                     	;# 
  1336  0217                     	;# 
  1337  0391                     	;# 
  1338  0392                     	;# 
  1339  0393                     	;# 
  1340  0394                     	;# 
  1341  0395                     	;# 
  1342  0396                     	;# 
  1343  0498                     	;# 
  1344  0498                     	;# 
  1345  0499                     	;# 
  1346  049A                     	;# 
  1347  049B                     	;# 
  1348  049B                     	;# 
  1349  049C                     	;# 
  1350  049D                     	;# 
  1351  049E                     	;# 
  1352  049F                     	;# 
  1353  0611                     	;# 
  1354  0612                     	;# 
  1355  0613                     	;# 
  1356  0613                     	;# 
  1357  0614                     	;# 
  1358  0615                     	;# 
  1359  0616                     	;# 
  1360  0616                     	;# 
  1361  0617                     	;# 
  1362  0618                     	;# 
  1363  0619                     	;# 
  1364  0619                     	;# 
  1365  061A                     	;# 
  1366  061B                     	;# 
  1367  061C                     	;# 
  1368  061C                     	;# 
  1369  0691                     	;# 
  1370  0692                     	;# 
  1371  0693                     	;# 
  1372  0694                     	;# 
  1373  0695                     	;# 
  1374  0F0F                     	;# 
  1375  0F10                     	;# 
  1376  0F11                     	;# 
  1377  0F12                     	;# 
  1378  0F13                     	;# 
  1379  0F14                     	;# 
  1380  0F15                     	;# 
  1381  0F16                     	;# 
  1382  0F17                     	;# 
  1383  0F18                     	;# 
  1384  0F19                     	;# 
  1385  0F1A                     	;# 
  1386  0F1B                     	;# 
  1387  0F1C                     	;# 
  1388  0F1D                     	;# 
  1389  0F1E                     	;# 
  1390  0F1F                     	;# 
  1391  0F20                     	;# 
  1392  0F21                     	;# 
  1393  0F22                     	;# 
  1394  0F23                     	;# 
  1395  0F24                     	;# 
  1396  0F25                     	;# 
  1397  0F26                     	;# 
  1398  0F27                     	;# 
  1399  0F28                     	;# 
  1400  0F29                     	;# 
  1401  0F2A                     	;# 
  1402  0F2B                     	;# 
  1403  0F2C                     	;# 
  1404  0F2D                     	;# 
  1405  0F2E                     	;# 
  1406  0F2F                     	;# 
  1407  0F8C                     	;# 
  1408  0F8D                     	;# 
  1409  0F91                     	;# 
  1410  0F95                     	;# 
  1411  0F96                     	;# 
  1412  0F97                     	;# 
  1413  0F9C                     	;# 
  1414  0F9D                     	;# 
  1415  0F9E                     	;# 
  1416  0FE3                     	;# 
  1417  0FE4                     	;# 
  1418  0FE5                     	;# 
  1419  0FE6                     	;# 
  1420  0FE7                     	;# 
  1421  0FE8                     	;# 
  1422  0FE9                     	;# 
  1423  0FEA                     	;# 
  1424  0FEB                     	;# 
  1425  0FED                     	;# 
  1426  0FEE                     	;# 
  1427  0FEF                     	;# 
  1428  0000                     	;# 
  1429  0001                     	;# 
  1430  0002                     	;# 
  1431  0003                     	;# 
  1432  0004                     	;# 
  1433  0005                     	;# 
  1434  0006                     	;# 
  1435  0007                     	;# 
  1436  0008                     	;# 
  1437  0009                     	;# 
  1438  000A                     	;# 
  1439  000B                     	;# 
  1440  000C                     	;# 
  1441  000D                     	;# 
  1442  000E                     	;# 
  1443  0011                     	;# 
  1444  0012                     	;# 
  1445  0013                     	;# 
  1446  0015                     	;# 
  1447  0016                     	;# 
  1448  0016                     	;# 
  1449  0017                     	;# 
  1450  0018                     	;# 
  1451  0019                     	;# 
  1452  001A                     	;# 
  1453  001B                     	;# 
  1454  001C                     	;# 
  1455  008C                     	;# 
  1456  008D                     	;# 
  1457  008E                     	;# 
  1458  0091                     	;# 
  1459  0092                     	;# 
  1460  0093                     	;# 
  1461  0095                     	;# 
  1462  0096                     	;# 
  1463  0097                     	;# 
  1464  0099                     	;# 
  1465  009A                     	;# 
  1466  009B                     	;# 
  1467  009B                     	;# 
  1468  009C                     	;# 
  1469  009D                     	;# 
  1470  009E                     	;# 
  1471  009F                     	;# 
  1472  010C                     	;# 
  1473  010D                     	;# 
  1474  010E                     	;# 
  1475  0111                     	;# 
  1476  0112                     	;# 
  1477  0113                     	;# 
  1478  0114                     	;# 
  1479  0115                     	;# 
  1480  0116                     	;# 
  1481  0117                     	;# 
  1482  0118                     	;# 
  1483  0119                     	;# 
  1484  011D                     	;# 
  1485  018C                     	;# 
  1486  018D                     	;# 
  1487  018E                     	;# 
  1488  0191                     	;# 
  1489  0191                     	;# 
  1490  0192                     	;# 
  1491  0193                     	;# 
  1492  0193                     	;# 
  1493  0194                     	;# 
  1494  0195                     	;# 
  1495  0196                     	;# 
  1496  0197                     	;# 
  1497  0199                     	;# 
  1498  019A                     	;# 
  1499  019B                     	;# 
  1500  019B                     	;# 
  1501  019C                     	;# 
  1502  019D                     	;# 
  1503  019E                     	;# 
  1504  019F                     	;# 
  1505  020C                     	;# 
  1506  020D                     	;# 
  1507  0211                     	;# 
  1508  0211                     	;# 
  1509  0212                     	;# 
  1510  0212                     	;# 
  1511  0213                     	;# 
  1512  0213                     	;# 
  1513  0214                     	;# 
  1514  0214                     	;# 
  1515  0215                     	;# 
  1516  0215                     	;# 
  1517  0215                     	;# 
  1518  0216                     	;# 
  1519  0216                     	;# 
  1520  0217                     	;# 
  1521  0217                     	;# 
  1522  0391                     	;# 
  1523  0392                     	;# 
  1524  0393                     	;# 
  1525  0394                     	;# 
  1526  0395                     	;# 
  1527  0396                     	;# 
  1528  0498                     	;# 
  1529  0498                     	;# 
  1530  0499                     	;# 
  1531  049A                     	;# 
  1532  049B                     	;# 
  1533  049B                     	;# 
  1534  049C                     	;# 
  1535  049D                     	;# 
  1536  049E                     	;# 
  1537  049F                     	;# 
  1538  0611                     	;# 
  1539  0612                     	;# 
  1540  0613                     	;# 
  1541  0613                     	;# 
  1542  0614                     	;# 
  1543  0615                     	;# 
  1544  0616                     	;# 
  1545  0616                     	;# 
  1546  0617                     	;# 
  1547  0618                     	;# 
  1548  0619                     	;# 
  1549  0619                     	;# 
  1550  061A                     	;# 
  1551  061B                     	;# 
  1552  061C                     	;# 
  1553  061C                     	;# 
  1554  0691                     	;# 
  1555  0692                     	;# 
  1556  0693                     	;# 
  1557  0694                     	;# 
  1558  0695                     	;# 
  1559  0F0F                     	;# 
  1560  0F10                     	;# 
  1561  0F11                     	;# 
  1562  0F12                     	;# 
  1563  0F13                     	;# 
  1564  0F14                     	;# 
  1565  0F15                     	;# 
  1566  0F16                     	;# 
  1567  0F17                     	;# 
  1568  0F18                     	;# 
  1569  0F19                     	;# 
  1570  0F1A                     	;# 
  1571  0F1B                     	;# 
  1572  0F1C                     	;# 
  1573  0F1D                     	;# 
  1574  0F1E                     	;# 
  1575  0F1F                     	;# 
  1576  0F20                     	;# 
  1577  0F21                     	;# 
  1578  0F22                     	;# 
  1579  0F23                     	;# 
  1580  0F24                     	;# 
  1581  0F25                     	;# 
  1582  0F26                     	;# 
  1583  0F27                     	;# 
  1584  0F28                     	;# 
  1585  0F29                     	;# 
  1586  0F2A                     	;# 
  1587  0F2B                     	;# 
  1588  0F2C                     	;# 
  1589  0F2D                     	;# 
  1590  0F2E                     	;# 
  1591  0F2F                     	;# 
  1592  0F8C                     	;# 
  1593  0F8D                     	;# 
  1594  0F91                     	;# 
  1595  0F95                     	;# 
  1596  0F96                     	;# 
  1597  0F97                     	;# 
  1598  0F9C                     	;# 
  1599  0F9D                     	;# 
  1600  0F9E                     	;# 
  1601  0FE3                     	;# 
  1602  0FE4                     	;# 
  1603  0FE5                     	;# 
  1604  0FE6                     	;# 
  1605  0FE7                     	;# 
  1606  0FE8                     	;# 
  1607  0FE9                     	;# 
  1608  0FEA                     	;# 
  1609  0FEB                     	;# 
  1610  0FED                     	;# 
  1611  0FEE                     	;# 
  1612  0FEF                     	;# 
  1613  0000                     	;# 
  1614  0001                     	;# 
  1615  0002                     	;# 
  1616  0003                     	;# 
  1617  0004                     	;# 
  1618  0005                     	;# 
  1619  0006                     	;# 
  1620  0007                     	;# 
  1621  0008                     	;# 
  1622  0009                     	;# 
  1623  000A                     	;# 
  1624  000B                     	;# 
  1625  000C                     	;# 
  1626  000D                     	;# 
  1627  000E                     	;# 
  1628  0011                     	;# 
  1629  0012                     	;# 
  1630  0013                     	;# 
  1631  0015                     	;# 
  1632  0016                     	;# 
  1633  0016                     	;# 
  1634  0017                     	;# 
  1635  0018                     	;# 
  1636  0019                     	;# 
  1637  001A                     	;# 
  1638  001B                     	;# 
  1639  001C                     	;# 
  1640  008C                     	;# 
  1641  008D                     	;# 
  1642  008E                     	;# 
  1643  0091                     	;# 
  1644  0092                     	;# 
  1645  0093                     	;# 
  1646  0095                     	;# 
  1647  0096                     	;# 
  1648  0097                     	;# 
  1649  0099                     	;# 
  1650  009A                     	;# 
  1651  009B                     	;# 
  1652  009B                     	;# 
  1653  009C                     	;# 
  1654  009D                     	;# 
  1655  009E                     	;# 
  1656  009F                     	;# 
  1657  010C                     	;# 
  1658  010D                     	;# 
  1659  010E                     	;# 
  1660  0111                     	;# 
  1661  0112                     	;# 
  1662  0113                     	;# 
  1663  0114                     	;# 
  1664  0115                     	;# 
  1665  0116                     	;# 
  1666  0117                     	;# 
  1667  0118                     	;# 
  1668  0119                     	;# 
  1669  011D                     	;# 
  1670  018C                     	;# 
  1671  018D                     	;# 
  1672  018E                     	;# 
  1673  0191                     	;# 
  1674  0191                     	;# 
  1675  0192                     	;# 
  1676  0193                     	;# 
  1677  0193                     	;# 
  1678  0194                     	;# 
  1679  0195                     	;# 
  1680  0196                     	;# 
  1681  0197                     	;# 
  1682  0199                     	;# 
  1683  019A                     	;# 
  1684  019B                     	;# 
  1685  019B                     	;# 
  1686  019C                     	;# 
  1687  019D                     	;# 
  1688  019E                     	;# 
  1689  019F                     	;# 
  1690  020C                     	;# 
  1691  020D                     	;# 
  1692  0211                     	;# 
  1693  0211                     	;# 
  1694  0212                     	;# 
  1695  0212                     	;# 
  1696  0213                     	;# 
  1697  0213                     	;# 
  1698  0214                     	;# 
  1699  0214                     	;# 
  1700  0215                     	;# 
  1701  0215                     	;# 
  1702  0215                     	;# 
  1703  0216                     	;# 
  1704  0216                     	;# 
  1705  0217                     	;# 
  1706  0217                     	;# 
  1707  0391                     	;# 
  1708  0392                     	;# 
  1709  0393                     	;# 
  1710  0394                     	;# 
  1711  0395                     	;# 
  1712  0396                     	;# 
  1713  0498                     	;# 
  1714  0498                     	;# 
  1715  0499                     	;# 
  1716  049A                     	;# 
  1717  049B                     	;# 
  1718  049B                     	;# 
  1719  049C                     	;# 
  1720  049D                     	;# 
  1721  049E                     	;# 
  1722  049F                     	;# 
  1723  0611                     	;# 
  1724  0612                     	;# 
  1725  0613                     	;# 
  1726  0613                     	;# 
  1727  0614                     	;# 
  1728  0615                     	;# 
  1729  0616                     	;# 
  1730  0616                     	;# 
  1731  0617                     	;# 
  1732  0618                     	;# 
  1733  0619                     	;# 
  1734  0619                     	;# 
  1735  061A                     	;# 
  1736  061B                     	;# 
  1737  061C                     	;# 
  1738  061C                     	;# 
  1739  0691                     	;# 
  1740  0692                     	;# 
  1741  0693                     	;# 
  1742  0694                     	;# 
  1743  0695                     	;# 
  1744  0F0F                     	;# 
  1745  0F10                     	;# 
  1746  0F11                     	;# 
  1747  0F12                     	;# 
  1748  0F13                     	;# 
  1749  0F14                     	;# 
  1750  0F15                     	;# 
  1751  0F16                     	;# 
  1752  0F17                     	;# 
  1753  0F18                     	;# 
  1754  0F19                     	;# 
  1755  0F1A                     	;# 
  1756  0F1B                     	;# 
  1757  0F1C                     	;# 
  1758  0F1D                     	;# 
  1759  0F1E                     	;# 
  1760  0F1F                     	;# 
  1761  0F20                     	;# 
  1762  0F21                     	;# 
  1763  0F22                     	;# 
  1764  0F23                     	;# 
  1765  0F24                     	;# 
  1766  0F25                     	;# 
  1767  0F26                     	;# 
  1768  0F27                     	;# 
  1769  0F28                     	;# 
  1770  0F29                     	;# 
  1771  0F2A                     	;# 
  1772  0F2B                     	;# 
  1773  0F2C                     	;# 
  1774  0F2D                     	;# 
  1775  0F2E                     	;# 
  1776  0F2F                     	;# 
  1777  0F8C                     	;# 
  1778  0F8D                     	;# 
  1779  0F91                     	;# 
  1780  0F95                     	;# 
  1781  0F96                     	;# 
  1782  0F97                     	;# 
  1783  0F9C                     	;# 
  1784  0F9D                     	;# 
  1785  0F9E                     	;# 
  1786  0FE3                     	;# 
  1787  0FE4                     	;# 
  1788  0FE5                     	;# 
  1789  0FE6                     	;# 
  1790  0FE7                     	;# 
  1791  0FE8                     	;# 
  1792  0FE9                     	;# 
  1793  0FEA                     	;# 
  1794  0FEB                     	;# 
  1795  0FED                     	;# 
  1796  0FEE                     	;# 
  1797  0FEF                     	;# 
  1798  0000                     	;# 
  1799  0001                     	;# 
  1800  0002                     	;# 
  1801  0003                     	;# 
  1802  0004                     	;# 
  1803  0005                     	;# 
  1804  0006                     	;# 
  1805  0007                     	;# 
  1806  0008                     	;# 
  1807  0009                     	;# 
  1808  000A                     	;# 
  1809  000B                     	;# 
  1810  000C                     	;# 
  1811  000D                     	;# 
  1812  000E                     	;# 
  1813  0011                     	;# 
  1814  0012                     	;# 
  1815  0013                     	;# 
  1816  0015                     	;# 
  1817  0016                     	;# 
  1818  0016                     	;# 
  1819  0017                     	;# 
  1820  0018                     	;# 
  1821  0019                     	;# 
  1822  001A                     	;# 
  1823  001B                     	;# 
  1824  001C                     	;# 
  1825  008C                     	;# 
  1826  008D                     	;# 
  1827  008E                     	;# 
  1828  0091                     	;# 
  1829  0092                     	;# 
  1830  0093                     	;# 
  1831  0095                     	;# 
  1832  0096                     	;# 
  1833  0097                     	;# 
  1834  0099                     	;# 
  1835  009A                     	;# 
  1836  009B                     	;# 
  1837  009B                     	;# 
  1838  009C                     	;# 
  1839  009D                     	;# 
  1840  009E                     	;# 
  1841  009F                     	;# 
  1842  010C                     	;# 
  1843  010D                     	;# 
  1844  010E                     	;# 
  1845  0111                     	;# 
  1846  0112                     	;# 
  1847  0113                     	;# 
  1848  0114                     	;# 
  1849  0115                     	;# 
  1850  0116                     	;# 
  1851  0117                     	;# 
  1852  0118                     	;# 
  1853  0119                     	;# 
  1854  011D                     	;# 
  1855  018C                     	;# 
  1856  018D                     	;# 
  1857  018E                     	;# 
  1858  0191                     	;# 
  1859  0191                     	;# 
  1860  0192                     	;# 
  1861  0193                     	;# 
  1862  0193                     	;# 
  1863  0194                     	;# 
  1864  0195                     	;# 
  1865  0196                     	;# 
  1866  0197                     	;# 
  1867  0199                     	;# 
  1868  019A                     	;# 
  1869  019B                     	;# 
  1870  019B                     	;# 
  1871  019C                     	;# 
  1872  019D                     	;# 
  1873  019E                     	;# 
  1874  019F                     	;# 
  1875  020C                     	;# 
  1876  020D                     	;# 
  1877  0211                     	;# 
  1878  0211                     	;# 
  1879  0212                     	;# 
  1880  0212                     	;# 
  1881  0213                     	;# 
  1882  0213                     	;# 
  1883  0214                     	;# 
  1884  0214                     	;# 
  1885  0215                     	;# 
  1886  0215                     	;# 
  1887  0215                     	;# 
  1888  0216                     	;# 
  1889  0216                     	;# 
  1890  0217                     	;# 
  1891  0217                     	;# 
  1892  0391                     	;# 
  1893  0392                     	;# 
  1894  0393                     	;# 
  1895  0394                     	;# 
  1896  0395                     	;# 
  1897  0396                     	;# 
  1898  0498                     	;# 
  1899  0498                     	;# 
  1900  0499                     	;# 
  1901  049A                     	;# 
  1902  049B                     	;# 
  1903  049B                     	;# 
  1904  049C                     	;# 
  1905  049D                     	;# 
  1906  049E                     	;# 
  1907  049F                     	;# 
  1908  0611                     	;# 
  1909  0612                     	;# 
  1910  0613                     	;# 
  1911  0613                     	;# 
  1912  0614                     	;# 
  1913  0615                     	;# 
  1914  0616                     	;# 
  1915  0616                     	;# 
  1916  0617                     	;# 
  1917  0618                     	;# 
  1918  0619                     	;# 
  1919  0619                     	;# 
  1920  061A                     	;# 
  1921  061B                     	;# 
  1922  061C                     	;# 
  1923  061C                     	;# 
  1924  0691                     	;# 
  1925  0692                     	;# 
  1926  0693                     	;# 
  1927  0694                     	;# 
  1928  0695                     	;# 
  1929  0F0F                     	;# 
  1930  0F10                     	;# 
  1931  0F11                     	;# 
  1932  0F12                     	;# 
  1933  0F13                     	;# 
  1934  0F14                     	;# 
  1935  0F15                     	;# 
  1936  0F16                     	;# 
  1937  0F17                     	;# 
  1938  0F18                     	;# 
  1939  0F19                     	;# 
  1940  0F1A                     	;# 
  1941  0F1B                     	;# 
  1942  0F1C                     	;# 
  1943  0F1D                     	;# 
  1944  0F1E                     	;# 
  1945  0F1F                     	;# 
  1946  0F20                     	;# 
  1947  0F21                     	;# 
  1948  0F22                     	;# 
  1949  0F23                     	;# 
  1950  0F24                     	;# 
  1951  0F25                     	;# 
  1952  0F26                     	;# 
  1953  0F27                     	;# 
  1954  0F28                     	;# 
  1955  0F29                     	;# 
  1956  0F2A                     	;# 
  1957  0F2B                     	;# 
  1958  0F2C                     	;# 
  1959  0F2D                     	;# 
  1960  0F2E                     	;# 
  1961  0F2F                     	;# 
  1962  0F8C                     	;# 
  1963  0F8D                     	;# 
  1964  0F91                     	;# 
  1965  0F95                     	;# 
  1966  0F96                     	;# 
  1967  0F97                     	;# 
  1968  0F9C                     	;# 
  1969  0F9D                     	;# 
  1970  0F9E                     	;# 
  1971  0FE3                     	;# 
  1972  0FE4                     	;# 
  1973  0FE5                     	;# 
  1974  0FE6                     	;# 
  1975  0FE7                     	;# 
  1976  0FE8                     	;# 
  1977  0FE9                     	;# 
  1978  0FEA                     	;# 
  1979  0FEB                     	;# 
  1980  0FED                     	;# 
  1981  0FEE                     	;# 
  1982  0FEF                     	;# 
  1983  0000                     	;# 
  1984  0001                     	;# 
  1985  0002                     	;# 
  1986  0003                     	;# 
  1987  0004                     	;# 
  1988  0005                     	;# 
  1989  0006                     	;# 
  1990  0007                     	;# 
  1991  0008                     	;# 
  1992  0009                     	;# 
  1993  000A                     	;# 
  1994  000B                     	;# 
  1995  000C                     	;# 
  1996  000D                     	;# 
  1997  000E                     	;# 
  1998  0011                     	;# 
  1999  0012                     	;# 
  2000  0013                     	;# 
  2001  0015                     	;# 
  2002  0016                     	;# 
  2003  0016                     	;# 
  2004  0017                     	;# 
  2005  0018                     	;# 
  2006  0019                     	;# 
  2007  001A                     	;# 
  2008  001B                     	;# 
  2009  001C                     	;# 
  2010  008C                     	;# 
  2011  008D                     	;# 
  2012  008E                     	;# 
  2013  0091                     	;# 
  2014  0092                     	;# 
  2015  0093                     	;# 
  2016  0095                     	;# 
  2017  0096                     	;# 
  2018  0097                     	;# 
  2019  0099                     	;# 
  2020  009A                     	;# 
  2021  009B                     	;# 
  2022  009B                     	;# 
  2023  009C                     	;# 
  2024  009D                     	;# 
  2025  009E                     	;# 
  2026  009F                     	;# 
  2027  010C                     	;# 
  2028  010D                     	;# 
  2029  010E                     	;# 
  2030  0111                     	;# 
  2031  0112                     	;# 
  2032  0113                     	;# 
  2033  0114                     	;# 
  2034  0115                     	;# 
  2035  0116                     	;# 
  2036  0117                     	;# 
  2037  0118                     	;# 
  2038  0119                     	;# 
  2039  011D                     	;# 
  2040  018C                     	;# 
  2041  018D                     	;# 
  2042  018E                     	;# 
  2043  0191                     	;# 
  2044  0191                     	;# 
  2045  0192                     	;# 
  2046  0193                     	;# 
  2047  0193                     	;# 
  2048  0194                     	;# 
  2049  0195                     	;# 
  2050  0196                     	;# 
  2051  0197                     	;# 
  2052  0199                     	;# 
  2053  019A                     	;# 
  2054  019B                     	;# 
  2055  019B                     	;# 
  2056  019C                     	;# 
  2057  019D                     	;# 
  2058  019E                     	;# 
  2059  019F                     	;# 
  2060  020C                     	;# 
  2061  020D                     	;# 
  2062  0211                     	;# 
  2063  0211                     	;# 
  2064  0212                     	;# 
  2065  0212                     	;# 
  2066  0213                     	;# 
  2067  0213                     	;# 
  2068  0214                     	;# 
  2069  0214                     	;# 
  2070  0215                     	;# 
  2071  0215                     	;# 
  2072  0215                     	;# 
  2073  0216                     	;# 
  2074  0216                     	;# 
  2075  0217                     	;# 
  2076  0217                     	;# 
  2077  0391                     	;# 
  2078  0392                     	;# 
  2079  0393                     	;# 
  2080  0394                     	;# 
  2081  0395                     	;# 
  2082  0396                     	;# 
  2083  0498                     	;# 
  2084  0498                     	;# 
  2085  0499                     	;# 
  2086  049A                     	;# 
  2087  049B                     	;# 
  2088  049B                     	;# 
  2089  049C                     	;# 
  2090  049D                     	;# 
  2091  049E                     	;# 
  2092  049F                     	;# 
  2093  0611                     	;# 
  2094  0612                     	;# 
  2095  0613                     	;# 
  2096  0613                     	;# 
  2097  0614                     	;# 
  2098  0615                     	;# 
  2099  0616                     	;# 
  2100  0616                     	;# 
  2101  0617                     	;# 
  2102  0618                     	;# 
  2103  0619                     	;# 
  2104  0619                     	;# 
  2105  061A                     	;# 
  2106  061B                     	;# 
  2107  061C                     	;# 
  2108  061C                     	;# 
  2109  0691                     	;# 
  2110  0692                     	;# 
  2111  0693                     	;# 
  2112  0694                     	;# 
  2113  0695                     	;# 
  2114  0F0F                     	;# 
  2115  0F10                     	;# 
  2116  0F11                     	;# 
  2117  0F12                     	;# 
  2118  0F13                     	;# 
  2119  0F14                     	;# 
  2120  0F15                     	;# 
  2121  0F16                     	;# 
  2122  0F17                     	;# 
  2123  0F18                     	;# 
  2124  0F19                     	;# 
  2125  0F1A                     	;# 
  2126  0F1B                     	;# 
  2127  0F1C                     	;# 
  2128  0F1D                     	;# 
  2129  0F1E                     	;# 
  2130  0F1F                     	;# 
  2131  0F20                     	;# 
  2132  0F21                     	;# 
  2133  0F22                     	;# 
  2134  0F23                     	;# 
  2135  0F24                     	;# 
  2136  0F25                     	;# 
  2137  0F26                     	;# 
  2138  0F27                     	;# 
  2139  0F28                     	;# 
  2140  0F29                     	;# 
  2141  0F2A                     	;# 
  2142  0F2B                     	;# 
  2143  0F2C                     	;# 
  2144  0F2D                     	;# 
  2145  0F2E                     	;# 
  2146  0F2F                     	;# 
  2147  0F8C                     	;# 
  2148  0F8D                     	;# 
  2149  0F91                     	;# 
  2150  0F95                     	;# 
  2151  0F96                     	;# 
  2152  0F97                     	;# 
  2153  0F9C                     	;# 
  2154  0F9D                     	;# 
  2155  0F9E                     	;# 
  2156  0FE3                     	;# 
  2157  0FE4                     	;# 
  2158  0FE5                     	;# 
  2159  0FE6                     	;# 
  2160  0FE7                     	;# 
  2161  0FE8                     	;# 
  2162  0FE9                     	;# 
  2163  0FEA                     	;# 
  2164  0FEB                     	;# 
  2165  0FED                     	;# 
  2166  0FEE                     	;# 
  2167  0FEF                     	;# 
  2168  0000                     	;# 
  2169  0001                     	;# 
  2170  0002                     	;# 
  2171  0003                     	;# 
  2172  0004                     	;# 
  2173  0005                     	;# 
  2174  0006                     	;# 
  2175  0007                     	;# 
  2176  0008                     	;# 
  2177  0009                     	;# 
  2178  000A                     	;# 
  2179  000B                     	;# 
  2180  000C                     	;# 
  2181  000D                     	;# 
  2182  000E                     	;# 
  2183  0011                     	;# 
  2184  0012                     	;# 
  2185  0013                     	;# 
  2186  0015                     	;# 
  2187  0016                     	;# 
  2188  0016                     	;# 
  2189  0017                     	;# 
  2190  0018                     	;# 
  2191  0019                     	;# 
  2192  001A                     	;# 
  2193  001B                     	;# 
  2194  001C                     	;# 
  2195  008C                     	;# 
  2196  008D                     	;# 
  2197  008E                     	;# 
  2198  0091                     	;# 
  2199  0092                     	;# 
  2200  0093                     	;# 
  2201  0095                     	;# 
  2202  0096                     	;# 
  2203  0097                     	;# 
  2204  0099                     	;# 
  2205  009A                     	;# 
  2206  009B                     	;# 
  2207  009B                     	;# 
  2208  009C                     	;# 
  2209  009D                     	;# 
  2210  009E                     	;# 
  2211  009F                     	;# 
  2212  010C                     	;# 
  2213  010D                     	;# 
  2214  010E                     	;# 
  2215  0111                     	;# 
  2216  0112                     	;# 
  2217  0113                     	;# 
  2218  0114                     	;# 
  2219  0115                     	;# 
  2220  0116                     	;# 
  2221  0117                     	;# 
  2222  0118                     	;# 
  2223  0119                     	;# 
  2224  011D                     	;# 
  2225  018C                     	;# 
  2226  018D                     	;# 
  2227  018E                     	;# 
  2228  0191                     	;# 
  2229  0191                     	;# 
  2230  0192                     	;# 
  2231  0193                     	;# 
  2232  0193                     	;# 
  2233  0194                     	;# 
  2234  0195                     	;# 
  2235  0196                     	;# 
  2236  0197                     	;# 
  2237  0199                     	;# 
  2238  019A                     	;# 
  2239  019B                     	;# 
  2240  019B                     	;# 
  2241  019C                     	;# 
  2242  019D                     	;# 
  2243  019E                     	;# 
  2244  019F                     	;# 
  2245  020C                     	;# 
  2246  020D                     	;# 
  2247  0211                     	;# 
  2248  0211                     	;# 
  2249  0212                     	;# 
  2250  0212                     	;# 
  2251  0213                     	;# 
  2252  0213                     	;# 
  2253  0214                     	;# 
  2254  0214                     	;# 
  2255  0215                     	;# 
  2256  0215                     	;# 
  2257  0215                     	;# 
  2258  0216                     	;# 
  2259  0216                     	;# 
  2260  0217                     	;# 
  2261  0217                     	;# 
  2262  0391                     	;# 
  2263  0392                     	;# 
  2264  0393                     	;# 
  2265  0394                     	;# 
  2266  0395                     	;# 
  2267  0396                     	;# 
  2268  0498                     	;# 
  2269  0498                     	;# 
  2270  0499                     	;# 
  2271  049A                     	;# 
  2272  049B                     	;# 
  2273  049B                     	;# 
  2274  049C                     	;# 
  2275  049D                     	;# 
  2276  049E                     	;# 
  2277  049F                     	;# 
  2278  0611                     	;# 
  2279  0612                     	;# 
  2280  0613                     	;# 
  2281  0613                     	;# 
  2282  0614                     	;# 
  2283  0615                     	;# 
  2284  0616                     	;# 
  2285  0616                     	;# 
  2286  0617                     	;# 
  2287  0618                     	;# 
  2288  0619                     	;# 
  2289  0619                     	;# 
  2290  061A                     	;# 
  2291  061B                     	;# 
  2292  061C                     	;# 
  2293  061C                     	;# 
  2294  0691                     	;# 
  2295  0692                     	;# 
  2296  0693                     	;# 
  2297  0694                     	;# 
  2298  0695                     	;# 
  2299  0F0F                     	;# 
  2300  0F10                     	;# 
  2301  0F11                     	;# 
  2302  0F12                     	;# 
  2303  0F13                     	;# 
  2304  0F14                     	;# 
  2305  0F15                     	;# 
  2306  0F16                     	;# 
  2307  0F17                     	;# 
  2308  0F18                     	;# 
  2309  0F19                     	;# 
  2310  0F1A                     	;# 
  2311  0F1B                     	;# 
  2312  0F1C                     	;# 
  2313  0F1D                     	;# 
  2314  0F1E                     	;# 
  2315  0F1F                     	;# 
  2316  0F20                     	;# 
  2317  0F21                     	;# 
  2318  0F22                     	;# 
  2319  0F23                     	;# 
  2320  0F24                     	;# 
  2321  0F25                     	;# 
  2322  0F26                     	;# 
  2323  0F27                     	;# 
  2324  0F28                     	;# 
  2325  0F29                     	;# 
  2326  0F2A                     	;# 
  2327  0F2B                     	;# 
  2328  0F2C                     	;# 
  2329  0F2D                     	;# 
  2330  0F2E                     	;# 
  2331  0F2F                     	;# 
  2332  0F8C                     	;# 
  2333  0F8D                     	;# 
  2334  0F91                     	;# 
  2335  0F95                     	;# 
  2336  0F96                     	;# 
  2337  0F97                     	;# 
  2338  0F9C                     	;# 
  2339  0F9D                     	;# 
  2340  0F9E                     	;# 
  2341  0FE3                     	;# 
  2342  0FE4                     	;# 
  2343  0FE5                     	;# 
  2344  0FE6                     	;# 
  2345  0FE7                     	;# 
  2346  0FE8                     	;# 
  2347  0FE9                     	;# 
  2348  0FEA                     	;# 
  2349  0FEB                     	;# 
  2350  0FED                     	;# 
  2351  0FEE                     	;# 
  2352  0FEF                     	;# 
  2353  0000                     	;# 
  2354  0001                     	;# 
  2355  0002                     	;# 
  2356  0003                     	;# 
  2357  0004                     	;# 
  2358  0005                     	;# 
  2359  0006                     	;# 
  2360  0007                     	;# 
  2361  0008                     	;# 
  2362  0009                     	;# 
  2363  000A                     	;# 
  2364  000B                     	;# 
  2365  000C                     	;# 
  2366  000D                     	;# 
  2367  000E                     	;# 
  2368  0011                     	;# 
  2369  0012                     	;# 
  2370  0013                     	;# 
  2371  0015                     	;# 
  2372  0016                     	;# 
  2373  0016                     	;# 
  2374  0017                     	;# 
  2375  0018                     	;# 
  2376  0019                     	;# 
  2377  001A                     	;# 
  2378  001B                     	;# 
  2379  001C                     	;# 
  2380  008C                     	;# 
  2381  008D                     	;# 
  2382  008E                     	;# 
  2383  0091                     	;# 
  2384  0092                     	;# 
  2385  0093                     	;# 
  2386  0095                     	;# 
  2387  0096                     	;# 
  2388  0097                     	;# 
  2389  0099                     	;# 
  2390  009A                     	;# 
  2391  009B                     	;# 
  2392  009B                     	;# 
  2393  009C                     	;# 
  2394  009D                     	;# 
  2395  009E                     	;# 
  2396  009F                     	;# 
  2397  010C                     	;# 
  2398  010D                     	;# 
  2399  010E                     	;# 
  2400  0111                     	;# 
  2401  0112                     	;# 
  2402  0113                     	;# 
  2403  0114                     	;# 
  2404  0115                     	;# 
  2405  0116                     	;# 
  2406  0117                     	;# 
  2407  0118                     	;# 
  2408  0119                     	;# 
  2409  011D                     	;# 
  2410  018C                     	;# 
  2411  018D                     	;# 
  2412  018E                     	;# 
  2413  0191                     	;# 
  2414  0191                     	;# 
  2415  0192                     	;# 
  2416  0193                     	;# 
  2417  0193                     	;# 
  2418  0194                     	;# 
  2419  0195                     	;# 
  2420  0196                     	;# 
  2421  0197                     	;# 
  2422  0199                     	;# 
  2423  019A                     	;# 
  2424  019B                     	;# 
  2425  019B                     	;# 
  2426  019C                     	;# 
  2427  019D                     	;# 
  2428  019E                     	;# 
  2429  019F                     	;# 
  2430  020C                     	;# 
  2431  020D                     	;# 
  2432  0211                     	;# 
  2433  0211                     	;# 
  2434  0212                     	;# 
  2435  0212                     	;# 
  2436  0213                     	;# 
  2437  0213                     	;# 
  2438  0214                     	;# 
  2439  0214                     	;# 
  2440  0215                     	;# 
  2441  0215                     	;# 
  2442  0215                     	;# 
  2443  0216                     	;# 
  2444  0216                     	;# 
  2445  0217                     	;# 
  2446  0217                     	;# 
  2447  0391                     	;# 
  2448  0392                     	;# 
  2449  0393                     	;# 
  2450  0394                     	;# 
  2451  0395                     	;# 
  2452  0396                     	;# 
  2453  0498                     	;# 
  2454  0498                     	;# 
  2455  0499                     	;# 
  2456  049A                     	;# 
  2457  049B                     	;# 
  2458  049B                     	;# 
  2459  049C                     	;# 
  2460  049D                     	;# 
  2461  049E                     	;# 
  2462  049F                     	;# 
  2463  0611                     	;# 
  2464  0612                     	;# 
  2465  0613                     	;# 
  2466  0613                     	;# 
  2467  0614                     	;# 
  2468  0615                     	;# 
  2469  0616                     	;# 
  2470  0616                     	;# 
  2471  0617                     	;# 
  2472  0618                     	;# 
  2473  0619                     	;# 
  2474  0619                     	;# 
  2475  061A                     	;# 
  2476  061B                     	;# 
  2477  061C                     	;# 
  2478  061C                     	;# 
  2479  0691                     	;# 
  2480  0692                     	;# 
  2481  0693                     	;# 
  2482  0694                     	;# 
  2483  0695                     	;# 
  2484  0F0F                     	;# 
  2485  0F10                     	;# 
  2486  0F11                     	;# 
  2487  0F12                     	;# 
  2488  0F13                     	;# 
  2489  0F14                     	;# 
  2490  0F15                     	;# 
  2491  0F16                     	;# 
  2492  0F17                     	;# 
  2493  0F18                     	;# 
  2494  0F19                     	;# 
  2495  0F1A                     	;# 
  2496  0F1B                     	;# 
  2497  0F1C                     	;# 
  2498  0F1D                     	;# 
  2499  0F1E                     	;# 
  2500  0F1F                     	;# 
  2501  0F20                     	;# 
  2502  0F21                     	;# 
  2503  0F22                     	;# 
  2504  0F23                     	;# 
  2505  0F24                     	;# 
  2506  0F25                     	;# 
  2507  0F26                     	;# 
  2508  0F27                     	;# 
  2509  0F28                     	;# 
  2510  0F29                     	;# 
  2511  0F2A                     	;# 
  2512  0F2B                     	;# 
  2513  0F2C                     	;# 
  2514  0F2D                     	;# 
  2515  0F2E                     	;# 
  2516  0F2F                     	;# 
  2517  0F8C                     	;# 
  2518  0F8D                     	;# 
  2519  0F91                     	;# 
  2520  0F95                     	;# 
  2521  0F96                     	;# 
  2522  0F97                     	;# 
  2523  0F9C                     	;# 
  2524  0F9D                     	;# 
  2525  0F9E                     	;# 
  2526  0FE3                     	;# 
  2527  0FE4                     	;# 
  2528  0FE5                     	;# 
  2529  0FE6                     	;# 
  2530  0FE7                     	;# 
  2531  0FE8                     	;# 
  2532  0FE9                     	;# 
  2533  0FEA                     	;# 
  2534  0FEB                     	;# 
  2535  0FED                     	;# 
  2536  0FEE                     	;# 
  2537  0FEF                     	;# 
  2538                           
  2539 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2540  0000                     
  2541 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2542  0000                     
  2543 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2544  0000                     
  2545                           	psect	idataCOMMON
  2546  0621                     __pidataCOMMON:
  2547                           
  2548                           ;initializer for _U8Message
  2549  0621  3455               	retlw	85
  2550                           
  2551                           ;initializer for _BreathState
  2552  0622  3401               	retlw	1
  2553                           
  2554                           	psect	stringtext1
  2555  037F                     __pstringtext1:
  2556  037F                     _fsmStateTable:
  2557  037F  34CD               	retlw	low _I2C_DO_IDLE
  2558  0380  3405               	retlw	high _I2C_DO_IDLE
  2559  0381  3495               	retlw	low _I2C_DO_SEND_ADR_READ
  2560  0382  3405               	retlw	high _I2C_DO_SEND_ADR_READ
  2561  0383  349D               	retlw	low _I2C_DO_SEND_ADR_WRITE
  2562  0384  3405               	retlw	high _I2C_DO_SEND_ADR_WRITE
  2563  0385  346A               	retlw	low _I2C_DO_TX
  2564  0386  3401               	retlw	high _I2C_DO_TX
  2565  0387  34B9               	retlw	low _I2C_DO_RX
  2566  0388  3401               	retlw	high _I2C_DO_RX
  2567  0389  34B0               	retlw	low _I2C_DO_RCEN
  2568  038A  3405               	retlw	high _I2C_DO_RCEN
  2569  038B  346E               	retlw	low _I2C_DO_TX_EMPTY
  2570  038C  3402               	retlw	high _I2C_DO_TX_EMPTY
  2571  038D  34FA               	retlw	low _I2C_DO_SEND_RESTART_READ
  2572  038E  3405               	retlw	high _I2C_DO_SEND_RESTART_READ
  2573  038F  34F6               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  2574  0390  3405               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  2575  0391  34F2               	retlw	low _I2C_DO_SEND_RESTART
  2576  0392  3405               	retlw	high _I2C_DO_SEND_RESTART
  2577  0393  34EE               	retlw	low _I2C_DO_SEND_STOP
  2578  0394  3405               	retlw	high _I2C_DO_SEND_STOP
  2579  0395  34EA               	retlw	low _I2C_DO_RX_ACK
  2580  0396  3405               	retlw	high _I2C_DO_RX_ACK
  2581  0397  34E6               	retlw	low _I2C_DO_RX_NACK_STOP
  2582  0398  3405               	retlw	high _I2C_DO_RX_NACK_STOP
  2583  0399  34E2               	retlw	low _I2C_DO_RX_NACK_RESTART
  2584  039A  3405               	retlw	high _I2C_DO_RX_NACK_RESTART
  2585  039B  34C8               	retlw	low _I2C_DO_RESET
  2586  039C  3405               	retlw	high _I2C_DO_RESET
  2587  039D  349B               	retlw	low _I2C_DO_ADDRESS_NACK
  2588  039E  3402               	retlw	high _I2C_DO_ADDRESS_NACK
  2589  039F                     __end_of_fsmStateTable:
  2590                           
  2591                           	psect	stringtext2
  2592  04F0                     __pstringtext2:
  2593  04F0                     _COS_tsk:
  2594  04F0  3485               	retlw	low _UartDisplay
  2595  04F1  3405               	retlw	high _UartDisplay
  2596  04F2  3480               	retlw	128
  2597  04F3  345B               	retlw	low _GetTemp
  2598  04F4  3403               	retlw	high _GetTemp
  2599  04F5  3440               	retlw	64
  2600  04F6  3400               	retlw	0
  2601  04F7  3400               	retlw	0
  2602  04F8  3400               	retlw	0
  2603  04F9  3400               	retlw	0
  2604  04FA  3400               	retlw	0
  2605  04FB  3400               	retlw	0
  2606  04FC  3400               	retlw	0
  2607  04FD  3400               	retlw	0
  2608  04FE  3400               	retlw	0
  2609  04FF                     __end_of_COS_tsk:
  2610                           
  2611                           	psect	nvBANK0
  2612  006D                     __pnvBANK0:
  2613  006D                     _COS_tsk_ena:
  2614  006D                     	ds	1
  2615  006E                     _COS_tsk_msk:
  2616  006E                     	ds	1
  2617                           
  2618                           	psect	nvBANK1
  2619  00A0                     __pnvBANK1:
  2620  00A0                     _EUSART_ErrorHandler:
  2621  00A0                     	ds	2
  2622  00A2                     _EUSART_OverrunErrorHandler:
  2623  00A2                     	ds	2
  2624  00A4                     _EUSART_FramingErrorHandler:
  2625  00A4                     	ds	2
  2626  00A6                     _TMR2_InterruptHandler:
  2627  00A6                     	ds	2
  2628  0012                     _PIR2bits	set	18
  2629  000B                     _INTCONbits	set	11
  2630  001C                     _T2CONbits	set	28
  2631  001C                     _T2CON	set	28
  2632  0011                     _PIR1bits	set	17
  2633  001A                     _TMR2	set	26
  2634  001B                     _PR2	set	27
  2635  0018                     _T1CON	set	24
  2636  0016                     _TMR1L	set	22
  2637  0017                     _TMR1H	set	23
  2638  0095                     _OPTION_REGbits	set	149
  2639  008E                     _TRISC	set	142
  2640  008D                     _TRISB	set	141
  2641  008C                     _TRISA	set	140
  2642  0097                     _WDTCON	set	151
  2643  0099                     _OSCCON	set	153
  2644  0091                     _PIE1bits	set	145
  2645  010E                     _LATCbits	set	270
  2646  011D                     _APFCON	set	285
  2647  010E                     _LATC	set	270
  2648  010D                     _LATB	set	269
  2649  010C                     _LATA	set	268
  2650  0116                     _BORCON	set	278
  2651  019A                     _TXREG	set	410
  2652  0199                     _RCREG	set	409
  2653  019D                     _RCSTAbits	set	413
  2654  019E                     _TXSTAbits	set	414
  2655  019C                     _SPBRGH	set	412
  2656  019B                     _SPBRGL	set	411
  2657  019E                     _TXSTA	set	414
  2658  019D                     _RCSTA	set	413
  2659  019F                     _BAUDCON	set	415
  2660  018C                     _ANSELA	set	396
  2661  018D                     _ANSELB	set	397
  2662  018E                     _ANSELC	set	398
  2663  0214                     _SSP1STATbits	set	532
  2664  0216                     _SSP1CON2bits	set	534
  2665  0211                     _SSP1BUF	set	529
  2666  0215                     _SSP1CON1bits	set	533
  2667  0212                     _SSP1ADD	set	530
  2668  0216                     _SSP1CON2	set	534
  2669  0215                     _SSP1CON1	set	533
  2670  0214                     _SSP1STAT	set	532
  2671  020C                     _WPUA	set	524
  2672  020D                     _WPUB	set	525
  2673  0611                     _PWM1DCL	set	1553
  2674  0612                     _PWM1DCH	set	1554
  2675  0613                     _PWM1CON	set	1555
  2676                           
  2677                           	psect	cinit
  2678  0014                     start_initialization:	
  2679                           ; #config settings
  2680                           
  2681  0014                     __initialization:
  2682                           
  2683                           ; Initialize objects allocated to COMMON
  2684  0014  3186  2621  3180   	fcall	__pidataCOMMON	;fetch initializer
  2685  0017  00FA               	movwf	__pdataCOMMON& (0+127)
  2686  0018  3186  2622  3180   	fcall	__pidataCOMMON+1	;fetch initializer
  2687  001B  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
  2688                           
  2689                           ; Clear objects allocated to COMMON
  2690  001C  01F6               	clrf	__pbssCOMMON& (0+127)
  2691  001D  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  2692  001E  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  2693  001F  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  2694                           
  2695                           ; Clear objects allocated to BANK0
  2696  0020  3020               	movlw	low __pbssBANK0
  2697  0021  0084               	movwf	4
  2698  0022  3000               	movlw	high __pbssBANK0
  2699  0023  0085               	movwf	5
  2700  0024  3035               	movlw	53
  2701  0025  3185  25A4         	fcall	clear_ram0
  2702  0027                     end_of_initialization:	
  2703                           ;End of C runtime variable initialization code
  2704                           
  2705  0027                     __end_of__initialization:
  2706  0027  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2707  0028  0020               	movlb	0
  2708  0029  3183  2BD8         	ljmp	_main	;jump to C main() function
  2709                           
  2710                           	psect	bssCOMMON
  2711  0076                     __pbssCOMMON:
  2712  0076                     _COS_tcnt_val:
  2713  0076                     	ds	2
  2714  0078                     _NewMessageFlag:
  2715  0078                     	ds	1
  2716  0079                     _eusartRxLastError:
  2717  0079                     	ds	1
  2718                           
  2719                           	psect	dataCOMMON
  2720  007A                     __pdataCOMMON:
  2721  007A                     _U8Message:
  2722  007A                     	ds	1
  2723  007B                     _BreathState:
  2724  007B                     	ds	1
  2725                           
  2726                           	psect	bssBANK0
  2727  0020                     __pbssBANK0:
  2728  0020                     _I2C_Status:
  2729  0020                     	ds	29
  2730  003D                     _Humi:
  2731  003D                     	ds	2
  2732  003F                     _Temp:
  2733  003F                     	ds	2
  2734  0041                     _dutyValue:
  2735  0041                     	ds	2
  2736  0043                     _counter:
  2737  0043                     	ds	2
  2738  0045                     TMR2_ISR@CountCallBack:
  2739  0045                     	ds	2
  2740  0047                     _COS_tcnt_lst:
  2741  0047                     	ds	2
  2742  0049                     _COS_tsk_tmr:
  2743  0049                     	ds	2
  2744  004B                     _COS_sec_tmr:
  2745  004B                     	ds	2
  2746  004D                     _COS_ms_tmr:
  2747  004D                     	ds	2
  2748  004F                     _counter@UART_Display$F1229:
  2749  004F                     	ds	1
  2750  0050                     _Timer2Flag:
  2751  0050                     	ds	1
  2752  0051                     _TimeSlotCounter:
  2753  0051                     	ds	1
  2754  0052                     _COS_tsk_ind:
  2755  0052                     	ds	1
  2756  0053                     _Command:
  2757  0053                     	ds	1
  2758  0054                     _TempH:
  2759  0054                     	ds	1
  2760                           
  2761                           	psect	clrtext
  2762  05A4                     clear_ram0:	
  2763                           ;	Called with FSR0 containing the base address, and
  2764                           ;	WREG with the size to clear
  2765                           
  2766  05A4  0064               	clrwdt	;clear the watchdog before getting into this loop
  2767  05A5                     clrloop0:
  2768  05A5  0180               	clrf	0	;clear RAM location pointed to by FSR
  2769  05A6  3101               	addfsr 0,1
  2770  05A7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2771  05A8  2DA5               	goto	clrloop0	;have we reached the end yet?
  2772  05A9  3400               	retlw	0	;all done for this memory range, return
  2773                           
  2774                           	psect	cstackBANK1
  2775  00A8                     __pcstackBANK1:
  2776  00A8                     ??_COS_TskMan:
  2777                           
  2778                           ; 1 bytes @ 0x0
  2779  00A8                     	ds	2
  2780                           
  2781                           	psect	cstackCOMMON
  2782  0070                     __pcstackCOMMON:
  2783  0070                     ?_COS_TimerSetup:
  2784  0070                     ?_UartDisplay:	
  2785                           ; 1 bytes @ 0x0
  2786                           
  2787  0070                     ?_GetTemp:	
  2788                           ; 1 bytes @ 0x0
  2789                           
  2790  0070                     ?_I2C_Open:	
  2791                           ; 1 bytes @ 0x0
  2792                           
  2793  0070                     ?_I2C_MasterWrite:	
  2794                           ; 1 bytes @ 0x0
  2795                           
  2796  0070                     ?_I2C_Close:	
  2797                           ; 1 bytes @ 0x0
  2798                           
  2799  0070                     ?_I2C_MasterRead:	
  2800                           ; 1 bytes @ 0x0
  2801                           
  2802  0070                     ?_TMR2_DefaultInterruptHandler:	
  2803                           ; 1 bytes @ 0x0
  2804                           
  2805  0070                     ??_TMR2_DefaultInterruptHandler:	
  2806                           ; 1 bytes @ 0x0
  2807                           
  2808  0070                     ?_TMR2_CallBack:	
  2809                           ; 1 bytes @ 0x0
  2810                           
  2811  0070                     ?_I2C_Initialize:	
  2812                           ; 1 bytes @ 0x0
  2813                           
  2814  0070                     ?_PIN_MANAGER_Initialize:	
  2815                           ; 1 bytes @ 0x0
  2816                           
  2817  0070                     ?_OSCILLATOR_Initialize:	
  2818                           ; 1 bytes @ 0x0
  2819                           
  2820  0070                     ?_WDT_Initialize:	
  2821                           ; 1 bytes @ 0x0
  2822                           
  2823  0070                     ?_PWM1_Initialize:	
  2824                           ; 1 bytes @ 0x0
  2825                           
  2826  0070                     ?_EUSART_Initialize:	
  2827                           ; 1 bytes @ 0x0
  2828                           
  2829  0070                     ?_I2C_DO_IDLE:	
  2830                           ; 1 bytes @ 0x0
  2831                           
  2832  0070                     ?_I2C_DO_SEND_ADR_READ:	
  2833                           ; 1 bytes @ 0x0
  2834                           
  2835  0070                     ?_I2C_DO_SEND_ADR_WRITE:	
  2836                           ; 1 bytes @ 0x0
  2837                           
  2838  0070                     ?_I2C_DO_TX:	
  2839                           ; 1 bytes @ 0x0
  2840                           
  2841  0070                     ?_I2C_DO_RX:	
  2842                           ; 1 bytes @ 0x0
  2843                           
  2844  0070                     ?_I2C_DO_RCEN:	
  2845                           ; 1 bytes @ 0x0
  2846                           
  2847  0070                     ?_I2C_DO_TX_EMPTY:	
  2848                           ; 1 bytes @ 0x0
  2849                           
  2850  0070                     ?_I2C_DO_SEND_RESTART_READ:	
  2851                           ; 1 bytes @ 0x0
  2852                           
  2853  0070                     ?_I2C_DO_SEND_RESTART_WRITE:	
  2854                           ; 1 bytes @ 0x0
  2855                           
  2856  0070                     ?_I2C_DO_SEND_RESTART:	
  2857                           ; 1 bytes @ 0x0
  2858                           
  2859  0070                     ?_I2C_DO_SEND_STOP:	
  2860                           ; 1 bytes @ 0x0
  2861                           
  2862  0070                     ?_I2C_DO_RX_ACK:	
  2863                           ; 1 bytes @ 0x0
  2864                           
  2865  0070                     ?_I2C_DO_RX_NACK_STOP:	
  2866                           ; 1 bytes @ 0x0
  2867                           
  2868  0070                     ?_I2C_DO_RX_NACK_RESTART:	
  2869                           ; 1 bytes @ 0x0
  2870                           
  2871  0070                     ?_I2C_DO_RESET:	
  2872                           ; 1 bytes @ 0x0
  2873                           
  2874  0070                     ?_I2C_DO_ADDRESS_NACK:	
  2875                           ; 1 bytes @ 0x0
  2876                           
  2877  0070                     ?_I2C_MasterClearIrq:	
  2878                           ; 1 bytes @ 0x0
  2879                           
  2880  0070                     ?_I2C_MasterOpen:	
  2881                           ; 1 bytes @ 0x0
  2882                           
  2883  0070                     ?_I2C_MasterDisableIrq:	
  2884                           ; 1 bytes @ 0x0
  2885                           
  2886  0070                     ?_I2C_MasterClose:	
  2887                           ; 1 bytes @ 0x0
  2888                           
  2889  0070                     ?_I2C_MasterStart:	
  2890                           ; 1 bytes @ 0x0
  2891                           
  2892  0070                     ?_I2C_Poller:	
  2893                           ; 1 bytes @ 0x0
  2894                           
  2895  0070                     ?_I2C_MasterWaitForEvent:	
  2896                           ; 1 bytes @ 0x0
  2897                           
  2898  0070                     ?_I2C_MasterFsm:	
  2899                           ; 1 bytes @ 0x0
  2900                           
  2901  0070                     ?_I2C_MasterIsNack:	
  2902                           ; 1 bytes @ 0x0
  2903                           
  2904  0070                     ?_I2C_MasterSendTxData:	
  2905                           ; 1 bytes @ 0x0
  2906                           
  2907  0070                     ?_I2C_MasterGetRxData:	
  2908                           ; 1 bytes @ 0x0
  2909                           
  2910  0070                     ?_I2C_MasterSendAck:	
  2911                           ; 1 bytes @ 0x0
  2912                           
  2913  0070                     ?_I2C_MasterStartRx:	
  2914                           ; 1 bytes @ 0x0
  2915                           
  2916  0070                     ?_I2C_MasterSetIrq:	
  2917                           ; 1 bytes @ 0x0
  2918                           
  2919  0070                     ?_I2C_MasterEnableRestart:	
  2920                           ; 1 bytes @ 0x0
  2921                           
  2922  0070                     ?_I2C_MasterStop:	
  2923                           ; 1 bytes @ 0x0
  2924                           
  2925  0070                     ?_I2C_MasterSendNack:	
  2926                           ; 1 bytes @ 0x0
  2927                           
  2928  0070                     ?_COS_Init:	
  2929                           ; 1 bytes @ 0x0
  2930                           
  2931  0070                     ?_COS_TmrHandler:	
  2932                           ; 1 bytes @ 0x0
  2933                           
  2934  0070                     ?_COS_TskMan:	
  2935                           ; 1 bytes @ 0x0
  2936                           
  2937  0070                     ?_TMR2_Initialize:	
  2938                           ; 1 bytes @ 0x0
  2939                           
  2940  0070                     ?_TMR2_ISR:	
  2941                           ; 1 bytes @ 0x0
  2942                           
  2943  0070                     ?_INTERRUPT_InterruptManager:	
  2944                           ; 1 bytes @ 0x0
  2945                           
  2946  0070                     ?_SYSTEM_Initialize:	
  2947                           ; 1 bytes @ 0x0
  2948                           
  2949  0070                     ?_PWM1_LoadDutyValue:	
  2950                           ; 1 bytes @ 0x0
  2951                           
  2952  0070                     ?_I2C_MasterOperation:	
  2953                           ; 1 bytes @ 0x0
  2954                           
  2955  0070                     ?_EUSART_Write:	
  2956                           ; 1 bytes @ 0x0
  2957                           
  2958  0070                     ?_Led2_PWM:	
  2959                           ; 1 bytes @ 0x0
  2960                           
  2961  0070                     ?_SendByUart:	
  2962                           ; 1 bytes @ 0x0
  2963                           
  2964  0070                     ?_main:	
  2965                           ; 1 bytes @ 0x0
  2966                           
  2967  0070                     PWM1_LoadDutyValue@dutyValue:	
  2968                           ; 1 bytes @ 0x0
  2969                           
  2970                           
  2971                           ; 2 bytes @ 0x0
  2972  0070                     	ds	2
  2973  0072                     ??_PWM1_LoadDutyValue:
  2974                           
  2975                           ; 1 bytes @ 0x2
  2976  0072                     	ds	2
  2977  0074                     ??_Led2_PWM:
  2978                           
  2979                           ; 1 bytes @ 0x4
  2980  0074                     	ds	2
  2981  0076                     ??_TMR2_CallBack:
  2982  0076                     ??_TMR2_ISR:	
  2983                           ; 1 bytes @ 0x6
  2984                           
  2985  0076                     ??_INTERRUPT_InterruptManager:	
  2986                           ; 1 bytes @ 0x6
  2987                           
  2988                           
  2989                           	psect	cstackBANK0
  2990  0055                     __pcstackBANK0:	
  2991                           ; 1 bytes @ 0x6
  2992                           
  2993  0055                     ??_COS_TimerSetup:
  2994  0055                     ??_I2C_Open:	
  2995                           ; 1 bytes @ 0x0
  2996                           
  2997  0055                     ?_I2C_SetBuffer:	
  2998                           ; 1 bytes @ 0x0
  2999                           
  3000  0055                     ??_I2C_Close:	
  3001                           ; 1 bytes @ 0x0
  3002                           
  3003  0055                     ?_TMR2_SetInterruptHandler:	
  3004                           ; 1 bytes @ 0x0
  3005                           
  3006  0055                     ??_I2C_Initialize:	
  3007                           ; 1 bytes @ 0x0
  3008                           
  3009  0055                     ??_PIN_MANAGER_Initialize:	
  3010                           ; 1 bytes @ 0x0
  3011                           
  3012  0055                     ??_OSCILLATOR_Initialize:	
  3013                           ; 1 bytes @ 0x0
  3014                           
  3015  0055                     ??_WDT_Initialize:	
  3016                           ; 1 bytes @ 0x0
  3017                           
  3018  0055                     ??_PWM1_Initialize:	
  3019                           ; 1 bytes @ 0x0
  3020                           
  3021  0055                     ??_I2C_DO_IDLE:	
  3022                           ; 1 bytes @ 0x0
  3023                           
  3024  0055                     ??_I2C_DO_SEND_ADR_READ:	
  3025                           ; 1 bytes @ 0x0
  3026                           
  3027  0055                     ??_I2C_DO_RCEN:	
  3028                           ; 1 bytes @ 0x0
  3029                           
  3030  0055                     ??_I2C_DO_SEND_RESTART_READ:	
  3031                           ; 1 bytes @ 0x0
  3032                           
  3033  0055                     ??_I2C_DO_SEND_RESTART_WRITE:	
  3034                           ; 1 bytes @ 0x0
  3035                           
  3036  0055                     ??_I2C_DO_SEND_RESTART:	
  3037                           ; 1 bytes @ 0x0
  3038                           
  3039  0055                     ??_I2C_DO_SEND_STOP:	
  3040                           ; 1 bytes @ 0x0
  3041                           
  3042  0055                     ??_I2C_DO_RX_ACK:	
  3043                           ; 1 bytes @ 0x0
  3044                           
  3045  0055                     ??_I2C_DO_RX_NACK_STOP:	
  3046                           ; 1 bytes @ 0x0
  3047                           
  3048  0055                     ??_I2C_DO_RX_NACK_RESTART:	
  3049                           ; 1 bytes @ 0x0
  3050                           
  3051  0055                     ??_I2C_DO_RESET:	
  3052                           ; 1 bytes @ 0x0
  3053                           
  3054  0055                     ??_I2C_MasterClearIrq:	
  3055                           ; 1 bytes @ 0x0
  3056                           
  3057  0055                     ??_I2C_MasterOpen:	
  3058                           ; 1 bytes @ 0x0
  3059                           
  3060  0055                     ??_I2C_MasterDisableIrq:	
  3061                           ; 1 bytes @ 0x0
  3062                           
  3063  0055                     ??_I2C_MasterClose:	
  3064                           ; 1 bytes @ 0x0
  3065                           
  3066  0055                     ??_I2C_MasterStart:	
  3067                           ; 1 bytes @ 0x0
  3068                           
  3069  0055                     ?_I2C_SetCallback:	
  3070                           ; 1 bytes @ 0x0
  3071                           
  3072  0055                     ??_I2C_MasterWaitForEvent:	
  3073                           ; 1 bytes @ 0x0
  3074                           
  3075  0055                     ??_I2C_MasterIsNack:	
  3076                           ; 1 bytes @ 0x0
  3077                           
  3078  0055                     ??_I2C_MasterSendTxData:	
  3079                           ; 1 bytes @ 0x0
  3080                           
  3081  0055                     ??_I2C_MasterGetRxData:	
  3082                           ; 1 bytes @ 0x0
  3083                           
  3084  0055                     ??_I2C_MasterSendAck:	
  3085                           ; 1 bytes @ 0x0
  3086                           
  3087  0055                     ??_I2C_MasterStartRx:	
  3088                           ; 1 bytes @ 0x0
  3089                           
  3090  0055                     ??_I2C_MasterSetIrq:	
  3091                           ; 1 bytes @ 0x0
  3092                           
  3093  0055                     ??_I2C_MasterEnableRestart:	
  3094                           ; 1 bytes @ 0x0
  3095                           
  3096  0055                     ??_I2C_MasterStop:	
  3097                           ; 1 bytes @ 0x0
  3098                           
  3099  0055                     ??_I2C_MasterSendNack:	
  3100                           ; 1 bytes @ 0x0
  3101                           
  3102  0055                     ?_EUSART_SetFramingErrorHandler:	
  3103                           ; 1 bytes @ 0x0
  3104                           
  3105  0055                     ?_EUSART_SetOverrunErrorHandler:	
  3106                           ; 1 bytes @ 0x0
  3107                           
  3108  0055                     ?_EUSART_SetErrorHandler:	
  3109                           ; 1 bytes @ 0x0
  3110                           
  3111  0055                     ??_COS_Init:	
  3112                           ; 1 bytes @ 0x0
  3113                           
  3114  0055                     ??_COS_TmrHandler:	
  3115                           ; 1 bytes @ 0x0
  3116                           
  3117  0055                     ??_EUSART_Write:	
  3118                           ; 1 bytes @ 0x0
  3119                           
  3120  0055                     ??_SendByUart:	
  3121                           ; 1 bytes @ 0x0
  3122                           
  3123  0055                     ?___wmul:	
  3124                           ; 1 bytes @ 0x0
  3125                           
  3126  0055                     I2C_MasterSendTxData@data:	
  3127                           ; 2 bytes @ 0x0
  3128                           
  3129  0055                     EUSART_Write@txData:	
  3130                           ; 1 bytes @ 0x0
  3131                           
  3132  0055                     TMR2_SetInterruptHandler@InterruptHandler:	
  3133                           ; 1 bytes @ 0x0
  3134                           
  3135  0055                     I2C_SetBuffer@bufferSize:	
  3136                           ; 2 bytes @ 0x0
  3137                           
  3138  0055                     I2C_SetCallback@cb:	
  3139                           ; 2 bytes @ 0x0
  3140                           
  3141  0055                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3142                           ; 2 bytes @ 0x0
  3143                           
  3144  0055                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3145                           ; 2 bytes @ 0x0
  3146                           
  3147  0055                     EUSART_SetErrorHandler@interruptHandler:	
  3148                           ; 2 bytes @ 0x0
  3149                           
  3150  0055                     ___wmul@multiplier:	
  3151                           ; 2 bytes @ 0x0
  3152                           
  3153                           
  3154                           ; 2 bytes @ 0x0
  3155  0055                     	ds	1
  3156  0056                     ??_UartDisplay:
  3157  0056                     ??_I2C_DO_SEND_ADR_WRITE:	
  3158                           ; 1 bytes @ 0x1
  3159                           
  3160  0056                     I2C_Open@address:	
  3161                           ; 1 bytes @ 0x1
  3162                           
  3163  0056                     I2C_Close@returnValue:	
  3164                           ; 1 bytes @ 0x1
  3165                           
  3166  0056                     SendByUart@Txt:	
  3167                           ; 1 bytes @ 0x1
  3168                           
  3169                           
  3170                           ; 1 bytes @ 0x1
  3171  0056                     	ds	1
  3172  0057                     ??_I2C_SetBuffer:
  3173  0057                     ??_TMR2_SetInterruptHandler:	
  3174                           ; 1 bytes @ 0x2
  3175                           
  3176  0057                     ??_EUSART_Initialize:	
  3177                           ; 1 bytes @ 0x2
  3178                           
  3179  0057                     ??_EUSART_SetFramingErrorHandler:	
  3180                           ; 1 bytes @ 0x2
  3181                           
  3182  0057                     ??_EUSART_SetOverrunErrorHandler:	
  3183                           ; 1 bytes @ 0x2
  3184                           
  3185  0057                     ??_EUSART_SetErrorHandler:	
  3186                           ; 1 bytes @ 0x2
  3187                           
  3188  0057                     ??_TMR2_Initialize:	
  3189                           ; 1 bytes @ 0x2
  3190                           
  3191  0057                     ??_SYSTEM_Initialize:	
  3192                           ; 1 bytes @ 0x2
  3193                           
  3194  0057                     I2C_Open@returnValue:	
  3195                           ; 1 bytes @ 0x2
  3196                           
  3197  0057                     I2C_SetCallback@ptr:	
  3198                           ; 1 bytes @ 0x2
  3199                           
  3200  0057                     ___wmul@multiplicand:	
  3201                           ; 1 bytes @ 0x2
  3202                           
  3203                           
  3204                           ; 2 bytes @ 0x2
  3205  0057                     	ds	1
  3206  0058                     ??_I2C_SetCallback:
  3207  0058                     COS_Init@tempbyte1:	
  3208                           ; 1 bytes @ 0x3
  3209                           
  3210  0058                     COS_TmrHandler@tempbyte1:	
  3211                           ; 1 bytes @ 0x3
  3212                           
  3213  0058                     I2C_SetBuffer@buffer:	
  3214                           ; 1 bytes @ 0x3
  3215                           
  3216                           
  3217                           ; 1 bytes @ 0x3
  3218  0058                     	ds	1
  3219  0059                     ??___wmul:
  3220  0059                     COS_Init@tempbyte2:	
  3221                           ; 1 bytes @ 0x4
  3222                           
  3223  0059                     COS_TmrHandler@tempbyte2:	
  3224                           ; 1 bytes @ 0x4
  3225                           
  3226  0059                     I2C_SetCallback@idx:	
  3227                           ; 1 bytes @ 0x4
  3228                           
  3229  0059                     ___wmul@product:	
  3230                           ; 1 bytes @ 0x4
  3231                           
  3232                           
  3233                           ; 2 bytes @ 0x4
  3234  0059                     	ds	1
  3235  005A                     ?_I2C_SetDataCompleteCallback:
  3236  005A                     ?_I2C_SetAddressNackCallback:	
  3237                           ; 1 bytes @ 0x5
  3238                           
  3239  005A                     I2C_SetDataCompleteCallback@cb:	
  3240                           ; 1 bytes @ 0x5
  3241                           
  3242  005A                     I2C_SetAddressNackCallback@cb:	
  3243                           ; 2 bytes @ 0x5
  3244                           
  3245                           
  3246                           ; 2 bytes @ 0x5
  3247  005A                     	ds	2
  3248  005C                     I2C_SetDataCompleteCallback@ptr:
  3249  005C                     I2C_SetAddressNackCallback@ptr:	
  3250                           ; 1 bytes @ 0x7
  3251                           
  3252                           
  3253                           ; 1 bytes @ 0x7
  3254  005C                     	ds	1
  3255  005D                     ??_I2C_SetDataCompleteCallback:
  3256  005D                     ??_I2C_SetAddressNackCallback:	
  3257                           ; 1 bytes @ 0x8
  3258                           
  3259                           
  3260                           ; 1 bytes @ 0x8
  3261  005D                     	ds	1
  3262  005E                     ?_rd1RegCompleteHandler:
  3263  005E                     ?_rd2RegCompleteHandler:	
  3264                           ; 1 bytes @ 0x9
  3265                           
  3266  005E                     ?_wr1RegCompleteHandler:	
  3267                           ; 1 bytes @ 0x9
  3268                           
  3269  005E                     ?_wr2RegCompleteHandler:	
  3270                           ; 1 bytes @ 0x9
  3271                           
  3272  005E                     ?_rdBlkRegCompleteHandler:	
  3273                           ; 1 bytes @ 0x9
  3274                           
  3275  005E                     ?_I2C_CallbackReturnStop:	
  3276                           ; 1 bytes @ 0x9
  3277                           
  3278  005E                     ?_I2C_CallbackReturnReset:	
  3279                           ; 1 bytes @ 0x9
  3280                           
  3281  005E                     rd1RegCompleteHandler@ptr:	
  3282                           ; 1 bytes @ 0x9
  3283                           
  3284  005E                     rd2RegCompleteHandler@ptr:	
  3285                           ; 1 bytes @ 0x9
  3286                           
  3287  005E                     wr1RegCompleteHandler@ptr:	
  3288                           ; 1 bytes @ 0x9
  3289                           
  3290  005E                     wr2RegCompleteHandler@ptr:	
  3291                           ; 1 bytes @ 0x9
  3292                           
  3293  005E                     rdBlkRegCompleteHandler@ptr:	
  3294                           ; 1 bytes @ 0x9
  3295                           
  3296  005E                     I2C_CallbackReturnStop@funPtr:	
  3297                           ; 1 bytes @ 0x9
  3298                           
  3299  005E                     I2C_CallbackReturnReset@funPtr:	
  3300                           ; 1 bytes @ 0x9
  3301                           
  3302                           
  3303                           ; 1 bytes @ 0x9
  3304  005E                     	ds	1
  3305  005F                     ??_rd1RegCompleteHandler:
  3306  005F                     ??_rd2RegCompleteHandler:	
  3307                           ; 1 bytes @ 0xA
  3308                           
  3309  005F                     ??_wr1RegCompleteHandler:	
  3310                           ; 1 bytes @ 0xA
  3311                           
  3312  005F                     ??_wr2RegCompleteHandler:	
  3313                           ; 1 bytes @ 0xA
  3314                           
  3315  005F                     ??_rdBlkRegCompleteHandler:	
  3316                           ; 1 bytes @ 0xA
  3317                           
  3318  005F                     ??_I2C_DO_TX:	
  3319                           ; 1 bytes @ 0xA
  3320                           
  3321  005F                     ??_I2C_DO_RX:	
  3322                           ; 1 bytes @ 0xA
  3323                           
  3324  005F                     ??_I2C_DO_TX_EMPTY:	
  3325                           ; 1 bytes @ 0xA
  3326                           
  3327  005F                     ??_I2C_DO_ADDRESS_NACK:	
  3328                           ; 1 bytes @ 0xA
  3329                           
  3330  005F                     ??_I2C_CallbackReturnStop:	
  3331                           ; 1 bytes @ 0xA
  3332                           
  3333  005F                     ??_I2C_CallbackReturnReset:	
  3334                           ; 1 bytes @ 0xA
  3335                           
  3336                           
  3337                           ; 1 bytes @ 0xA
  3338  005F                     	ds	3
  3339  0062                     ??_I2C_MasterFsm:
  3340                           
  3341                           ; 1 bytes @ 0xD
  3342  0062                     	ds	3
  3343  0065                     ??_I2C_Poller:
  3344  0065                     ??_I2C_MasterOperation:	
  3345                           ; 1 bytes @ 0x10
  3346                           
  3347                           
  3348                           ; 1 bytes @ 0x10
  3349  0065                     	ds	1
  3350  0066                     I2C_MasterOperation@read:
  3351                           
  3352                           ; 1 bytes @ 0x11
  3353  0066                     	ds	1
  3354  0067                     I2C_MasterOperation@returnValue:
  3355                           
  3356                           ; 1 bytes @ 0x12
  3357  0067                     	ds	1
  3358  0068                     ??_I2C_MasterWrite:
  3359  0068                     ??_I2C_MasterRead:	
  3360                           ; 1 bytes @ 0x13
  3361                           
  3362  0068                     ?_I2C_WriteNBytes:	
  3363                           ; 1 bytes @ 0x13
  3364                           
  3365  0068                     ?_I2C_ReadNBytes:	
  3366                           ; 1 bytes @ 0x13
  3367                           
  3368  0068                     I2C_WriteNBytes@data:	
  3369                           ; 1 bytes @ 0x13
  3370                           
  3371  0068                     I2C_ReadNBytes@data:	
  3372                           ; 1 bytes @ 0x13
  3373                           
  3374                           
  3375                           ; 1 bytes @ 0x13
  3376  0068                     	ds	1
  3377  0069                     I2C_WriteNBytes@len:
  3378  0069                     I2C_ReadNBytes@len:	
  3379                           ; 2 bytes @ 0x14
  3380                           
  3381                           
  3382                           ; 2 bytes @ 0x14
  3383  0069                     	ds	2
  3384  006B                     ??_I2C_WriteNBytes:
  3385  006B                     ??_I2C_ReadNBytes:	
  3386                           ; 1 bytes @ 0x16
  3387                           
  3388  006B                     I2C_WriteNBytes@address:	
  3389                           ; 1 bytes @ 0x16
  3390                           
  3391  006B                     I2C_ReadNBytes@address:	
  3392                           ; 1 bytes @ 0x16
  3393                           
  3394                           
  3395                           ; 1 bytes @ 0x16
  3396  006B                     	ds	1
  3397  006C                     ??_GetTemp:
  3398                           
  3399                           ; 1 bytes @ 0x17
  3400  006C                     	ds	1
  3401  006D                     ??_main:
  3402                           
  3403                           	psect	maintext
  3404  03D8                     __pmaintext:	
  3405                           ; 1 bytes @ 0x18
  3406 ;;
  3407 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3408 ;;
  3409 ;; *************** function _main *****************
  3410 ;; Defined at:
  3411 ;;		line 52 in file "main.c"
  3412 ;; Parameters:    Size  Location     Type
  3413 ;;		None
  3414 ;; Auto vars:     Size  Location     Type
  3415 ;;		None
  3416 ;; Return value:  Size  Location     Type
  3417 ;;                  1    wreg      void 
  3418 ;; Registers used:
  3419 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3420 ;; Tracked objects:
  3421 ;;		On entry : B1F/0
  3422 ;;		On exit  : 0/0
  3423 ;;		Unchanged: 0/0
  3424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3425 ;;      Params:         0       0       0       0       0       0       0       0
  3426 ;;      Locals:         0       0       0       0       0       0       0       0
  3427 ;;      Temps:          0       0       0       0       0       0       0       0
  3428 ;;      Totals:         0       0       0       0       0       0       0       0
  3429 ;;Total ram usage:        0 bytes
  3430 ;; Hardware stack levels required when called:   16
  3431 ;; This function calls:
  3432 ;;		_COS_Init
  3433 ;;		_COS_TmrHandler
  3434 ;;		_COS_TskMan
  3435 ;;		_SYSTEM_Initialize
  3436 ;;		_TMR2_SetInterruptHandler
  3437 ;; This function is called by:
  3438 ;;		Startup code after reset
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442                           
  3443                           ;psect for function _main
  3444  03D8                     _main:
  3445                           
  3446                           ;main.c: 55:     SYSTEM_Initialize();
  3447                           
  3448                           ;incstack = 0
  3449                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3450  03D8  3184  246E  3183   	fcall	_SYSTEM_Initialize
  3451                           
  3452                           ;main.c: 56:     COS_Init();
  3453  03DB  3181  21FB  3183   	fcall	_COS_Init
  3454                           
  3455                           ;main.c: 57:     TMR2_SetInterruptHandler(Led2_PWM);
  3456  03DE  30A7               	movlw	low _Led2_PWM
  3457  03DF  0020               	movlb	0	; select bank0
  3458  03E0  00D5               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  3459  03E1  3000               	movlw	high _Led2_PWM
  3460  03E2  00D6               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  3461  03E3  3185  2547  3183   	fcall	_TMR2_SetInterruptHandler
  3462                           
  3463                           ;main.c: 63:     (INTCONbits.GIE = 1);
  3464  03E6  178B               	bsf	11,7	;volatile
  3465                           
  3466                           ;main.c: 66:     (INTCONbits.PEIE = 1);
  3467  03E7  170B               	bsf	11,6	;volatile
  3468  03E8                     l799:	
  3469                           ;main.c: 74:     while (1)
  3470                           
  3471                           
  3472                           ;main.c: 75:     {;main.c: 76:         COS_TmrHandler();
  3473  03E8  3181  210D  3183   	fcall	_COS_TmrHandler
  3474                           
  3475                           ;main.c: 78:         if (COS_tsk_ena)
  3476  03EB  0020               	movlb	0	; select bank0
  3477  03EC  086D               	movf	_COS_tsk_ena,w
  3478  03ED  1903               	btfsc	3,2
  3479  03EE  2BE8               	goto	l799
  3480                           
  3481                           ;main.c: 79:         {;main.c: 80:             COS_TskMan();
  3482  03EF  3180  202B  3183   	fcall	_COS_TskMan
  3483  03F2  2BE8               	goto	l799
  3484  03F3                     __end_of_main:
  3485                           
  3486                           	psect	text1
  3487  046E                     __ptext1:	
  3488 ;; *************** function _SYSTEM_Initialize *****************
  3489 ;; Defined at:
  3490 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3491 ;; Parameters:    Size  Location     Type
  3492 ;;		None
  3493 ;; Auto vars:     Size  Location     Type
  3494 ;;		None
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  1    wreg      void 
  3497 ;; Registers used:
  3498 ;;		wreg, status,2, status,0, pclath, cstack
  3499 ;; Tracked objects:
  3500 ;;		On entry : 0/0
  3501 ;;		On exit  : 0/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3504 ;;      Params:         0       0       0       0       0       0       0       0
  3505 ;;      Locals:         0       0       0       0       0       0       0       0
  3506 ;;      Temps:          0       0       0       0       0       0       0       0
  3507 ;;      Totals:         0       0       0       0       0       0       0       0
  3508 ;;Total ram usage:        0 bytes
  3509 ;; Hardware stack levels used:    1
  3510 ;; Hardware stack levels required when called:    7
  3511 ;; This function calls:
  3512 ;;		_EUSART_Initialize
  3513 ;;		_I2C_Initialize
  3514 ;;		_OSCILLATOR_Initialize
  3515 ;;		_PIN_MANAGER_Initialize
  3516 ;;		_PWM1_Initialize
  3517 ;;		_TMR2_Initialize
  3518 ;;		_WDT_Initialize
  3519 ;; This function is called by:
  3520 ;;		_main
  3521 ;; This function uses a non-reentrant model
  3522 ;;
  3523                           
  3524                           
  3525                           ;psect for function _SYSTEM_Initialize
  3526  046E                     _SYSTEM_Initialize:
  3527                           
  3528                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  3529                           
  3530                           ;incstack = 0
  3531                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3532  046E  3185  2550  3184   	fcall	_I2C_Initialize
  3533                           
  3534                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3535  0471  3184  240D  3184   	fcall	_PIN_MANAGER_Initialize
  3536                           
  3537                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3538  0474  3185  25AA  3184   	fcall	_OSCILLATOR_Initialize
  3539                           
  3540                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  3541  0477  3185  25D2  3184   	fcall	_WDT_Initialize
  3542                           
  3543                           ;mcc_generated_files/mcc.c: 57:     PWM1_Initialize();
  3544  047A  3185  257D  3184   	fcall	_PWM1_Initialize
  3545                           
  3546                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  3547  047D  3184  2496  3184   	fcall	_TMR2_Initialize
  3548                           
  3549                           ;mcc_generated_files/mcc.c: 59:     EUSART_Initialize();
  3550  0480  3183  2337         	fcall	_EUSART_Initialize
  3551  0482  0008               	return
  3552  0483                     __end_of_SYSTEM_Initialize:
  3553                           
  3554                           	psect	text2
  3555  05D2                     __ptext2:	
  3556 ;; *************** function _WDT_Initialize *****************
  3557 ;; Defined at:
  3558 ;;		line 70 in file "mcc_generated_files/mcc.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;		None
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;		None
  3563 ;; Return value:  Size  Location     Type
  3564 ;;                  1    wreg      void 
  3565 ;; Registers used:
  3566 ;;		wreg
  3567 ;; Tracked objects:
  3568 ;;		On entry : 0/0
  3569 ;;		On exit  : 0/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3572 ;;      Params:         0       0       0       0       0       0       0       0
  3573 ;;      Locals:         0       0       0       0       0       0       0       0
  3574 ;;      Temps:          0       0       0       0       0       0       0       0
  3575 ;;      Totals:         0       0       0       0       0       0       0       0
  3576 ;;Total ram usage:        0 bytes
  3577 ;; Hardware stack levels used:    1
  3578 ;; Hardware stack levels required when called:    5
  3579 ;; This function calls:
  3580 ;;		Nothing
  3581 ;; This function is called by:
  3582 ;;		_SYSTEM_Initialize
  3583 ;; This function uses a non-reentrant model
  3584 ;;
  3585                           
  3586                           
  3587                           ;psect for function _WDT_Initialize
  3588  05D2                     _WDT_Initialize:
  3589                           
  3590                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x16;
  3591                           
  3592                           ;incstack = 0
  3593                           ; Regs used in _WDT_Initialize: [wreg]
  3594  05D2  3016               	movlw	22
  3595  05D3  0021               	movlb	1	; select bank1
  3596  05D4  0097               	movwf	23	;volatile
  3597  05D5  0008               	return
  3598  05D6                     __end_of_WDT_Initialize:
  3599                           
  3600                           	psect	text3
  3601  0496                     __ptext3:	
  3602 ;; *************** function _TMR2_Initialize *****************
  3603 ;; Defined at:
  3604 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  3605 ;; Parameters:    Size  Location     Type
  3606 ;;		None
  3607 ;; Auto vars:     Size  Location     Type
  3608 ;;		None
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  1    wreg      void 
  3611 ;; Registers used:
  3612 ;;		wreg, status,2, status,0, pclath, cstack
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3618 ;;      Params:         0       0       0       0       0       0       0       0
  3619 ;;      Locals:         0       0       0       0       0       0       0       0
  3620 ;;      Temps:          0       0       0       0       0       0       0       0
  3621 ;;      Totals:         0       0       0       0       0       0       0       0
  3622 ;;Total ram usage:        0 bytes
  3623 ;; Hardware stack levels used:    1
  3624 ;; Hardware stack levels required when called:    6
  3625 ;; This function calls:
  3626 ;;		_TMR2_SetInterruptHandler
  3627 ;; This function is called by:
  3628 ;;		_SYSTEM_Initialize
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632                           
  3633                           ;psect for function _TMR2_Initialize
  3634  0496                     _TMR2_Initialize:
  3635                           
  3636                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0xF9;
  3637                           
  3638                           ;incstack = 0
  3639                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3640  0496  30F9               	movlw	249
  3641  0497  0020               	movlb	0	; select bank0
  3642  0498  009B               	movwf	27	;volatile
  3643                           
  3644                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  3645  0499  019A               	clrf	26	;volatile
  3646                           
  3647                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  3648  049A  1091               	bcf	17,1	;volatile
  3649                           
  3650                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  3651  049B  0021               	movlb	1	; select bank1
  3652  049C  1491               	bsf	17,1	;volatile
  3653                           
  3654                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  3655  049D  3027               	movlw	low _TMR2_DefaultInterruptHandler
  3656  049E  0020               	movlb	0	; select bank0
  3657  049F  00D5               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  3658  04A0  3006               	movlw	high _TMR2_DefaultInterruptHandler
  3659  04A1  00D6               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  3660  04A2  3185  2547         	fcall	_TMR2_SetInterruptHandler
  3661                           
  3662                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x06;
  3663  04A4  3006               	movlw	6
  3664  04A5  0020               	movlb	0	; select bank0
  3665  04A6  009C               	movwf	28	;volatile
  3666  04A7  0008               	return
  3667  04A8                     __end_of_TMR2_Initialize:
  3668                           
  3669                           	psect	text4
  3670  0547                     __ptext4:	
  3671 ;; *************** function _TMR2_SetInterruptHandler *****************
  3672 ;; Defined at:
  3673 ;;		line 147 in file "mcc_generated_files/tmr2.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3676 ;;		 -> Led2_PWM(1), TMR2_DefaultInterruptHandler(1), 
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;		None
  3679 ;; Return value:  Size  Location     Type
  3680 ;;                  1    wreg      void 
  3681 ;; Registers used:
  3682 ;;		wreg
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3688 ;;      Params:         0       2       0       0       0       0       0       0
  3689 ;;      Locals:         0       0       0       0       0       0       0       0
  3690 ;;      Temps:          0       0       0       0       0       0       0       0
  3691 ;;      Totals:         0       2       0       0       0       0       0       0
  3692 ;;Total ram usage:        2 bytes
  3693 ;; Hardware stack levels used:    1
  3694 ;; Hardware stack levels required when called:    5
  3695 ;; This function calls:
  3696 ;;		Nothing
  3697 ;; This function is called by:
  3698 ;;		_TMR2_Initialize
  3699 ;;		_main
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           
  3704                           ;psect for function _TMR2_SetInterruptHandler
  3705  0547                     _TMR2_SetInterruptHandler:
  3706                           
  3707                           ;mcc_generated_files/tmr2.c: 148:     TMR2_InterruptHandler = InterruptHandler;
  3708                           
  3709                           ;incstack = 0
  3710                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  3711  0547  0020               	movlb	0	; select bank0
  3712  0548  0856               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  3713  0549  0021               	movlb	1	; select bank1
  3714  054A  00A7               	movwf	(_TMR2_InterruptHandler+1)^(0+128)
  3715  054B  0020               	movlb	0	; select bank0
  3716  054C  0855               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  3717  054D  0021               	movlb	1	; select bank1
  3718  054E  00A6               	movwf	_TMR2_InterruptHandler^(0+128)
  3719  054F  0008               	return
  3720  0550                     __end_of_TMR2_SetInterruptHandler:
  3721                           
  3722                           	psect	text5
  3723  057D                     __ptext5:	
  3724 ;; *************** function _PWM1_Initialize *****************
  3725 ;; Defined at:
  3726 ;;		line 58 in file "mcc_generated_files/pwm1.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;		None
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;		None
  3731 ;; Return value:  Size  Location     Type
  3732 ;;                  1    wreg      void 
  3733 ;; Registers used:
  3734 ;;		wreg
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3740 ;;      Params:         0       0       0       0       0       0       0       0
  3741 ;;      Locals:         0       0       0       0       0       0       0       0
  3742 ;;      Temps:          0       0       0       0       0       0       0       0
  3743 ;;      Totals:         0       0       0       0       0       0       0       0
  3744 ;;Total ram usage:        0 bytes
  3745 ;; Hardware stack levels used:    1
  3746 ;; Hardware stack levels required when called:    5
  3747 ;; This function calls:
  3748 ;;		Nothing
  3749 ;; This function is called by:
  3750 ;;		_SYSTEM_Initialize
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754                           
  3755                           ;psect for function _PWM1_Initialize
  3756  057D                     _PWM1_Initialize:
  3757                           
  3758                           ;mcc_generated_files/pwm1.c: 62:     PWM1CON = 0xC0;
  3759                           
  3760                           ;incstack = 0
  3761                           ; Regs used in _PWM1_Initialize: [wreg]
  3762  057D  30C0               	movlw	192
  3763  057E  002C               	movlb	12	; select bank12
  3764  057F  0093               	movwf	19	;volatile
  3765                           
  3766                           ;mcc_generated_files/pwm1.c: 65:     PWM1DCH = 0x7C;
  3767  0580  307C               	movlw	124
  3768  0581  0092               	movwf	18	;volatile
  3769                           
  3770                           ;mcc_generated_files/pwm1.c: 68:     PWM1DCL = 0xC0;
  3771  0582  30C0               	movlw	192
  3772  0583  0091               	movwf	17	;volatile
  3773  0584  0008               	return
  3774  0585                     __end_of_PWM1_Initialize:
  3775                           
  3776                           	psect	text6
  3777  040D                     __ptext6:	
  3778 ;; *************** function _PIN_MANAGER_Initialize *****************
  3779 ;; Defined at:
  3780 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;		None
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;		None
  3785 ;; Return value:  Size  Location     Type
  3786 ;;                  1    wreg      void 
  3787 ;; Registers used:
  3788 ;;		wreg, status,2
  3789 ;; Tracked objects:
  3790 ;;		On entry : 0/0
  3791 ;;		On exit  : 0/0
  3792 ;;		Unchanged: 0/0
  3793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3794 ;;      Params:         0       0       0       0       0       0       0       0
  3795 ;;      Locals:         0       0       0       0       0       0       0       0
  3796 ;;      Temps:          0       0       0       0       0       0       0       0
  3797 ;;      Totals:         0       0       0       0       0       0       0       0
  3798 ;;Total ram usage:        0 bytes
  3799 ;; Hardware stack levels used:    1
  3800 ;; Hardware stack levels required when called:    5
  3801 ;; This function calls:
  3802 ;;		Nothing
  3803 ;; This function is called by:
  3804 ;;		_SYSTEM_Initialize
  3805 ;; This function uses a non-reentrant model
  3806 ;;
  3807                           
  3808                           
  3809                           ;psect for function _PIN_MANAGER_Initialize
  3810  040D                     _PIN_MANAGER_Initialize:
  3811                           
  3812                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3813                           
  3814                           ;incstack = 0
  3815                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3816  040D  0022               	movlb	2	; select bank2
  3817  040E  018C               	clrf	12	;volatile
  3818                           
  3819                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3820  040F  018D               	clrf	13	;volatile
  3821                           
  3822                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  3823  0410  018E               	clrf	14	;volatile
  3824                           
  3825                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  3826  0411  303F               	movlw	63
  3827  0412  0021               	movlb	1	; select bank1
  3828  0413  008C               	movwf	12	;volatile
  3829                           
  3830                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x70;
  3831  0414  3070               	movlw	112
  3832  0415  008D               	movwf	13	;volatile
  3833                           
  3834                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x9B;
  3835  0416  309B               	movlw	155
  3836  0417  008E               	movwf	14	;volatile
  3837                           
  3838                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x8B;
  3839  0418  308B               	movlw	139
  3840  0419  0023               	movlb	3	; select bank3
  3841  041A  008E               	movwf	14	;volatile
  3842                           
  3843                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  3844  041B  018D               	clrf	13	;volatile
  3845                           
  3846                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x17;
  3847  041C  3017               	movlw	23
  3848  041D  008C               	movwf	12	;volatile
  3849                           
  3850                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  3851  041E  0024               	movlb	4	; select bank4
  3852  041F  018D               	clrf	13	;volatile
  3853                           
  3854                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  3855  0420  018C               	clrf	12	;volatile
  3856                           
  3857                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 1;
  3858  0421  0021               	movlb	1	; select bank1
  3859  0422  1795               	bsf	21,7	;volatile
  3860                           
  3861                           ;mcc_generated_files/pin_manager.c: 89:     APFCON = 0x00;
  3862  0423  0022               	movlb	2	; select bank2
  3863  0424  019D               	clrf	29	;volatile
  3864  0425  0008               	return
  3865  0426                     __end_of_PIN_MANAGER_Initialize:
  3866                           
  3867                           	psect	text7
  3868  05AA                     __ptext7:	
  3869 ;; *************** function _OSCILLATOR_Initialize *****************
  3870 ;; Defined at:
  3871 ;;		line 62 in file "mcc_generated_files/mcc.c"
  3872 ;; Parameters:    Size  Location     Type
  3873 ;;		None
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;		None
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  1    wreg      void 
  3878 ;; Registers used:
  3879 ;;		wreg, status,2
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3885 ;;      Params:         0       0       0       0       0       0       0       0
  3886 ;;      Locals:         0       0       0       0       0       0       0       0
  3887 ;;      Temps:          0       0       0       0       0       0       0       0
  3888 ;;      Totals:         0       0       0       0       0       0       0       0
  3889 ;;Total ram usage:        0 bytes
  3890 ;; Hardware stack levels used:    1
  3891 ;; Hardware stack levels required when called:    5
  3892 ;; This function calls:
  3893 ;;		Nothing
  3894 ;; This function is called by:
  3895 ;;		_SYSTEM_Initialize
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899                           
  3900                           ;psect for function _OSCILLATOR_Initialize
  3901  05AA                     _OSCILLATOR_Initialize:
  3902                           
  3903                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x78;
  3904                           
  3905                           ;incstack = 0
  3906                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3907  05AA  3078               	movlw	120
  3908  05AB  0021               	movlb	1	; select bank1
  3909  05AC  0099               	movwf	25	;volatile
  3910                           
  3911                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  3912  05AD  0022               	movlb	2	; select bank2
  3913  05AE  0196               	clrf	22	;volatile
  3914  05AF  0008               	return
  3915  05B0                     __end_of_OSCILLATOR_Initialize:
  3916                           
  3917                           	psect	text8
  3918  0550                     __ptext8:	
  3919 ;; *************** function _I2C_Initialize *****************
  3920 ;; Defined at:
  3921 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;		None
  3924 ;; Auto vars:     Size  Location     Type
  3925 ;;		None
  3926 ;; Return value:  Size  Location     Type
  3927 ;;                  1    wreg      void 
  3928 ;; Registers used:
  3929 ;;		wreg, status,2
  3930 ;; Tracked objects:
  3931 ;;		On entry : 0/0
  3932 ;;		On exit  : 0/0
  3933 ;;		Unchanged: 0/0
  3934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3935 ;;      Params:         0       0       0       0       0       0       0       0
  3936 ;;      Locals:         0       0       0       0       0       0       0       0
  3937 ;;      Temps:          0       0       0       0       0       0       0       0
  3938 ;;      Totals:         0       0       0       0       0       0       0       0
  3939 ;;Total ram usage:        0 bytes
  3940 ;; Hardware stack levels used:    1
  3941 ;; Hardware stack levels required when called:    5
  3942 ;; This function calls:
  3943 ;;		Nothing
  3944 ;; This function is called by:
  3945 ;;		_SYSTEM_Initialize
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949                           
  3950                           ;psect for function _I2C_Initialize
  3951  0550                     _I2C_Initialize:
  3952                           
  3953                           ;mcc_generated_files/i2c_master.c: 169:     SSP1STAT = 0x00;
  3954                           
  3955                           ;incstack = 0
  3956                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  3957  0550  0024               	movlb	4	; select bank4
  3958  0551  0194               	clrf	20	;volatile
  3959                           
  3960                           ;mcc_generated_files/i2c_master.c: 170:     SSP1CON1 = 0x08;
  3961  0552  3008               	movlw	8
  3962  0553  0095               	movwf	21	;volatile
  3963                           
  3964                           ;mcc_generated_files/i2c_master.c: 171:     SSP1CON2 = 0x00;
  3965  0554  0196               	clrf	22	;volatile
  3966                           
  3967                           ;mcc_generated_files/i2c_master.c: 172:     SSP1ADD = 0x27;
  3968  0555  3027               	movlw	39
  3969  0556  0092               	movwf	18	;volatile
  3970                           
  3971                           ;mcc_generated_files/i2c_master.c: 173:     SSP1CON1bits.SSPEN = 0;
  3972  0557  1295               	bcf	21,5	;volatile
  3973  0558  0008               	return
  3974  0559                     __end_of_I2C_Initialize:
  3975                           
  3976                           	psect	text9
  3977  0337                     __ptext9:	
  3978 ;; *************** function _EUSART_Initialize *****************
  3979 ;; Defined at:
  3980 ;;		line 66 in file "mcc_generated_files/eusart.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;		None
  3983 ;; Auto vars:     Size  Location     Type
  3984 ;;		None
  3985 ;; Return value:  Size  Location     Type
  3986 ;;                  1    wreg      void 
  3987 ;; Registers used:
  3988 ;;		wreg, status,2, status,0, pclath, cstack
  3989 ;; Tracked objects:
  3990 ;;		On entry : 0/0
  3991 ;;		On exit  : 0/0
  3992 ;;		Unchanged: 0/0
  3993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3994 ;;      Params:         0       0       0       0       0       0       0       0
  3995 ;;      Locals:         0       0       0       0       0       0       0       0
  3996 ;;      Temps:          0       0       0       0       0       0       0       0
  3997 ;;      Totals:         0       0       0       0       0       0       0       0
  3998 ;;Total ram usage:        0 bytes
  3999 ;; Hardware stack levels used:    1
  4000 ;; Hardware stack levels required when called:    6
  4001 ;; This function calls:
  4002 ;;		_EUSART_SetErrorHandler
  4003 ;;		_EUSART_SetFramingErrorHandler
  4004 ;;		_EUSART_SetOverrunErrorHandler
  4005 ;; This function is called by:
  4006 ;;		_SYSTEM_Initialize
  4007 ;; This function uses a non-reentrant model
  4008 ;;
  4009                           
  4010                           
  4011                           ;psect for function _EUSART_Initialize
  4012  0337                     _EUSART_Initialize:
  4013                           
  4014                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  4015                           
  4016                           ;incstack = 0
  4017                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4018  0337  3008               	movlw	8
  4019  0338  0023               	movlb	3	; select bank3
  4020  0339  009F               	movwf	31	;volatile
  4021                           
  4022                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  4023  033A  3090               	movlw	144
  4024  033B  009D               	movwf	29	;volatile
  4025                           
  4026                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  4027  033C  3024               	movlw	36
  4028  033D  009E               	movwf	30	;volatile
  4029                           
  4030                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0xA0;
  4031  033E  30A0               	movlw	160
  4032  033F  009B               	movwf	27	;volatile
  4033                           
  4034                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x01;
  4035  0340  3001               	movlw	1
  4036  0341  009C               	movwf	28	;volatile
  4037                           
  4038                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  4039  0342  3000               	movlw	0
  4040  0343  0020               	movlb	0	; select bank0
  4041  0344  00D5               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  4042  0345  3000               	movlw	0
  4043  0346  00D6               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  4044  0347  3185  2562  3183   	fcall	_EUSART_SetFramingErrorHandler
  4045                           
  4046                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  4047  034A  3000               	movlw	0
  4048  034B  0020               	movlb	0	; select bank0
  4049  034C  00D5               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  4050  034D  3000               	movlw	0
  4051  034E  00D6               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  4052  034F  3185  2559  3183   	fcall	_EUSART_SetOverrunErrorHandler
  4053                           
  4054                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  4055  0352  3000               	movlw	0
  4056  0353  0020               	movlb	0	; select bank0
  4057  0354  00D5               	movwf	EUSART_SetErrorHandler@interruptHandler
  4058  0355  3000               	movlw	0
  4059  0356  00D6               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  4060  0357  3185  256B         	fcall	_EUSART_SetErrorHandler
  4061                           
  4062                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  4063  0359  01F9               	clrf	_eusartRxLastError	;volatile
  4064  035A  0008               	return
  4065  035B                     __end_of_EUSART_Initialize:
  4066                           
  4067                           	psect	text10
  4068  0559                     __ptext10:	
  4069 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  4070 ;; Defined at:
  4071 ;;		line 161 in file "mcc_generated_files/eusart.c"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4074 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;		None
  4077 ;; Return value:  Size  Location     Type
  4078 ;;                  1    wreg      void 
  4079 ;; Registers used:
  4080 ;;		wreg
  4081 ;; Tracked objects:
  4082 ;;		On entry : 0/0
  4083 ;;		On exit  : 0/0
  4084 ;;		Unchanged: 0/0
  4085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4086 ;;      Params:         0       2       0       0       0       0       0       0
  4087 ;;      Locals:         0       0       0       0       0       0       0       0
  4088 ;;      Temps:          0       0       0       0       0       0       0       0
  4089 ;;      Totals:         0       2       0       0       0       0       0       0
  4090 ;;Total ram usage:        2 bytes
  4091 ;; Hardware stack levels used:    1
  4092 ;; Hardware stack levels required when called:    5
  4093 ;; This function calls:
  4094 ;;		Nothing
  4095 ;; This function is called by:
  4096 ;;		_EUSART_Initialize
  4097 ;; This function uses a non-reentrant model
  4098 ;;
  4099                           
  4100                           
  4101                           ;psect for function _EUSART_SetOverrunErrorHandler
  4102  0559                     _EUSART_SetOverrunErrorHandler:
  4103                           
  4104                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  4105                           
  4106                           ;incstack = 0
  4107                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  4108  0559  0020               	movlb	0	; select bank0
  4109  055A  0856               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  4110  055B  0021               	movlb	1	; select bank1
  4111  055C  00A3               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  4112  055D  0020               	movlb	0	; select bank0
  4113  055E  0855               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  4114  055F  0021               	movlb	1	; select bank1
  4115  0560  00A2               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  4116  0561  0008               	return
  4117  0562                     __end_of_EUSART_SetOverrunErrorHandler:
  4118                           
  4119                           	psect	text11
  4120  0562                     __ptext11:	
  4121 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  4122 ;; Defined at:
  4123 ;;		line 157 in file "mcc_generated_files/eusart.c"
  4124 ;; Parameters:    Size  Location     Type
  4125 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4126 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;		None
  4129 ;; Return value:  Size  Location     Type
  4130 ;;                  1    wreg      void 
  4131 ;; Registers used:
  4132 ;;		wreg
  4133 ;; Tracked objects:
  4134 ;;		On entry : 0/0
  4135 ;;		On exit  : 0/0
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4138 ;;      Params:         0       2       0       0       0       0       0       0
  4139 ;;      Locals:         0       0       0       0       0       0       0       0
  4140 ;;      Temps:          0       0       0       0       0       0       0       0
  4141 ;;      Totals:         0       2       0       0       0       0       0       0
  4142 ;;Total ram usage:        2 bytes
  4143 ;; Hardware stack levels used:    1
  4144 ;; Hardware stack levels required when called:    5
  4145 ;; This function calls:
  4146 ;;		Nothing
  4147 ;; This function is called by:
  4148 ;;		_EUSART_Initialize
  4149 ;; This function uses a non-reentrant model
  4150 ;;
  4151                           
  4152                           
  4153                           ;psect for function _EUSART_SetFramingErrorHandler
  4154  0562                     _EUSART_SetFramingErrorHandler:
  4155                           
  4156                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  4157                           
  4158                           ;incstack = 0
  4159                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  4160  0562  0020               	movlb	0	; select bank0
  4161  0563  0856               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  4162  0564  0021               	movlb	1	; select bank1
  4163  0565  00A5               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  4164  0566  0020               	movlb	0	; select bank0
  4165  0567  0855               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  4166  0568  0021               	movlb	1	; select bank1
  4167  0569  00A4               	movwf	_EUSART_FramingErrorHandler^(0+128)
  4168  056A  0008               	return
  4169  056B                     __end_of_EUSART_SetFramingErrorHandler:
  4170                           
  4171                           	psect	text12
  4172  056B                     __ptext12:	
  4173 ;; *************** function _EUSART_SetErrorHandler *****************
  4174 ;; Defined at:
  4175 ;;		line 165 in file "mcc_generated_files/eusart.c"
  4176 ;; Parameters:    Size  Location     Type
  4177 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4178 ;;		 -> EUSART_DefaultErrorHandler(1), 
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;		None
  4181 ;; Return value:  Size  Location     Type
  4182 ;;                  1    wreg      void 
  4183 ;; Registers used:
  4184 ;;		wreg
  4185 ;; Tracked objects:
  4186 ;;		On entry : 0/0
  4187 ;;		On exit  : 0/0
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4190 ;;      Params:         0       2       0       0       0       0       0       0
  4191 ;;      Locals:         0       0       0       0       0       0       0       0
  4192 ;;      Temps:          0       0       0       0       0       0       0       0
  4193 ;;      Totals:         0       2       0       0       0       0       0       0
  4194 ;;Total ram usage:        2 bytes
  4195 ;; Hardware stack levels used:    1
  4196 ;; Hardware stack levels required when called:    5
  4197 ;; This function calls:
  4198 ;;		Nothing
  4199 ;; This function is called by:
  4200 ;;		_EUSART_Initialize
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204                           
  4205                           ;psect for function _EUSART_SetErrorHandler
  4206  056B                     _EUSART_SetErrorHandler:
  4207                           
  4208                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  4209                           
  4210                           ;incstack = 0
  4211                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  4212  056B  0020               	movlb	0	; select bank0
  4213  056C  0856               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  4214  056D  0021               	movlb	1	; select bank1
  4215  056E  00A1               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  4216  056F  0020               	movlb	0	; select bank0
  4217  0570  0855               	movf	EUSART_SetErrorHandler@interruptHandler,w
  4218  0571  0021               	movlb	1	; select bank1
  4219  0572  00A0               	movwf	_EUSART_ErrorHandler^(0+128)
  4220  0573  0008               	return
  4221  0574                     __end_of_EUSART_SetErrorHandler:
  4222                           
  4223                           	psect	text13
  4224  002B                     __ptext13:	
  4225 ;; *************** function _COS_TskMan *****************
  4226 ;; Defined at:
  4227 ;;		line 133 in file "SourceFiles/COS/COS_Main.c"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;		None
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;		None
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  1    wreg      void 
  4234 ;; Registers used:
  4235 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4241 ;;      Params:         0       0       0       0       0       0       0       0
  4242 ;;      Locals:         0       0       0       0       0       0       0       0
  4243 ;;      Temps:          0       0       2       0       0       0       0       0
  4244 ;;      Totals:         0       0       2       0       0       0       0       0
  4245 ;;Total ram usage:        2 bytes
  4246 ;; Hardware stack levels used:    1
  4247 ;; Hardware stack levels required when called:   15
  4248 ;; This function calls:
  4249 ;;		_GetTemp
  4250 ;;		_UartDisplay
  4251 ;;		___wmul
  4252 ;; This function is called by:
  4253 ;;		_main
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257                           
  4258                           ;psect for function _COS_TskMan
  4259  002B                     _COS_TskMan:
  4260                           
  4261                           ;SourceFiles/COS/COS_Main.c: 135:  if ((COS_tsk[COS_tsk_ind].sched & COS_tsk_msk) != 0)
  4262                           
  4263                           ;incstack = 0
  4264                           ; Regs used in _COS_TskMan: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4265  002B  0020               	movlb	0	; select bank0
  4266  002C  0852               	movf	_COS_tsk_ind,w
  4267  002D  0021               	movlb	1	; select bank1
  4268  002E  00A8               	movwf	??_COS_TskMan^(0+128)
  4269  002F  01A9               	clrf	(??_COS_TskMan^(0+128)+1)
  4270  0030  0828               	movf	??_COS_TskMan^(0+128),w
  4271  0031  0020               	movlb	0	; select bank0
  4272  0032  00D5               	movwf	___wmul@multiplier
  4273  0033  0021               	movlb	1	; select bank1
  4274  0034  0829               	movf	(??_COS_TskMan+1)^(0+128),w
  4275  0035  0020               	movlb	0	; select bank0
  4276  0036  00D6               	movwf	___wmul@multiplier+1
  4277  0037  3003               	movlw	3
  4278  0038  00D7               	movwf	___wmul@multiplicand
  4279  0039  3000               	movlw	0
  4280  003A  00D8               	movwf	___wmul@multiplicand+1
  4281  003B  3183  23BC  3180   	fcall	___wmul
  4282  003E  0020               	movlb	0	; select bank0
  4283  003F  0856               	movf	?___wmul+1,w
  4284  0040  0085               	movwf	5
  4285  0041  0855               	movf	?___wmul,w
  4286  0042  0084               	movwf	4
  4287  0043  30F2               	movlw	low ((_COS_tsk+2)| (0+32768))
  4288  0044  0784               	addwf	4,f
  4289  0045  3084               	movlw	high ((_COS_tsk+2)| (0+32768))
  4290  0046  3D85               	addwfc	5,f
  4291  0047  0800               	movf	0,w	;code access
  4292  0048  056E               	andwf	_COS_tsk_msk,w
  4293  0049  1903               	btfsc	3,2
  4294  004A  286B               	goto	l3738
  4295                           
  4296                           ;SourceFiles/COS/COS_Main.c: 136:  {;SourceFiles/COS/COS_Main.c: 143:   (*COS_tsk[COS_ts
      +                          k_ind].tptr)();
  4297  004B  0852               	movf	_COS_tsk_ind,w
  4298  004C  0021               	movlb	1	; select bank1
  4299  004D  00A8               	movwf	??_COS_TskMan^(0+128)
  4300  004E  01A9               	clrf	(??_COS_TskMan^(0+128)+1)
  4301  004F  0828               	movf	??_COS_TskMan^(0+128),w
  4302  0050  0020               	movlb	0	; select bank0
  4303  0051  00D5               	movwf	___wmul@multiplier
  4304  0052  0021               	movlb	1	; select bank1
  4305  0053  0829               	movf	(??_COS_TskMan+1)^(0+128),w
  4306  0054  0020               	movlb	0	; select bank0
  4307  0055  00D6               	movwf	___wmul@multiplier+1
  4308  0056  3003               	movlw	3
  4309  0057  00D7               	movwf	___wmul@multiplicand
  4310  0058  3000               	movlw	0
  4311  0059  00D8               	movwf	___wmul@multiplicand+1
  4312  005A  3183  23BC  3180   	fcall	___wmul
  4313  005D  0020               	movlb	0	; select bank0
  4314  005E  0856               	movf	?___wmul+1,w
  4315  005F  0085               	movwf	5
  4316  0060  0855               	movf	?___wmul,w
  4317  0061  0084               	movwf	4
  4318  0062  30F0               	movlw	low (_COS_tsk| (0+32768))
  4319  0063  0784               	addwf	4,f
  4320  0064  3084               	movlw	high (_COS_tsk| (0+32768))
  4321  0065  3D85               	addwfc	5,f
  4322  0066  3F01               	moviw [1]fsr0
  4323  0067  008A               	movwf	10
  4324  0068  3F00               	moviw [0]fsr0
  4325  0069  000A               	callw
  4326  006A  3180               	pagesel	$
  4327  006B                     l3738:
  4328                           
  4329                           ;SourceFiles/COS/COS_Main.c: 150:  COS_tsk_ind++;
  4330  006B  3001               	movlw	1
  4331  006C  0021               	movlb	1	; select bank1
  4332  006D  00A8               	movwf	??_COS_TskMan^(0+128)
  4333  006E  0828               	movf	??_COS_TskMan^(0+128),w
  4334  006F  0020               	movlb	0	; select bank0
  4335  0070  07D2               	addwf	_COS_tsk_ind,f
  4336                           
  4337                           ;SourceFiles/COS/COS_Main.c: 151:  if (COS_tsk_ind >= (3 +2))
  4338  0071  3005               	movlw	5
  4339  0072  0252               	subwf	_COS_tsk_ind,w
  4340  0073  1C03               	skipc
  4341  0074  0008               	return
  4342                           
  4343                           ;SourceFiles/COS/COS_Main.c: 152:  {;SourceFiles/COS/COS_Main.c: 153:   COS_tsk_ena = 0;
  4344  0075  01ED               	clrf	_COS_tsk_ena
  4345                           
  4346                           ;SourceFiles/COS/COS_Main.c: 154:   COS_tsk_ind = 0;
  4347  0076  01D2               	clrf	_COS_tsk_ind
  4348                           
  4349                           ;SourceFiles/COS/COS_Main.c: 157:   if (!((COS_tsk_msk == 0x80) ||
  4350  0077  3080               	movlw	128
  4351  0078  066E               	xorwf	_COS_tsk_msk,w
  4352  0079  1903               	btfsc	3,2
  4353  007A  2897               	goto	l3760
  4354  007B  3040               	movlw	64
  4355  007C  066E               	xorwf	_COS_tsk_msk,w
  4356  007D  1903               	btfsc	3,2
  4357  007E  2897               	goto	l3760
  4358  007F  3020               	movlw	32
  4359  0080  066E               	xorwf	_COS_tsk_msk,w
  4360  0081  1903               	btfsc	3,2
  4361  0082  2897               	goto	l3760
  4362  0083  3010               	movlw	16
  4363  0084  066E               	xorwf	_COS_tsk_msk,w
  4364  0085  1903               	btfsc	3,2
  4365  0086  2897               	goto	l3760
  4366  0087  3008               	movlw	8
  4367  0088  066E               	xorwf	_COS_tsk_msk,w
  4368  0089  1903               	btfsc	3,2
  4369  008A  2897               	goto	l3760
  4370  008B  3004               	movlw	4
  4371  008C  066E               	xorwf	_COS_tsk_msk,w
  4372  008D  1903               	btfsc	3,2
  4373  008E  2897               	goto	l3760
  4374  008F  3002               	movlw	2
  4375  0090  066E               	xorwf	_COS_tsk_msk,w
  4376  0091  1903               	btfsc	3,2
  4377  0092  2897               	goto	l3760
  4378  0093  036E               	decf	_COS_tsk_msk,w
  4379  0094  1903               	btfsc	3,2
  4380  0095  2897               	goto	l3760
  4381  0096                     l47:	
  4382                           ;SourceFiles/COS/COS_Main.c: 165:   {;SourceFiles/COS/COS_Main.c: 169:     while(1);
  4383                           
  4384  0096  2896               	goto	l47
  4385  0097                     l3760:
  4386                           
  4387                           ;SourceFiles/COS/COS_Main.c: 174:   COS_tsk_msk = COS_tsk_msk >> 1;
  4388  0097  366E               	lsrf	_COS_tsk_msk,w
  4389  0098  0021               	movlb	1	; select bank1
  4390  0099  00A8               	movwf	??_COS_TskMan^(0+128)
  4391  009A  0828               	movf	??_COS_TskMan^(0+128),w
  4392  009B  0020               	movlb	0	; select bank0
  4393  009C  00EE               	movwf	_COS_tsk_msk
  4394                           
  4395                           ;SourceFiles/COS/COS_Main.c: 175:   if (COS_tsk_msk == 0x00)
  4396  009D  086E               	movf	_COS_tsk_msk,w
  4397  009E  1D03               	btfss	3,2
  4398  009F  0008               	return
  4399                           
  4400                           ;SourceFiles/COS/COS_Main.c: 176:   {;SourceFiles/COS/COS_Main.c: 177:    COS_tsk_msk = 
      +                          0x80;
  4401  00A0  3080               	movlw	128
  4402  00A1  0021               	movlb	1	; select bank1
  4403  00A2  00A8               	movwf	??_COS_TskMan^(0+128)
  4404  00A3  0828               	movf	??_COS_TskMan^(0+128),w
  4405  00A4  0020               	movlb	0	; select bank0
  4406  00A5  00EE               	movwf	_COS_tsk_msk
  4407  00A6  0008               	return
  4408  00A7                     __end_of_COS_TskMan:
  4409                           
  4410                           	psect	text14
  4411  03BC                     __ptext14:	
  4412 ;; *************** function ___wmul *****************
  4413 ;; Defined at:
  4414 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4417 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;  product         2    4[BANK0 ] unsigned int 
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  2    0[BANK0 ] unsigned int 
  4422 ;; Registers used:
  4423 ;;		wreg, status,2, status,0
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4429 ;;      Params:         0       4       0       0       0       0       0       0
  4430 ;;      Locals:         0       2       0       0       0       0       0       0
  4431 ;;      Temps:          0       0       0       0       0       0       0       0
  4432 ;;      Totals:         0       6       0       0       0       0       0       0
  4433 ;;Total ram usage:        6 bytes
  4434 ;; Hardware stack levels used:    1
  4435 ;; Hardware stack levels required when called:    5
  4436 ;; This function calls:
  4437 ;;		Nothing
  4438 ;; This function is called by:
  4439 ;;		_COS_TskMan
  4440 ;; This function uses a non-reentrant model
  4441 ;;
  4442                           
  4443                           
  4444                           ;psect for function ___wmul
  4445  03BC                     ___wmul:
  4446                           
  4447                           ;incstack = 0
  4448                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4449  03BC  0020               	movlb	0	; select bank0
  4450  03BD  01D9               	clrf	___wmul@product
  4451  03BE  01DA               	clrf	___wmul@product+1
  4452  03BF                     l3674:
  4453  03BF  1C55               	btfss	___wmul@multiplier,0
  4454  03C0  2BC5               	goto	l888
  4455  03C1  0857               	movf	___wmul@multiplicand,w
  4456  03C2  07D9               	addwf	___wmul@product,f
  4457  03C3  0858               	movf	___wmul@multiplicand+1,w
  4458  03C4  3DDA               	addwfc	___wmul@product+1,f
  4459  03C5                     l888:
  4460  03C5  3001               	movlw	1
  4461  03C6                     u1565:
  4462  03C6  35D7               	lslf	___wmul@multiplicand,f
  4463  03C7  0DD8               	rlf	___wmul@multiplicand+1,f
  4464  03C8  0B89               	decfsz	9,f
  4465  03C9  2BC6               	goto	u1565
  4466  03CA  3001               	movlw	1
  4467  03CB                     u1575:
  4468  03CB  36D6               	lsrf	___wmul@multiplier+1,f
  4469  03CC  0CD5               	rrf	___wmul@multiplier,f
  4470  03CD  0B89               	decfsz	9,f
  4471  03CE  2BCB               	goto	u1575
  4472  03CF  0855               	movf	___wmul@multiplier,w
  4473  03D0  0456               	iorwf	___wmul@multiplier+1,w
  4474  03D1  1D03               	btfss	3,2
  4475  03D2  2BBF               	goto	l3674
  4476  03D3  085A               	movf	___wmul@product+1,w
  4477  03D4  00D6               	movwf	?___wmul+1
  4478  03D5  0859               	movf	___wmul@product,w
  4479  03D6  00D5               	movwf	?___wmul
  4480  03D7  0008               	return
  4481  03D8                     __end_of___wmul:
  4482                           
  4483                           	psect	text15
  4484  035B                     __ptext15:	
  4485 ;; *************** function _GetTemp *****************
  4486 ;; Defined at:
  4487 ;;		line 21 in file "SourceFiles/SunSensor/SHT25.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;		None
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;		None
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  1    wreg      void 
  4494 ;; Registers used:
  4495 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4501 ;;      Params:         0       0       0       0       0       0       0       0
  4502 ;;      Locals:         0       0       0       0       0       0       0       0
  4503 ;;      Temps:          0       1       0       0       0       0       0       0
  4504 ;;      Totals:         0       1       0       0       0       0       0       0
  4505 ;;Total ram usage:        1 bytes
  4506 ;; Hardware stack levels used:    1
  4507 ;; Hardware stack levels required when called:   14
  4508 ;; This function calls:
  4509 ;;		_I2C_ReadNBytes
  4510 ;;		_I2C_WriteNBytes
  4511 ;;		_SendByUart
  4512 ;; This function is called by:
  4513 ;;		_COS_TskMan
  4514 ;; This function uses a non-reentrant model
  4515 ;;
  4516                           
  4517                           
  4518                           ;psect for function _GetTemp
  4519  035B                     _GetTemp:
  4520                           
  4521                           ;SourceFiles/SunSensor/SHT25.c: 23:     Command = 0xF5;
  4522                           
  4523                           ;incstack = 0
  4524                           ; Regs used in _GetTemp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4525  035B  30F5               	movlw	245
  4526  035C  0020               	movlb	0	; select bank0
  4527  035D  00EC               	movwf	??_GetTemp
  4528  035E  086C               	movf	??_GetTemp,w
  4529  035F  00D3               	movwf	_Command
  4530                           
  4531                           ;SourceFiles/SunSensor/SHT25.c: 25:     I2C_WriteNBytes(128,&Command,1);
  4532  0360  3053               	movlw	(low (_Command| 0))& (0+255)
  4533  0361  00EC               	movwf	??_GetTemp
  4534  0362  086C               	movf	??_GetTemp,w
  4535  0363  00E8               	movwf	I2C_WriteNBytes@data
  4536  0364  3001               	movlw	1
  4537  0365  00E9               	movwf	I2C_WriteNBytes@len
  4538  0366  3000               	movlw	0
  4539  0367  00EA               	movwf	I2C_WriteNBytes@len+1
  4540  0368  3080               	movlw	128
  4541  0369  3182  22ED  3183   	fcall	_I2C_WriteNBytes
  4542                           
  4543                           ;SourceFiles/SunSensor/SHT25.c: 26:     I2C_ReadNBytes(129,&TempH,1);
  4544  036C  3054               	movlw	(low (_TempH| 0))& (0+255)
  4545  036D  0020               	movlb	0	; select bank0
  4546  036E  00EC               	movwf	??_GetTemp
  4547  036F  086C               	movf	??_GetTemp,w
  4548  0370  00E8               	movwf	I2C_ReadNBytes@data
  4549  0371  3001               	movlw	1
  4550  0372  00E9               	movwf	I2C_ReadNBytes@len
  4551  0373  3000               	movlw	0
  4552  0374  00EA               	movwf	I2C_ReadNBytes@len+1
  4553  0375  3081               	movlw	129
  4554  0376  3183  239F  3183   	fcall	_I2C_ReadNBytes
  4555                           
  4556                           ;SourceFiles/SunSensor/SHT25.c: 29:     SendByUart(TempH+0x30);
  4557  0379  0020               	movlb	0	; select bank0
  4558  037A  0854               	movf	_TempH,w
  4559  037B  3E30               	addlw	48
  4560  037C  3185  2574         	fcall	_SendByUart
  4561  037E  0008               	return
  4562  037F                     __end_of_GetTemp:
  4563                           
  4564                           	psect	text16
  4565  0585                     __ptext16:	
  4566 ;; *************** function _UartDisplay *****************
  4567 ;; Defined at:
  4568 ;;		line 23 in file "SourceFiles/SunSensor/UART_Display.c"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;		None
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;		None
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  1    wreg      void 
  4575 ;; Registers used:
  4576 ;;		wreg, status,2, status,0, pclath, cstack
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4582 ;;      Params:         0       0       0       0       0       0       0       0
  4583 ;;      Locals:         0       0       0       0       0       0       0       0
  4584 ;;      Temps:          0       0       0       0       0       0       0       0
  4585 ;;      Totals:         0       0       0       0       0       0       0       0
  4586 ;;Total ram usage:        0 bytes
  4587 ;; Hardware stack levels used:    1
  4588 ;; Hardware stack levels required when called:    6
  4589 ;; This function calls:
  4590 ;;		_EUSART_Write
  4591 ;; This function is called by:
  4592 ;;		_COS_TskMan
  4593 ;; This function uses a non-reentrant model
  4594 ;;
  4595                           
  4596                           
  4597                           ;psect for function _UartDisplay
  4598  0585                     _UartDisplay:
  4599                           
  4600                           ;SourceFiles/SunSensor/UART_Display.c: 25:     if (NewMessageFlag == 1)
  4601                           
  4602                           ;incstack = 0
  4603                           ; Regs used in _UartDisplay: [wreg+status,2+status,0+pclath+cstack]
  4604  0585  0378               	decf	_NewMessageFlag,w
  4605  0586  1D03               	btfss	3,2
  4606  0587  0008               	return
  4607                           
  4608                           ;SourceFiles/SunSensor/UART_Display.c: 26:     {;SourceFiles/SunSensor/UART_Display.c: 2
      +                          7:         EUSART_Write(U8Message);
  4609  0588  087A               	movf	_U8Message,w
  4610  0589  3185  258D         	fcall	_EUSART_Write
  4611                           
  4612                           ;SourceFiles/SunSensor/UART_Display.c: 28:         NewMessageFlag = 0;
  4613  058B  01F8               	clrf	_NewMessageFlag
  4614  058C  0008               	return
  4615  058D                     __end_of_UartDisplay:
  4616                           
  4617                           	psect	text17
  4618  058D                     __ptext17:	
  4619 ;; *************** function _EUSART_Write *****************
  4620 ;; Defined at:
  4621 ;;		line 132 in file "mcc_generated_files/eusart.c"
  4622 ;; Parameters:    Size  Location     Type
  4623 ;;  txData          1    wreg     unsigned char 
  4624 ;; Auto vars:     Size  Location     Type
  4625 ;;  txData          1    0[BANK0 ] unsigned char 
  4626 ;; Return value:  Size  Location     Type
  4627 ;;                  1    wreg      void 
  4628 ;; Registers used:
  4629 ;;		wreg
  4630 ;; Tracked objects:
  4631 ;;		On entry : 0/0
  4632 ;;		On exit  : 0/0
  4633 ;;		Unchanged: 0/0
  4634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4635 ;;      Params:         0       0       0       0       0       0       0       0
  4636 ;;      Locals:         0       1       0       0       0       0       0       0
  4637 ;;      Temps:          0       0       0       0       0       0       0       0
  4638 ;;      Totals:         0       1       0       0       0       0       0       0
  4639 ;;Total ram usage:        1 bytes
  4640 ;; Hardware stack levels used:    1
  4641 ;; Hardware stack levels required when called:    5
  4642 ;; This function calls:
  4643 ;;		Nothing
  4644 ;; This function is called by:
  4645 ;;		_UartDisplay
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648                           
  4649                           
  4650                           ;psect for function _EUSART_Write
  4651  058D                     _EUSART_Write:
  4652                           
  4653                           ;incstack = 0
  4654                           ; Regs used in _EUSART_Write: [wreg]
  4655                           ;EUSART_Write@txData stored from wreg
  4656  058D  0020               	movlb	0	; select bank0
  4657  058E  00D5               	movwf	EUSART_Write@txData
  4658  058F                     l706:	
  4659                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  4660                           
  4661                           
  4662                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  4663  058F  1E11               	btfss	17,4	;volatile
  4664  0590  2D8F               	goto	l706
  4665                           
  4666                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  4667  0591  0855               	movf	EUSART_Write@txData,w
  4668  0592  0023               	movlb	3	; select bank3
  4669  0593  009A               	movwf	26	;volatile
  4670  0594  0008               	return
  4671  0595                     __end_of_EUSART_Write:
  4672                           
  4673                           	psect	text18
  4674  0574                     __ptext18:	
  4675 ;; *************** function _SendByUart *****************
  4676 ;; Defined at:
  4677 ;;		line 17 in file "SourceFiles/SunSensor/UART_Display.c"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;  Txt             1    wreg     unsigned char 
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;  Txt             1    1[BANK0 ] unsigned char 
  4682 ;; Return value:  Size  Location     Type
  4683 ;;                  1    wreg      void 
  4684 ;; Registers used:
  4685 ;;		wreg
  4686 ;; Tracked objects:
  4687 ;;		On entry : 0/0
  4688 ;;		On exit  : 0/0
  4689 ;;		Unchanged: 0/0
  4690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4691 ;;      Params:         0       0       0       0       0       0       0       0
  4692 ;;      Locals:         0       1       0       0       0       0       0       0
  4693 ;;      Temps:          0       1       0       0       0       0       0       0
  4694 ;;      Totals:         0       2       0       0       0       0       0       0
  4695 ;;Total ram usage:        2 bytes
  4696 ;; Hardware stack levels used:    1
  4697 ;; Hardware stack levels required when called:    5
  4698 ;; This function calls:
  4699 ;;		Nothing
  4700 ;; This function is called by:
  4701 ;;		_GetTemp
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704                           
  4705                           
  4706                           ;psect for function _SendByUart
  4707  0574                     _SendByUart:
  4708                           
  4709                           ;incstack = 0
  4710                           ; Regs used in _SendByUart: [wreg]
  4711                           ;SendByUart@Txt stored from wreg
  4712  0574  0020               	movlb	0	; select bank0
  4713  0575  00D6               	movwf	SendByUart@Txt
  4714                           
  4715                           ;SourceFiles/SunSensor/UART_Display.c: 17: void SendByUart(uint8_t Txt);SourceFiles/SunS
      +                          ensor/UART_Display.c: 18: {;SourceFiles/SunSensor/UART_Display.c: 19:     U8Message = Tx
      +                          t;
  4716  0576  0856               	movf	SendByUart@Txt,w
  4717  0577  00D5               	movwf	??_SendByUart
  4718  0578  0855               	movf	??_SendByUart,w
  4719  0579  00FA               	movwf	_U8Message
  4720                           
  4721                           ;SourceFiles/SunSensor/UART_Display.c: 20:     NewMessageFlag = 1;
  4722  057A  01F8               	clrf	_NewMessageFlag
  4723  057B  0AF8               	incf	_NewMessageFlag,f
  4724  057C  0008               	return
  4725  057D                     __end_of_SendByUart:
  4726                           
  4727                           	psect	text19
  4728  02ED                     __ptext19:	
  4729 ;; *************** function _I2C_WriteNBytes *****************
  4730 ;; Defined at:
  4731 ;;		line 111 in file "mcc_generated_files/examples/i2c_master_example.c"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;  address         1    wreg     unsigned char 
  4734 ;;  data            1   19[BANK0 ] PTR unsigned char 
  4735 ;;		 -> Command(1), 
  4736 ;;  len             2   20[BANK0 ] unsigned int 
  4737 ;; Auto vars:     Size  Location     Type
  4738 ;;  address         1   22[BANK0 ] unsigned char 
  4739 ;; Return value:  Size  Location     Type
  4740 ;;                  1    wreg      void 
  4741 ;; Registers used:
  4742 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4743 ;; Tracked objects:
  4744 ;;		On entry : 0/0
  4745 ;;		On exit  : 0/0
  4746 ;;		Unchanged: 0/0
  4747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4748 ;;      Params:         0       3       0       0       0       0       0       0
  4749 ;;      Locals:         0       1       0       0       0       0       0       0
  4750 ;;      Temps:          0       0       0       0       0       0       0       0
  4751 ;;      Totals:         0       4       0       0       0       0       0       0
  4752 ;;Total ram usage:        4 bytes
  4753 ;; Hardware stack levels used:    1
  4754 ;; Hardware stack levels required when called:   13
  4755 ;; This function calls:
  4756 ;;		_I2C_Close
  4757 ;;		_I2C_MasterWrite
  4758 ;;		_I2C_Open
  4759 ;;		_I2C_SetAddressNackCallback
  4760 ;;		_I2C_SetBuffer
  4761 ;; This function is called by:
  4762 ;;		_GetTemp
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           
  4766                           
  4767                           ;psect for function _I2C_WriteNBytes
  4768  02ED                     _I2C_WriteNBytes:
  4769                           
  4770                           ;incstack = 0
  4771                           ; Regs used in _I2C_WriteNBytes: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4772                           ;I2C_WriteNBytes@address stored from wreg
  4773  02ED  0020               	movlb	0	; select bank0
  4774  02EE  00EB               	movwf	I2C_WriteNBytes@address
  4775  02EF                     l3560:	
  4776                           ;mcc_generated_files/examples/i2c_master_example.c: 111: void I2C_WriteNBytes(i2c_addres
      +                          s_t address, uint8_t* data, size_t len);mcc_generated_files/examples/i2c_master_example.
      +                          c: 112: {;mcc_generated_files/examples/i2c_master_example.c: 113:     while(!I2C_Open(ad
      +                          dress));
  4777                           
  4778  02EF  0020               	movlb	0	; select bank0
  4779  02F0  086B               	movf	I2C_WriteNBytes@address,w
  4780  02F1  3182  2236  3182   	fcall	_I2C_Open
  4781  02F4  3A00               	xorlw	0
  4782  02F5  1903               	skipnz
  4783  02F6  2AEF               	goto	l3560
  4784                           
  4785                           ;mcc_generated_files/examples/i2c_master_example.c: 114:     I2C_SetBuffer(data,len);
  4786  02F7  0020               	movlb	0	; select bank0
  4787  02F8  086A               	movf	I2C_WriteNBytes@len+1,w
  4788  02F9  00D6               	movwf	I2C_SetBuffer@bufferSize+1
  4789  02FA  0869               	movf	I2C_WriteNBytes@len,w
  4790  02FB  00D5               	movwf	I2C_SetBuffer@bufferSize
  4791  02FC  0868               	movf	I2C_WriteNBytes@data,w
  4792  02FD  3184  24FF  3182   	fcall	_I2C_SetBuffer
  4793                           
  4794                           ;mcc_generated_files/examples/i2c_master_example.c: 115:     I2C_SetAddressNackCallback(
      +                          ((void*)0),((void*)0));
  4795  0300  3000               	movlw	0
  4796  0301  0020               	movlb	0	; select bank0
  4797  0302  00DA               	movwf	I2C_SetAddressNackCallback@cb
  4798  0303  00DB               	movwf	I2C_SetAddressNackCallback@cb+1
  4799  0304  01DC               	clrf	I2C_SetAddressNackCallback@ptr
  4800  0305  3185  250D  3182   	fcall	_I2C_SetAddressNackCallback
  4801                           
  4802                           ;mcc_generated_files/examples/i2c_master_example.c: 116:     I2C_MasterWrite();
  4803  0308  3185  25D6  3182   	fcall	_I2C_MasterWrite
  4804  030B                     l3568:	
  4805                           ;mcc_generated_files/examples/i2c_master_example.c: 117:     while(I2C_BUSY == I2C_Close
      +                          ());
  4806                           
  4807  030B  3184  243F  3182   	fcall	_I2C_Close
  4808  030E  3A01               	xorlw	1
  4809  030F  1D03               	btfss	3,2
  4810  0310  0008               	return
  4811  0311  2B0B               	goto	l3568
  4812  0312                     __end_of_I2C_WriteNBytes:
  4813                           
  4814                           	psect	text20
  4815  050D                     __ptext20:	
  4816 ;; *************** function _I2C_SetAddressNackCallback *****************
  4817 ;; Defined at:
  4818 ;;		line 283 in file "mcc_generated_files/i2c_master.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;  cb              2    5[BANK0 ] PTR FTN(PTR void ,)enum 
  4821 ;;		 -> Absolute function(1), 
  4822 ;;  ptr             1    7[BANK0 ] PTR void 
  4823 ;;		 -> NULL(0), 
  4824 ;; Auto vars:     Size  Location     Type
  4825 ;;		None
  4826 ;; Return value:  Size  Location     Type
  4827 ;;                  1    wreg      void 
  4828 ;; Registers used:
  4829 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4830 ;; Tracked objects:
  4831 ;;		On entry : 0/0
  4832 ;;		On exit  : 0/0
  4833 ;;		Unchanged: 0/0
  4834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4835 ;;      Params:         0       3       0       0       0       0       0       0
  4836 ;;      Locals:         0       0       0       0       0       0       0       0
  4837 ;;      Temps:          0       1       0       0       0       0       0       0
  4838 ;;      Totals:         0       4       0       0       0       0       0       0
  4839 ;;Total ram usage:        4 bytes
  4840 ;; Hardware stack levels used:    1
  4841 ;; Hardware stack levels required when called:    6
  4842 ;; This function calls:
  4843 ;;		_I2C_SetCallback
  4844 ;; This function is called by:
  4845 ;;		_I2C_WriteNBytes
  4846 ;;		_I2C_Read1ByteRegister
  4847 ;;		_I2C_Read2ByteRegister
  4848 ;;		_I2C_Write1ByteRegister
  4849 ;;		_I2C_Write2ByteRegister
  4850 ;;		_I2C_ReadDataBlock
  4851 ;; This function uses a non-reentrant model
  4852 ;;
  4853                           
  4854                           
  4855                           ;psect for function _I2C_SetAddressNackCallback
  4856  050D                     _I2C_SetAddressNackCallback:
  4857                           
  4858                           ;mcc_generated_files/i2c_master.c: 283: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 284: {;mcc_generated_files/i2c_master.c:
      +                           285:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
  4859                           
  4860                           ;incstack = 0
  4861                           ; Regs used in _I2C_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4862  050D  0020               	movlb	0	; select bank0
  4863  050E  085B               	movf	I2C_SetAddressNackCallback@cb+1,w
  4864  050F  00D6               	movwf	I2C_SetCallback@cb+1
  4865  0510  085A               	movf	I2C_SetAddressNackCallback@cb,w
  4866  0511  00D5               	movwf	I2C_SetCallback@cb
  4867  0512  085C               	movf	I2C_SetAddressNackCallback@ptr,w
  4868  0513  00DD               	movwf	??_I2C_SetAddressNackCallback
  4869  0514  085D               	movf	??_I2C_SetAddressNackCallback,w
  4870  0515  00D7               	movwf	I2C_SetCallback@ptr
  4871  0516  3002               	movlw	2
  4872  0517  3183  2312         	fcall	_I2C_SetCallback
  4873  0519  0008               	return
  4874  051A                     __end_of_I2C_SetAddressNackCallback:
  4875                           
  4876                           	psect	text21
  4877  05D6                     __ptext21:	
  4878 ;; *************** function _I2C_MasterWrite *****************
  4879 ;; Defined at:
  4880 ;;		line 251 in file "mcc_generated_files/i2c_master.c"
  4881 ;; Parameters:    Size  Location     Type
  4882 ;;		None
  4883 ;; Auto vars:     Size  Location     Type
  4884 ;;		None
  4885 ;; Return value:  Size  Location     Type
  4886 ;;                  1    wreg      enum E353
  4887 ;; Registers used:
  4888 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4889 ;; Tracked objects:
  4890 ;;		On entry : 0/0
  4891 ;;		On exit  : 0/0
  4892 ;;		Unchanged: 0/0
  4893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4894 ;;      Params:         0       0       0       0       0       0       0       0
  4895 ;;      Locals:         0       0       0       0       0       0       0       0
  4896 ;;      Temps:          0       0       0       0       0       0       0       0
  4897 ;;      Totals:         0       0       0       0       0       0       0       0
  4898 ;;Total ram usage:        0 bytes
  4899 ;; Hardware stack levels used:    1
  4900 ;; Hardware stack levels required when called:   12
  4901 ;; This function calls:
  4902 ;;		_I2C_MasterOperation
  4903 ;; This function is called by:
  4904 ;;		_I2C_WriteNBytes
  4905 ;;		_I2C_Read1ByteRegister
  4906 ;;		_I2C_Read2ByteRegister
  4907 ;;		_I2C_Write1ByteRegister
  4908 ;;		_I2C_Write2ByteRegister
  4909 ;;		_I2C_ReadDataBlock
  4910 ;; This function uses a non-reentrant model
  4911 ;;
  4912                           
  4913                           
  4914                           ;psect for function _I2C_MasterWrite
  4915  05D6                     _I2C_MasterWrite:
  4916                           
  4917                           ;mcc_generated_files/i2c_master.c: 253:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
  4918                           
  4919                           ;incstack = 0
  4920                           ; Regs used in _I2C_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4921  05D6  3000               	movlw	0
  4922  05D7  3183  23F3         	fcall	_I2C_MasterOperation
  4923  05D9  0008               	return
  4924  05DA                     __end_of_I2C_MasterWrite:
  4925                           
  4926                           	psect	text22
  4927  039F                     __ptext22:	
  4928 ;; *************** function _I2C_ReadNBytes *****************
  4929 ;; Defined at:
  4930 ;;		line 120 in file "mcc_generated_files/examples/i2c_master_example.c"
  4931 ;; Parameters:    Size  Location     Type
  4932 ;;  address         1    wreg     unsigned char 
  4933 ;;  data            1   19[BANK0 ] PTR unsigned char 
  4934 ;;		 -> TempH(1), 
  4935 ;;  len             2   20[BANK0 ] unsigned int 
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;  address         1   22[BANK0 ] unsigned char 
  4938 ;; Return value:  Size  Location     Type
  4939 ;;                  1    wreg      void 
  4940 ;; Registers used:
  4941 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4942 ;; Tracked objects:
  4943 ;;		On entry : 0/0
  4944 ;;		On exit  : 0/0
  4945 ;;		Unchanged: 0/0
  4946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4947 ;;      Params:         0       3       0       0       0       0       0       0
  4948 ;;      Locals:         0       1       0       0       0       0       0       0
  4949 ;;      Temps:          0       0       0       0       0       0       0       0
  4950 ;;      Totals:         0       4       0       0       0       0       0       0
  4951 ;;Total ram usage:        4 bytes
  4952 ;; Hardware stack levels used:    1
  4953 ;; Hardware stack levels required when called:   13
  4954 ;; This function calls:
  4955 ;;		_I2C_Close
  4956 ;;		_I2C_MasterRead
  4957 ;;		_I2C_Open
  4958 ;;		_I2C_SetBuffer
  4959 ;; This function is called by:
  4960 ;;		_GetTemp
  4961 ;; This function uses a non-reentrant model
  4962 ;;
  4963                           
  4964                           
  4965                           ;psect for function _I2C_ReadNBytes
  4966  039F                     _I2C_ReadNBytes:
  4967                           
  4968                           ;incstack = 0
  4969                           ; Regs used in _I2C_ReadNBytes: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4970                           ;I2C_ReadNBytes@address stored from wreg
  4971  039F  0020               	movlb	0	; select bank0
  4972  03A0  00EB               	movwf	I2C_ReadNBytes@address
  4973  03A1                     l3572:	
  4974                           ;mcc_generated_files/examples/i2c_master_example.c: 120: void I2C_ReadNBytes(i2c_address
      +                          _t address, uint8_t *data, size_t len);mcc_generated_files/examples/i2c_master_example.c
      +                          : 121: {;mcc_generated_files/examples/i2c_master_example.c: 122:     while(!I2C_Open(add
      +                          ress));
  4975                           
  4976  03A1  0020               	movlb	0	; select bank0
  4977  03A2  086B               	movf	I2C_ReadNBytes@address,w
  4978  03A3  3182  2236  3183   	fcall	_I2C_Open
  4979  03A6  3A00               	xorlw	0
  4980  03A7  1903               	skipnz
  4981  03A8  2BA1               	goto	l3572
  4982                           
  4983                           ;mcc_generated_files/examples/i2c_master_example.c: 123:     I2C_SetBuffer(data,len);
  4984  03A9  0020               	movlb	0	; select bank0
  4985  03AA  086A               	movf	I2C_ReadNBytes@len+1,w
  4986  03AB  00D6               	movwf	I2C_SetBuffer@bufferSize+1
  4987  03AC  0869               	movf	I2C_ReadNBytes@len,w
  4988  03AD  00D5               	movwf	I2C_SetBuffer@bufferSize
  4989  03AE  0868               	movf	I2C_ReadNBytes@data,w
  4990  03AF  3184  24FF  3183   	fcall	_I2C_SetBuffer
  4991                           
  4992                           ;mcc_generated_files/examples/i2c_master_example.c: 124:     I2C_MasterRead();
  4993  03B2  3185  25DA  3183   	fcall	_I2C_MasterRead
  4994  03B5                     l3578:	
  4995                           ;mcc_generated_files/examples/i2c_master_example.c: 125:     while(I2C_BUSY == I2C_Close
      +                          ());
  4996                           
  4997  03B5  3184  243F  3183   	fcall	_I2C_Close
  4998  03B8  3A01               	xorlw	1
  4999  03B9  1D03               	btfss	3,2
  5000  03BA  0008               	return
  5001  03BB  2BB5               	goto	l3578
  5002  03BC                     __end_of_I2C_ReadNBytes:
  5003                           
  5004                           	psect	text23
  5005  0236                     __ptext23:	
  5006 ;; *************** function _I2C_Open *****************
  5007 ;; Defined at:
  5008 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;  address         1    wreg     unsigned char 
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;  address         1    1[BANK0 ] unsigned char 
  5013 ;;  returnValue     1    2[BANK0 ] enum E353
  5014 ;; Return value:  Size  Location     Type
  5015 ;;                  1    wreg      enum E353
  5016 ;; Registers used:
  5017 ;;		wreg, status,2, status,0, pclath, cstack
  5018 ;; Tracked objects:
  5019 ;;		On entry : 0/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5023 ;;      Params:         0       0       0       0       0       0       0       0
  5024 ;;      Locals:         0       2       0       0       0       0       0       0
  5025 ;;      Temps:          0       1       0       0       0       0       0       0
  5026 ;;      Totals:         0       3       0       0       0       0       0       0
  5027 ;;Total ram usage:        3 bytes
  5028 ;; Hardware stack levels used:    1
  5029 ;; Hardware stack levels required when called:    6
  5030 ;; This function calls:
  5031 ;;		_I2C_MasterClearIrq
  5032 ;;		_I2C_MasterOpen
  5033 ;; This function is called by:
  5034 ;;		_I2C_WriteNBytes
  5035 ;;		_I2C_ReadNBytes
  5036 ;;		_I2C_Read1ByteRegister
  5037 ;;		_I2C_Read2ByteRegister
  5038 ;;		_I2C_Write1ByteRegister
  5039 ;;		_I2C_Write2ByteRegister
  5040 ;;		_I2C_ReadDataBlock
  5041 ;; This function uses a non-reentrant model
  5042 ;;
  5043                           
  5044                           
  5045                           ;psect for function _I2C_Open
  5046  0236                     _I2C_Open:
  5047                           
  5048                           ;incstack = 0
  5049                           ; Regs used in _I2C_Open: [wreg+status,2+status,0+pclath+cstack]
  5050                           ;I2C_Open@address stored from wreg
  5051  0236  0020               	movlb	0	; select bank0
  5052  0237  00D6               	movwf	I2C_Open@address
  5053                           
  5054                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  5055  0238  01D7               	clrf	I2C_Open@returnValue
  5056  0239  0AD7               	incf	I2C_Open@returnValue,f
  5057                           
  5058                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
  5059  023A  193C               	btfsc	_I2C_Status+28,2
  5060  023B  2A6C               	goto	l412
  5061                           
  5062                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
  5063  023C  0856               	movf	I2C_Open@address,w
  5064  023D  00D5               	movwf	??_I2C_Open
  5065  023E  0855               	movf	??_I2C_Open,w
  5066  023F  00B6               	movwf	_I2C_Status+22
  5067                           
  5068                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
  5069  0240  10BC               	bcf	_I2C_Status+28,1
  5070                           
  5071                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
  5072  0241  153C               	bsf	_I2C_Status+28,2
  5073                           
  5074                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
  5075  0242  103C               	bcf	_I2C_Status+28,0
  5076                           
  5077                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
  5078  0243  300E               	movlw	14
  5079  0244  00D5               	movwf	??_I2C_Open
  5080  0245  0855               	movf	??_I2C_Open,w
  5081  0246  00BA               	movwf	_I2C_Status+26
  5082                           
  5083                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
  5084  0247  30F4               	movlw	244
  5085  0248  00B4               	movwf	_I2C_Status+20
  5086  0249  3001               	movlw	1
  5087  024A  00B5               	movwf	_I2C_Status+21
  5088                           
  5089                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
  5090  024B  15BC               	bsf	_I2C_Status+28,3
  5091                           
  5092                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
  5093  024C  3025               	movlw	low _I2C_CallbackReturnStop
  5094  024D  00A0               	movwf	_I2C_Status
  5095  024E  3006               	movlw	high _I2C_CallbackReturnStop
  5096  024F  00A1               	movwf	_I2C_Status+1
  5097                           
  5098                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
  5099  0250  01AC               	clrf	low ((_I2C_Status| 0+12))
  5100                           
  5101                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
  5102  0251  3025               	movlw	low _I2C_CallbackReturnStop
  5103  0252  00A2               	movwf	low ((_I2C_Status| 0+2))
  5104  0253  3006               	movlw	high _I2C_CallbackReturnStop
  5105  0254  00A3               	movwf	(low ((_I2C_Status| 0+2))+1)
  5106                           
  5107                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
  5108  0255  01AD               	clrf	low ((_I2C_Status| 0+13))
  5109                           
  5110                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
  5111  0256  3025               	movlw	low _I2C_CallbackReturnStop
  5112  0257  00A4               	movwf	low ((_I2C_Status| 0+4))
  5113  0258  3006               	movlw	high _I2C_CallbackReturnStop
  5114  0259  00A5               	movwf	(low ((_I2C_Status| 0+4))+1)
  5115                           
  5116                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
  5117  025A  01AE               	clrf	low ((_I2C_Status| 0+14))
  5118                           
  5119                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
  5120  025B  3025               	movlw	low _I2C_CallbackReturnStop
  5121  025C  00A6               	movwf	low ((_I2C_Status| 0+6))
  5122  025D  3006               	movlw	high _I2C_CallbackReturnStop
  5123  025E  00A7               	movwf	(low ((_I2C_Status| 0+6))+1)
  5124                           
  5125                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
  5126  025F  01AF               	clrf	low ((_I2C_Status| 0+15))
  5127                           
  5128                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
  5129  0260  3023               	movlw	low _I2C_CallbackReturnReset
  5130  0261  00A8               	movwf	low ((_I2C_Status| 0+8))
  5131  0262  3006               	movlw	high _I2C_CallbackReturnReset
  5132  0263  00A9               	movwf	(low ((_I2C_Status| 0+8))+1)
  5133                           
  5134                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
  5135  0264  01B0               	clrf	low ((_I2C_Status| 0+16))
  5136                           
  5137                           ;mcc_generated_files/i2c_master.c: 202:         I2C_MasterClearIrq();
  5138  0265  3186  261E  3182   	fcall	_I2C_MasterClearIrq
  5139                           
  5140                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterOpen();
  5141  0268  3185  2527         	fcall	_I2C_MasterOpen
  5142                           
  5143                           ;mcc_generated_files/i2c_master.c: 204:         returnValue = I2C_NOERR;
  5144  026A  0020               	movlb	0	; select bank0
  5145  026B  01D7               	clrf	I2C_Open@returnValue
  5146  026C                     l412:	
  5147                           ;mcc_generated_files/i2c_master.c: 205:     }
  5148                           
  5149                           
  5150                           ;mcc_generated_files/i2c_master.c: 206:     return returnValue;
  5151  026C  0857               	movf	I2C_Open@returnValue,w
  5152  026D  0008               	return
  5153  026E                     __end_of_I2C_Open:
  5154                           
  5155                           	psect	text24
  5156  0527                     __ptext24:	
  5157 ;; *************** function _I2C_MasterOpen *****************
  5158 ;; Defined at:
  5159 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
  5160 ;; Parameters:    Size  Location     Type
  5161 ;;		None
  5162 ;; Auto vars:     Size  Location     Type
  5163 ;;		None
  5164 ;; Return value:  Size  Location     Type
  5165 ;;                  1    wreg      _Bool 
  5166 ;; Registers used:
  5167 ;;		wreg, status,2
  5168 ;; Tracked objects:
  5169 ;;		On entry : 0/0
  5170 ;;		On exit  : 0/0
  5171 ;;		Unchanged: 0/0
  5172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5173 ;;      Params:         0       0       0       0       0       0       0       0
  5174 ;;      Locals:         0       0       0       0       0       0       0       0
  5175 ;;      Temps:          0       0       0       0       0       0       0       0
  5176 ;;      Totals:         0       0       0       0       0       0       0       0
  5177 ;;Total ram usage:        0 bytes
  5178 ;; Hardware stack levels used:    1
  5179 ;; Hardware stack levels required when called:    5
  5180 ;; This function calls:
  5181 ;;		Nothing
  5182 ;; This function is called by:
  5183 ;;		_I2C_Open
  5184 ;; This function uses a non-reentrant model
  5185 ;;
  5186                           
  5187                           
  5188                           ;psect for function _I2C_MasterOpen
  5189  0527                     _I2C_MasterOpen:
  5190                           
  5191                           ;mcc_generated_files/i2c_master.c: 545:     if(!SSP1CON1bits.SSPEN)
  5192                           
  5193                           ;incstack = 0
  5194                           ; Regs used in _I2C_MasterOpen: [wreg+status,2]
  5195  0527  0024               	movlb	4	; select bank4
  5196  0528  1A95               	btfsc	21,5	;volatile
  5197  0529  0008               	return
  5198                           
  5199                           ;mcc_generated_files/i2c_master.c: 546:     {;mcc_generated_files/i2c_master.c: 547:    
      +                               SSP1STAT = 0x00;
  5200  052A  0194               	clrf	20	;volatile
  5201                           
  5202                           ;mcc_generated_files/i2c_master.c: 548:         SSP1CON1 = 0x08;
  5203  052B  3008               	movlw	8
  5204  052C  0095               	movwf	21	;volatile
  5205                           
  5206                           ;mcc_generated_files/i2c_master.c: 549:         SSP1CON2 = 0x00;
  5207  052D  0196               	clrf	22	;volatile
  5208                           
  5209                           ;mcc_generated_files/i2c_master.c: 550:         SSP1ADD = 0x27;
  5210  052E  3027               	movlw	39
  5211  052F  0092               	movwf	18	;volatile
  5212                           
  5213                           ;mcc_generated_files/i2c_master.c: 551:         SSP1CON1bits.SSPEN = 1;
  5214  0530  1695               	bsf	21,5	;volatile
  5215  0531  0008               	return
  5216  0532                     __end_of_I2C_MasterOpen:
  5217                           
  5218                           	psect	text25
  5219  05DA                     __ptext25:	
  5220 ;; *************** function _I2C_MasterRead *****************
  5221 ;; Defined at:
  5222 ;;		line 246 in file "mcc_generated_files/i2c_master.c"
  5223 ;; Parameters:    Size  Location     Type
  5224 ;;		None
  5225 ;; Auto vars:     Size  Location     Type
  5226 ;;		None
  5227 ;; Return value:  Size  Location     Type
  5228 ;;                  1    wreg      enum E353
  5229 ;; Registers used:
  5230 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5231 ;; Tracked objects:
  5232 ;;		On entry : 0/0
  5233 ;;		On exit  : 0/0
  5234 ;;		Unchanged: 0/0
  5235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5236 ;;      Params:         0       0       0       0       0       0       0       0
  5237 ;;      Locals:         0       0       0       0       0       0       0       0
  5238 ;;      Temps:          0       0       0       0       0       0       0       0
  5239 ;;      Totals:         0       0       0       0       0       0       0       0
  5240 ;;Total ram usage:        0 bytes
  5241 ;; Hardware stack levels used:    1
  5242 ;; Hardware stack levels required when called:   12
  5243 ;; This function calls:
  5244 ;;		_I2C_MasterOperation
  5245 ;; This function is called by:
  5246 ;;		_I2C_ReadNBytes
  5247 ;; This function uses a non-reentrant model
  5248 ;;
  5249                           
  5250                           
  5251                           ;psect for function _I2C_MasterRead
  5252  05DA                     _I2C_MasterRead:
  5253                           
  5254                           ;mcc_generated_files/i2c_master.c: 248:     return I2C_MasterOperation(1);;	Return value
      +                           of _I2C_MasterRead is never used
  5255                           
  5256                           ;incstack = 0
  5257                           ; Regs used in _I2C_MasterRead: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5258  05DA  3001               	movlw	1
  5259  05DB  3183  23F3         	fcall	_I2C_MasterOperation
  5260  05DD  0008               	return
  5261  05DE                     __end_of_I2C_MasterRead:
  5262                           
  5263                           	psect	text26
  5264  03F3                     __ptext26:	
  5265 ;; *************** function _I2C_MasterOperation *****************
  5266 ;; Defined at:
  5267 ;;		line 224 in file "mcc_generated_files/i2c_master.c"
  5268 ;; Parameters:    Size  Location     Type
  5269 ;;  read            1    wreg     _Bool 
  5270 ;; Auto vars:     Size  Location     Type
  5271 ;;  read            1   17[BANK0 ] _Bool 
  5272 ;;  returnValue     1   18[BANK0 ] enum E353
  5273 ;; Return value:  Size  Location     Type
  5274 ;;                  1    wreg      enum E353
  5275 ;; Registers used:
  5276 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5277 ;; Tracked objects:
  5278 ;;		On entry : 0/0
  5279 ;;		On exit  : 0/0
  5280 ;;		Unchanged: 0/0
  5281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5282 ;;      Params:         0       0       0       0       0       0       0       0
  5283 ;;      Locals:         0       2       0       0       0       0       0       0
  5284 ;;      Temps:          0       1       0       0       0       0       0       0
  5285 ;;      Totals:         0       3       0       0       0       0       0       0
  5286 ;;Total ram usage:        3 bytes
  5287 ;; Hardware stack levels used:    1
  5288 ;; Hardware stack levels required when called:   11
  5289 ;; This function calls:
  5290 ;;		_I2C_MasterStart
  5291 ;;		_I2C_Poller
  5292 ;; This function is called by:
  5293 ;;		_I2C_MasterRead
  5294 ;;		_I2C_MasterWrite
  5295 ;; This function uses a non-reentrant model
  5296 ;;
  5297                           
  5298                           
  5299                           ;psect for function _I2C_MasterOperation
  5300  03F3                     _I2C_MasterOperation:
  5301                           
  5302                           ;incstack = 0
  5303                           ; Regs used in _I2C_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5304                           ;I2C_MasterOperation@read stored from wreg
  5305  03F3  0020               	movlb	0	; select bank0
  5306  03F4  00E6               	movwf	I2C_MasterOperation@read
  5307                           
  5308                           ;mcc_generated_files/i2c_master.c: 224: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 225: {;mcc_generated_files/i2c_master.c: 226:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  5309  03F5  01E7               	clrf	I2C_MasterOperation@returnValue
  5310  03F6  0AE7               	incf	I2C_MasterOperation@returnValue,f
  5311                           
  5312                           ;mcc_generated_files/i2c_master.c: 227:     if(!I2C_Status.busy)
  5313  03F7  18BC               	btfsc	_I2C_Status+28,1
  5314  03F8  2C0A               	goto	l3494
  5315                           
  5316                           ;mcc_generated_files/i2c_master.c: 228:     {;mcc_generated_files/i2c_master.c: 229:    
      +                               I2C_Status.busy = 1;
  5317  03F9  14BC               	bsf	_I2C_Status+28,1
  5318                           
  5319                           ;mcc_generated_files/i2c_master.c: 230:         returnValue = I2C_NOERR;
  5320  03FA  01E7               	clrf	I2C_MasterOperation@returnValue
  5321                           
  5322                           ;mcc_generated_files/i2c_master.c: 232:         if(read)
  5323  03FB  0866               	movf	I2C_MasterOperation@read,w
  5324  03FC  1903               	btfsc	3,2
  5325  03FD  2C01               	goto	l3488
  5326                           
  5327                           ;mcc_generated_files/i2c_master.c: 233:         {;mcc_generated_files/i2c_master.c: 234:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
  5328  03FE  01BA               	clrf	_I2C_Status+26
  5329  03FF  0ABA               	incf	_I2C_Status+26,f
  5330                           
  5331                           ;mcc_generated_files/i2c_master.c: 235:         }
  5332  0400  2C05               	goto	l3490
  5333  0401                     l3488:
  5334                           
  5335                           ;mcc_generated_files/i2c_master.c: 237:         {;mcc_generated_files/i2c_master.c: 238:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
  5336  0401  3002               	movlw	2
  5337  0402  00E5               	movwf	??_I2C_MasterOperation
  5338  0403  0865               	movf	??_I2C_MasterOperation,w
  5339  0404  00BA               	movwf	_I2C_Status+26
  5340  0405                     l3490:
  5341                           
  5342                           ;mcc_generated_files/i2c_master.c: 240:         I2C_MasterStart();
  5343  0405  3186  2615  3183   	fcall	_I2C_MasterStart
  5344                           
  5345                           ;mcc_generated_files/i2c_master.c: 241:         I2C_Poller();
  5346  0408  3185  253D         	fcall	_I2C_Poller
  5347  040A                     l3494:
  5348                           
  5349                           ;mcc_generated_files/i2c_master.c: 243:     return returnValue;
  5350  040A  0020               	movlb	0	; select bank0
  5351  040B  0867               	movf	I2C_MasterOperation@returnValue,w
  5352  040C  0008               	return
  5353  040D                     __end_of_I2C_MasterOperation:
  5354                           
  5355                           	psect	text27
  5356  053D                     __ptext27:	
  5357 ;; *************** function _I2C_Poller *****************
  5358 ;; Defined at:
  5359 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;		None
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;		None
  5364 ;; Return value:  Size  Location     Type
  5365 ;;                  1    wreg      void 
  5366 ;; Registers used:
  5367 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5368 ;; Tracked objects:
  5369 ;;		On entry : 0/0
  5370 ;;		On exit  : 0/0
  5371 ;;		Unchanged: 0/0
  5372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5373 ;;      Params:         0       0       0       0       0       0       0       0
  5374 ;;      Locals:         0       0       0       0       0       0       0       0
  5375 ;;      Temps:          0       0       0       0       0       0       0       0
  5376 ;;      Totals:         0       0       0       0       0       0       0       0
  5377 ;;Total ram usage:        0 bytes
  5378 ;; Hardware stack levels used:    1
  5379 ;; Hardware stack levels required when called:   10
  5380 ;; This function calls:
  5381 ;;		_I2C_MasterFsm
  5382 ;;		_I2C_MasterWaitForEvent
  5383 ;; This function is called by:
  5384 ;;		_I2C_MasterOperation
  5385 ;; This function uses a non-reentrant model
  5386 ;;
  5387                           
  5388                           
  5389                           ;psect for function _I2C_Poller
  5390  053D                     _I2C_Poller:
  5391  053D                     l3460:	
  5392                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  5393                           
  5394                           ;incstack = 0
  5395                           ; Regs used in _I2C_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5396                           
  5397                           
  5398                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  5399  053D  0020               	movlb	0	; select bank0
  5400  053E  1CBC               	btfss	_I2C_Status+28,1
  5401  053F  0008               	return
  5402                           
  5403                           ;mcc_generated_files/i2c_master.c: 315:     {;mcc_generated_files/i2c_master.c: 316:    
      +                               I2C_MasterWaitForEvent();
  5404  0540  3185  25DE  3185   	fcall	_I2C_MasterWaitForEvent
  5405                           
  5406                           ;mcc_generated_files/i2c_master.c: 317:         I2C_MasterFsm();
  5407  0543  3182  22C6  3185   	fcall	_I2C_MasterFsm
  5408  0546  2D3D               	goto	l3460
  5409  0547                     __end_of_I2C_Poller:
  5410                           
  5411                           	psect	text28
  5412  05DE                     __ptext28:	
  5413 ;; *************** function _I2C_MasterWaitForEvent *****************
  5414 ;; Defined at:
  5415 ;;		line 650 in file "mcc_generated_files/i2c_master.c"
  5416 ;; Parameters:    Size  Location     Type
  5417 ;;		None
  5418 ;; Auto vars:     Size  Location     Type
  5419 ;;		None
  5420 ;; Return value:  Size  Location     Type
  5421 ;;                  1    wreg      void 
  5422 ;; Registers used:
  5423 ;;		None
  5424 ;; Tracked objects:
  5425 ;;		On entry : 0/0
  5426 ;;		On exit  : 0/0
  5427 ;;		Unchanged: 0/0
  5428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5429 ;;      Params:         0       0       0       0       0       0       0       0
  5430 ;;      Locals:         0       0       0       0       0       0       0       0
  5431 ;;      Temps:          0       0       0       0       0       0       0       0
  5432 ;;      Totals:         0       0       0       0       0       0       0       0
  5433 ;;Total ram usage:        0 bytes
  5434 ;; Hardware stack levels used:    1
  5435 ;; Hardware stack levels required when called:    5
  5436 ;; This function calls:
  5437 ;;		Nothing
  5438 ;; This function is called by:
  5439 ;;		_I2C_Poller
  5440 ;; This function uses a non-reentrant model
  5441 ;;
  5442                           
  5443                           
  5444                           ;psect for function _I2C_MasterWaitForEvent
  5445  05DE                     _I2C_MasterWaitForEvent:
  5446  05DE                     l635:	
  5447                           ;incstack = 0
  5448                           ; Regs used in _I2C_MasterWaitForEvent: []
  5449                           ;mcc_generated_files/i2c_master.c: 652:     while(1)
  5450                           
  5451                           
  5452                           ;mcc_generated_files/i2c_master.c: 653:     {;mcc_generated_files/i2c_master.c: 654:    
      +                               if(PIR1bits.SSP1IF)
  5453  05DE  0020               	movlb	0	; select bank0
  5454  05DF  1991               	btfsc	17,3	;volatile
  5455  05E0  0008               	return
  5456  05E1  2DDE               	goto	l635
  5457  05E2                     __end_of_I2C_MasterWaitForEvent:
  5458                           
  5459                           	psect	text29
  5460  02C6                     __ptext29:	
  5461 ;; *************** function _I2C_MasterFsm *****************
  5462 ;; Defined at:
  5463 ;;		line 321 in file "mcc_generated_files/i2c_master.c"
  5464 ;; Parameters:    Size  Location     Type
  5465 ;;		None
  5466 ;; Auto vars:     Size  Location     Type
  5467 ;;		None
  5468 ;; Return value:  Size  Location     Type
  5469 ;;                  1    wreg      void 
  5470 ;; Registers used:
  5471 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5472 ;; Tracked objects:
  5473 ;;		On entry : 0/0
  5474 ;;		On exit  : 0/0
  5475 ;;		Unchanged: 0/0
  5476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5477 ;;      Params:         0       0       0       0       0       0       0       0
  5478 ;;      Locals:         0       0       0       0       0       0       0       0
  5479 ;;      Temps:          0       3       0       0       0       0       0       0
  5480 ;;      Totals:         0       3       0       0       0       0       0       0
  5481 ;;Total ram usage:        3 bytes
  5482 ;; Hardware stack levels used:    1
  5483 ;; Hardware stack levels required when called:    9
  5484 ;; This function calls:
  5485 ;;		_I2C_DO_ADDRESS_NACK
  5486 ;;		_I2C_DO_IDLE
  5487 ;;		_I2C_DO_RCEN
  5488 ;;		_I2C_DO_RESET
  5489 ;;		_I2C_DO_RX
  5490 ;;		_I2C_DO_RX_ACK
  5491 ;;		_I2C_DO_RX_NACK_RESTART
  5492 ;;		_I2C_DO_RX_NACK_STOP
  5493 ;;		_I2C_DO_SEND_ADR_READ
  5494 ;;		_I2C_DO_SEND_ADR_WRITE
  5495 ;;		_I2C_DO_SEND_RESTART
  5496 ;;		_I2C_DO_SEND_RESTART_READ
  5497 ;;		_I2C_DO_SEND_RESTART_WRITE
  5498 ;;		_I2C_DO_SEND_STOP
  5499 ;;		_I2C_DO_TX
  5500 ;;		_I2C_DO_TX_EMPTY
  5501 ;;		_I2C_MasterClearIrq
  5502 ;;		_I2C_MasterIsNack
  5503 ;; This function is called by:
  5504 ;;		_I2C_Poller
  5505 ;; This function uses a non-reentrant model
  5506 ;;
  5507                           
  5508                           
  5509                           ;psect for function _I2C_MasterFsm
  5510  02C6                     _I2C_MasterFsm:
  5511                           
  5512                           ;mcc_generated_files/i2c_master.c: 323:     I2C_MasterClearIrq();
  5513                           
  5514                           ;incstack = 0
  5515                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5516  02C6  3186  261E  3182   	fcall	_I2C_MasterClearIrq
  5517                           
  5518                           ;mcc_generated_files/i2c_master.c: 325:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  5519  02C9  0020               	movlb	0	; select bank0
  5520  02CA  1C3C               	btfss	_I2C_Status+28,0
  5521  02CB  2AD7               	goto	l3450
  5522  02CC  3185  25B6  3182   	fcall	_I2C_MasterIsNack
  5523  02CF  3A00               	xorlw	0
  5524  02D0  1903               	skipnz
  5525  02D1  2AD7               	goto	l3450
  5526                           
  5527                           ;mcc_generated_files/i2c_master.c: 326:     {;mcc_generated_files/i2c_master.c: 327:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  5528  02D2  300F               	movlw	15
  5529  02D3  0020               	movlb	0	; select bank0
  5530  02D4  00E2               	movwf	??_I2C_MasterFsm
  5531  02D5  0862               	movf	??_I2C_MasterFsm,w
  5532  02D6  00BA               	movwf	_I2C_Status+26
  5533  02D7                     l3450:
  5534                           
  5535                           ;mcc_generated_files/i2c_master.c: 329:     I2C_Status.state = fsmStateTable[I2C_Status.
      +                          state]();
  5536  02D7  0020               	movlb	0	; select bank0
  5537  02D8  083A               	movf	_I2C_Status+26,w
  5538  02D9  00E2               	movwf	??_I2C_MasterFsm
  5539  02DA  01E3               	clrf	??_I2C_MasterFsm+1
  5540  02DB  35E2               	lslf	??_I2C_MasterFsm,f
  5541  02DC  0DE3               	rlf	??_I2C_MasterFsm+1,f
  5542  02DD  307F               	movlw	low (_fsmStateTable| (0+32768))
  5543  02DE  0762               	addwf	??_I2C_MasterFsm,w
  5544  02DF  0084               	movwf	4
  5545  02E0  3083               	movlw	high (_fsmStateTable| (0+32768))
  5546  02E1  3D63               	addwfc	??_I2C_MasterFsm+1,w
  5547  02E2  0085               	movwf	5
  5548  02E3  3F01               	moviw [1]fsr0
  5549  02E4  008A               	movwf	10
  5550  02E5  3F00               	moviw [0]fsr0
  5551  02E6  000A               	callw
  5552  02E7  3182               	pagesel	$
  5553  02E8  0020               	movlb	0	; select bank0
  5554  02E9  00E4               	movwf	??_I2C_MasterFsm+2
  5555  02EA  0864               	movf	??_I2C_MasterFsm+2,w
  5556  02EB  00BA               	movwf	_I2C_Status+26
  5557  02EC  0008               	return
  5558  02ED                     __end_of_I2C_MasterFsm:
  5559                           
  5560                           	psect	text30
  5561  029B                     __ptext30:	
  5562 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  5563 ;; Defined at:
  5564 ;;		line 500 in file "mcc_generated_files/i2c_master.c"
  5565 ;; Parameters:    Size  Location     Type
  5566 ;;		None
  5567 ;; Auto vars:     Size  Location     Type
  5568 ;;		None
  5569 ;; Return value:  Size  Location     Type
  5570 ;;                  1    wreg      enum E3874
  5571 ;; Registers used:
  5572 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5573 ;; Tracked objects:
  5574 ;;		On entry : 0/0
  5575 ;;		On exit  : 0/0
  5576 ;;		Unchanged: 0/0
  5577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5578 ;;      Params:         0       0       0       0       0       0       0       0
  5579 ;;      Locals:         0       0       0       0       0       0       0       0
  5580 ;;      Temps:          0       3       0       0       0       0       0       0
  5581 ;;      Totals:         0       3       0       0       0       0       0       0
  5582 ;;Total ram usage:        3 bytes
  5583 ;; Hardware stack levels used:    1
  5584 ;; Hardware stack levels required when called:    8
  5585 ;; This function calls:
  5586 ;;		Absolute function
  5587 ;;		_I2C_CallbackReturnReset
  5588 ;;		_I2C_CallbackReturnStop
  5589 ;;		_I2C_DO_SEND_RESTART
  5590 ;;		_I2C_DO_SEND_STOP
  5591 ;;		_rd1RegCompleteHandler
  5592 ;;		_rd2RegCompleteHandler
  5593 ;;		_rdBlkRegCompleteHandler
  5594 ;;		_wr1RegCompleteHandler
  5595 ;;		_wr2RegCompleteHandler
  5596 ;; This function is called by:
  5597 ;;		_I2C_MasterFsm
  5598 ;; This function uses a non-reentrant model
  5599 ;;
  5600                           
  5601                           
  5602                           ;psect for function _I2C_DO_ADDRESS_NACK
  5603  029B                     _I2C_DO_ADDRESS_NACK:
  5604                           
  5605                           ;mcc_generated_files/i2c_master.c: 502:     I2C_Status.addressNackCheck = 0;
  5606                           
  5607                           ;incstack = 0
  5608                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5609  029B  0020               	movlb	0	; select bank0
  5610  029C  103C               	bcf	_I2C_Status+28,0
  5611                           
  5612                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.error = I2C_FAIL;
  5613  029D  3002               	movlw	2
  5614  029E  00DF               	movwf	??_I2C_DO_ADDRESS_NACK
  5615  029F  085F               	movf	??_I2C_DO_ADDRESS_NACK,w
  5616  02A0  00BB               	movwf	_I2C_Status+27
  5617                           
  5618                           ;mcc_generated_files/i2c_master.c: 504:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  5619  02A1  2AA8               	goto	l3434
  5620  02A2                     l3424:
  5621                           
  5622                           ;mcc_generated_files/i2c_master.c: 508:             return I2C_DO_SEND_RESTART();
  5623  02A2  3185  25F2         	fcall	_I2C_DO_SEND_RESTART
  5624  02A4  0008               	return
  5625  02A5                     l3428:
  5626                           
  5627                           ;mcc_generated_files/i2c_master.c: 510:             return I2C_DO_SEND_STOP();
  5628  02A5  3185  25EE         	fcall	_I2C_DO_SEND_STOP
  5629  02A7  0008               	return
  5630  02A8                     l3434:
  5631  02A8  082E               	movf	low ((_I2C_Status| 0+14)),w
  5632  02A9  00DF               	movwf	??_I2C_DO_ADDRESS_NACK
  5633  02AA  085F               	movf	??_I2C_DO_ADDRESS_NACK,w
  5634  02AB  00DE               	movwf	I2C_CallbackReturnReset@funPtr
  5635  02AC  3004               	movlw	4
  5636  02AD  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  5637  02AE  0086               	movwf	6
  5638  02AF  0187               	clrf	7
  5639  02B0  3F41               	moviw [1]fsr1
  5640  02B1  008A               	movwf	10
  5641  02B2  3F40               	moviw [0]fsr1
  5642  02B3  000A               	callw
  5643  02B4  3182               	pagesel	$
  5644  02B5  0020               	movlb	0	; select bank0
  5645  02B6  00E0               	movwf	??_I2C_DO_ADDRESS_NACK+1
  5646  02B7  01E1               	clrf	??_I2C_DO_ADDRESS_NACK+2
  5647                           
  5648                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5649                           ; Switch size 1, requested type "simple"
  5650                           ; Number of cases is 1, Range of values is 0 to 0
  5651                           ; switch strategies available:
  5652                           ; Name         Instructions Cycles
  5653                           ; simple_byte            4     3 (average)
  5654                           ; direct_byte            8     6 (fixed)
  5655                           ; jumptable            260     6 (fixed)
  5656                           ;	Chosen strategy is simple_byte
  5657  02B8  0861               	movf	??_I2C_DO_ADDRESS_NACK+2,w
  5658  02B9  3A00               	xorlw	0	; case 0
  5659  02BA  1903               	skipnz
  5660  02BB  2ABD               	goto	l3982
  5661  02BC  2AA5               	goto	l3428
  5662  02BD                     l3982:
  5663                           
  5664                           ; Switch size 1, requested type "simple"
  5665                           ; Number of cases is 2, Range of values is 2 to 3
  5666                           ; switch strategies available:
  5667                           ; Name         Instructions Cycles
  5668                           ; simple_byte            7     4 (average)
  5669                           ; direct_byte           13     9 (fixed)
  5670                           ; jumptable            263     9 (fixed)
  5671                           ;	Chosen strategy is simple_byte
  5672  02BD  0860               	movf	??_I2C_DO_ADDRESS_NACK+1,w
  5673  02BE  3A02               	xorlw	2	; case 2
  5674  02BF  1903               	skipnz
  5675  02C0  2AA2               	goto	l3424
  5676  02C1  3A01               	xorlw	1	; case 3
  5677  02C2  1903               	skipnz
  5678  02C3  2AA2               	goto	l3424
  5679  02C4  2AA5               	goto	l3428
  5680  02C5  0008               	return
  5681  02C6                     __end_of_I2C_DO_ADDRESS_NACK:
  5682                           
  5683                           	psect	text31
  5684  05C8                     __ptext31:	
  5685 ;; *************** function _I2C_DO_RESET *****************
  5686 ;; Defined at:
  5687 ;;		line 494 in file "mcc_generated_files/i2c_master.c"
  5688 ;; Parameters:    Size  Location     Type
  5689 ;;		None
  5690 ;; Auto vars:     Size  Location     Type
  5691 ;;		None
  5692 ;; Return value:  Size  Location     Type
  5693 ;;                  1    wreg      enum E3874
  5694 ;; Registers used:
  5695 ;;		wreg, status,2
  5696 ;; Tracked objects:
  5697 ;;		On entry : 0/0
  5698 ;;		On exit  : 0/0
  5699 ;;		Unchanged: 0/0
  5700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5701 ;;      Params:         0       0       0       0       0       0       0       0
  5702 ;;      Locals:         0       0       0       0       0       0       0       0
  5703 ;;      Temps:          0       0       0       0       0       0       0       0
  5704 ;;      Totals:         0       0       0       0       0       0       0       0
  5705 ;;Total ram usage:        0 bytes
  5706 ;; Hardware stack levels used:    1
  5707 ;; Hardware stack levels required when called:    5
  5708 ;; This function calls:
  5709 ;;		Nothing
  5710 ;; This function is called by:
  5711 ;;		_I2C_MasterFsm
  5712 ;; This function uses a non-reentrant model
  5713 ;;
  5714                           
  5715                           
  5716                           ;psect for function _I2C_DO_RESET
  5717  05C8                     _I2C_DO_RESET:
  5718                           
  5719                           ;mcc_generated_files/i2c_master.c: 496:     I2C_Status.busy = 0;
  5720                           
  5721                           ;incstack = 0
  5722                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
  5723  05C8  0020               	movlb	0	; select bank0
  5724  05C9  10BC               	bcf	_I2C_Status+28,1
  5725                           
  5726                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.error = I2C_NOERR;
  5727  05CA  01BB               	clrf	_I2C_Status+27
  5728                           
  5729                           ;mcc_generated_files/i2c_master.c: 498:     return I2C_RESET;
  5730  05CB  300E               	movlw	14
  5731  05CC  0008               	return
  5732  05CD                     __end_of_I2C_DO_RESET:
  5733                           
  5734                           	psect	text32
  5735  05E2                     __ptext32:	
  5736 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  5737 ;; Defined at:
  5738 ;;		line 488 in file "mcc_generated_files/i2c_master.c"
  5739 ;; Parameters:    Size  Location     Type
  5740 ;;		None
  5741 ;; Auto vars:     Size  Location     Type
  5742 ;;		None
  5743 ;; Return value:  Size  Location     Type
  5744 ;;                  1    wreg      enum E3874
  5745 ;; Registers used:
  5746 ;;		wreg, status,2, status,0, pclath, cstack
  5747 ;; Tracked objects:
  5748 ;;		On entry : 0/0
  5749 ;;		On exit  : 0/0
  5750 ;;		Unchanged: 0/0
  5751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5752 ;;      Params:         0       0       0       0       0       0       0       0
  5753 ;;      Locals:         0       0       0       0       0       0       0       0
  5754 ;;      Temps:          0       0       0       0       0       0       0       0
  5755 ;;      Totals:         0       0       0       0       0       0       0       0
  5756 ;;Total ram usage:        0 bytes
  5757 ;; Hardware stack levels used:    1
  5758 ;; Hardware stack levels required when called:    6
  5759 ;; This function calls:
  5760 ;;		_I2C_MasterSendNack
  5761 ;; This function is called by:
  5762 ;;		_I2C_DO_RX
  5763 ;;		_I2C_MasterFsm
  5764 ;; This function uses a non-reentrant model
  5765 ;;
  5766                           
  5767                           
  5768                           ;psect for function _I2C_DO_RX_NACK_RESTART
  5769  05E2                     _I2C_DO_RX_NACK_RESTART:
  5770                           
  5771                           ;mcc_generated_files/i2c_master.c: 490:     I2C_MasterSendNack();
  5772                           
  5773                           ;incstack = 0
  5774                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  5775  05E2  3186  2602         	fcall	_I2C_MasterSendNack
  5776                           
  5777                           ;mcc_generated_files/i2c_master.c: 491:     return I2C_SEND_RESTART;
  5778  05E4  3009               	movlw	9
  5779  05E5  0008               	return
  5780  05E6                     __end_of_I2C_DO_RX_NACK_RESTART:
  5781                           
  5782                           	psect	text33
  5783  05E6                     __ptext33:	
  5784 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  5785 ;; Defined at:
  5786 ;;		line 482 in file "mcc_generated_files/i2c_master.c"
  5787 ;; Parameters:    Size  Location     Type
  5788 ;;		None
  5789 ;; Auto vars:     Size  Location     Type
  5790 ;;		None
  5791 ;; Return value:  Size  Location     Type
  5792 ;;                  1    wreg      enum E3874
  5793 ;; Registers used:
  5794 ;;		wreg, status,2, status,0, pclath, cstack
  5795 ;; Tracked objects:
  5796 ;;		On entry : 0/0
  5797 ;;		On exit  : 0/0
  5798 ;;		Unchanged: 0/0
  5799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5800 ;;      Params:         0       0       0       0       0       0       0       0
  5801 ;;      Locals:         0       0       0       0       0       0       0       0
  5802 ;;      Temps:          0       0       0       0       0       0       0       0
  5803 ;;      Totals:         0       0       0       0       0       0       0       0
  5804 ;;Total ram usage:        0 bytes
  5805 ;; Hardware stack levels used:    1
  5806 ;; Hardware stack levels required when called:    6
  5807 ;; This function calls:
  5808 ;;		_I2C_MasterSendNack
  5809 ;; This function is called by:
  5810 ;;		_I2C_DO_RX
  5811 ;;		_I2C_MasterFsm
  5812 ;; This function uses a non-reentrant model
  5813 ;;
  5814                           
  5815                           
  5816                           ;psect for function _I2C_DO_RX_NACK_STOP
  5817  05E6                     _I2C_DO_RX_NACK_STOP:
  5818                           
  5819                           ;mcc_generated_files/i2c_master.c: 484:     I2C_MasterSendNack();
  5820                           
  5821                           ;incstack = 0
  5822                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  5823  05E6  3186  2602         	fcall	_I2C_MasterSendNack
  5824                           
  5825                           ;mcc_generated_files/i2c_master.c: 485:     return I2C_SEND_STOP;
  5826  05E8  300A               	movlw	10
  5827  05E9  0008               	return
  5828  05EA                     __end_of_I2C_DO_RX_NACK_STOP:
  5829                           
  5830                           	psect	text34
  5831  05EA                     __ptext34:	
  5832 ;; *************** function _I2C_DO_RX_ACK *****************
  5833 ;; Defined at:
  5834 ;;		line 475 in file "mcc_generated_files/i2c_master.c"
  5835 ;; Parameters:    Size  Location     Type
  5836 ;;		None
  5837 ;; Auto vars:     Size  Location     Type
  5838 ;;		None
  5839 ;; Return value:  Size  Location     Type
  5840 ;;                  1    wreg      enum E3874
  5841 ;; Registers used:
  5842 ;;		wreg, status,2, status,0, pclath, cstack
  5843 ;; Tracked objects:
  5844 ;;		On entry : 0/0
  5845 ;;		On exit  : 0/0
  5846 ;;		Unchanged: 0/0
  5847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5848 ;;      Params:         0       0       0       0       0       0       0       0
  5849 ;;      Locals:         0       0       0       0       0       0       0       0
  5850 ;;      Temps:          0       0       0       0       0       0       0       0
  5851 ;;      Totals:         0       0       0       0       0       0       0       0
  5852 ;;Total ram usage:        0 bytes
  5853 ;; Hardware stack levels used:    1
  5854 ;; Hardware stack levels required when called:    6
  5855 ;; This function calls:
  5856 ;;		_I2C_MasterSendAck
  5857 ;; This function is called by:
  5858 ;;		_I2C_MasterFsm
  5859 ;; This function uses a non-reentrant model
  5860 ;;
  5861                           
  5862                           
  5863                           ;psect for function _I2C_DO_RX_ACK
  5864  05EA                     _I2C_DO_RX_ACK:
  5865                           
  5866                           ;mcc_generated_files/i2c_master.c: 477:     I2C_MasterSendAck();
  5867                           
  5868                           ;incstack = 0
  5869                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
  5870  05EA  3185  25FE         	fcall	_I2C_MasterSendAck
  5871                           
  5872                           ;mcc_generated_files/i2c_master.c: 478:     return I2C_RCEN;
  5873  05EC  3005               	movlw	5
  5874  05ED  0008               	return
  5875  05EE                     __end_of_I2C_DO_RX_ACK:
  5876                           
  5877                           	psect	text35
  5878  05EE                     __ptext35:	
  5879 ;; *************** function _I2C_DO_SEND_STOP *****************
  5880 ;; Defined at:
  5881 ;;		line 469 in file "mcc_generated_files/i2c_master.c"
  5882 ;; Parameters:    Size  Location     Type
  5883 ;;		None
  5884 ;; Auto vars:     Size  Location     Type
  5885 ;;		None
  5886 ;; Return value:  Size  Location     Type
  5887 ;;                  1    wreg      enum E3874
  5888 ;; Registers used:
  5889 ;;		wreg, status,2, status,0, pclath, cstack
  5890 ;; Tracked objects:
  5891 ;;		On entry : 0/0
  5892 ;;		On exit  : 0/0
  5893 ;;		Unchanged: 0/0
  5894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5895 ;;      Params:         0       0       0       0       0       0       0       0
  5896 ;;      Locals:         0       0       0       0       0       0       0       0
  5897 ;;      Temps:          0       0       0       0       0       0       0       0
  5898 ;;      Totals:         0       0       0       0       0       0       0       0
  5899 ;;Total ram usage:        0 bytes
  5900 ;; Hardware stack levels used:    1
  5901 ;; Hardware stack levels required when called:    6
  5902 ;; This function calls:
  5903 ;;		_I2C_MasterStop
  5904 ;; This function is called by:
  5905 ;;		_I2C_DO_TX
  5906 ;;		_I2C_DO_TX_EMPTY
  5907 ;;		_I2C_DO_ADDRESS_NACK
  5908 ;;		_I2C_MasterFsm
  5909 ;; This function uses a non-reentrant model
  5910 ;;
  5911                           
  5912                           
  5913                           ;psect for function _I2C_DO_SEND_STOP
  5914  05EE                     _I2C_DO_SEND_STOP:
  5915                           
  5916                           ;mcc_generated_files/i2c_master.c: 471:     I2C_MasterStop();
  5917                           
  5918                           ;incstack = 0
  5919                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  5920  05EE  3186  260F         	fcall	_I2C_MasterStop
  5921                           
  5922                           ;mcc_generated_files/i2c_master.c: 472:     return I2C_IDLE;
  5923  05F0  3000               	movlw	0
  5924  05F1  0008               	return
  5925  05F2                     __end_of_I2C_DO_SEND_STOP:
  5926                           
  5927                           	psect	text36
  5928  05F2                     __ptext36:	
  5929 ;; *************** function _I2C_DO_SEND_RESTART *****************
  5930 ;; Defined at:
  5931 ;;		line 463 in file "mcc_generated_files/i2c_master.c"
  5932 ;; Parameters:    Size  Location     Type
  5933 ;;		None
  5934 ;; Auto vars:     Size  Location     Type
  5935 ;;		None
  5936 ;; Return value:  Size  Location     Type
  5937 ;;                  1    wreg      enum E3874
  5938 ;; Registers used:
  5939 ;;		wreg, status,2, status,0, pclath, cstack
  5940 ;; Tracked objects:
  5941 ;;		On entry : 0/0
  5942 ;;		On exit  : 0/0
  5943 ;;		Unchanged: 0/0
  5944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5945 ;;      Params:         0       0       0       0       0       0       0       0
  5946 ;;      Locals:         0       0       0       0       0       0       0       0
  5947 ;;      Temps:          0       0       0       0       0       0       0       0
  5948 ;;      Totals:         0       0       0       0       0       0       0       0
  5949 ;;Total ram usage:        0 bytes
  5950 ;; Hardware stack levels used:    1
  5951 ;; Hardware stack levels required when called:    6
  5952 ;; This function calls:
  5953 ;;		_I2C_MasterEnableRestart
  5954 ;; This function is called by:
  5955 ;;		_I2C_DO_TX_EMPTY
  5956 ;;		_I2C_DO_ADDRESS_NACK
  5957 ;;		_I2C_MasterFsm
  5958 ;; This function uses a non-reentrant model
  5959 ;;
  5960                           
  5961                           
  5962                           ;psect for function _I2C_DO_SEND_RESTART
  5963  05F2                     _I2C_DO_SEND_RESTART:
  5964                           
  5965                           ;mcc_generated_files/i2c_master.c: 465:     I2C_MasterEnableRestart();
  5966                           
  5967                           ;incstack = 0
  5968                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  5969  05F2  3186  2612         	fcall	_I2C_MasterEnableRestart
  5970                           
  5971                           ;mcc_generated_files/i2c_master.c: 466:     return I2C_SEND_ADR_READ;
  5972  05F4  3001               	movlw	1
  5973  05F5  0008               	return
  5974  05F6                     __end_of_I2C_DO_SEND_RESTART:
  5975                           
  5976                           	psect	text37
  5977  05F6                     __ptext37:	
  5978 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  5979 ;; Defined at:
  5980 ;;		line 456 in file "mcc_generated_files/i2c_master.c"
  5981 ;; Parameters:    Size  Location     Type
  5982 ;;		None
  5983 ;; Auto vars:     Size  Location     Type
  5984 ;;		None
  5985 ;; Return value:  Size  Location     Type
  5986 ;;                  1    wreg      enum E3874
  5987 ;; Registers used:
  5988 ;;		wreg, status,2, status,0, pclath, cstack
  5989 ;; Tracked objects:
  5990 ;;		On entry : 0/0
  5991 ;;		On exit  : 0/0
  5992 ;;		Unchanged: 0/0
  5993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5994 ;;      Params:         0       0       0       0       0       0       0       0
  5995 ;;      Locals:         0       0       0       0       0       0       0       0
  5996 ;;      Temps:          0       0       0       0       0       0       0       0
  5997 ;;      Totals:         0       0       0       0       0       0       0       0
  5998 ;;Total ram usage:        0 bytes
  5999 ;; Hardware stack levels used:    1
  6000 ;; Hardware stack levels required when called:    6
  6001 ;; This function calls:
  6002 ;;		_I2C_MasterEnableRestart
  6003 ;; This function is called by:
  6004 ;;		_I2C_DO_TX
  6005 ;;		_I2C_MasterFsm
  6006 ;; This function uses a non-reentrant model
  6007 ;;
  6008                           
  6009                           
  6010                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
  6011  05F6                     _I2C_DO_SEND_RESTART_WRITE:
  6012                           
  6013                           ;mcc_generated_files/i2c_master.c: 458:     I2C_MasterEnableRestart();
  6014                           
  6015                           ;incstack = 0
  6016                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  6017  05F6  3186  2612         	fcall	_I2C_MasterEnableRestart
  6018                           
  6019                           ;mcc_generated_files/i2c_master.c: 459:     return I2C_SEND_ADR_WRITE;
  6020  05F8  3002               	movlw	2
  6021  05F9  0008               	return
  6022  05FA                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  6023                           
  6024                           	psect	text38
  6025  05FA                     __ptext38:	
  6026 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  6027 ;; Defined at:
  6028 ;;		line 450 in file "mcc_generated_files/i2c_master.c"
  6029 ;; Parameters:    Size  Location     Type
  6030 ;;		None
  6031 ;; Auto vars:     Size  Location     Type
  6032 ;;		None
  6033 ;; Return value:  Size  Location     Type
  6034 ;;                  1    wreg      enum E3874
  6035 ;; Registers used:
  6036 ;;		wreg, status,2, status,0, pclath, cstack
  6037 ;; Tracked objects:
  6038 ;;		On entry : 0/0
  6039 ;;		On exit  : 0/0
  6040 ;;		Unchanged: 0/0
  6041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6042 ;;      Params:         0       0       0       0       0       0       0       0
  6043 ;;      Locals:         0       0       0       0       0       0       0       0
  6044 ;;      Temps:          0       0       0       0       0       0       0       0
  6045 ;;      Totals:         0       0       0       0       0       0       0       0
  6046 ;;Total ram usage:        0 bytes
  6047 ;; Hardware stack levels used:    1
  6048 ;; Hardware stack levels required when called:    6
  6049 ;; This function calls:
  6050 ;;		_I2C_MasterEnableRestart
  6051 ;; This function is called by:
  6052 ;;		_I2C_DO_TX
  6053 ;;		_I2C_MasterFsm
  6054 ;; This function uses a non-reentrant model
  6055 ;;
  6056                           
  6057                           
  6058                           ;psect for function _I2C_DO_SEND_RESTART_READ
  6059  05FA                     _I2C_DO_SEND_RESTART_READ:
  6060                           
  6061                           ;mcc_generated_files/i2c_master.c: 452:     I2C_MasterEnableRestart();
  6062                           
  6063                           ;incstack = 0
  6064                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
  6065  05FA  3186  2612         	fcall	_I2C_MasterEnableRestart
  6066                           
  6067                           ;mcc_generated_files/i2c_master.c: 453:     return I2C_SEND_ADR_READ;
  6068  05FC  3001               	movlw	1
  6069  05FD  0008               	return
  6070  05FE                     __end_of_I2C_DO_SEND_RESTART_READ:
  6071                           
  6072                           	psect	text39
  6073  05B0                     __ptext39:	
  6074 ;; *************** function _I2C_DO_RCEN *****************
  6075 ;; Defined at:
  6076 ;;		line 402 in file "mcc_generated_files/i2c_master.c"
  6077 ;; Parameters:    Size  Location     Type
  6078 ;;		None
  6079 ;; Auto vars:     Size  Location     Type
  6080 ;;		None
  6081 ;; Return value:  Size  Location     Type
  6082 ;;                  1    wreg      enum E3874
  6083 ;; Registers used:
  6084 ;;		wreg, status,2, status,0, pclath, cstack
  6085 ;; Tracked objects:
  6086 ;;		On entry : 0/0
  6087 ;;		On exit  : 0/0
  6088 ;;		Unchanged: 0/0
  6089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6090 ;;      Params:         0       0       0       0       0       0       0       0
  6091 ;;      Locals:         0       0       0       0       0       0       0       0
  6092 ;;      Temps:          0       0       0       0       0       0       0       0
  6093 ;;      Totals:         0       0       0       0       0       0       0       0
  6094 ;;Total ram usage:        0 bytes
  6095 ;; Hardware stack levels used:    1
  6096 ;; Hardware stack levels required when called:    6
  6097 ;; This function calls:
  6098 ;;		_I2C_MasterStartRx
  6099 ;; This function is called by:
  6100 ;;		_I2C_MasterFsm
  6101 ;; This function uses a non-reentrant model
  6102 ;;
  6103                           
  6104                           
  6105                           ;psect for function _I2C_DO_RCEN
  6106  05B0                     _I2C_DO_RCEN:
  6107                           
  6108                           ;mcc_generated_files/i2c_master.c: 404:     I2C_Status.addressNackCheck = 0;
  6109                           
  6110                           ;incstack = 0
  6111                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
  6112  05B0  0020               	movlb	0	; select bank0
  6113  05B1  103C               	bcf	_I2C_Status+28,0
  6114                           
  6115                           ;mcc_generated_files/i2c_master.c: 405:     I2C_MasterStartRx();
  6116  05B2  3186  260C         	fcall	_I2C_MasterStartRx
  6117                           
  6118                           ;mcc_generated_files/i2c_master.c: 406:     return I2C_RX;
  6119  05B4  3004               	movlw	4
  6120  05B5  0008               	return
  6121  05B6                     __end_of_I2C_DO_RCEN:
  6122                           
  6123                           	psect	text40
  6124  01B9                     __ptext40:	
  6125 ;; *************** function _I2C_DO_RX *****************
  6126 ;; Defined at:
  6127 ;;		line 378 in file "mcc_generated_files/i2c_master.c"
  6128 ;; Parameters:    Size  Location     Type
  6129 ;;		None
  6130 ;; Auto vars:     Size  Location     Type
  6131 ;;		None
  6132 ;; Return value:  Size  Location     Type
  6133 ;;                  1    wreg      enum E3874
  6134 ;; Registers used:
  6135 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6136 ;; Tracked objects:
  6137 ;;		On entry : 0/0
  6138 ;;		On exit  : 0/0
  6139 ;;		Unchanged: 0/0
  6140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6141 ;;      Params:         0       0       0       0       0       0       0       0
  6142 ;;      Locals:         0       0       0       0       0       0       0       0
  6143 ;;      Temps:          0       3       0       0       0       0       0       0
  6144 ;;      Totals:         0       3       0       0       0       0       0       0
  6145 ;;Total ram usage:        3 bytes
  6146 ;; Hardware stack levels used:    1
  6147 ;; Hardware stack levels required when called:    8
  6148 ;; This function calls:
  6149 ;;		Absolute function
  6150 ;;		_I2C_CallbackReturnReset
  6151 ;;		_I2C_CallbackReturnStop
  6152 ;;		_I2C_DO_RX_NACK_RESTART
  6153 ;;		_I2C_DO_RX_NACK_STOP
  6154 ;;		_I2C_MasterGetRxData
  6155 ;;		_I2C_MasterSendAck
  6156 ;;		_rd1RegCompleteHandler
  6157 ;;		_rd2RegCompleteHandler
  6158 ;;		_rdBlkRegCompleteHandler
  6159 ;;		_wr1RegCompleteHandler
  6160 ;;		_wr2RegCompleteHandler
  6161 ;; This function is called by:
  6162 ;;		_I2C_MasterFsm
  6163 ;; This function uses a non-reentrant model
  6164 ;;
  6165                           
  6166                           
  6167                           ;psect for function _I2C_DO_RX
  6168  01B9                     _I2C_DO_RX:
  6169                           
  6170                           ;mcc_generated_files/i2c_master.c: 380:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  6171                           
  6172                           ;incstack = 0
  6173                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6174  01B9  3186  2609  3181   	fcall	_I2C_MasterGetRxData
  6175  01BC  0020               	movlb	0	; select bank0
  6176  01BD  00DF               	movwf	??_I2C_DO_RX
  6177  01BE  0837               	movf	low ((_I2C_Status| 0+23)),w
  6178  01BF  0086               	movwf	6
  6179  01C0  0187               	clrf	7
  6180  01C1  085F               	movf	??_I2C_DO_RX,w
  6181  01C2  0081               	movwf	1
  6182  01C3  3001               	movlw	1
  6183  01C4  00DF               	movwf	??_I2C_DO_RX
  6184  01C5  085F               	movf	??_I2C_DO_RX,w
  6185  01C6  07B7               	addwf	low ((_I2C_Status| 0+23)),f
  6186                           
  6187                           ;mcc_generated_files/i2c_master.c: 381:     if(--I2C_Status.data_length)
  6188  01C7  3001               	movlw	1
  6189  01C8  02B8               	subwf	_I2C_Status+24,f
  6190  01C9  3000               	movlw	0
  6191  01CA  3BB9               	subwfb	_I2C_Status+25,f
  6192  01CB  0838               	movf	_I2C_Status+24,w
  6193  01CC  0439               	iorwf	_I2C_Status+25,w
  6194  01CD  1903               	btfsc	3,2
  6195  01CE  29D3               	goto	l494
  6196                           
  6197                           ;mcc_generated_files/i2c_master.c: 382:     {;mcc_generated_files/i2c_master.c: 383:    
      +                               I2C_MasterSendAck();
  6198  01CF  3185  25FE         	fcall	_I2C_MasterSendAck
  6199                           
  6200                           ;mcc_generated_files/i2c_master.c: 384:         return I2C_RCEN;
  6201  01D1  3005               	movlw	5
  6202  01D2  0008               	return
  6203  01D3                     l494:	
  6204                           ;mcc_generated_files/i2c_master.c: 386:     else
  6205                           
  6206                           
  6207                           ;mcc_generated_files/i2c_master.c: 387:     {;mcc_generated_files/i2c_master.c: 388:    
      +                               I2C_Status.bufferFree = 1;
  6208  01D3  15BC               	bsf	_I2C_Status+28,3
  6209                           
  6210                           ;mcc_generated_files/i2c_master.c: 389:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  6211  01D4  29DB               	goto	l3368
  6212  01D5                     l3358:
  6213                           
  6214                           ;mcc_generated_files/i2c_master.c: 393:                 return I2C_DO_RX_NACK_RESTART();
  6215  01D5  3185  25E2         	fcall	_I2C_DO_RX_NACK_RESTART
  6216  01D7  0008               	return
  6217  01D8                     l3362:
  6218                           
  6219                           ;mcc_generated_files/i2c_master.c: 397:                 return I2C_DO_RX_NACK_STOP();
  6220  01D8  3185  25E6         	fcall	_I2C_DO_RX_NACK_STOP
  6221  01DA  0008               	return
  6222  01DB                     l3368:
  6223  01DB  082C               	movf	low ((_I2C_Status| 0+12)),w
  6224  01DC  00DF               	movwf	??_I2C_DO_RX
  6225  01DD  085F               	movf	??_I2C_DO_RX,w
  6226  01DE  00DE               	movwf	I2C_CallbackReturnReset@funPtr
  6227  01DF  0821               	movf	_I2C_Status+1,w
  6228  01E0  008A               	movwf	10
  6229  01E1  0820               	movf	_I2C_Status,w
  6230  01E2  000A               	callw
  6231  01E3  3181               	pagesel	$
  6232  01E4  0020               	movlb	0	; select bank0
  6233  01E5  00E0               	movwf	??_I2C_DO_RX+1
  6234  01E6  01E1               	clrf	??_I2C_DO_RX+2
  6235                           
  6236                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6237                           ; Switch size 1, requested type "simple"
  6238                           ; Number of cases is 1, Range of values is 0 to 0
  6239                           ; switch strategies available:
  6240                           ; Name         Instructions Cycles
  6241                           ; simple_byte            4     3 (average)
  6242                           ; direct_byte            8     6 (fixed)
  6243                           ; jumptable            260     6 (fixed)
  6244                           ;	Chosen strategy is simple_byte
  6245  01E7  0861               	movf	??_I2C_DO_RX+2,w
  6246  01E8  3A00               	xorlw	0	; case 0
  6247  01E9  1903               	skipnz
  6248  01EA  29EC               	goto	l3984
  6249  01EB  29D8               	goto	l3362
  6250  01EC                     l3984:
  6251                           
  6252                           ; Switch size 1, requested type "simple"
  6253                           ; Number of cases is 4, Range of values is 1 to 4
  6254                           ; switch strategies available:
  6255                           ; Name         Instructions Cycles
  6256                           ; simple_byte           13     7 (average)
  6257                           ; direct_byte           17     9 (fixed)
  6258                           ; jumptable            263     9 (fixed)
  6259                           ;	Chosen strategy is simple_byte
  6260  01EC  0860               	movf	??_I2C_DO_RX+1,w
  6261  01ED  3A01               	xorlw	1	; case 1
  6262  01EE  1903               	skipnz
  6263  01EF  29D8               	goto	l3362
  6264  01F0  3A03               	xorlw	3	; case 2
  6265  01F1  1903               	skipnz
  6266  01F2  29D5               	goto	l3358
  6267  01F3  3A01               	xorlw	1	; case 3
  6268  01F4  1903               	skipnz
  6269  01F5  29D5               	goto	l3358
  6270  01F6  3A07               	xorlw	7	; case 4
  6271  01F7  1903               	skipnz
  6272  01F8  29D8               	goto	l3362
  6273  01F9  29D8               	goto	l3362
  6274  01FA  0008               	return
  6275  01FB                     __end_of_I2C_DO_RX:
  6276                           
  6277                           	psect	text41
  6278  016A                     __ptext41:	
  6279 ;; *************** function _I2C_DO_TX *****************
  6280 ;; Defined at:
  6281 ;;		line 354 in file "mcc_generated_files/i2c_master.c"
  6282 ;; Parameters:    Size  Location     Type
  6283 ;;		None
  6284 ;; Auto vars:     Size  Location     Type
  6285 ;;		None
  6286 ;; Return value:  Size  Location     Type
  6287 ;;                  1    wreg      enum E3874
  6288 ;; Registers used:
  6289 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6290 ;; Tracked objects:
  6291 ;;		On entry : 0/0
  6292 ;;		On exit  : 0/0
  6293 ;;		Unchanged: 0/0
  6294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6295 ;;      Params:         0       0       0       0       0       0       0       0
  6296 ;;      Locals:         0       0       0       0       0       0       0       0
  6297 ;;      Temps:          0       3       0       0       0       0       0       0
  6298 ;;      Totals:         0       3       0       0       0       0       0       0
  6299 ;;Total ram usage:        3 bytes
  6300 ;; Hardware stack levels used:    1
  6301 ;; Hardware stack levels required when called:    8
  6302 ;; This function calls:
  6303 ;;		Absolute function
  6304 ;;		_I2C_CallbackReturnReset
  6305 ;;		_I2C_CallbackReturnStop
  6306 ;;		_I2C_DO_SEND_RESTART_READ
  6307 ;;		_I2C_DO_SEND_RESTART_WRITE
  6308 ;;		_I2C_DO_SEND_STOP
  6309 ;;		_I2C_MasterIsNack
  6310 ;;		_I2C_MasterSendTxData
  6311 ;;		_rd1RegCompleteHandler
  6312 ;;		_rd2RegCompleteHandler
  6313 ;;		_rdBlkRegCompleteHandler
  6314 ;;		_wr1RegCompleteHandler
  6315 ;;		_wr2RegCompleteHandler
  6316 ;; This function is called by:
  6317 ;;		_I2C_MasterFsm
  6318 ;; This function uses a non-reentrant model
  6319 ;;
  6320                           
  6321                           
  6322                           ;psect for function _I2C_DO_TX
  6323  016A                     _I2C_DO_TX:
  6324                           
  6325                           ;mcc_generated_files/i2c_master.c: 356:     if(I2C_MasterIsNack())
  6326                           
  6327                           ;incstack = 0
  6328                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6329  016A  3185  25B6  3181   	fcall	_I2C_MasterIsNack
  6330  016D  3A00               	xorlw	0
  6331  016E  1D03               	btfss	3,2
  6332  016F  297A               	goto	l3328
  6333  0170  299E               	goto	l478
  6334  0171                     l3314:
  6335                           
  6336                           ;mcc_generated_files/i2c_master.c: 361:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
  6337  0171  3185  25FA         	fcall	_I2C_DO_SEND_RESTART_READ
  6338  0173  0008               	return
  6339  0174                     l3318:
  6340                           
  6341                           ;mcc_generated_files/i2c_master.c: 363:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
  6342  0174  3185  25F6         	fcall	_I2C_DO_SEND_RESTART_WRITE
  6343  0176  0008               	return
  6344  0177                     l3322:
  6345                           
  6346                           ;mcc_generated_files/i2c_master.c: 367:                 return I2C_DO_SEND_STOP();
  6347  0177  3185  25EE         	fcall	_I2C_DO_SEND_STOP
  6348  0179  0008               	return
  6349  017A                     l3328:
  6350  017A  0020               	movlb	0	; select bank0
  6351  017B  082F               	movf	low ((_I2C_Status| 0+15)),w
  6352  017C  00DF               	movwf	??_I2C_DO_TX
  6353  017D  085F               	movf	??_I2C_DO_TX,w
  6354  017E  00DE               	movwf	I2C_CallbackReturnReset@funPtr
  6355  017F  3006               	movlw	6
  6356  0180  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  6357  0181  0086               	movwf	6
  6358  0182  0187               	clrf	7
  6359  0183  3F41               	moviw [1]fsr1
  6360  0184  008A               	movwf	10
  6361  0185  3F40               	moviw [0]fsr1
  6362  0186  000A               	callw
  6363  0187  3181               	pagesel	$
  6364  0188  0020               	movlb	0	; select bank0
  6365  0189  00E0               	movwf	??_I2C_DO_TX+1
  6366  018A  01E1               	clrf	??_I2C_DO_TX+2
  6367                           
  6368                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6369                           ; Switch size 1, requested type "simple"
  6370                           ; Number of cases is 1, Range of values is 0 to 0
  6371                           ; switch strategies available:
  6372                           ; Name         Instructions Cycles
  6373                           ; simple_byte            4     3 (average)
  6374                           ; direct_byte            8     6 (fixed)
  6375                           ; jumptable            260     6 (fixed)
  6376                           ;	Chosen strategy is simple_byte
  6377  018B  0861               	movf	??_I2C_DO_TX+2,w
  6378  018C  3A00               	xorlw	0	; case 0
  6379  018D  1903               	skipnz
  6380  018E  2990               	goto	l3986
  6381  018F  2977               	goto	l3322
  6382  0190                     l3986:
  6383                           
  6384                           ; Switch size 1, requested type "simple"
  6385                           ; Number of cases is 4, Range of values is 1 to 4
  6386                           ; switch strategies available:
  6387                           ; Name         Instructions Cycles
  6388                           ; simple_byte           13     7 (average)
  6389                           ; direct_byte           17     9 (fixed)
  6390                           ; jumptable            263     9 (fixed)
  6391                           ;	Chosen strategy is simple_byte
  6392  0190  0860               	movf	??_I2C_DO_TX+1,w
  6393  0191  3A01               	xorlw	1	; case 1
  6394  0192  1903               	skipnz
  6395  0193  2977               	goto	l3322
  6396  0194  3A03               	xorlw	3	; case 2
  6397  0195  1903               	skipnz
  6398  0196  2971               	goto	l3314
  6399  0197  3A01               	xorlw	1	; case 3
  6400  0198  1903               	skipnz
  6401  0199  2974               	goto	l3318
  6402  019A  3A07               	xorlw	7	; case 4
  6403  019B  1903               	skipnz
  6404  019C  2977               	goto	l3322
  6405  019D  2977               	goto	l3322
  6406  019E                     l478:	
  6407                           ;mcc_generated_files/i2c_master.c: 370:     else
  6408                           
  6409                           
  6410                           ;mcc_generated_files/i2c_master.c: 371:     {;mcc_generated_files/i2c_master.c: 372:    
      +                               I2C_Status.addressNackCheck = 0;
  6411  019E  0020               	movlb	0	; select bank0
  6412  019F  103C               	bcf	_I2C_Status+28,0
  6413                           
  6414                           ;mcc_generated_files/i2c_master.c: 373:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
  6415  01A0  3017               	movlw	23
  6416  01A1  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  6417  01A2  0086               	movwf	6
  6418  01A3  0187               	clrf	7
  6419  01A4  3F40               	moviw [0]fsr1
  6420  01A5  0084               	movwf	4
  6421  01A6  0185               	clrf	5
  6422  01A7  0A81               	incf	1,f
  6423  01A8  0800               	movf	0,w
  6424  01A9  3185  25BC  3181   	fcall	_I2C_MasterSendTxData
  6425                           
  6426                           ;mcc_generated_files/i2c_master.c: 374:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
  6427  01AC  3001               	movlw	1
  6428  01AD  0020               	movlb	0	; select bank0
  6429  01AE  02B8               	subwf	_I2C_Status+24,f
  6430  01AF  3000               	movlw	0
  6431  01B0  3BB9               	subwfb	_I2C_Status+25,f
  6432  01B1  0838               	movf	_I2C_Status+24,w
  6433  01B2  0439               	iorwf	_I2C_Status+25,w
  6434  01B3  1D03               	btfss	3,2
  6435  01B4  29B7               	goto	l3336
  6436  01B5  3006               	movlw	6
  6437  01B6  0008               	return
  6438  01B7                     l3336:
  6439  01B7  3003               	movlw	3
  6440  01B8  0008               	return
  6441  01B9                     __end_of_I2C_DO_TX:
  6442                           
  6443                           	psect	text42
  6444  059D                     __ptext42:	
  6445 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  6446 ;; Defined at:
  6447 ;;		line 347 in file "mcc_generated_files/i2c_master.c"
  6448 ;; Parameters:    Size  Location     Type
  6449 ;;		None
  6450 ;; Auto vars:     Size  Location     Type
  6451 ;;		None
  6452 ;; Return value:  Size  Location     Type
  6453 ;;                  1    wreg      enum E3874
  6454 ;; Registers used:
  6455 ;;		wreg, status,2, status,0, pclath, cstack
  6456 ;; Tracked objects:
  6457 ;;		On entry : 0/0
  6458 ;;		On exit  : 0/0
  6459 ;;		Unchanged: 0/0
  6460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6461 ;;      Params:         0       0       0       0       0       0       0       0
  6462 ;;      Locals:         0       0       0       0       0       0       0       0
  6463 ;;      Temps:          0       0       0       0       0       0       0       0
  6464 ;;      Totals:         0       0       0       0       0       0       0       0
  6465 ;;Total ram usage:        0 bytes
  6466 ;; Hardware stack levels used:    1
  6467 ;; Hardware stack levels required when called:    6
  6468 ;; This function calls:
  6469 ;;		_I2C_MasterSendTxData
  6470 ;; This function is called by:
  6471 ;;		_I2C_MasterFsm
  6472 ;; This function uses a non-reentrant model
  6473 ;;
  6474                           
  6475                           
  6476                           ;psect for function _I2C_DO_SEND_ADR_WRITE
  6477  059D                     _I2C_DO_SEND_ADR_WRITE:
  6478                           
  6479                           ;mcc_generated_files/i2c_master.c: 349:     I2C_Status.addressNackCheck = 1;
  6480                           
  6481                           ;incstack = 0
  6482                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  6483  059D  0020               	movlb	0	; select bank0
  6484  059E  143C               	bsf	_I2C_Status+28,0
  6485                           
  6486                           ;mcc_generated_files/i2c_master.c: 350:     I2C_MasterSendTxData(I2C_Status.address << 1
      +                          );
  6487  059F  3536               	lslf	_I2C_Status+22,w
  6488  05A0  3185  25BC         	fcall	_I2C_MasterSendTxData
  6489                           
  6490                           ;mcc_generated_files/i2c_master.c: 351:     return I2C_TX;
  6491  05A2  3003               	movlw	3
  6492  05A3  0008               	return
  6493  05A4                     __end_of_I2C_DO_SEND_ADR_WRITE:
  6494                           
  6495                           	psect	text43
  6496  0595                     __ptext43:	
  6497 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  6498 ;; Defined at:
  6499 ;;		line 340 in file "mcc_generated_files/i2c_master.c"
  6500 ;; Parameters:    Size  Location     Type
  6501 ;;		None
  6502 ;; Auto vars:     Size  Location     Type
  6503 ;;		None
  6504 ;; Return value:  Size  Location     Type
  6505 ;;                  1    wreg      enum E3874
  6506 ;; Registers used:
  6507 ;;		wreg, status,2, status,0, pclath, cstack
  6508 ;; Tracked objects:
  6509 ;;		On entry : 0/0
  6510 ;;		On exit  : 0/0
  6511 ;;		Unchanged: 0/0
  6512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6513 ;;      Params:         0       0       0       0       0       0       0       0
  6514 ;;      Locals:         0       0       0       0       0       0       0       0
  6515 ;;      Temps:          0       0       0       0       0       0       0       0
  6516 ;;      Totals:         0       0       0       0       0       0       0       0
  6517 ;;Total ram usage:        0 bytes
  6518 ;; Hardware stack levels used:    1
  6519 ;; Hardware stack levels required when called:    6
  6520 ;; This function calls:
  6521 ;;		_I2C_MasterSendTxData
  6522 ;; This function is called by:
  6523 ;;		_I2C_MasterFsm
  6524 ;; This function uses a non-reentrant model
  6525 ;;
  6526                           
  6527                           
  6528                           ;psect for function _I2C_DO_SEND_ADR_READ
  6529  0595                     _I2C_DO_SEND_ADR_READ:
  6530                           
  6531                           ;mcc_generated_files/i2c_master.c: 342:     I2C_Status.addressNackCheck = 1;
  6532                           
  6533                           ;incstack = 0
  6534                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  6535  0595  0020               	movlb	0	; select bank0
  6536  0596  143C               	bsf	_I2C_Status+28,0
  6537                           
  6538                           ;mcc_generated_files/i2c_master.c: 343:     I2C_MasterSendTxData(I2C_Status.address << 1
      +                           | 1);
  6539  0597  1403               	setc
  6540  0598  0D36               	rlf	_I2C_Status+22,w
  6541  0599  3185  25BC         	fcall	_I2C_MasterSendTxData
  6542                           
  6543                           ;mcc_generated_files/i2c_master.c: 344:     return I2C_RCEN;
  6544  059B  3005               	movlw	5
  6545  059C  0008               	return
  6546  059D                     __end_of_I2C_DO_SEND_ADR_READ:
  6547                           
  6548                           	psect	text44
  6549  05CD                     __ptext44:	
  6550 ;; *************** function _I2C_DO_IDLE *****************
  6551 ;; Defined at:
  6552 ;;		line 333 in file "mcc_generated_files/i2c_master.c"
  6553 ;; Parameters:    Size  Location     Type
  6554 ;;		None
  6555 ;; Auto vars:     Size  Location     Type
  6556 ;;		None
  6557 ;; Return value:  Size  Location     Type
  6558 ;;                  1    wreg      enum E3874
  6559 ;; Registers used:
  6560 ;;		wreg, status,2
  6561 ;; Tracked objects:
  6562 ;;		On entry : 0/0
  6563 ;;		On exit  : 0/0
  6564 ;;		Unchanged: 0/0
  6565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6566 ;;      Params:         0       0       0       0       0       0       0       0
  6567 ;;      Locals:         0       0       0       0       0       0       0       0
  6568 ;;      Temps:          0       0       0       0       0       0       0       0
  6569 ;;      Totals:         0       0       0       0       0       0       0       0
  6570 ;;Total ram usage:        0 bytes
  6571 ;; Hardware stack levels used:    1
  6572 ;; Hardware stack levels required when called:    5
  6573 ;; This function calls:
  6574 ;;		Nothing
  6575 ;; This function is called by:
  6576 ;;		_I2C_MasterFsm
  6577 ;; This function uses a non-reentrant model
  6578 ;;
  6579                           
  6580                           
  6581                           ;psect for function _I2C_DO_IDLE
  6582  05CD                     _I2C_DO_IDLE:
  6583                           
  6584                           ;mcc_generated_files/i2c_master.c: 335:     I2C_Status.busy = 0;
  6585                           
  6586                           ;incstack = 0
  6587                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
  6588  05CD  0020               	movlb	0	; select bank0
  6589  05CE  10BC               	bcf	_I2C_Status+28,1
  6590                           
  6591                           ;mcc_generated_files/i2c_master.c: 336:     I2C_Status.error = I2C_NOERR;
  6592  05CF  01BB               	clrf	_I2C_Status+27
  6593                           
  6594                           ;mcc_generated_files/i2c_master.c: 337:     return I2C_RESET;
  6595  05D0  300E               	movlw	14
  6596  05D1  0008               	return
  6597  05D2                     __end_of_I2C_DO_IDLE:
  6598                           
  6599                           	psect	text45
  6600  026E                     __ptext45:	
  6601 ;; *************** function _I2C_DO_TX_EMPTY *****************
  6602 ;; Defined at:
  6603 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
  6604 ;; Parameters:    Size  Location     Type
  6605 ;;		None
  6606 ;; Auto vars:     Size  Location     Type
  6607 ;;		None
  6608 ;; Return value:  Size  Location     Type
  6609 ;;                  1    wreg      enum E3874
  6610 ;; Registers used:
  6611 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6612 ;; Tracked objects:
  6613 ;;		On entry : 0/0
  6614 ;;		On exit  : 0/0
  6615 ;;		Unchanged: 0/0
  6616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6617 ;;      Params:         0       0       0       0       0       0       0       0
  6618 ;;      Locals:         0       0       0       0       0       0       0       0
  6619 ;;      Temps:          0       3       0       0       0       0       0       0
  6620 ;;      Totals:         0       3       0       0       0       0       0       0
  6621 ;;Total ram usage:        3 bytes
  6622 ;; Hardware stack levels used:    1
  6623 ;; Hardware stack levels required when called:    8
  6624 ;; This function calls:
  6625 ;;		Absolute function
  6626 ;;		_I2C_CallbackReturnReset
  6627 ;;		_I2C_CallbackReturnStop
  6628 ;;		_I2C_DO_SEND_RESTART
  6629 ;;		_I2C_DO_SEND_STOP
  6630 ;;		_I2C_MasterSetIrq
  6631 ;;		_rd1RegCompleteHandler
  6632 ;;		_rd2RegCompleteHandler
  6633 ;;		_rdBlkRegCompleteHandler
  6634 ;;		_wr1RegCompleteHandler
  6635 ;;		_wr2RegCompleteHandler
  6636 ;; This function is called by:
  6637 ;;		_I2C_MasterFsm
  6638 ;; This function uses a non-reentrant model
  6639 ;;
  6640                           
  6641                           
  6642                           ;psect for function _I2C_DO_TX_EMPTY
  6643  026E                     _I2C_DO_TX_EMPTY:
  6644                           
  6645                           ;mcc_generated_files/i2c_master.c: 411:     I2C_Status.bufferFree = 1;
  6646                           
  6647                           ;incstack = 0
  6648                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6649  026E  0020               	movlb	0	; select bank0
  6650  026F  15BC               	bsf	_I2C_Status+28,3
  6651                           
  6652                           ;mcc_generated_files/i2c_master.c: 412:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  6653  0270  2A7B               	goto	l3400
  6654  0271                     l3384:
  6655                           
  6656                           ;mcc_generated_files/i2c_master.c: 416:             return I2C_DO_SEND_RESTART();
  6657  0271  3185  25F2         	fcall	_I2C_DO_SEND_RESTART
  6658  0273  0008               	return
  6659  0274                     l3388:
  6660                           
  6661                           ;mcc_generated_files/i2c_master.c: 418:             I2C_MasterSetIrq();
  6662  0274  3186  2606         	fcall	_I2C_MasterSetIrq
  6663                           
  6664                           ;mcc_generated_files/i2c_master.c: 419:             return I2C_TX;
  6665  0276  3003               	movlw	3
  6666  0277  0008               	return
  6667  0278                     l3394:
  6668                           
  6669                           ;mcc_generated_files/i2c_master.c: 422:             return I2C_DO_SEND_STOP();
  6670  0278  3185  25EE         	fcall	_I2C_DO_SEND_STOP
  6671  027A  0008               	return
  6672  027B                     l3400:
  6673  027B  082C               	movf	low ((_I2C_Status| 0+12)),w
  6674  027C  00DF               	movwf	??_I2C_DO_TX_EMPTY
  6675  027D  085F               	movf	??_I2C_DO_TX_EMPTY,w
  6676  027E  00DE               	movwf	I2C_CallbackReturnReset@funPtr
  6677  027F  0821               	movf	_I2C_Status+1,w
  6678  0280  008A               	movwf	10
  6679  0281  0820               	movf	_I2C_Status,w
  6680  0282  000A               	callw
  6681  0283  3182               	pagesel	$
  6682  0284  0020               	movlb	0	; select bank0
  6683  0285  00E0               	movwf	??_I2C_DO_TX_EMPTY+1
  6684  0286  01E1               	clrf	??_I2C_DO_TX_EMPTY+2
  6685                           
  6686                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6687                           ; Switch size 1, requested type "simple"
  6688                           ; Number of cases is 1, Range of values is 0 to 0
  6689                           ; switch strategies available:
  6690                           ; Name         Instructions Cycles
  6691                           ; simple_byte            4     3 (average)
  6692                           ; direct_byte            8     6 (fixed)
  6693                           ; jumptable            260     6 (fixed)
  6694                           ;	Chosen strategy is simple_byte
  6695  0287  0861               	movf	??_I2C_DO_TX_EMPTY+2,w
  6696  0288  3A00               	xorlw	0	; case 0
  6697  0289  1903               	skipnz
  6698  028A  2A8C               	goto	l3988
  6699  028B  2A78               	goto	l3394
  6700  028C                     l3988:
  6701                           
  6702                           ; Switch size 1, requested type "simple"
  6703                           ; Number of cases is 4, Range of values is 1 to 4
  6704                           ; switch strategies available:
  6705                           ; Name         Instructions Cycles
  6706                           ; simple_byte           13     7 (average)
  6707                           ; direct_byte           17     9 (fixed)
  6708                           ; jumptable            263     9 (fixed)
  6709                           ;	Chosen strategy is simple_byte
  6710  028C  0860               	movf	??_I2C_DO_TX_EMPTY+1,w
  6711  028D  3A01               	xorlw	1	; case 1
  6712  028E  1903               	skipnz
  6713  028F  2A78               	goto	l3394
  6714  0290  3A03               	xorlw	3	; case 2
  6715  0291  1903               	skipnz
  6716  0292  2A71               	goto	l3384
  6717  0293  3A01               	xorlw	1	; case 3
  6718  0294  1903               	skipnz
  6719  0295  2A71               	goto	l3384
  6720  0296  3A07               	xorlw	7	; case 4
  6721  0297  1903               	skipnz
  6722  0298  2A74               	goto	l3388
  6723  0299  2A78               	goto	l3394
  6724  029A  0008               	return
  6725  029B                     __end_of_I2C_DO_TX_EMPTY:
  6726                           
  6727                           	psect	text46
  6728  0606                     __ptext46:	
  6729 ;; *************** function _I2C_MasterSetIrq *****************
  6730 ;; Defined at:
  6731 ;;		line 645 in file "mcc_generated_files/i2c_master.c"
  6732 ;; Parameters:    Size  Location     Type
  6733 ;;		None
  6734 ;; Auto vars:     Size  Location     Type
  6735 ;;		None
  6736 ;; Return value:  Size  Location     Type
  6737 ;;                  1    wreg      void 
  6738 ;; Registers used:
  6739 ;;		None
  6740 ;; Tracked objects:
  6741 ;;		On entry : 0/0
  6742 ;;		On exit  : 0/0
  6743 ;;		Unchanged: 0/0
  6744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6745 ;;      Params:         0       0       0       0       0       0       0       0
  6746 ;;      Locals:         0       0       0       0       0       0       0       0
  6747 ;;      Temps:          0       0       0       0       0       0       0       0
  6748 ;;      Totals:         0       0       0       0       0       0       0       0
  6749 ;;Total ram usage:        0 bytes
  6750 ;; Hardware stack levels used:    1
  6751 ;; Hardware stack levels required when called:    5
  6752 ;; This function calls:
  6753 ;;		Nothing
  6754 ;; This function is called by:
  6755 ;;		_I2C_DO_TX_EMPTY
  6756 ;; This function uses a non-reentrant model
  6757 ;;
  6758                           
  6759                           
  6760                           ;psect for function _I2C_MasterSetIrq
  6761  0606                     _I2C_MasterSetIrq:
  6762                           
  6763                           ;mcc_generated_files/i2c_master.c: 647:     PIR1bits.SSP1IF = 1;
  6764                           
  6765                           ;incstack = 0
  6766                           ; Regs used in _I2C_MasterSetIrq: []
  6767  0606  0020               	movlb	0	; select bank0
  6768  0607  1591               	bsf	17,3	;volatile
  6769  0608  0008               	return
  6770  0609                     __end_of_I2C_MasterSetIrq:
  6771                           
  6772                           	psect	text47
  6773  05B6                     __ptext47:	
  6774 ;; *************** function _I2C_MasterIsNack *****************
  6775 ;; Defined at:
  6776 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
  6777 ;; Parameters:    Size  Location     Type
  6778 ;;		None
  6779 ;; Auto vars:     Size  Location     Type
  6780 ;;		None
  6781 ;; Return value:  Size  Location     Type
  6782 ;;                  1    wreg      _Bool 
  6783 ;; Registers used:
  6784 ;;		wreg, status,2, status,0
  6785 ;; Tracked objects:
  6786 ;;		On entry : 0/0
  6787 ;;		On exit  : 0/0
  6788 ;;		Unchanged: 0/0
  6789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6790 ;;      Params:         0       0       0       0       0       0       0       0
  6791 ;;      Locals:         0       0       0       0       0       0       0       0
  6792 ;;      Temps:          0       0       0       0       0       0       0       0
  6793 ;;      Totals:         0       0       0       0       0       0       0       0
  6794 ;;Total ram usage:        0 bytes
  6795 ;; Hardware stack levels used:    1
  6796 ;; Hardware stack levels required when called:    5
  6797 ;; This function calls:
  6798 ;;		Nothing
  6799 ;; This function is called by:
  6800 ;;		_I2C_MasterFsm
  6801 ;;		_I2C_DO_TX
  6802 ;; This function uses a non-reentrant model
  6803 ;;
  6804                           
  6805                           
  6806                           ;psect for function _I2C_MasterIsNack
  6807  05B6                     _I2C_MasterIsNack:
  6808                           
  6809                           ;mcc_generated_files/i2c_master.c: 600:     return SSP1CON2bits.ACKSTAT;
  6810                           
  6811                           ;incstack = 0
  6812                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
  6813  05B6  0024               	movlb	4	; select bank4
  6814  05B7  0E16               	swapf	22,w	;volatile
  6815  05B8  0C89               	rrf	9,f
  6816  05B9  0C89               	rrf	9,f
  6817  05BA  3901               	andlw	1
  6818  05BB  0008               	return
  6819  05BC                     __end_of_I2C_MasterIsNack:
  6820                           
  6821                           	psect	text48
  6822  05BC                     __ptext48:	
  6823 ;; *************** function _I2C_MasterSendTxData *****************
  6824 ;; Defined at:
  6825 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
  6826 ;; Parameters:    Size  Location     Type
  6827 ;;  data            1    wreg     unsigned char 
  6828 ;; Auto vars:     Size  Location     Type
  6829 ;;  data            1    0[BANK0 ] unsigned char 
  6830 ;; Return value:  Size  Location     Type
  6831 ;;                  1    wreg      void 
  6832 ;; Registers used:
  6833 ;;		wreg
  6834 ;; Tracked objects:
  6835 ;;		On entry : 0/0
  6836 ;;		On exit  : 0/0
  6837 ;;		Unchanged: 0/0
  6838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6839 ;;      Params:         0       0       0       0       0       0       0       0
  6840 ;;      Locals:         0       1       0       0       0       0       0       0
  6841 ;;      Temps:          0       0       0       0       0       0       0       0
  6842 ;;      Totals:         0       1       0       0       0       0       0       0
  6843 ;;Total ram usage:        1 bytes
  6844 ;; Hardware stack levels used:    1
  6845 ;; Hardware stack levels required when called:    5
  6846 ;; This function calls:
  6847 ;;		Nothing
  6848 ;; This function is called by:
  6849 ;;		_I2C_DO_SEND_ADR_READ
  6850 ;;		_I2C_DO_SEND_ADR_WRITE
  6851 ;;		_I2C_DO_TX
  6852 ;; This function uses a non-reentrant model
  6853 ;;
  6854                           
  6855                           
  6856                           ;psect for function _I2C_MasterSendTxData
  6857  05BC                     _I2C_MasterSendTxData:
  6858                           
  6859                           ;incstack = 0
  6860                           ; Regs used in _I2C_MasterSendTxData: [wreg]
  6861                           ;I2C_MasterSendTxData@data stored from wreg
  6862  05BC  0020               	movlb	0	; select bank0
  6863  05BD  00D5               	movwf	I2C_MasterSendTxData@data
  6864                           
  6865                           ;mcc_generated_files/i2c_master.c: 568: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 569: {;mcc_generated_files/i2c_
      +                          master.c: 570:     SSP1BUF = data;
  6866  05BE  0855               	movf	I2C_MasterSendTxData@data,w
  6867  05BF  0024               	movlb	4	; select bank4
  6868  05C0  0091               	movwf	17	;volatile
  6869  05C1  0008               	return
  6870  05C2                     __end_of_I2C_MasterSendTxData:
  6871                           
  6872                           	psect	text49
  6873  05FE                     __ptext49:	
  6874 ;; *************** function _I2C_MasterSendAck *****************
  6875 ;; Defined at:
  6876 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
  6877 ;; Parameters:    Size  Location     Type
  6878 ;;		None
  6879 ;; Auto vars:     Size  Location     Type
  6880 ;;		None
  6881 ;; Return value:  Size  Location     Type
  6882 ;;                  1    wreg      void 
  6883 ;; Registers used:
  6884 ;;		None
  6885 ;; Tracked objects:
  6886 ;;		On entry : 0/0
  6887 ;;		On exit  : 0/0
  6888 ;;		Unchanged: 0/0
  6889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6890 ;;      Params:         0       0       0       0       0       0       0       0
  6891 ;;      Locals:         0       0       0       0       0       0       0       0
  6892 ;;      Temps:          0       0       0       0       0       0       0       0
  6893 ;;      Totals:         0       0       0       0       0       0       0       0
  6894 ;;Total ram usage:        0 bytes
  6895 ;; Hardware stack levels used:    1
  6896 ;; Hardware stack levels required when called:    5
  6897 ;; This function calls:
  6898 ;;		Nothing
  6899 ;; This function is called by:
  6900 ;;		_I2C_DO_RX
  6901 ;;		_I2C_DO_RX_ACK
  6902 ;; This function uses a non-reentrant model
  6903 ;;
  6904                           
  6905                           
  6906                           ;psect for function _I2C_MasterSendAck
  6907  05FE                     _I2C_MasterSendAck:
  6908                           
  6909                           ;mcc_generated_files/i2c_master.c: 605:     SSP1CON2bits.ACKDT = 0;
  6910                           
  6911                           ;incstack = 0
  6912                           ; Regs used in _I2C_MasterSendAck: []
  6913  05FE  0024               	movlb	4	; select bank4
  6914  05FF  1296               	bcf	22,5	;volatile
  6915                           
  6916                           ;mcc_generated_files/i2c_master.c: 606:     SSP1CON2bits.ACKEN = 1;
  6917  0600  1616               	bsf	22,4	;volatile
  6918  0601  0008               	return
  6919  0602                     __end_of_I2C_MasterSendAck:
  6920                           
  6921                           	psect	text50
  6922  0609                     __ptext50:	
  6923 ;; *************** function _I2C_MasterGetRxData *****************
  6924 ;; Defined at:
  6925 ;;		line 563 in file "mcc_generated_files/i2c_master.c"
  6926 ;; Parameters:    Size  Location     Type
  6927 ;;		None
  6928 ;; Auto vars:     Size  Location     Type
  6929 ;;		None
  6930 ;; Return value:  Size  Location     Type
  6931 ;;                  1    wreg      unsigned char 
  6932 ;; Registers used:
  6933 ;;		wreg
  6934 ;; Tracked objects:
  6935 ;;		On entry : 0/0
  6936 ;;		On exit  : 0/0
  6937 ;;		Unchanged: 0/0
  6938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6939 ;;      Params:         0       0       0       0       0       0       0       0
  6940 ;;      Locals:         0       0       0       0       0       0       0       0
  6941 ;;      Temps:          0       0       0       0       0       0       0       0
  6942 ;;      Totals:         0       0       0       0       0       0       0       0
  6943 ;;Total ram usage:        0 bytes
  6944 ;; Hardware stack levels used:    1
  6945 ;; Hardware stack levels required when called:    5
  6946 ;; This function calls:
  6947 ;;		Nothing
  6948 ;; This function is called by:
  6949 ;;		_I2C_DO_RX
  6950 ;; This function uses a non-reentrant model
  6951 ;;
  6952                           
  6953                           
  6954                           ;psect for function _I2C_MasterGetRxData
  6955  0609                     _I2C_MasterGetRxData:
  6956                           
  6957                           ;mcc_generated_files/i2c_master.c: 565:     return SSP1BUF;
  6958                           
  6959                           ;incstack = 0
  6960                           ; Regs used in _I2C_MasterGetRxData: [wreg]
  6961  0609  0024               	movlb	4	; select bank4
  6962  060A  0811               	movf	17,w	;volatile
  6963  060B  0008               	return
  6964  060C                     __end_of_I2C_MasterGetRxData:
  6965                           
  6966                           	psect	text51
  6967  0602                     __ptext51:	
  6968 ;; *************** function _I2C_MasterSendNack *****************
  6969 ;; Defined at:
  6970 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
  6971 ;; Parameters:    Size  Location     Type
  6972 ;;		None
  6973 ;; Auto vars:     Size  Location     Type
  6974 ;;		None
  6975 ;; Return value:  Size  Location     Type
  6976 ;;                  1    wreg      void 
  6977 ;; Registers used:
  6978 ;;		None
  6979 ;; Tracked objects:
  6980 ;;		On entry : 0/0
  6981 ;;		On exit  : 0/0
  6982 ;;		Unchanged: 0/0
  6983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6984 ;;      Params:         0       0       0       0       0       0       0       0
  6985 ;;      Locals:         0       0       0       0       0       0       0       0
  6986 ;;      Temps:          0       0       0       0       0       0       0       0
  6987 ;;      Totals:         0       0       0       0       0       0       0       0
  6988 ;;Total ram usage:        0 bytes
  6989 ;; Hardware stack levels used:    1
  6990 ;; Hardware stack levels required when called:    5
  6991 ;; This function calls:
  6992 ;;		Nothing
  6993 ;; This function is called by:
  6994 ;;		_I2C_DO_RX_NACK_STOP
  6995 ;;		_I2C_DO_RX_NACK_RESTART
  6996 ;; This function uses a non-reentrant model
  6997 ;;
  6998                           
  6999                           
  7000                           ;psect for function _I2C_MasterSendNack
  7001  0602                     _I2C_MasterSendNack:
  7002                           
  7003                           ;mcc_generated_files/i2c_master.c: 611:     SSP1CON2bits.ACKDT = 1;
  7004                           
  7005                           ;incstack = 0
  7006                           ; Regs used in _I2C_MasterSendNack: []
  7007  0602  0024               	movlb	4	; select bank4
  7008  0603  1696               	bsf	22,5	;volatile
  7009                           
  7010                           ;mcc_generated_files/i2c_master.c: 612:     SSP1CON2bits.ACKEN = 1;
  7011  0604  1616               	bsf	22,4	;volatile
  7012  0605  0008               	return
  7013  0606                     __end_of_I2C_MasterSendNack:
  7014                           
  7015                           	psect	text52
  7016  060C                     __ptext52:	
  7017 ;; *************** function _I2C_MasterStartRx *****************
  7018 ;; Defined at:
  7019 ;;		line 583 in file "mcc_generated_files/i2c_master.c"
  7020 ;; Parameters:    Size  Location     Type
  7021 ;;		None
  7022 ;; Auto vars:     Size  Location     Type
  7023 ;;		None
  7024 ;; Return value:  Size  Location     Type
  7025 ;;                  1    wreg      void 
  7026 ;; Registers used:
  7027 ;;		None
  7028 ;; Tracked objects:
  7029 ;;		On entry : 0/0
  7030 ;;		On exit  : 0/0
  7031 ;;		Unchanged: 0/0
  7032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7033 ;;      Params:         0       0       0       0       0       0       0       0
  7034 ;;      Locals:         0       0       0       0       0       0       0       0
  7035 ;;      Temps:          0       0       0       0       0       0       0       0
  7036 ;;      Totals:         0       0       0       0       0       0       0       0
  7037 ;;Total ram usage:        0 bytes
  7038 ;; Hardware stack levels used:    1
  7039 ;; Hardware stack levels required when called:    5
  7040 ;; This function calls:
  7041 ;;		Nothing
  7042 ;; This function is called by:
  7043 ;;		_I2C_DO_RCEN
  7044 ;; This function uses a non-reentrant model
  7045 ;;
  7046                           
  7047                           
  7048                           ;psect for function _I2C_MasterStartRx
  7049  060C                     _I2C_MasterStartRx:
  7050                           
  7051                           ;mcc_generated_files/i2c_master.c: 585:     SSP1CON2bits.RCEN = 1;
  7052                           
  7053                           ;incstack = 0
  7054                           ; Regs used in _I2C_MasterStartRx: []
  7055  060C  0024               	movlb	4	; select bank4
  7056  060D  1596               	bsf	22,3	;volatile
  7057  060E  0008               	return
  7058  060F                     __end_of_I2C_MasterStartRx:
  7059                           
  7060                           	psect	text53
  7061  0623                     __ptext53:	
  7062 ;; *************** function _I2C_CallbackReturnReset *****************
  7063 ;; Defined at:
  7064 ;;		line 525 in file "mcc_generated_files/i2c_master.c"
  7065 ;; Parameters:    Size  Location     Type
  7066 ;;  funPtr          1    9[BANK0 ] PTR void 
  7067 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7068 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7069 ;; Auto vars:     Size  Location     Type
  7070 ;;		None
  7071 ;; Return value:  Size  Location     Type
  7072 ;;                  1    wreg      enum E358
  7073 ;; Registers used:
  7074 ;;		wreg
  7075 ;; Tracked objects:
  7076 ;;		On entry : 0/0
  7077 ;;		On exit  : 0/0
  7078 ;;		Unchanged: 0/0
  7079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7080 ;;      Params:         0       1       0       0       0       0       0       0
  7081 ;;      Locals:         0       0       0       0       0       0       0       0
  7082 ;;      Temps:          0       0       0       0       0       0       0       0
  7083 ;;      Totals:         0       1       0       0       0       0       0       0
  7084 ;;Total ram usage:        1 bytes
  7085 ;; Hardware stack levels used:    1
  7086 ;; Hardware stack levels required when called:    5
  7087 ;; This function calls:
  7088 ;;		Nothing
  7089 ;; This function is called by:
  7090 ;;		_I2C_Open
  7091 ;;		_I2C_DO_TX
  7092 ;;		_I2C_DO_RX
  7093 ;;		_I2C_DO_TX_EMPTY
  7094 ;;		_I2C_DO_ADDRESS_NACK
  7095 ;;		_I2C_DO_RX_EMPTY
  7096 ;; This function uses a non-reentrant model
  7097 ;;
  7098                           
  7099                           
  7100                           ;psect for function _I2C_CallbackReturnReset
  7101  0623                     _I2C_CallbackReturnReset:
  7102                           
  7103                           ;mcc_generated_files/i2c_master.c: 525: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 526: {;mcc_generated_files/i2c_master.c: 527:  
      +                             return I2C_RESET_LINK;
  7104                           
  7105                           ;incstack = 0
  7106                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
  7107  0623  3005               	movlw	5
  7108  0624  0008               	return
  7109  0625                     __end_of_I2C_CallbackReturnReset:
  7110                           
  7111                           	psect	text54
  7112  0625                     __ptext54:	
  7113 ;; *************** function _I2C_CallbackReturnStop *****************
  7114 ;; Defined at:
  7115 ;;		line 520 in file "mcc_generated_files/i2c_master.c"
  7116 ;; Parameters:    Size  Location     Type
  7117 ;;  funPtr          1    9[BANK0 ] PTR void 
  7118 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7119 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7120 ;; Auto vars:     Size  Location     Type
  7121 ;;		None
  7122 ;; Return value:  Size  Location     Type
  7123 ;;                  1    wreg      enum E358
  7124 ;; Registers used:
  7125 ;;		wreg
  7126 ;; Tracked objects:
  7127 ;;		On entry : 0/0
  7128 ;;		On exit  : 0/0
  7129 ;;		Unchanged: 0/0
  7130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7131 ;;      Params:         0       1       0       0       0       0       0       0
  7132 ;;      Locals:         0       0       0       0       0       0       0       0
  7133 ;;      Temps:          0       0       0       0       0       0       0       0
  7134 ;;      Totals:         0       1       0       0       0       0       0       0
  7135 ;;Total ram usage:        1 bytes
  7136 ;; Hardware stack levels used:    1
  7137 ;; Hardware stack levels required when called:    5
  7138 ;; This function calls:
  7139 ;;		Nothing
  7140 ;; This function is called by:
  7141 ;;		_I2C_Open
  7142 ;;		_I2C_SetCallback
  7143 ;;		_I2C_DO_TX
  7144 ;;		_I2C_DO_RX
  7145 ;;		_I2C_DO_TX_EMPTY
  7146 ;;		_I2C_DO_ADDRESS_NACK
  7147 ;;		_I2C_DO_RX_EMPTY
  7148 ;; This function uses a non-reentrant model
  7149 ;;
  7150                           
  7151                           
  7152                           ;psect for function _I2C_CallbackReturnStop
  7153  0625                     _I2C_CallbackReturnStop:
  7154                           
  7155                           ;mcc_generated_files/i2c_master.c: 520: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 521: {;mcc_generated_files/i2c_master.c: 522:   
      +                            return I2C_STOP;
  7156                           
  7157                           ;incstack = 0
  7158                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
  7159  0625  3001               	movlw	1
  7160  0626  0008               	return
  7161  0627                     __end_of_I2C_CallbackReturnStop:
  7162                           
  7163                           	psect	text55
  7164  0426                     __ptext55:	
  7165 ;; *************** function _rdBlkRegCompleteHandler *****************
  7166 ;; Defined at:
  7167 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
  7168 ;; Parameters:    Size  Location     Type
  7169 ;;  ptr             1    9[BANK0 ] PTR void 
  7170 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7171 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7172 ;; Auto vars:     Size  Location     Type
  7173 ;;		None
  7174 ;; Return value:  Size  Location     Type
  7175 ;;                  1    wreg      enum E358
  7176 ;; Registers used:
  7177 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7178 ;; Tracked objects:
  7179 ;;		On entry : 0/0
  7180 ;;		On exit  : 0/0
  7181 ;;		Unchanged: 0/0
  7182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7183 ;;      Params:         0       1       0       0       0       0       0       0
  7184 ;;      Locals:         0       0       0       0       0       0       0       0
  7185 ;;      Temps:          0       0       0       0       0       0       0       0
  7186 ;;      Totals:         0       1       0       0       0       0       0       0
  7187 ;;Total ram usage:        1 bytes
  7188 ;; Hardware stack levels used:    1
  7189 ;; Hardware stack levels required when called:    7
  7190 ;; This function calls:
  7191 ;;		_I2C_SetBuffer
  7192 ;;		_I2C_SetDataCompleteCallback
  7193 ;; This function is called by:
  7194 ;;		_I2C_ReadDataBlock
  7195 ;;		_I2C_DO_TX
  7196 ;;		_I2C_DO_RX
  7197 ;;		_I2C_DO_TX_EMPTY
  7198 ;;		_I2C_DO_ADDRESS_NACK
  7199 ;;		_I2C_DO_RX_EMPTY
  7200 ;; This function uses a non-reentrant model
  7201 ;;
  7202                           
  7203                           
  7204                           ;psect for function _rdBlkRegCompleteHandler
  7205  0426                     _rdBlkRegCompleteHandler:
  7206                           
  7207                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
  7208                           
  7209                           ;incstack = 0
  7210                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  7211  0426  0020               	movlb	0	; select bank0
  7212  0427  085E               	movf	rdBlkRegCompleteHandler@ptr,w
  7213  0428  0086               	movwf	6
  7214  0429  0187               	clrf	7
  7215  042A  3F40               	moviw [0]fsr1
  7216  042B  00D5               	movwf	I2C_SetBuffer@bufferSize
  7217  042C  3F41               	moviw [1]fsr1
  7218  042D  00D6               	movwf	I2C_SetBuffer@bufferSize+1
  7219  042E  085E               	movf	rdBlkRegCompleteHandler@ptr,w
  7220  042F  3E02               	addlw	2
  7221  0430  0086               	movwf	6
  7222  0431  0187               	clrf	7
  7223  0432  0801               	movf	1,w
  7224  0433  3184  24FF  3184   	fcall	_I2C_SetBuffer
  7225                           
  7226                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7227  0436  3000               	movlw	0
  7228  0437  0020               	movlb	0	; select bank0
  7229  0438  00DA               	movwf	I2C_SetDataCompleteCallback@cb
  7230  0439  00DB               	movwf	I2C_SetDataCompleteCallback@cb+1
  7231  043A  01DC               	clrf	I2C_SetDataCompleteCallback@ptr
  7232  043B  3185  251A         	fcall	_I2C_SetDataCompleteCallback
  7233                           
  7234                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
  7235  043D  3002               	movlw	2
  7236  043E  0008               	return
  7237  043F                     __end_of_rdBlkRegCompleteHandler:
  7238                           
  7239                           	psect	text56
  7240  04A8                     __ptext56:	
  7241 ;; *************** function _wr1RegCompleteHandler *****************
  7242 ;; Defined at:
  7243 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
  7244 ;; Parameters:    Size  Location     Type
  7245 ;;  ptr             1    9[BANK0 ] PTR void 
  7246 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7247 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7248 ;; Auto vars:     Size  Location     Type
  7249 ;;		None
  7250 ;; Return value:  Size  Location     Type
  7251 ;;                  1    wreg      enum E358
  7252 ;; Registers used:
  7253 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7254 ;; Tracked objects:
  7255 ;;		On entry : 0/0
  7256 ;;		On exit  : 0/0
  7257 ;;		Unchanged: 0/0
  7258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7259 ;;      Params:         0       1       0       0       0       0       0       0
  7260 ;;      Locals:         0       0       0       0       0       0       0       0
  7261 ;;      Temps:          0       0       0       0       0       0       0       0
  7262 ;;      Totals:         0       1       0       0       0       0       0       0
  7263 ;;Total ram usage:        1 bytes
  7264 ;; Hardware stack levels used:    1
  7265 ;; Hardware stack levels required when called:    7
  7266 ;; This function calls:
  7267 ;;		_I2C_SetBuffer
  7268 ;;		_I2C_SetDataCompleteCallback
  7269 ;; This function is called by:
  7270 ;;		_I2C_Write1ByteRegister
  7271 ;;		_I2C_DO_TX
  7272 ;;		_I2C_DO_RX
  7273 ;;		_I2C_DO_TX_EMPTY
  7274 ;;		_I2C_DO_ADDRESS_NACK
  7275 ;;		_I2C_DO_RX_EMPTY
  7276 ;; This function uses a non-reentrant model
  7277 ;;
  7278                           
  7279                           
  7280                           ;psect for function _wr1RegCompleteHandler
  7281  04A8                     _wr1RegCompleteHandler:
  7282                           
  7283                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
  7284                           
  7285                           ;incstack = 0
  7286                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7287  04A8  3001               	movlw	1
  7288  04A9  0020               	movlb	0	; select bank0
  7289  04AA  00D5               	movwf	I2C_SetBuffer@bufferSize
  7290  04AB  3000               	movlw	0
  7291  04AC  00D6               	movwf	I2C_SetBuffer@bufferSize+1
  7292  04AD  085E               	movf	wr1RegCompleteHandler@ptr,w
  7293  04AE  3184  24FF  3184   	fcall	_I2C_SetBuffer
  7294                           
  7295                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7296  04B1  3000               	movlw	0
  7297  04B2  0020               	movlb	0	; select bank0
  7298  04B3  00DA               	movwf	I2C_SetDataCompleteCallback@cb
  7299  04B4  00DB               	movwf	I2C_SetDataCompleteCallback@cb+1
  7300  04B5  01DC               	clrf	I2C_SetDataCompleteCallback@ptr
  7301  04B6  3185  251A         	fcall	_I2C_SetDataCompleteCallback
  7302                           
  7303                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
  7304  04B8  3004               	movlw	4
  7305  04B9  0008               	return
  7306  04BA                     __end_of_wr1RegCompleteHandler:
  7307                           
  7308                           	psect	text57
  7309  04BA                     __ptext57:	
  7310 ;; *************** function _rd2RegCompleteHandler *****************
  7311 ;; Defined at:
  7312 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
  7313 ;; Parameters:    Size  Location     Type
  7314 ;;  ptr             1    9[BANK0 ] PTR void 
  7315 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7316 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7317 ;; Auto vars:     Size  Location     Type
  7318 ;;		None
  7319 ;; Return value:  Size  Location     Type
  7320 ;;                  1    wreg      enum E358
  7321 ;; Registers used:
  7322 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7323 ;; Tracked objects:
  7324 ;;		On entry : 0/0
  7325 ;;		On exit  : 0/0
  7326 ;;		Unchanged: 0/0
  7327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7328 ;;      Params:         0       1       0       0       0       0       0       0
  7329 ;;      Locals:         0       0       0       0       0       0       0       0
  7330 ;;      Temps:          0       0       0       0       0       0       0       0
  7331 ;;      Totals:         0       1       0       0       0       0       0       0
  7332 ;;Total ram usage:        1 bytes
  7333 ;; Hardware stack levels used:    1
  7334 ;; Hardware stack levels required when called:    7
  7335 ;; This function calls:
  7336 ;;		_I2C_SetBuffer
  7337 ;;		_I2C_SetDataCompleteCallback
  7338 ;; This function is called by:
  7339 ;;		_I2C_Read2ByteRegister
  7340 ;;		_I2C_DO_TX
  7341 ;;		_I2C_DO_RX
  7342 ;;		_I2C_DO_TX_EMPTY
  7343 ;;		_I2C_DO_ADDRESS_NACK
  7344 ;;		_I2C_DO_RX_EMPTY
  7345 ;; This function uses a non-reentrant model
  7346 ;;
  7347                           
  7348                           
  7349                           ;psect for function _rd2RegCompleteHandler
  7350  04BA                     _rd2RegCompleteHandler:
  7351                           
  7352                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
  7353                           
  7354                           ;incstack = 0
  7355                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7356  04BA  3002               	movlw	2
  7357  04BB  0020               	movlb	0	; select bank0
  7358  04BC  00D5               	movwf	I2C_SetBuffer@bufferSize
  7359  04BD  3000               	movlw	0
  7360  04BE  00D6               	movwf	I2C_SetBuffer@bufferSize+1
  7361  04BF  085E               	movf	rd2RegCompleteHandler@ptr,w
  7362  04C0  3184  24FF  3184   	fcall	_I2C_SetBuffer
  7363                           
  7364                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7365  04C3  3000               	movlw	0
  7366  04C4  0020               	movlb	0	; select bank0
  7367  04C5  00DA               	movwf	I2C_SetDataCompleteCallback@cb
  7368  04C6  00DB               	movwf	I2C_SetDataCompleteCallback@cb+1
  7369  04C7  01DC               	clrf	I2C_SetDataCompleteCallback@ptr
  7370  04C8  3185  251A         	fcall	_I2C_SetDataCompleteCallback
  7371                           
  7372                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
  7373  04CA  3002               	movlw	2
  7374  04CB  0008               	return
  7375  04CC                     __end_of_rd2RegCompleteHandler:
  7376                           
  7377                           	psect	text58
  7378  04CC                     __ptext58:	
  7379 ;; *************** function _rd1RegCompleteHandler *****************
  7380 ;; Defined at:
  7381 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
  7382 ;; Parameters:    Size  Location     Type
  7383 ;;  ptr             1    9[BANK0 ] PTR void 
  7384 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7385 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7386 ;; Auto vars:     Size  Location     Type
  7387 ;;		None
  7388 ;; Return value:  Size  Location     Type
  7389 ;;                  1    wreg      enum E358
  7390 ;; Registers used:
  7391 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7392 ;; Tracked objects:
  7393 ;;		On entry : 0/0
  7394 ;;		On exit  : 0/0
  7395 ;;		Unchanged: 0/0
  7396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7397 ;;      Params:         0       1       0       0       0       0       0       0
  7398 ;;      Locals:         0       0       0       0       0       0       0       0
  7399 ;;      Temps:          0       0       0       0       0       0       0       0
  7400 ;;      Totals:         0       1       0       0       0       0       0       0
  7401 ;;Total ram usage:        1 bytes
  7402 ;; Hardware stack levels used:    1
  7403 ;; Hardware stack levels required when called:    7
  7404 ;; This function calls:
  7405 ;;		_I2C_SetBuffer
  7406 ;;		_I2C_SetDataCompleteCallback
  7407 ;; This function is called by:
  7408 ;;		_I2C_Read1ByteRegister
  7409 ;;		_I2C_DO_TX
  7410 ;;		_I2C_DO_RX
  7411 ;;		_I2C_DO_TX_EMPTY
  7412 ;;		_I2C_DO_ADDRESS_NACK
  7413 ;;		_I2C_DO_RX_EMPTY
  7414 ;; This function uses a non-reentrant model
  7415 ;;
  7416                           
  7417                           
  7418                           ;psect for function _rd1RegCompleteHandler
  7419  04CC                     _rd1RegCompleteHandler:
  7420                           
  7421                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
  7422                           
  7423                           ;incstack = 0
  7424                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7425  04CC  3001               	movlw	1
  7426  04CD  0020               	movlb	0	; select bank0
  7427  04CE  00D5               	movwf	I2C_SetBuffer@bufferSize
  7428  04CF  3000               	movlw	0
  7429  04D0  00D6               	movwf	I2C_SetBuffer@bufferSize+1
  7430  04D1  085E               	movf	rd1RegCompleteHandler@ptr,w
  7431  04D2  3184  24FF  3184   	fcall	_I2C_SetBuffer
  7432                           
  7433                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7434  04D5  3000               	movlw	0
  7435  04D6  0020               	movlb	0	; select bank0
  7436  04D7  00DA               	movwf	I2C_SetDataCompleteCallback@cb
  7437  04D8  00DB               	movwf	I2C_SetDataCompleteCallback@cb+1
  7438  04D9  01DC               	clrf	I2C_SetDataCompleteCallback@ptr
  7439  04DA  3185  251A         	fcall	_I2C_SetDataCompleteCallback
  7440                           
  7441                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
  7442  04DC  3002               	movlw	2
  7443  04DD  0008               	return
  7444  04DE                     __end_of_rd1RegCompleteHandler:
  7445                           
  7446                           	psect	text59
  7447  04DE                     __ptext59:	
  7448 ;; *************** function _wr2RegCompleteHandler *****************
  7449 ;; Defined at:
  7450 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
  7451 ;; Parameters:    Size  Location     Type
  7452 ;;  ptr             1    9[BANK0 ] PTR void 
  7453 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7454 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7455 ;; Auto vars:     Size  Location     Type
  7456 ;;		None
  7457 ;; Return value:  Size  Location     Type
  7458 ;;                  1    wreg      enum E358
  7459 ;; Registers used:
  7460 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7461 ;; Tracked objects:
  7462 ;;		On entry : 0/0
  7463 ;;		On exit  : 0/0
  7464 ;;		Unchanged: 0/0
  7465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7466 ;;      Params:         0       1       0       0       0       0       0       0
  7467 ;;      Locals:         0       0       0       0       0       0       0       0
  7468 ;;      Temps:          0       0       0       0       0       0       0       0
  7469 ;;      Totals:         0       1       0       0       0       0       0       0
  7470 ;;Total ram usage:        1 bytes
  7471 ;; Hardware stack levels used:    1
  7472 ;; Hardware stack levels required when called:    7
  7473 ;; This function calls:
  7474 ;;		_I2C_SetBuffer
  7475 ;;		_I2C_SetDataCompleteCallback
  7476 ;; This function is called by:
  7477 ;;		_I2C_Write2ByteRegister
  7478 ;;		_I2C_DO_TX
  7479 ;;		_I2C_DO_RX
  7480 ;;		_I2C_DO_TX_EMPTY
  7481 ;;		_I2C_DO_ADDRESS_NACK
  7482 ;;		_I2C_DO_RX_EMPTY
  7483 ;; This function uses a non-reentrant model
  7484 ;;
  7485                           
  7486                           
  7487                           ;psect for function _wr2RegCompleteHandler
  7488  04DE                     _wr2RegCompleteHandler:
  7489                           
  7490                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
  7491                           
  7492                           ;incstack = 0
  7493                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7494  04DE  3002               	movlw	2
  7495  04DF  0020               	movlb	0	; select bank0
  7496  04E0  00D5               	movwf	I2C_SetBuffer@bufferSize
  7497  04E1  3000               	movlw	0
  7498  04E2  00D6               	movwf	I2C_SetBuffer@bufferSize+1
  7499  04E3  085E               	movf	wr2RegCompleteHandler@ptr,w
  7500  04E4  3184  24FF  3184   	fcall	_I2C_SetBuffer
  7501                           
  7502                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7503  04E7  3000               	movlw	0
  7504  04E8  0020               	movlb	0	; select bank0
  7505  04E9  00DA               	movwf	I2C_SetDataCompleteCallback@cb
  7506  04EA  00DB               	movwf	I2C_SetDataCompleteCallback@cb+1
  7507  04EB  01DC               	clrf	I2C_SetDataCompleteCallback@ptr
  7508  04EC  3185  251A         	fcall	_I2C_SetDataCompleteCallback
  7509                           
  7510                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
  7511  04EE  3004               	movlw	4
  7512  04EF  0008               	return
  7513  04F0                     __end_of_wr2RegCompleteHandler:
  7514                           
  7515                           	psect	text60
  7516  051A                     __ptext60:	
  7517 ;; *************** function _I2C_SetDataCompleteCallback *****************
  7518 ;; Defined at:
  7519 ;;		line 273 in file "mcc_generated_files/i2c_master.c"
  7520 ;; Parameters:    Size  Location     Type
  7521 ;;  cb              2    5[BANK0 ] PTR FTN(PTR void ,)enum 
  7522 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  7523 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  7524 ;;  ptr             1    7[BANK0 ] PTR void 
  7525 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7526 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7527 ;; Auto vars:     Size  Location     Type
  7528 ;;		None
  7529 ;; Return value:  Size  Location     Type
  7530 ;;                  1    wreg      void 
  7531 ;; Registers used:
  7532 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7533 ;; Tracked objects:
  7534 ;;		On entry : 0/0
  7535 ;;		On exit  : 0/0
  7536 ;;		Unchanged: 0/0
  7537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7538 ;;      Params:         0       3       0       0       0       0       0       0
  7539 ;;      Locals:         0       0       0       0       0       0       0       0
  7540 ;;      Temps:          0       1       0       0       0       0       0       0
  7541 ;;      Totals:         0       4       0       0       0       0       0       0
  7542 ;;Total ram usage:        4 bytes
  7543 ;; Hardware stack levels used:    1
  7544 ;; Hardware stack levels required when called:    6
  7545 ;; This function calls:
  7546 ;;		_I2C_SetCallback
  7547 ;; This function is called by:
  7548 ;;		_rd1RegCompleteHandler
  7549 ;;		_rd2RegCompleteHandler
  7550 ;;		_wr1RegCompleteHandler
  7551 ;;		_wr2RegCompleteHandler
  7552 ;;		_rdBlkRegCompleteHandler
  7553 ;;		_I2C_Read1ByteRegister
  7554 ;;		_I2C_Read2ByteRegister
  7555 ;;		_I2C_Write1ByteRegister
  7556 ;;		_I2C_Write2ByteRegister
  7557 ;;		_I2C_ReadDataBlock
  7558 ;; This function uses a non-reentrant model
  7559 ;;
  7560                           
  7561                           
  7562                           ;psect for function _I2C_SetDataCompleteCallback
  7563  051A                     _I2C_SetDataCompleteCallback:
  7564                           
  7565                           ;mcc_generated_files/i2c_master.c: 273: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 274: {;mcc_generated_files/i2c_master.c
      +                          : 275:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  7566                           
  7567                           ;incstack = 0
  7568                           ; Regs used in _I2C_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  7569  051A  0020               	movlb	0	; select bank0
  7570  051B  085B               	movf	I2C_SetDataCompleteCallback@cb+1,w
  7571  051C  00D6               	movwf	I2C_SetCallback@cb+1
  7572  051D  085A               	movf	I2C_SetDataCompleteCallback@cb,w
  7573  051E  00D5               	movwf	I2C_SetCallback@cb
  7574  051F  085C               	movf	I2C_SetDataCompleteCallback@ptr,w
  7575  0520  00DD               	movwf	??_I2C_SetDataCompleteCallback
  7576  0521  085D               	movf	??_I2C_SetDataCompleteCallback,w
  7577  0522  00D7               	movwf	I2C_SetCallback@ptr
  7578  0523  3000               	movlw	0
  7579  0524  3183  2312         	fcall	_I2C_SetCallback
  7580  0526  0008               	return
  7581  0527                     __end_of_I2C_SetDataCompleteCallback:
  7582                           
  7583                           	psect	text61
  7584  0312                     __ptext61:	
  7585 ;; *************** function _I2C_SetCallback *****************
  7586 ;; Defined at:
  7587 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
  7588 ;; Parameters:    Size  Location     Type
  7589 ;;  idx             1    wreg     enum E3892
  7590 ;;  cb              2    0[BANK0 ] PTR FTN(PTR void ,)enum 
  7591 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  7592 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  7593 ;;  ptr             1    2[BANK0 ] PTR void 
  7594 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7595 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7596 ;; Auto vars:     Size  Location     Type
  7597 ;;  idx             1    4[BANK0 ] enum E3892
  7598 ;; Return value:  Size  Location     Type
  7599 ;;                  1    wreg      void 
  7600 ;; Registers used:
  7601 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7602 ;; Tracked objects:
  7603 ;;		On entry : 0/0
  7604 ;;		On exit  : 0/0
  7605 ;;		Unchanged: 0/0
  7606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7607 ;;      Params:         0       3       0       0       0       0       0       0
  7608 ;;      Locals:         0       1       0       0       0       0       0       0
  7609 ;;      Temps:          0       1       0       0       0       0       0       0
  7610 ;;      Totals:         0       5       0       0       0       0       0       0
  7611 ;;Total ram usage:        5 bytes
  7612 ;; Hardware stack levels used:    1
  7613 ;; Hardware stack levels required when called:    5
  7614 ;; This function calls:
  7615 ;;		Nothing
  7616 ;; This function is called by:
  7617 ;;		_I2C_SetDataCompleteCallback
  7618 ;;		_I2C_SetAddressNackCallback
  7619 ;;		_I2C_SetWriteCollisionCallback
  7620 ;;		_I2C_SetDataNackCallback
  7621 ;;		_I2C_SetTimeoutCallback
  7622 ;; This function uses a non-reentrant model
  7623 ;;
  7624                           
  7625                           
  7626                           ;psect for function _I2C_SetCallback
  7627  0312                     _I2C_SetCallback:
  7628                           
  7629                           ;incstack = 0
  7630                           ; Regs used in _I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
  7631                           ;I2C_SetCallback@idx stored from wreg
  7632  0312  0020               	movlb	0	; select bank0
  7633  0313  00D9               	movwf	I2C_SetCallback@idx
  7634                           
  7635                           ;mcc_generated_files/i2c_master.c: 298: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 299: {;mcc_generate
      +                          d_files/i2c_master.c: 300:     if(cb)
  7636  0314  0855               	movf	I2C_SetCallback@cb,w
  7637  0315  0456               	iorwf	I2C_SetCallback@cb+1,w
  7638  0316  1903               	btfsc	3,2
  7639  0317  2B29               	goto	l3170
  7640                           
  7641                           ;mcc_generated_files/i2c_master.c: 301:     {;mcc_generated_files/i2c_master.c: 302:    
      +                               I2C_Status.callbackTable[idx] = cb;
  7642  0318  3559               	lslf	I2C_SetCallback@idx,w
  7643  0319  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  7644  031A  0086               	movwf	6
  7645  031B  0187               	clrf	7
  7646  031C  0855               	movf	I2C_SetCallback@cb,w
  7647  031D  3FC0               	movwi [0]fsr1
  7648  031E  0856               	movf	I2C_SetCallback@cb+1,w
  7649  031F  3FC1               	movwi [1]fsr1
  7650                           
  7651                           ;mcc_generated_files/i2c_master.c: 303:         I2C_Status.callbackPayload[idx] = ptr;
  7652  0320  0857               	movf	I2C_SetCallback@ptr,w
  7653  0321  00D8               	movwf	??_I2C_SetCallback
  7654  0322  0859               	movf	I2C_SetCallback@idx,w
  7655  0323  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  7656  0324  0086               	movwf	6
  7657  0325  0187               	clrf	7
  7658  0326  0858               	movf	??_I2C_SetCallback,w
  7659  0327  0081               	movwf	1
  7660                           
  7661                           ;mcc_generated_files/i2c_master.c: 304:     }
  7662  0328  0008               	return
  7663  0329                     l3170:
  7664                           
  7665                           ;mcc_generated_files/i2c_master.c: 306:     {;mcc_generated_files/i2c_master.c: 307:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  7666  0329  3559               	lslf	I2C_SetCallback@idx,w
  7667  032A  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  7668  032B  0086               	movwf	6
  7669  032C  0187               	clrf	7
  7670  032D  3025               	movlw	low _I2C_CallbackReturnStop
  7671  032E  3FC0               	movwi [0]fsr1
  7672  032F  3006               	movlw	high _I2C_CallbackReturnStop
  7673  0330  3FC1               	movwi [1]fsr1
  7674                           
  7675                           ;mcc_generated_files/i2c_master.c: 308:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  7676  0331  0859               	movf	I2C_SetCallback@idx,w
  7677  0332  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  7678  0333  0086               	movwf	6
  7679  0334  0187               	clrf	7
  7680  0335  0181               	clrf	1
  7681  0336  0008               	return
  7682  0337                     __end_of_I2C_SetCallback:
  7683                           
  7684                           	psect	text62
  7685  04FF                     __ptext62:	
  7686 ;; *************** function _I2C_SetBuffer *****************
  7687 ;; Defined at:
  7688 ;;		line 263 in file "mcc_generated_files/i2c_master.c"
  7689 ;; Parameters:    Size  Location     Type
  7690 ;;  buffer          1    wreg     PTR void 
  7691 ;;		 -> TempH(1), Command(1), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), 
  7692 ;;		 -> I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegi
      +ster@data(1), 
  7693 ;;		 -> I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), 
  7694 ;;		 -> I2C_Read1ByteRegister@returnValue(1), 
  7695 ;;  bufferSize      2    0[BANK0 ] unsigned int 
  7696 ;; Auto vars:     Size  Location     Type
  7697 ;;  buffer          1    3[BANK0 ] PTR void 
  7698 ;;		 -> TempH(1), Command(1), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), 
  7699 ;;		 -> I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegi
      +ster@data(1), 
  7700 ;;		 -> I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), 
  7701 ;;		 -> I2C_Read1ByteRegister@returnValue(1), 
  7702 ;; Return value:  Size  Location     Type
  7703 ;;                  1    wreg      void 
  7704 ;; Registers used:
  7705 ;;		wreg
  7706 ;; Tracked objects:
  7707 ;;		On entry : 0/0
  7708 ;;		On exit  : 0/0
  7709 ;;		Unchanged: 0/0
  7710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7711 ;;      Params:         0       2       0       0       0       0       0       0
  7712 ;;      Locals:         0       1       0       0       0       0       0       0
  7713 ;;      Temps:          0       1       0       0       0       0       0       0
  7714 ;;      Totals:         0       4       0       0       0       0       0       0
  7715 ;;Total ram usage:        4 bytes
  7716 ;; Hardware stack levels used:    1
  7717 ;; Hardware stack levels required when called:    5
  7718 ;; This function calls:
  7719 ;;		Nothing
  7720 ;; This function is called by:
  7721 ;;		_I2C_WriteNBytes
  7722 ;;		_I2C_ReadNBytes
  7723 ;;		_rd1RegCompleteHandler
  7724 ;;		_rd2RegCompleteHandler
  7725 ;;		_wr1RegCompleteHandler
  7726 ;;		_wr2RegCompleteHandler
  7727 ;;		_rdBlkRegCompleteHandler
  7728 ;;		_I2C_Read1ByteRegister
  7729 ;;		_I2C_Read2ByteRegister
  7730 ;;		_I2C_Write1ByteRegister
  7731 ;;		_I2C_Write2ByteRegister
  7732 ;;		_I2C_ReadDataBlock
  7733 ;; This function uses a non-reentrant model
  7734 ;;
  7735                           
  7736                           
  7737                           ;psect for function _I2C_SetBuffer
  7738  04FF                     _I2C_SetBuffer:
  7739                           
  7740                           ;incstack = 0
  7741                           ; Regs used in _I2C_SetBuffer: [wreg]
  7742                           ;I2C_SetBuffer@buffer stored from wreg
  7743  04FF  0020               	movlb	0	; select bank0
  7744  0500  00D8               	movwf	I2C_SetBuffer@buffer
  7745                           
  7746                           ;mcc_generated_files/i2c_master.c: 263: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 264: {;mcc_generated_files/i2c_master.c: 265:     
      +                          if(I2C_Status.bufferFree)
  7747  0501  1DBC               	btfss	_I2C_Status+28,3
  7748  0502  0008               	return
  7749                           
  7750                           ;mcc_generated_files/i2c_master.c: 266:     {;mcc_generated_files/i2c_master.c: 267:    
      +                               I2C_Status.data_ptr = buffer;
  7751  0503  0858               	movf	I2C_SetBuffer@buffer,w
  7752  0504  00D7               	movwf	??_I2C_SetBuffer
  7753  0505  0857               	movf	??_I2C_SetBuffer,w
  7754  0506  00B7               	movwf	low ((_I2C_Status| 0+23))
  7755                           
  7756                           ;mcc_generated_files/i2c_master.c: 268:         I2C_Status.data_length = bufferSize;
  7757  0507  0856               	movf	I2C_SetBuffer@bufferSize+1,w
  7758  0508  00B9               	movwf	_I2C_Status+25
  7759  0509  0855               	movf	I2C_SetBuffer@bufferSize,w
  7760  050A  00B8               	movwf	_I2C_Status+24
  7761                           
  7762                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.bufferFree = 0;
  7763  050B  11BC               	bcf	_I2C_Status+28,3
  7764  050C  0008               	return
  7765  050D                     __end_of_I2C_SetBuffer:
  7766                           
  7767                           	psect	text63
  7768  060F                     __ptext63:	
  7769 ;; *************** function _I2C_MasterStop *****************
  7770 ;; Defined at:
  7771 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
  7772 ;; Parameters:    Size  Location     Type
  7773 ;;		None
  7774 ;; Auto vars:     Size  Location     Type
  7775 ;;		None
  7776 ;; Return value:  Size  Location     Type
  7777 ;;                  1    wreg      void 
  7778 ;; Registers used:
  7779 ;;		None
  7780 ;; Tracked objects:
  7781 ;;		On entry : 0/0
  7782 ;;		On exit  : 0/0
  7783 ;;		Unchanged: 0/0
  7784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7785 ;;      Params:         0       0       0       0       0       0       0       0
  7786 ;;      Locals:         0       0       0       0       0       0       0       0
  7787 ;;      Temps:          0       0       0       0       0       0       0       0
  7788 ;;      Totals:         0       0       0       0       0       0       0       0
  7789 ;;Total ram usage:        0 bytes
  7790 ;; Hardware stack levels used:    1
  7791 ;; Hardware stack levels required when called:    5
  7792 ;; This function calls:
  7793 ;;		Nothing
  7794 ;; This function is called by:
  7795 ;;		_I2C_DO_SEND_STOP
  7796 ;; This function uses a non-reentrant model
  7797 ;;
  7798                           
  7799                           
  7800                           ;psect for function _I2C_MasterStop
  7801  060F                     _I2C_MasterStop:
  7802                           
  7803                           ;mcc_generated_files/i2c_master.c: 595:     SSP1CON2bits.PEN = 1;
  7804                           
  7805                           ;incstack = 0
  7806                           ; Regs used in _I2C_MasterStop: []
  7807  060F  0024               	movlb	4	; select bank4
  7808  0610  1516               	bsf	22,2	;volatile
  7809  0611  0008               	return
  7810  0612                     __end_of_I2C_MasterStop:
  7811                           
  7812                           	psect	text64
  7813  0612                     __ptext64:	
  7814 ;; *************** function _I2C_MasterEnableRestart *****************
  7815 ;; Defined at:
  7816 ;;		line 573 in file "mcc_generated_files/i2c_master.c"
  7817 ;; Parameters:    Size  Location     Type
  7818 ;;		None
  7819 ;; Auto vars:     Size  Location     Type
  7820 ;;		None
  7821 ;; Return value:  Size  Location     Type
  7822 ;;                  1    wreg      void 
  7823 ;; Registers used:
  7824 ;;		None
  7825 ;; Tracked objects:
  7826 ;;		On entry : 0/0
  7827 ;;		On exit  : 0/0
  7828 ;;		Unchanged: 0/0
  7829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7830 ;;      Params:         0       0       0       0       0       0       0       0
  7831 ;;      Locals:         0       0       0       0       0       0       0       0
  7832 ;;      Temps:          0       0       0       0       0       0       0       0
  7833 ;;      Totals:         0       0       0       0       0       0       0       0
  7834 ;;Total ram usage:        0 bytes
  7835 ;; Hardware stack levels used:    1
  7836 ;; Hardware stack levels required when called:    5
  7837 ;; This function calls:
  7838 ;;		Nothing
  7839 ;; This function is called by:
  7840 ;;		_I2C_DO_SEND_RESTART_READ
  7841 ;;		_I2C_DO_SEND_RESTART_WRITE
  7842 ;;		_I2C_DO_SEND_RESTART
  7843 ;;		_I2C_DO_RX_EMPTY
  7844 ;; This function uses a non-reentrant model
  7845 ;;
  7846                           
  7847                           
  7848                           ;psect for function _I2C_MasterEnableRestart
  7849  0612                     _I2C_MasterEnableRestart:
  7850                           
  7851                           ;mcc_generated_files/i2c_master.c: 575:     SSP1CON2bits.RSEN = 1;
  7852                           
  7853                           ;incstack = 0
  7854                           ; Regs used in _I2C_MasterEnableRestart: []
  7855  0612  0024               	movlb	4	; select bank4
  7856  0613  1496               	bsf	22,1	;volatile
  7857  0614  0008               	return
  7858  0615                     __end_of_I2C_MasterEnableRestart:
  7859                           
  7860                           	psect	text65
  7861  0615                     __ptext65:	
  7862 ;; *************** function _I2C_MasterStart *****************
  7863 ;; Defined at:
  7864 ;;		line 588 in file "mcc_generated_files/i2c_master.c"
  7865 ;; Parameters:    Size  Location     Type
  7866 ;;		None
  7867 ;; Auto vars:     Size  Location     Type
  7868 ;;		None
  7869 ;; Return value:  Size  Location     Type
  7870 ;;                  1    wreg      void 
  7871 ;; Registers used:
  7872 ;;		None
  7873 ;; Tracked objects:
  7874 ;;		On entry : 0/0
  7875 ;;		On exit  : 0/0
  7876 ;;		Unchanged: 0/0
  7877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7878 ;;      Params:         0       0       0       0       0       0       0       0
  7879 ;;      Locals:         0       0       0       0       0       0       0       0
  7880 ;;      Temps:          0       0       0       0       0       0       0       0
  7881 ;;      Totals:         0       0       0       0       0       0       0       0
  7882 ;;Total ram usage:        0 bytes
  7883 ;; Hardware stack levels used:    1
  7884 ;; Hardware stack levels required when called:    5
  7885 ;; This function calls:
  7886 ;;		Nothing
  7887 ;; This function is called by:
  7888 ;;		_I2C_MasterOperation
  7889 ;; This function uses a non-reentrant model
  7890 ;;
  7891                           
  7892                           
  7893                           ;psect for function _I2C_MasterStart
  7894  0615                     _I2C_MasterStart:
  7895                           
  7896                           ;mcc_generated_files/i2c_master.c: 590:     SSP1CON2bits.SEN = 1;
  7897                           
  7898                           ;incstack = 0
  7899                           ; Regs used in _I2C_MasterStart: []
  7900  0615  0024               	movlb	4	; select bank4
  7901  0616  1416               	bsf	22,0	;volatile
  7902  0617  0008               	return
  7903  0618                     __end_of_I2C_MasterStart:
  7904                           
  7905                           	psect	text66
  7906  043F                     __ptext66:	
  7907 ;; *************** function _I2C_Close *****************
  7908 ;; Defined at:
  7909 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
  7910 ;; Parameters:    Size  Location     Type
  7911 ;;		None
  7912 ;; Auto vars:     Size  Location     Type
  7913 ;;  returnValue     1    1[BANK0 ] enum E353
  7914 ;; Return value:  Size  Location     Type
  7915 ;;                  1    wreg      enum E353
  7916 ;; Registers used:
  7917 ;;		wreg, status,2, status,0, pclath, cstack
  7918 ;; Tracked objects:
  7919 ;;		On entry : 0/0
  7920 ;;		On exit  : 0/0
  7921 ;;		Unchanged: 0/0
  7922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7923 ;;      Params:         0       0       0       0       0       0       0       0
  7924 ;;      Locals:         0       1       0       0       0       0       0       0
  7925 ;;      Temps:          0       1       0       0       0       0       0       0
  7926 ;;      Totals:         0       2       0       0       0       0       0       0
  7927 ;;Total ram usage:        2 bytes
  7928 ;; Hardware stack levels used:    1
  7929 ;; Hardware stack levels required when called:    6
  7930 ;; This function calls:
  7931 ;;		_I2C_MasterClearIrq
  7932 ;;		_I2C_MasterClose
  7933 ;;		_I2C_MasterDisableIrq
  7934 ;; This function is called by:
  7935 ;;		_I2C_WriteNBytes
  7936 ;;		_I2C_ReadNBytes
  7937 ;;		_I2C_Read1ByteRegister
  7938 ;;		_I2C_Read2ByteRegister
  7939 ;;		_I2C_Write1ByteRegister
  7940 ;;		_I2C_Write2ByteRegister
  7941 ;;		_I2C_ReadDataBlock
  7942 ;; This function uses a non-reentrant model
  7943 ;;
  7944                           
  7945                           
  7946                           ;psect for function _I2C_Close
  7947  043F                     _I2C_Close:
  7948                           
  7949                           ;mcc_generated_files/i2c_master.c: 211:     i2c_error_t returnValue = I2C_BUSY;
  7950                           
  7951                           ;incstack = 0
  7952                           ; Regs used in _I2C_Close: [wreg+status,2+status,0+pclath+cstack]
  7953  043F  0020               	movlb	0	; select bank0
  7954  0440  01D6               	clrf	I2C_Close@returnValue
  7955  0441  0AD6               	incf	I2C_Close@returnValue,f
  7956                           
  7957                           ;mcc_generated_files/i2c_master.c: 212:     if(!I2C_Status.busy)
  7958  0442  18BC               	btfsc	_I2C_Status+28,1
  7959  0443  2C56               	goto	l3550
  7960                           
  7961                           ;mcc_generated_files/i2c_master.c: 213:     {;mcc_generated_files/i2c_master.c: 214:    
      +                               I2C_Status.inUse = 0;
  7962  0444  113C               	bcf	_I2C_Status+28,2
  7963                           
  7964                           ;mcc_generated_files/i2c_master.c: 215:         I2C_Status.address = 0xff;
  7965  0445  30FF               	movlw	255
  7966  0446  00D5               	movwf	??_I2C_Close
  7967  0447  0855               	movf	??_I2C_Close,w
  7968  0448  00B6               	movwf	_I2C_Status+22
  7969                           
  7970                           ;mcc_generated_files/i2c_master.c: 216:         I2C_MasterClearIrq();
  7971  0449  3186  261E  3184   	fcall	_I2C_MasterClearIrq
  7972                           
  7973                           ;mcc_generated_files/i2c_master.c: 217:         I2C_MasterDisableIrq();
  7974  044C  3186  2618  3184   	fcall	_I2C_MasterDisableIrq
  7975                           
  7976                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClose();
  7977  044F  3186  261B         	fcall	_I2C_MasterClose
  7978                           
  7979                           ;mcc_generated_files/i2c_master.c: 219:         returnValue = I2C_Status.error;
  7980  0451  0020               	movlb	0	; select bank0
  7981  0452  083B               	movf	_I2C_Status+27,w
  7982  0453  00D5               	movwf	??_I2C_Close
  7983  0454  0855               	movf	??_I2C_Close,w
  7984  0455  00D6               	movwf	I2C_Close@returnValue
  7985  0456                     l3550:
  7986                           
  7987                           ;mcc_generated_files/i2c_master.c: 221:     return returnValue;
  7988  0456  0856               	movf	I2C_Close@returnValue,w
  7989  0457  0008               	return
  7990  0458                     __end_of_I2C_Close:
  7991                           
  7992                           	psect	text67
  7993  0618                     __ptext67:	
  7994 ;; *************** function _I2C_MasterDisableIrq *****************
  7995 ;; Defined at:
  7996 ;;		line 635 in file "mcc_generated_files/i2c_master.c"
  7997 ;; Parameters:    Size  Location     Type
  7998 ;;		None
  7999 ;; Auto vars:     Size  Location     Type
  8000 ;;		None
  8001 ;; Return value:  Size  Location     Type
  8002 ;;                  1    wreg      void 
  8003 ;; Registers used:
  8004 ;;		None
  8005 ;; Tracked objects:
  8006 ;;		On entry : 0/0
  8007 ;;		On exit  : 0/0
  8008 ;;		Unchanged: 0/0
  8009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8010 ;;      Params:         0       0       0       0       0       0       0       0
  8011 ;;      Locals:         0       0       0       0       0       0       0       0
  8012 ;;      Temps:          0       0       0       0       0       0       0       0
  8013 ;;      Totals:         0       0       0       0       0       0       0       0
  8014 ;;Total ram usage:        0 bytes
  8015 ;; Hardware stack levels used:    1
  8016 ;; Hardware stack levels required when called:    5
  8017 ;; This function calls:
  8018 ;;		Nothing
  8019 ;; This function is called by:
  8020 ;;		_I2C_Close
  8021 ;;		_I2C_SetTimeOut
  8022 ;; This function uses a non-reentrant model
  8023 ;;
  8024                           
  8025                           
  8026                           ;psect for function _I2C_MasterDisableIrq
  8027  0618                     _I2C_MasterDisableIrq:
  8028                           
  8029                           ;mcc_generated_files/i2c_master.c: 637:     PIE1bits.SSP1IE = 0;
  8030                           
  8031                           ;incstack = 0
  8032                           ; Regs used in _I2C_MasterDisableIrq: []
  8033  0618  0021               	movlb	1	; select bank1
  8034  0619  1191               	bcf	17,3	;volatile
  8035  061A  0008               	return
  8036  061B                     __end_of_I2C_MasterDisableIrq:
  8037                           
  8038                           	psect	text68
  8039  061B                     __ptext68:	
  8040 ;; *************** function _I2C_MasterClose *****************
  8041 ;; Defined at:
  8042 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
  8043 ;; Parameters:    Size  Location     Type
  8044 ;;		None
  8045 ;; Auto vars:     Size  Location     Type
  8046 ;;		None
  8047 ;; Return value:  Size  Location     Type
  8048 ;;                  1    wreg      void 
  8049 ;; Registers used:
  8050 ;;		None
  8051 ;; Tracked objects:
  8052 ;;		On entry : 0/0
  8053 ;;		On exit  : 0/0
  8054 ;;		Unchanged: 0/0
  8055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8056 ;;      Params:         0       0       0       0       0       0       0       0
  8057 ;;      Locals:         0       0       0       0       0       0       0       0
  8058 ;;      Temps:          0       0       0       0       0       0       0       0
  8059 ;;      Totals:         0       0       0       0       0       0       0       0
  8060 ;;Total ram usage:        0 bytes
  8061 ;; Hardware stack levels used:    1
  8062 ;; Hardware stack levels required when called:    5
  8063 ;; This function calls:
  8064 ;;		Nothing
  8065 ;; This function is called by:
  8066 ;;		_I2C_Close
  8067 ;; This function uses a non-reentrant model
  8068 ;;
  8069                           
  8070                           
  8071                           ;psect for function _I2C_MasterClose
  8072  061B                     _I2C_MasterClose:
  8073                           
  8074                           ;mcc_generated_files/i2c_master.c: 560:     SSP1CON1bits.SSPEN = 0;
  8075                           
  8076                           ;incstack = 0
  8077                           ; Regs used in _I2C_MasterClose: []
  8078  061B  0024               	movlb	4	; select bank4
  8079  061C  1295               	bcf	21,5	;volatile
  8080  061D  0008               	return
  8081  061E                     __end_of_I2C_MasterClose:
  8082                           
  8083                           	psect	text69
  8084  061E                     __ptext69:	
  8085 ;; *************** function _I2C_MasterClearIrq *****************
  8086 ;; Defined at:
  8087 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
  8088 ;; Parameters:    Size  Location     Type
  8089 ;;		None
  8090 ;; Auto vars:     Size  Location     Type
  8091 ;;		None
  8092 ;; Return value:  Size  Location     Type
  8093 ;;                  1    wreg      void 
  8094 ;; Registers used:
  8095 ;;		None
  8096 ;; Tracked objects:
  8097 ;;		On entry : 0/0
  8098 ;;		On exit  : 0/0
  8099 ;;		Unchanged: 0/0
  8100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8101 ;;      Params:         0       0       0       0       0       0       0       0
  8102 ;;      Locals:         0       0       0       0       0       0       0       0
  8103 ;;      Temps:          0       0       0       0       0       0       0       0
  8104 ;;      Totals:         0       0       0       0       0       0       0       0
  8105 ;;Total ram usage:        0 bytes
  8106 ;; Hardware stack levels used:    1
  8107 ;; Hardware stack levels required when called:    5
  8108 ;; This function calls:
  8109 ;;		Nothing
  8110 ;; This function is called by:
  8111 ;;		_I2C_Open
  8112 ;;		_I2C_Close
  8113 ;;		_I2C_MasterFsm
  8114 ;; This function uses a non-reentrant model
  8115 ;;
  8116                           
  8117                           
  8118                           ;psect for function _I2C_MasterClearIrq
  8119  061E                     _I2C_MasterClearIrq:
  8120                           
  8121                           ;mcc_generated_files/i2c_master.c: 642:     PIR1bits.SSP1IF = 0;
  8122                           
  8123                           ;incstack = 0
  8124                           ; Regs used in _I2C_MasterClearIrq: []
  8125  061E  0020               	movlb	0	; select bank0
  8126  061F  1191               	bcf	17,3	;volatile
  8127  0620  0008               	return
  8128  0621                     __end_of_I2C_MasterClearIrq:
  8129                           
  8130                           	psect	text70
  8131  010D                     __ptext70:	
  8132 ;; *************** function _COS_TmrHandler *****************
  8133 ;; Defined at:
  8134 ;;		line 92 in file "SourceFiles/COS/COS_Main.c"
  8135 ;; Parameters:    Size  Location     Type
  8136 ;;		None
  8137 ;; Auto vars:     Size  Location     Type
  8138 ;;  tempbyte2       1    4[BANK0 ] unsigned char 
  8139 ;;  tempbyte1       1    3[BANK0 ] unsigned char 
  8140 ;; Return value:  Size  Location     Type
  8141 ;;                  1    wreg      void 
  8142 ;; Registers used:
  8143 ;;		wreg, status,2, status,0
  8144 ;; Tracked objects:
  8145 ;;		On entry : 0/0
  8146 ;;		On exit  : 0/0
  8147 ;;		Unchanged: 0/0
  8148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8149 ;;      Params:         0       0       0       0       0       0       0       0
  8150 ;;      Locals:         0       2       0       0       0       0       0       0
  8151 ;;      Temps:          0       3       0       0       0       0       0       0
  8152 ;;      Totals:         0       5       0       0       0       0       0       0
  8153 ;;Total ram usage:        5 bytes
  8154 ;; Hardware stack levels used:    1
  8155 ;; Hardware stack levels required when called:    5
  8156 ;; This function calls:
  8157 ;;		Nothing
  8158 ;; This function is called by:
  8159 ;;		_main
  8160 ;; This function uses a non-reentrant model
  8161 ;;
  8162                           
  8163                           
  8164                           ;psect for function _COS_TmrHandler
  8165  010D                     _COS_TmrHandler:
  8166                           
  8167                           ;SourceFiles/COS/COS_Main.c: 94:  UINT_8 tempbyte1, tempbyte2;;SourceFiles/COS/COS_Main.
      +                          c: 95:  tempbyte2 = TMR1H;
  8168                           
  8169                           ;incstack = 0
  8170                           ; Regs used in _COS_TmrHandler: [wreg+status,2+status,0]
  8171  010D  0020               	movlb	0	; select bank0
  8172  010E  0817               	movf	23,w	;volatile
  8173  010F  00D5               	movwf	??_COS_TmrHandler
  8174  0110  0855               	movf	??_COS_TmrHandler,w
  8175  0111  00D9               	movwf	COS_TmrHandler@tempbyte2
  8176                           
  8177                           ;SourceFiles/COS/COS_Main.c: 96:  tempbyte1 = TMR1L;
  8178  0112  0816               	movf	22,w	;volatile
  8179  0113  00D5               	movwf	??_COS_TmrHandler
  8180  0114  0855               	movf	??_COS_TmrHandler,w
  8181  0115  00D8               	movwf	COS_TmrHandler@tempbyte1
  8182                           
  8183                           ;SourceFiles/COS/COS_Main.c: 97:  if (tempbyte2 != TMR1H)
  8184  0116  0859               	movf	COS_TmrHandler@tempbyte2,w
  8185  0117  0617               	xorwf	23,w	;volatile
  8186  0118  1903               	skipnz
  8187  0119  2922               	goto	l36
  8188                           
  8189                           ;SourceFiles/COS/COS_Main.c: 98:  {;SourceFiles/COS/COS_Main.c: 99:   tempbyte2 = TMR1H;
  8190  011A  0817               	movf	23,w	;volatile
  8191  011B  00D5               	movwf	??_COS_TmrHandler
  8192  011C  0855               	movf	??_COS_TmrHandler,w
  8193  011D  00D9               	movwf	COS_TmrHandler@tempbyte2
  8194                           
  8195                           ;SourceFiles/COS/COS_Main.c: 100:   tempbyte1 = TMR1L;
  8196  011E  0816               	movf	22,w	;volatile
  8197  011F  00D5               	movwf	??_COS_TmrHandler
  8198  0120  0855               	movf	??_COS_TmrHandler,w
  8199  0121  00D8               	movwf	COS_TmrHandler@tempbyte1
  8200  0122                     l36:	
  8201                           ;SourceFiles/COS/COS_Main.c: 101:  }
  8202                           
  8203                           
  8204                           ;SourceFiles/COS/COS_Main.c: 102:  COS_tcnt_val = (UINT_16) (tempbyte2 << 8)&0xff00;
  8205  0122  0859               	movf	COS_TmrHandler@tempbyte2,w
  8206  0123  00D5               	movwf	??_COS_TmrHandler
  8207  0124  01D6               	clrf	??_COS_TmrHandler+1
  8208  0125  0855               	movf	??_COS_TmrHandler,w
  8209  0126  00D6               	movwf	??_COS_TmrHandler+1
  8210  0127  01D5               	clrf	??_COS_TmrHandler
  8211  0128  3000               	movlw	0
  8212  0129  0555               	andwf	??_COS_TmrHandler,w
  8213  012A  00F6               	movwf	_COS_tcnt_val
  8214  012B  30FF               	movlw	255
  8215  012C  0556               	andwf	??_COS_TmrHandler+1,w
  8216  012D  00F7               	movwf	_COS_tcnt_val+1
  8217                           
  8218                           ;SourceFiles/COS/COS_Main.c: 103:  COS_tcnt_val = COS_tcnt_val | (UINT_16) (tempbyte1 & 
      +                          0x00ff);
  8219  012E  0876               	movf	_COS_tcnt_val,w
  8220  012F  0458               	iorwf	COS_TmrHandler@tempbyte1,w
  8221  0130  00F6               	movwf	_COS_tcnt_val
  8222  0131  0877               	movf	_COS_tcnt_val+1,w
  8223  0132  00F7               	movwf	_COS_tcnt_val+1
  8224                           
  8225                           ;SourceFiles/COS/COS_Main.c: 105:  if (((UINT_16) ((UINT_16) COS_tcnt_val - (UINT_16) CO
      +                          S_tcnt_lst) >= (UINT_16) 1000))
  8226  0133  0847               	movf	_COS_tcnt_lst,w
  8227  0134  0276               	subwf	_COS_tcnt_val,w
  8228  0135  00D5               	movwf	??_COS_TmrHandler
  8229  0136  0848               	movf	_COS_tcnt_lst+1,w
  8230  0137  3B77               	subwfb	_COS_tcnt_val+1,w
  8231  0138  00D6               	movwf	??_COS_TmrHandler+1
  8232  0139  3003               	movlw	3
  8233  013A  0256               	subwf	??_COS_TmrHandler+1,w
  8234  013B  30E8               	movlw	232
  8235  013C  1903               	skipnz
  8236  013D  0255               	subwf	??_COS_TmrHandler,w
  8237  013E  1C03               	skipc
  8238  013F  0008               	return
  8239                           
  8240                           ;SourceFiles/COS/COS_Main.c: 106:  {;SourceFiles/COS/COS_Main.c: 107:   COS_tcnt_lst = C
      +                          OS_tcnt_lst + 1000;
  8241  0140  0847               	movf	_COS_tcnt_lst,w
  8242  0141  3EE8               	addlw	232
  8243  0142  00C7               	movwf	_COS_tcnt_lst
  8244  0143  3003               	movlw	3
  8245  0144  3D48               	addwfc	_COS_tcnt_lst+1,w
  8246  0145  00C8               	movwf	_COS_tcnt_lst+1
  8247                           
  8248                           ;SourceFiles/COS/COS_Main.c: 108:   COS_ms_tmr++;
  8249  0146  3001               	movlw	1
  8250  0147  07CD               	addwf	_COS_ms_tmr,f
  8251  0148  3000               	movlw	0
  8252  0149  3DCE               	addwfc	_COS_ms_tmr+1,f
  8253                           
  8254                           ;SourceFiles/COS/COS_Main.c: 110:   if (COS_ms_tmr >= 1000)
  8255  014A  3003               	movlw	3
  8256  014B  024E               	subwf	_COS_ms_tmr+1,w
  8257  014C  30E8               	movlw	232
  8258  014D  1903               	skipnz
  8259  014E  024D               	subwf	_COS_ms_tmr,w
  8260  014F  1C03               	skipc
  8261  0150  2957               	goto	l3724
  8262                           
  8263                           ;SourceFiles/COS/COS_Main.c: 111:   {;SourceFiles/COS/COS_Main.c: 112:    COS_ms_tmr = 0
      +                          ;
  8264  0151  01CD               	clrf	_COS_ms_tmr
  8265  0152  01CE               	clrf	_COS_ms_tmr+1
  8266                           
  8267                           ;SourceFiles/COS/COS_Main.c: 113:    COS_sec_tmr++;
  8268  0153  3001               	movlw	1
  8269  0154  07CB               	addwf	_COS_sec_tmr,f	;volatile
  8270  0155  3000               	movlw	0
  8271  0156  3DCC               	addwfc	_COS_sec_tmr+1,f	;volatile
  8272  0157                     l3724:
  8273                           
  8274                           ;SourceFiles/COS/COS_Main.c: 115:   COS_tsk_tmr++;
  8275  0157  3001               	movlw	1
  8276  0158  07C9               	addwf	_COS_tsk_tmr,f
  8277  0159  3000               	movlw	0
  8278  015A  3DCA               	addwfc	_COS_tsk_tmr+1,f
  8279                           
  8280                           ;SourceFiles/COS/COS_Main.c: 116:   if ((COS_tsk_tmr >= 10) && (!COS_tsk_ena))
  8281  015B  3000               	movlw	0
  8282  015C  024A               	subwf	_COS_tsk_tmr+1,w
  8283  015D  300A               	movlw	10
  8284  015E  1903               	skipnz
  8285  015F  0249               	subwf	_COS_tsk_tmr,w
  8286  0160  1C03               	skipc
  8287  0161  0008               	return
  8288  0162  086D               	movf	_COS_tsk_ena,w
  8289  0163  1D03               	btfss	3,2
  8290  0164  0008               	return
  8291                           
  8292                           ;SourceFiles/COS/COS_Main.c: 117:   {;SourceFiles/COS/COS_Main.c: 118:    COS_tsk_tmr = 
      +                          0;
  8293  0165  01C9               	clrf	_COS_tsk_tmr
  8294  0166  01CA               	clrf	_COS_tsk_tmr+1
  8295                           
  8296                           ;SourceFiles/COS/COS_Main.c: 119:    COS_tsk_ena = 1;
  8297  0167  01ED               	clrf	_COS_tsk_ena
  8298  0168  0AED               	incf	_COS_tsk_ena,f
  8299  0169  0008               	return
  8300  016A                     __end_of_COS_TmrHandler:
  8301                           
  8302                           	psect	text71
  8303  01FB                     __ptext71:	
  8304 ;; *************** function _COS_Init *****************
  8305 ;; Defined at:
  8306 ;;		line 32 in file "SourceFiles/COS/COS_Main.c"
  8307 ;; Parameters:    Size  Location     Type
  8308 ;;		None
  8309 ;; Auto vars:     Size  Location     Type
  8310 ;;  tempbyte2       1    4[BANK0 ] unsigned char 
  8311 ;;  tempbyte1       1    3[BANK0 ] unsigned char 
  8312 ;; Return value:  Size  Location     Type
  8313 ;;                  1    wreg      void 
  8314 ;; Registers used:
  8315 ;;		wreg, status,2, status,0, pclath, cstack
  8316 ;; Tracked objects:
  8317 ;;		On entry : 0/0
  8318 ;;		On exit  : 0/0
  8319 ;;		Unchanged: 0/0
  8320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8321 ;;      Params:         0       0       0       0       0       0       0       0
  8322 ;;      Locals:         0       2       0       0       0       0       0       0
  8323 ;;      Temps:          0       3       0       0       0       0       0       0
  8324 ;;      Totals:         0       5       0       0       0       0       0       0
  8325 ;;Total ram usage:        5 bytes
  8326 ;; Hardware stack levels used:    1
  8327 ;; Hardware stack levels required when called:    6
  8328 ;; This function calls:
  8329 ;;		_COS_TimerSetup
  8330 ;; This function is called by:
  8331 ;;		_main
  8332 ;; This function uses a non-reentrant model
  8333 ;;
  8334                           
  8335                           
  8336                           ;psect for function _COS_Init
  8337  01FB                     _COS_Init:
  8338                           
  8339                           ;SourceFiles/COS/COS_Main.c: 34:  UINT_8 tempbyte1, tempbyte2;;SourceFiles/COS/COS_Main.
      +                          c: 36:  COS_TimerSetup();
  8340                           
  8341                           ;incstack = 0
  8342                           ; Regs used in _COS_Init: [wreg+status,2+status,0+pclath+cstack]
  8343  01FB  3185  25C2  3181   	fcall	_COS_TimerSetup
  8344                           
  8345                           ;SourceFiles/COS/COS_Main.c: 41:  COS_tsk_ind = 0;
  8346  01FE  0020               	movlb	0	; select bank0
  8347  01FF  01D2               	clrf	_COS_tsk_ind
  8348                           
  8349                           ;SourceFiles/COS/COS_Main.c: 42:  COS_tsk_msk = 0x80;
  8350  0200  3080               	movlw	128
  8351  0201  00D5               	movwf	??_COS_Init
  8352  0202  0855               	movf	??_COS_Init,w
  8353  0203  00EE               	movwf	_COS_tsk_msk
  8354                           
  8355                           ;SourceFiles/COS/COS_Main.c: 43:  COS_tsk_ena = 1;
  8356  0204  01ED               	clrf	_COS_tsk_ena
  8357  0205  0AED               	incf	_COS_tsk_ena,f
  8358                           
  8359                           ;SourceFiles/COS/COS_Main.c: 44:  COS_ms_tmr = 0;
  8360  0206  01CD               	clrf	_COS_ms_tmr
  8361  0207  01CE               	clrf	_COS_ms_tmr+1
  8362                           
  8363                           ;SourceFiles/COS/COS_Main.c: 45:  COS_sec_tmr = 0;
  8364  0208  01CB               	clrf	_COS_sec_tmr	;volatile
  8365  0209  01CC               	clrf	_COS_sec_tmr+1	;volatile
  8366                           
  8367                           ;SourceFiles/COS/COS_Main.c: 46:  COS_tsk_tmr = 0;
  8368  020A  01C9               	clrf	_COS_tsk_tmr
  8369  020B  01CA               	clrf	_COS_tsk_tmr+1
  8370                           
  8371                           ;SourceFiles/COS/COS_Main.c: 48:  tempbyte2 = TMR1H;
  8372  020C  0817               	movf	23,w	;volatile
  8373  020D  00D5               	movwf	??_COS_Init
  8374  020E  0855               	movf	??_COS_Init,w
  8375  020F  00D9               	movwf	COS_Init@tempbyte2
  8376                           
  8377                           ;SourceFiles/COS/COS_Main.c: 49:  tempbyte1 = TMR1L;
  8378  0210  0816               	movf	22,w	;volatile
  8379  0211  00D5               	movwf	??_COS_Init
  8380  0212  0855               	movf	??_COS_Init,w
  8381  0213  00D8               	movwf	COS_Init@tempbyte1
  8382                           
  8383                           ;SourceFiles/COS/COS_Main.c: 50:  if (tempbyte2 != TMR1H)
  8384  0214  0859               	movf	COS_Init@tempbyte2,w
  8385  0215  0617               	xorwf	23,w	;volatile
  8386  0216  1903               	skipnz
  8387  0217  2A20               	goto	l29
  8388                           
  8389                           ;SourceFiles/COS/COS_Main.c: 51:  {;SourceFiles/COS/COS_Main.c: 52:   tempbyte2 = TMR1H;
  8390  0218  0817               	movf	23,w	;volatile
  8391  0219  00D5               	movwf	??_COS_Init
  8392  021A  0855               	movf	??_COS_Init,w
  8393  021B  00D9               	movwf	COS_Init@tempbyte2
  8394                           
  8395                           ;SourceFiles/COS/COS_Main.c: 53:   tempbyte1 = TMR1L;
  8396  021C  0816               	movf	22,w	;volatile
  8397  021D  00D5               	movwf	??_COS_Init
  8398  021E  0855               	movf	??_COS_Init,w
  8399  021F  00D8               	movwf	COS_Init@tempbyte1
  8400  0220                     l29:	
  8401                           ;SourceFiles/COS/COS_Main.c: 54:  }
  8402                           
  8403                           
  8404                           ;SourceFiles/COS/COS_Main.c: 55:  COS_tcnt_val = ((UINT_16)tempbyte2 << 8)&0xff00;
  8405  0220  0859               	movf	COS_Init@tempbyte2,w
  8406  0221  00D5               	movwf	??_COS_Init
  8407  0222  01D6               	clrf	??_COS_Init+1
  8408  0223  0855               	movf	??_COS_Init,w
  8409  0224  00D6               	movwf	??_COS_Init+1
  8410  0225  01D5               	clrf	??_COS_Init
  8411  0226  3000               	movlw	0
  8412  0227  0555               	andwf	??_COS_Init,w
  8413  0228  00F6               	movwf	_COS_tcnt_val
  8414  0229  30FF               	movlw	255
  8415  022A  0556               	andwf	??_COS_Init+1,w
  8416  022B  00F7               	movwf	_COS_tcnt_val+1
  8417                           
  8418                           ;SourceFiles/COS/COS_Main.c: 56:  COS_tcnt_val = COS_tcnt_val | ((UINT_16)tempbyte1 & 0x
      +                          00ff);
  8419  022C  0876               	movf	_COS_tcnt_val,w
  8420  022D  0458               	iorwf	COS_Init@tempbyte1,w
  8421  022E  00F6               	movwf	_COS_tcnt_val
  8422  022F  0877               	movf	_COS_tcnt_val+1,w
  8423  0230  00F7               	movwf	_COS_tcnt_val+1
  8424                           
  8425                           ;SourceFiles/COS/COS_Main.c: 57:  COS_tcnt_lst = COS_tcnt_val;
  8426  0231  0877               	movf	_COS_tcnt_val+1,w
  8427  0232  00C8               	movwf	_COS_tcnt_lst+1
  8428  0233  0876               	movf	_COS_tcnt_val,w
  8429  0234  00C7               	movwf	_COS_tcnt_lst
  8430  0235  0008               	return
  8431  0236                     __end_of_COS_Init:
  8432                           
  8433                           	psect	text72
  8434  05C2                     __ptext72:	
  8435 ;; *************** function _COS_TimerSetup *****************
  8436 ;; Defined at:
  8437 ;;		line 68 in file "SourceFiles/COS/COS_Main.c"
  8438 ;; Parameters:    Size  Location     Type
  8439 ;;		None
  8440 ;; Auto vars:     Size  Location     Type
  8441 ;;		None
  8442 ;; Return value:  Size  Location     Type
  8443 ;;                  1    wreg      void 
  8444 ;; Registers used:
  8445 ;;		wreg, status,2
  8446 ;; Tracked objects:
  8447 ;;		On entry : 0/0
  8448 ;;		On exit  : 0/0
  8449 ;;		Unchanged: 0/0
  8450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8451 ;;      Params:         0       0       0       0       0       0       0       0
  8452 ;;      Locals:         0       0       0       0       0       0       0       0
  8453 ;;      Temps:          0       0       0       0       0       0       0       0
  8454 ;;      Totals:         0       0       0       0       0       0       0       0
  8455 ;;Total ram usage:        0 bytes
  8456 ;; Hardware stack levels used:    1
  8457 ;; Hardware stack levels required when called:    5
  8458 ;; This function calls:
  8459 ;;		Nothing
  8460 ;; This function is called by:
  8461 ;;		_COS_Init
  8462 ;; This function uses a non-reentrant model
  8463 ;;
  8464                           
  8465                           
  8466                           ;psect for function _COS_TimerSetup
  8467  05C2                     _COS_TimerSetup:
  8468                           
  8469                           ;SourceFiles/COS/COS_Main.c: 72:  TMR1H = 0;
  8470                           
  8471                           ;incstack = 0
  8472                           ; Regs used in _COS_TimerSetup: [wreg+status,2]
  8473  05C2  0020               	movlb	0	; select bank0
  8474  05C3  0197               	clrf	23	;volatile
  8475                           
  8476                           ;SourceFiles/COS/COS_Main.c: 73:  TMR1L = 0;
  8477  05C4  0196               	clrf	22	;volatile
  8478                           
  8479                           ;SourceFiles/COS/COS_Main.c: 78:  T1CON = 0b00100001;
  8480  05C5  3021               	movlw	33
  8481  05C6  0098               	movwf	24	;volatile
  8482  05C7  0008               	return
  8483  05C8                     __end_of_COS_TimerSetup:
  8484                           
  8485                           	psect	intentry
  8486  0004                     __pintentry:	
  8487 ;; *************** function _INTERRUPT_InterruptManager *****************
  8488 ;; Defined at:
  8489 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8490 ;; Parameters:    Size  Location     Type
  8491 ;;		None
  8492 ;; Auto vars:     Size  Location     Type
  8493 ;;		None
  8494 ;; Return value:  Size  Location     Type
  8495 ;;                  1    wreg      void 
  8496 ;; Registers used:
  8497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8498 ;; Tracked objects:
  8499 ;;		On entry : 0/0
  8500 ;;		On exit  : 0/0
  8501 ;;		Unchanged: 0/0
  8502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8503 ;;      Params:         0       0       0       0       0       0       0       0
  8504 ;;      Locals:         0       0       0       0       0       0       0       0
  8505 ;;      Temps:          0       0       0       0       0       0       0       0
  8506 ;;      Totals:         0       0       0       0       0       0       0       0
  8507 ;;Total ram usage:        0 bytes
  8508 ;; Hardware stack levels used:    1
  8509 ;; Hardware stack levels required when called:    4
  8510 ;; This function calls:
  8511 ;;		_TMR2_ISR
  8512 ;; This function is called by:
  8513 ;;		Interrupt level 1
  8514 ;; This function uses a non-reentrant model
  8515 ;;
  8516                           
  8517  0004                     _INTERRUPT_InterruptManager:
  8518                           
  8519                           ;incstack = 0
  8520  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8521                           
  8522                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8523  0005  3180               	pagesel	$
  8524                           
  8525                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  8526  0006  1F0B               	btfss	11,6	;volatile
  8527  0007  2810               	goto	i1l229
  8528                           
  8529                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  8530  0008  0021               	movlb	1	; select bank1
  8531  0009  1C91               	btfss	17,1	;volatile
  8532  000A  2810               	goto	i1l229
  8533  000B  0020               	movlb	0	; select bank0
  8534  000C  1C91               	btfss	17,1	;volatile
  8535  000D  2810               	goto	i1l229
  8536                           
  8537                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR2_ISR();
  8538  000E  3184  2483         	fcall	_TMR2_ISR
  8539  0010                     i1l229:	
  8540                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  8541                           
  8542  0010  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8543  0011  0009               	retfie
  8544  0012                     __end_of_INTERRUPT_InterruptManager:
  8545                           
  8546                           	psect	text74
  8547  0483                     __ptext74:	
  8548 ;; *************** function _TMR2_ISR *****************
  8549 ;; Defined at:
  8550 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  8551 ;; Parameters:    Size  Location     Type
  8552 ;;		None
  8553 ;; Auto vars:     Size  Location     Type
  8554 ;;		None
  8555 ;; Return value:  Size  Location     Type
  8556 ;;                  1    wreg      void 
  8557 ;; Registers used:
  8558 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8559 ;; Tracked objects:
  8560 ;;		On entry : 0/0
  8561 ;;		On exit  : 0/0
  8562 ;;		Unchanged: 0/0
  8563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8564 ;;      Params:         0       0       0       0       0       0       0       0
  8565 ;;      Locals:         0       0       0       0       0       0       0       0
  8566 ;;      Temps:          0       0       0       0       0       0       0       0
  8567 ;;      Totals:         0       0       0       0       0       0       0       0
  8568 ;;Total ram usage:        0 bytes
  8569 ;; Hardware stack levels used:    1
  8570 ;; Hardware stack levels required when called:    3
  8571 ;; This function calls:
  8572 ;;		_TMR2_CallBack
  8573 ;; This function is called by:
  8574 ;;		_INTERRUPT_InterruptManager
  8575 ;; This function uses a non-reentrant model
  8576 ;;
  8577                           
  8578                           
  8579                           ;psect for function _TMR2_ISR
  8580  0483                     _TMR2_ISR:
  8581                           
  8582                           ;mcc_generated_files/tmr2.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr2.c: 124:     PIR1bits.TMR2IF = 0;
  8583                           
  8584                           ;incstack = 0
  8585                           ; Regs used in _TMR2_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8586  0483  0020               	movlb	0	; select bank0
  8587  0484  1091               	bcf	17,1	;volatile
  8588                           
  8589                           ;mcc_generated_files/tmr2.c: 127:     if (++CountCallBack >= 5)
  8590  0485  3001               	movlw	1
  8591  0486  07C5               	addwf	TMR2_ISR@CountCallBack,f	;volatile
  8592  0487  3000               	movlw	0
  8593  0488  3DC6               	addwfc	TMR2_ISR@CountCallBack+1,f	;volatile
  8594  0489  3000               	movlw	0
  8595  048A  0246               	subwf	TMR2_ISR@CountCallBack+1,w	;volatile
  8596  048B  3005               	movlw	5
  8597  048C  1903               	skipnz
  8598  048D  0245               	subwf	TMR2_ISR@CountCallBack,w	;volatile
  8599  048E  1C03               	skipc
  8600  048F  0008               	return
  8601                           
  8602                           ;mcc_generated_files/tmr2.c: 128:     {;mcc_generated_files/tmr2.c: 130:         TMR2_Ca
      +                          llBack();
  8603  0490  3185  2532         	fcall	_TMR2_CallBack
  8604                           
  8605                           ;mcc_generated_files/tmr2.c: 133:         CountCallBack = 0;
  8606  0492  0020               	movlb	0	; select bank0
  8607  0493  01C5               	clrf	TMR2_ISR@CountCallBack	;volatile
  8608  0494  01C6               	clrf	TMR2_ISR@CountCallBack+1	;volatile
  8609  0495  0008               	return
  8610  0496                     __end_of_TMR2_ISR:
  8611                           
  8612                           	psect	text75
  8613  0532                     __ptext75:	
  8614 ;; *************** function _TMR2_CallBack *****************
  8615 ;; Defined at:
  8616 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  8617 ;; Parameters:    Size  Location     Type
  8618 ;;		None
  8619 ;; Auto vars:     Size  Location     Type
  8620 ;;		None
  8621 ;; Return value:  Size  Location     Type
  8622 ;;                  1    wreg      void 
  8623 ;; Registers used:
  8624 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8625 ;; Tracked objects:
  8626 ;;		On entry : 0/0
  8627 ;;		On exit  : 0/0
  8628 ;;		Unchanged: 0/0
  8629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8630 ;;      Params:         0       0       0       0       0       0       0       0
  8631 ;;      Locals:         0       0       0       0       0       0       0       0
  8632 ;;      Temps:          0       0       0       0       0       0       0       0
  8633 ;;      Totals:         0       0       0       0       0       0       0       0
  8634 ;;Total ram usage:        0 bytes
  8635 ;; Hardware stack levels used:    1
  8636 ;; Hardware stack levels required when called:    2
  8637 ;; This function calls:
  8638 ;;		Absolute function
  8639 ;;		_Led2_PWM
  8640 ;;		_TMR2_DefaultInterruptHandler
  8641 ;; This function is called by:
  8642 ;;		_TMR2_ISR
  8643 ;; This function uses a non-reentrant model
  8644 ;;
  8645                           
  8646                           
  8647                           ;psect for function _TMR2_CallBack
  8648  0532                     _TMR2_CallBack:
  8649                           
  8650                           ;mcc_generated_files/tmr2.c: 141:     if(TMR2_InterruptHandler)
  8651                           
  8652                           ;incstack = 0
  8653                           ; Regs used in _TMR2_CallBack: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8654  0532  0021               	movlb	1	; select bank1
  8655  0533  0826               	movf	_TMR2_InterruptHandler^(0+128),w
  8656  0534  0427               	iorwf	(_TMR2_InterruptHandler+1)^(0+128),w
  8657  0535  1903               	btfsc	3,2
  8658  0536  0008               	return
  8659                           
  8660                           ;mcc_generated_files/tmr2.c: 142:     {;mcc_generated_files/tmr2.c: 143:         TMR2_In
      +                          terruptHandler();
  8661  0537  0827               	movf	(_TMR2_InterruptHandler+1)^(0+128),w
  8662  0538  008A               	movwf	10
  8663  0539  0826               	movf	_TMR2_InterruptHandler^(0+128),w
  8664  053A  000A               	callw
  8665  053B  3185               	pagesel	$
  8666  053C  0008               	return
  8667  053D                     __end_of_TMR2_CallBack:
  8668                           
  8669                           	psect	text76
  8670  00A7                     __ptext76:	
  8671 ;; *************** function _Led2_PWM *****************
  8672 ;; Defined at:
  8673 ;;		line 30 in file "SourceFiles/SunSensor/Led.c"
  8674 ;; Parameters:    Size  Location     Type
  8675 ;;		None
  8676 ;; Auto vars:     Size  Location     Type
  8677 ;;		None
  8678 ;; Return value:  Size  Location     Type
  8679 ;;                  1    wreg      void 
  8680 ;; Registers used:
  8681 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8682 ;; Tracked objects:
  8683 ;;		On entry : 0/0
  8684 ;;		On exit  : 0/0
  8685 ;;		Unchanged: 0/0
  8686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8687 ;;      Params:         0       0       0       0       0       0       0       0
  8688 ;;      Locals:         0       0       0       0       0       0       0       0
  8689 ;;      Temps:          2       0       0       0       0       0       0       0
  8690 ;;      Totals:         2       0       0       0       0       0       0       0
  8691 ;;Total ram usage:        2 bytes
  8692 ;; Hardware stack levels used:    1
  8693 ;; Hardware stack levels required when called:    1
  8694 ;; This function calls:
  8695 ;;		_PWM1_LoadDutyValue
  8696 ;; This function is called by:
  8697 ;;		_main
  8698 ;;		_TMR2_CallBack
  8699 ;; This function uses a non-reentrant model
  8700 ;;
  8701                           
  8702                           
  8703                           ;psect for function _Led2_PWM
  8704  00A7                     _Led2_PWM:
  8705                           
  8706                           ;SourceFiles/SunSensor/Led.c: 32:     switch (BreathState)
  8707                           
  8708                           ;incstack = 0
  8709                           ; Regs used in _Led2_PWM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8710  00A7  28F2               	goto	i1l2748
  8711  00A8                     i1l2720:
  8712                           
  8713                           ;SourceFiles/SunSensor/Led.c: 35:             counter++;
  8714  00A8  3001               	movlw	1
  8715  00A9  0020               	movlb	0	; select bank0
  8716  00AA  07C3               	addwf	_counter,f
  8717  00AB  3000               	movlw	0
  8718  00AC  3DC4               	addwfc	_counter+1,f
  8719                           
  8720                           ;SourceFiles/SunSensor/Led.c: 36:             if(counter > 100)
  8721  00AD  3000               	movlw	0
  8722  00AE  0244               	subwf	_counter+1,w
  8723  00AF  3065               	movlw	101
  8724  00B0  1903               	skipnz
  8725  00B1  0243               	subwf	_counter,w
  8726  00B2  1C03               	skipc
  8727  00B3  28B9               	goto	i1l2724
  8728                           
  8729                           ;SourceFiles/SunSensor/Led.c: 37:             {;SourceFiles/SunSensor/Led.c: 38:        
      +                                   BreathState = 2;
  8730  00B4  3002               	movlw	2
  8731  00B5  00F4               	movwf	??_Led2_PWM
  8732  00B6  0874               	movf	??_Led2_PWM,w
  8733  00B7  00FB               	movwf	_BreathState
  8734                           
  8735                           ;SourceFiles/SunSensor/Led.c: 39:             }
  8736  00B8  2905               	goto	i1l2750
  8737  00B9                     i1l2724:
  8738                           
  8739                           ;SourceFiles/SunSensor/Led.c: 41:             {;SourceFiles/SunSensor/Led.c: 42:        
      +                                   dutyValue += 8;
  8740  00B9  3008               	movlw	8
  8741  00BA  07C1               	addwf	_dutyValue,f
  8742  00BB  3000               	movlw	0
  8743  00BC  3DC2               	addwfc	_dutyValue+1,f
  8744  00BD  2905               	goto	i1l2750
  8745  00BE                     i1l2726:
  8746                           
  8747                           ;SourceFiles/SunSensor/Led.c: 46:             counter++;
  8748  00BE  3001               	movlw	1
  8749  00BF  0020               	movlb	0	; select bank0
  8750  00C0  07C3               	addwf	_counter,f
  8751  00C1  3000               	movlw	0
  8752  00C2  3DC4               	addwfc	_counter+1,f
  8753                           
  8754                           ;SourceFiles/SunSensor/Led.c: 47:             if (counter >= (100 + 200))
  8755  00C3  3001               	movlw	1
  8756  00C4  0244               	subwf	_counter+1,w
  8757  00C5  302C               	movlw	44
  8758  00C6  1903               	skipnz
  8759  00C7  0243               	subwf	_counter,w
  8760  00C8  1C03               	skipc
  8761  00C9  28D1               	goto	i1l2732
  8762                           
  8763                           ;SourceFiles/SunSensor/Led.c: 48:             {;SourceFiles/SunSensor/Led.c: 49:        
      +                                   BreathState = 3;
  8764  00CA  3003               	movlw	3
  8765  00CB  00F4               	movwf	??_Led2_PWM
  8766  00CC  0874               	movf	??_Led2_PWM,w
  8767  00CD  00FB               	movwf	_BreathState
  8768  00CE                     i1l2730:
  8769                           
  8770                           ;SourceFiles/SunSensor/Led.c: 51:                 dutyValue = 0;
  8771  00CE  01C1               	clrf	_dutyValue
  8772  00CF  01C2               	clrf	_dutyValue+1
  8773                           
  8774                           ;SourceFiles/SunSensor/Led.c: 53:             }
  8775  00D0  2905               	goto	i1l2750
  8776  00D1                     i1l2732:
  8777                           
  8778                           ;SourceFiles/SunSensor/Led.c: 55:             {;SourceFiles/SunSensor/Led.c: 56:        
      +                                   if (dutyValue > 0)
  8779  00D1  0841               	movf	_dutyValue,w
  8780  00D2  0442               	iorwf	_dutyValue+1,w
  8781  00D3  1903               	btfsc	3,2
  8782  00D4  2905               	goto	i1l2750
  8783                           
  8784                           ;SourceFiles/SunSensor/Led.c: 57:                 {;SourceFiles/SunSensor/Led.c: 58:    
      +                                           if (dutyValue > 4)
  8785  00D5  3000               	movlw	0
  8786  00D6  0242               	subwf	_dutyValue+1,w
  8787  00D7  3005               	movlw	5
  8788  00D8  1903               	skipnz
  8789  00D9  0241               	subwf	_dutyValue,w
  8790  00DA  1C03               	skipc
  8791  00DB  28CE               	goto	i1l2730
  8792                           
  8793                           ;SourceFiles/SunSensor/Led.c: 59:                     {;SourceFiles/SunSensor/Led.c: 60:
      +                                                   dutyValue-=4;
  8794  00DC  3004               	movlw	4
  8795  00DD  02C1               	subwf	_dutyValue,f
  8796  00DE  3000               	movlw	0
  8797  00DF  3BC2               	subwfb	_dutyValue+1,f
  8798                           
  8799                           ;SourceFiles/SunSensor/Led.c: 61:                     }
  8800  00E0  2905               	goto	i1l2750
  8801  00E1                     i1l2740:
  8802                           
  8803                           ;SourceFiles/SunSensor/Led.c: 71:             counter++;
  8804  00E1  3001               	movlw	1
  8805  00E2  0020               	movlb	0	; select bank0
  8806  00E3  07C3               	addwf	_counter,f
  8807  00E4  3000               	movlw	0
  8808  00E5  3DC4               	addwfc	_counter+1,f
  8809                           
  8810                           ;SourceFiles/SunSensor/Led.c: 72:             if (counter > (100 + 200 + 100))
  8811  00E6  3001               	movlw	1
  8812  00E7  0244               	subwf	_counter+1,w
  8813  00E8  3091               	movlw	145
  8814  00E9  1903               	skipnz
  8815  00EA  0243               	subwf	_counter,w
  8816  00EB  1C03               	skipc
  8817  00EC  2905               	goto	i1l2750
  8818                           
  8819                           ;SourceFiles/SunSensor/Led.c: 73:             {;SourceFiles/SunSensor/Led.c: 74:        
      +                                   counter = 0;
  8820  00ED  01C3               	clrf	_counter
  8821  00EE  01C4               	clrf	_counter+1
  8822                           
  8823                           ;SourceFiles/SunSensor/Led.c: 75:                 BreathState = 1;
  8824  00EF  01FB               	clrf	_BreathState
  8825  00F0  0AFB               	incf	_BreathState,f
  8826  00F1  2905               	goto	i1l2750
  8827  00F2                     i1l2748:
  8828  00F2  087B               	movf	_BreathState,w
  8829  00F3  00F4               	movwf	??_Led2_PWM
  8830  00F4  01F5               	clrf	??_Led2_PWM+1
  8831                           
  8832                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8833                           ; Switch size 1, requested type "simple"
  8834                           ; Number of cases is 1, Range of values is 0 to 0
  8835                           ; switch strategies available:
  8836                           ; Name         Instructions Cycles
  8837                           ; simple_byte            4     3 (average)
  8838                           ; direct_byte            8     6 (fixed)
  8839                           ; jumptable            260     6 (fixed)
  8840                           ;	Chosen strategy is simple_byte
  8841  00F5  0875               	movf	??_Led2_PWM+1,w
  8842  00F6  3A00               	xorlw	0	; case 0
  8843  00F7  1903               	skipnz
  8844  00F8  28FA               	goto	i1l3990
  8845  00F9  2905               	goto	i1l2750
  8846  00FA                     i1l3990:
  8847                           
  8848                           ; Switch size 1, requested type "simple"
  8849                           ; Number of cases is 3, Range of values is 1 to 3
  8850                           ; switch strategies available:
  8851                           ; Name         Instructions Cycles
  8852                           ; simple_byte           10     6 (average)
  8853                           ; direct_byte           15     9 (fixed)
  8854                           ; jumptable            263     9 (fixed)
  8855                           ;	Chosen strategy is simple_byte
  8856  00FA  0874               	movf	??_Led2_PWM,w
  8857  00FB  3A01               	xorlw	1	; case 1
  8858  00FC  1903               	skipnz
  8859  00FD  28A8               	goto	i1l2720
  8860  00FE  3A03               	xorlw	3	; case 2
  8861  00FF  1903               	skipnz
  8862  0100  28BE               	goto	i1l2726
  8863  0101  3A01               	xorlw	1	; case 3
  8864  0102  1903               	skipnz
  8865  0103  28E1               	goto	i1l2740
  8866  0104  2905               	goto	i1l2750
  8867  0105                     i1l2750:
  8868                           
  8869                           ;SourceFiles/SunSensor/Led.c: 82:     PWM1_LoadDutyValue(dutyValue);
  8870  0105  0020               	movlb	0	; select bank0
  8871  0106  0842               	movf	_dutyValue+1,w
  8872  0107  00F1               	movwf	PWM1_LoadDutyValue@dutyValue+1
  8873  0108  0841               	movf	_dutyValue,w
  8874  0109  00F0               	movwf	PWM1_LoadDutyValue@dutyValue
  8875  010A  3184  2458         	fcall	_PWM1_LoadDutyValue
  8876  010C  0008               	return
  8877  010D                     __end_of_Led2_PWM:
  8878                           
  8879                           	psect	text77
  8880  0627                     __ptext77:	
  8881 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  8882 ;; Defined at:
  8883 ;;		line 151 in file "mcc_generated_files/tmr2.c"
  8884 ;; Parameters:    Size  Location     Type
  8885 ;;		None
  8886 ;; Auto vars:     Size  Location     Type
  8887 ;;		None
  8888 ;; Return value:  Size  Location     Type
  8889 ;;                  1    wreg      void 
  8890 ;; Registers used:
  8891 ;;		None
  8892 ;; Tracked objects:
  8893 ;;		On entry : 0/0
  8894 ;;		On exit  : 0/0
  8895 ;;		Unchanged: 0/0
  8896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8897 ;;      Params:         0       0       0       0       0       0       0       0
  8898 ;;      Locals:         0       0       0       0       0       0       0       0
  8899 ;;      Temps:          0       0       0       0       0       0       0       0
  8900 ;;      Totals:         0       0       0       0       0       0       0       0
  8901 ;;Total ram usage:        0 bytes
  8902 ;; Hardware stack levels used:    1
  8903 ;; This function calls:
  8904 ;;		Nothing
  8905 ;; This function is called by:
  8906 ;;		_TMR2_Initialize
  8907 ;;		_TMR2_CallBack
  8908 ;; This function uses a non-reentrant model
  8909 ;;
  8910                           
  8911                           
  8912                           ;psect for function _TMR2_DefaultInterruptHandler
  8913  0627                     _TMR2_DefaultInterruptHandler:
  8914                           
  8915                           ;incstack = 0
  8916                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  8917  0627  0008               	return
  8918  0628                     __end_of_TMR2_DefaultInterruptHandler:
  8919                           
  8920                           	psect	text78
  8921  0458                     __ptext78:	
  8922 ;; *************** function _PWM1_LoadDutyValue *****************
  8923 ;; Defined at:
  8924 ;;		line 72 in file "mcc_generated_files/pwm1.c"
  8925 ;; Parameters:    Size  Location     Type
  8926 ;;  dutyValue       2    0[COMMON] unsigned short 
  8927 ;; Auto vars:     Size  Location     Type
  8928 ;;		None
  8929 ;; Return value:  Size  Location     Type
  8930 ;;                  1    wreg      void 
  8931 ;; Registers used:
  8932 ;;		wreg, status,2, status,0
  8933 ;; Tracked objects:
  8934 ;;		On entry : 0/0
  8935 ;;		On exit  : 0/0
  8936 ;;		Unchanged: 0/0
  8937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8938 ;;      Params:         2       0       0       0       0       0       0       0
  8939 ;;      Locals:         0       0       0       0       0       0       0       0
  8940 ;;      Temps:          2       0       0       0       0       0       0       0
  8941 ;;      Totals:         4       0       0       0       0       0       0       0
  8942 ;;Total ram usage:        4 bytes
  8943 ;; Hardware stack levels used:    1
  8944 ;; This function calls:
  8945 ;;		Nothing
  8946 ;; This function is called by:
  8947 ;;		_Led2_PWM
  8948 ;; This function uses a non-reentrant model
  8949 ;;
  8950                           
  8951                           
  8952                           ;psect for function _PWM1_LoadDutyValue
  8953  0458                     _PWM1_LoadDutyValue:
  8954                           
  8955                           ;mcc_generated_files/pwm1.c: 72:  void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm1.c: 73:  {;mcc_generated_files/pwm1.c: 75:      PWM1DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  8956                           
  8957                           ;incstack = 0
  8958                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2+status,0]
  8959  0458  0871               	movf	PWM1_LoadDutyValue@dutyValue+1,w
  8960  0459  00F3               	movwf	??_PWM1_LoadDutyValue+1
  8961  045A  0870               	movf	PWM1_LoadDutyValue@dutyValue,w
  8962  045B  00F2               	movwf	??_PWM1_LoadDutyValue
  8963  045C  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
  8964  045D  0CF2               	rrf	??_PWM1_LoadDutyValue,f
  8965  045E  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
  8966  045F  0CF2               	rrf	??_PWM1_LoadDutyValue,f
  8967  0460  0872               	movf	??_PWM1_LoadDutyValue,w
  8968  0461  002C               	movlb	12	; select bank12
  8969  0462  0092               	movwf	18	;volatile
  8970                           
  8971                           ;mcc_generated_files/pwm1.c: 78:      PWM1DCL = (dutyValue & 0x0003)<<6;
  8972  0463  0870               	movf	PWM1_LoadDutyValue@dutyValue,w
  8973  0464  3903               	andlw	3
  8974  0465  00F2               	movwf	??_PWM1_LoadDutyValue
  8975  0466  3005               	movlw	5
  8976  0467                     u85_25:
  8977  0467  35F2               	lslf	??_PWM1_LoadDutyValue,f
  8978  0468  3EFF               	addlw	-1
  8979  0469  1D03               	skipz
  8980  046A  2C67               	goto	u85_25
  8981  046B  3572               	lslf	??_PWM1_LoadDutyValue,w
  8982  046C  0091               	movwf	17	;volatile
  8983  046D  0008               	return
  8984  046E                     __end_of_PWM1_LoadDutyValue:
  8985  007E                     btemp	set	126	;btemp
  8986  007E                     int$flags	set	126
  8987  007E                     wtemp0	set	126
  8988                           
  8989                           	psect	config
  8990                           
  8991                           ;Config register CONFIG1 @ 0x8007
  8992                           ;	Oscillator Selection Bits
  8993                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  8994                           ;	Watchdog Timer Enable
  8995                           ;	WDTE = OFF, WDT disabled
  8996                           ;	Power-up Timer Enable
  8997                           ;	PWRTE = OFF, PWRT disabled
  8998                           ;	MCLR Pin Function Select
  8999                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  9000                           ;	Flash Program Memory Code Protection
  9001                           ;	CP = OFF, Program memory code protection is disabled
  9002                           ;	Brown-out Reset Enable
  9003                           ;	BOREN = ON, Brown-out Reset enabled
  9004                           ;	Clock Out Enable
  9005                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  9006                           ;	Internal/External Switchover Mode
  9007                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  9008                           ;	Fail-Safe Clock Monitor Enable
  9009                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  9010  8007                     	org	32775
  9011  8007  3FE4               	dw	16356
  9012                           
  9013                           ;Config register CONFIG2 @ 0x8008
  9014                           ;	Flash Memory Self-Write Protection
  9015                           ;	WRT = OFF, Write protection off
  9016                           ;	Stack Overflow/Underflow Reset Enable
  9017                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  9018                           ;	Brown-out Reset Voltage Selection
  9019                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  9020                           ;	Low-Power Brown Out Reset
  9021                           ;	LPBOR = OFF, Low-Power BOR is disabled
  9022                           ;	Low-Voltage Programming Enable
  9023                           ;	LVP = ON, Low-voltage programming enabled
  9024  8008                     	org	32776
  9025  8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    47
    Data        2
    BSS         57
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     24      79
    BANK1            80      2      10
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_DO_TX$1818$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$1823	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$1818	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$1817	const PTR FTN()enum E3874 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    COS_TskMan$1816	const PTR FTN()void  size(2) Largest target is 1
		 -> GetTemp(), UartDisplay(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S582$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    I2C_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> TempH(BANK0[1]), Command(BANK0[1]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), 
		 -> I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S582$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> TempH(BANK0[1]), Command(BANK0[1]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), 
		 -> I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> TempH(BANK0[1]), Command(BANK0[1]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), 
		 -> I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S582$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S582$callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    fsmStateTable	const PTR FTN()enum E3874[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Led2_PWM(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Led2_PWM(), Absolute function(), TMR2_DefaultInterruptHandler(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S138$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0

    I2C_ReadNBytes@data	PTR unsigned char  size(1) Largest target is 1
		 -> TempH(BANK0[1]), 

    I2C_WriteNBytes@data	PTR unsigned char  size(1) Largest target is 1
		 -> Command(BANK0[1]), 

    S30$tptr	PTR FTN()void  size(2) Largest target is 1
		 -> GetTemp(), UartDisplay(), 

    COS_tsk.tptr	PTR FTN()void  size(2) Largest target is 1
		 -> GetTemp(), UartDisplay(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR2_CallBack->_Led2_PWM
    _Led2_PWM->_PWM1_LoadDutyValue

Critical Paths under _main in BANK0

    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _COS_TskMan->_GetTemp
    _UartDisplay->_EUSART_Write
    _GetTemp->_I2C_ReadNBytes
    _GetTemp->_I2C_WriteNBytes
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_MasterRead->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_COS_TskMan

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  195236
                           _COS_Init
                     _COS_TmrHandler
                         _COS_TskMan
                  _SYSTEM_Initialize
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     574
                  _EUSART_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _COS_TskMan                                           2     2      0  194241
                                              0 BANK1      2     2      0
                            _GetTemp *
                        _UartDisplay *
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1486
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _UartDisplay                                          0     0      0      31
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _GetTemp                                              1     1      0  192724
                                             23 BANK0      1     1      0
                     _I2C_ReadNBytes
                    _I2C_WriteNBytes
                         _SendByUart
 ---------------------------------------------------------------------------------
 (3) _SendByUart                                           2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _I2C_WriteNBytes                                      4     1      3   97476
                                             19 BANK0      4     1      3
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (4) _I2C_SetAddressNackCallback                           4     1      3    2259
                                              5 BANK0      4     1      3
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterWrite                                      0     0      0   93265
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (3) _I2C_ReadNBytes                                       4     1      3   95217
                                             19 BANK0      4     1      3
                          _I2C_Close
                     _I2C_MasterRead
                           _I2C_Open
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (4) _I2C_Open                                             3     3      0      68
                                              0 BANK0      3     3      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterRead                                       0     0      0   93265
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterOperation                                  3     3      0   93265
                                             16 BANK0      3     3      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (6) _I2C_Poller                                           0     0      0   93197
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterFsm                                        3     3      0   93197
                                             13 BANK0      3     3      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_TX_EMPTY                                      3     3      0   23276
                                             10 BANK0      3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_TX                                            3     3      0   23307
                                             10 BANK0      3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_ADR_WRITE                                0     0      0      31
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_ADR_READ                                 0     0      0      31
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendTxData                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX                                            3     3      0   23276
                                             10 BANK0      3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_ADDRESS_NACK                                  3     3      0   23276
                                             10 BANK0      3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _wr2RegCompleteHandler                                1     0      1    4584
                                              9 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _wr1RegCompleteHandler                                1     0      1    4584
                                              9 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rdBlkRegCompleteHandler                              1     0      1    4615
                                              9 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd2RegCompleteHandler                                1     0      1    4584
                                              9 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd1RegCompleteHandler                                1     0      1    4584
                                              9 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _I2C_SetDataCompleteCallback                         4     1      3    2979
                                              5 BANK0      4     1      3
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C_SetCallback                                      5     2      3    1117
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (4) _I2C_SetBuffer                                        4     2      2    1574
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_CallbackReturnStop                               1     0      1       0
                                              9 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (9) _I2C_CallbackReturnReset                              1     0      1     325
                                              9 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Close                                            2     2      0      37
                                              0 BANK0      2     2      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _COS_TmrHandler                                       5     5      0     105
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _COS_Init                                             5     5      0     105
                                              0 BANK0      5     5      0
                     _COS_TimerSetup
 ---------------------------------------------------------------------------------
 (2) _COS_TimerSetup                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          0     0      0     120
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR2_ISR                                            0     0      0     120
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (14) _TMR2_CallBack                                       0     0      0     120
                   Absolute function *
                           _Led2_PWM *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _Led2_PWM                                            2     2      0     120
                                              4 COMMON     2     2      0
                 _PWM1_LoadDutyValue
 ---------------------------------------------------------------------------------
 (16) _PWM1_LoadDutyValue                                  4     2      2     120
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _COS_Init
     _COS_TimerSetup
   _COS_TmrHandler
   _COS_TskMan
     _GetTemp *
       _I2C_ReadNBytes
         _I2C_Close
           _I2C_MasterClearIrq
           _I2C_MasterClose
           _I2C_MasterDisableIrq
         _I2C_MasterRead
           _I2C_MasterOperation
             _I2C_MasterStart
             _I2C_Poller
               _I2C_MasterFsm
                 _I2C_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_IDLE *
                 _I2C_DO_RCEN *
                   _I2C_MasterStartRx
                 _I2C_DO_RESET *
                 _I2C_DO_RX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_RX_NACK_RESTART *
                     _I2C_MasterSendNack
                   _I2C_DO_RX_NACK_STOP *
                     _I2C_MasterSendNack
                   _I2C_MasterGetRxData *
                   _I2C_MasterSendAck *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_RX_ACK *
                   _I2C_MasterSendAck
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_DO_SEND_ADR_READ *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_ADR_WRITE *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_DO_TX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART_READ *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_RESTART_WRITE *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterIsNack *
                   _I2C_MasterSendTxData *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterSetIrq *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_MasterClearIrq *
                 _I2C_MasterIsNack *
               _I2C_MasterWaitForEvent
         _I2C_Open
           _I2C_MasterClearIrq
           _I2C_MasterOpen
         _I2C_SetBuffer
       _I2C_WriteNBytes
         _I2C_Close
           _I2C_MasterClearIrq
           _I2C_MasterClose
           _I2C_MasterDisableIrq
         _I2C_MasterWrite
           _I2C_MasterOperation
             _I2C_MasterStart
             _I2C_Poller
               _I2C_MasterFsm
                 _I2C_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_IDLE *
                 _I2C_DO_RCEN *
                   _I2C_MasterStartRx
                 _I2C_DO_RESET *
                 _I2C_DO_RX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_RX_NACK_RESTART *
                     _I2C_MasterSendNack
                   _I2C_DO_RX_NACK_STOP *
                     _I2C_MasterSendNack
                   _I2C_MasterGetRxData *
                   _I2C_MasterSendAck *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_RX_ACK *
                   _I2C_MasterSendAck
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_DO_SEND_ADR_READ *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_ADR_WRITE *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_DO_TX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART_READ *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_RESTART_WRITE *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterIsNack *
                   _I2C_MasterSendTxData *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterSetIrq *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_MasterClearIrq *
                 _I2C_MasterIsNack *
               _I2C_MasterWaitForEvent
         _I2C_Open
           _I2C_MasterClearIrq
           _I2C_MasterOpen
         _I2C_SetAddressNackCallback
           _I2C_SetCallback
         _I2C_SetBuffer
       _SendByUart
     _UartDisplay *
       _EUSART_Write
     ___wmul *
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize
   _TMR2_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _Led2_PWM *
         _PWM1_LoadDutyValue
       _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      65       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     18      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      2       A       8       12.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      65      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Jun 21 17:57:04 2020

                       ??_I2C_DO_SEND_ADR_READ 0055                    __size_of_I2C_MasterSendNack 0004  
                           __size_of_I2C_Close 0019               __end_of_TMR2_SetInterruptHandler 0550  
                      ??_I2C_DO_SEND_ADR_WRITE 0056                                             l36 0122  
                                           l29 0220                                             l47 0096  
                          ___wmul@multiplicand 0057                            __size_of_I2C_Poller 000A  
                        ??_I2C_DO_SEND_RESTART 0055                                    ?_COS_TskMan 0070  
                 __size_of_I2C_MasterOperation 001A                  __size_of_I2C_MasterSendTxData 0006  
                                          l412 026C                                            l706 058F  
                                          l635 05DE                                            l478 019E  
                                          l494 01D3                                            l799 03E8  
                                          l888 03C5                                            _PR2 001B  
                       _I2C_MasterWaitForEvent 05DE                 ?_EUSART_SetFramingErrorHandler 0055  
                              _TMR2_Initialize 0496                                            wreg 0009  
                 ??_I2C_SetAddressNackCallback 005D                       ??_I2C_CallbackReturnStop 005F  
                                 _I2C_DO_RESET 05C8                        ??_rd2RegCompleteHandler 005F  
                                         l3400 027B                                           l3170 0329  
                                         l3322 0177                                           l3314 0171  
                                         l3318 0174                                           l3336 01B7  
                                         l3328 017A                                           l3424 02A2  
                                         l3362 01D8                                           l3434 02A8  
                                         l3450 02D7                                           l3428 02A5  
                                         l3460 053D                                           l3550 0456  
                                         l3358 01D5                                           l3384 0271  
                                         l3368 01DB                                           l3560 02EF  
                                         l3394 0278                                           l3490 0405  
                                         l3724 0157                                           l3388 0274  
                                         l3572 03A1                                           l3494 040A  
                                         l3488 0401                                           l3568 030B  
                                         l3760 0097                                           l3578 03B5  
                                         l3674 03BF                                           l3738 006B  
                              __end_of_COS_tsk 04FF                                           l3982 02BD  
                                         l3984 01EC                                           l3986 0190  
                                         l3988 028C                        __end_of_PWM1_Initialize 0585  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           u1565 03C6  
                                         u1575 03CB                                           _TMR2 001A  
                                         _WPUA 020C                                           _WPUB 020D  
                      ??_wr2RegCompleteHandler 005F                                           _Humi 003D  
                                         _Temp 003F                                           _main 03D8  
                     ?_I2C_CallbackReturnReset 005E                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                               __end_of_I2C_Open 026E  
                                         btemp 007E                                           start 0012  
                              __end_of_GetTemp 037F               __size_of_rdBlkRegCompleteHandler 0019  
                             ?_I2C_MasterClose 0070                                _I2C_WriteNBytes 02ED  
                             __end_of_COS_Init 0236                                  ?_EUSART_Write 0070  
          __size_of_I2C_SetAddressNackCallback 000D                 __size_of_OSCILLATOR_Initialize 0006  
                             ?_I2C_MasterStart 0070                                  _I2C_DO_RX_ACK 05EA  
                             ?_I2C_MasterWrite 0070                  __end_of_OSCILLATOR_Initialize 05B0  
                                        ?_main 0070                                          _T1CON 0018  
                                        _T2CON 001C                                          i1l229 0010  
                                        _RCREG 0199                   __size_of_I2C_DO_RX_NACK_STOP 0004  
                                        _RCSTA 019D                                          _TMR1H 0017  
                                        _TMR1L 0016                              ??_I2C_DO_TX_EMPTY 005F  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          u85_25 0467  
                                        _TXREG 019A                                          _TXSTA 019E  
                                        _TempH 0054                              __end_of_I2C_DO_RX 01FB  
                            __end_of_I2C_DO_TX 01B9                               __end_of_TMR2_ISR 0496  
                               _WDT_Initialize 05D2                              __end_of_I2C_Close 0458  
                       __size_of_I2C_MasterFsm 0027                 I2C_MasterOperation@returnValue 0067  
                      _I2C_MasterEnableRestart 0612                                          pclath 000A  
                             ?_I2C_SetCallback 0055                   I2C_SetAddressNackCallback@cb 005A  
                                        status 0003                               __end_of_Led2_PWM 010D  
                                        wtemp0 007E                              ?_I2C_DO_SEND_STOP 0070  
                       __size_of_I2C_SetBuffer 000E                            __size_of_COS_TskMan 007C  
                           ??_I2C_DO_SEND_STOP 0055                                  _fsmStateTable 037F  
                              __initialization 0014                                   __end_of_main 03F3  
            __size_of_I2C_DO_SEND_RESTART_READ 0004                      ?_I2C_DO_SEND_RESTART_READ 0070  
                               ??_EUSART_Write 0055                                 ?_I2C_DO_RX_ACK 0070  
                      __end_of_TMR2_Initialize 04A8                    ?_INTERRUPT_InterruptManager 0070  
                     _TMR2_SetInterruptHandler 0547                                         ??_main 006D  
                            ?_I2C_MasterIsNack 0070                                    _BreathState 007B  
                            ?_I2C_MasterSetIrq 0070                             ??_I2C_MasterIsNack 0055  
                       __end_of_WDT_Initialize 05D6                                 _COS_TmrHandler 010D  
                           ??_I2C_MasterSetIrq 0055                                     _SendByUart 0574  
            _EUSART_DefaultFramingErrorHandler 0000                     _EUSART_OverrunErrorHandler 00A2  
              __end_of_I2C_CallbackReturnReset 0625                                 _COS_TimerSetup 05C2  
              __size_of_I2C_CallbackReturnStop 0002                                         _APFCON 011D  
                I2C_SetDataCompleteCallback@cb 005A                                         _ANSELA 018C  
                                       _ANSELB 018D                                         _ANSELC 018E  
                                       _BORCON 0116                                   ??_I2C_Poller 0065  
                             ?_PWM1_Initialize 0070                                         i1l2720 00A8  
                                       i1l2730 00CE                                         i1l2740 00E1  
                                       i1l2732 00D1                                         i1l2724 00B9  
                                       i1l2726 00BE                                         i1l2750 0105  
                                       i1l2748 00F2                                         i1l3990 00FA  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                    ??_GetTemp 006C                                         _SPBRGL 019B  
                                       _WDTCON 0097                                  ??_UartDisplay 0056  
                          _I2C_MasterGetRxData 0609                        __end_of_I2C_WriteNBytes 0312  
                                   _Timer2Flag 0050                        __size_of_I2C_ReadNBytes 001D  
                                       ___wmul 03BC                                  _I2C_MasterFsm 02C6  
                            I2C_SetCallback@cb 0055                        __size_of_I2C_MasterRead 0004  
                      __size_of_I2C_MasterOpen 000B                        __size_of_I2C_MasterStop 0003  
                      __size_of_I2C_Initialize 0009                                  _I2C_SetBuffer 04FF  
                           __end_of_I2C_Poller 0547                   __end_of_I2C_MasterDisableIrq 061B  
                       __end_of_COS_TmrHandler 016A                            _I2C_DO_ADDRESS_NACK 029B  
                                 __pdataCOMMON 007A                           ?_I2C_MasterGetRxData 0070  
                                    ?_I2C_Open 0070             __end_of_I2C_SetAddressNackCallback 051A  
                   _I2C_SetAddressNackCallback 050D                                ?_WDT_Initialize 0070  
                       __end_of_COS_TimerSetup 05C8                      ??_I2C_MasterEnableRestart 0055  
     TMR2_SetInterruptHandler@InterruptHandler 0055                              _SYSTEM_Initialize 046E  
                      __end_of__initialization 0027                                      ?_COS_Init 0070  
                        __end_of_TMR2_CallBack 053D                            _I2C_MasterOperation 03F3  
                               _NewMessageFlag 0078                             ?_SYSTEM_Initialize 0070  
                         ?_I2C_DO_ADDRESS_NACK 0070                    PWM1_LoadDutyValue@dutyValue 0070  
                      _rdBlkRegCompleteHandler 0426                                 __pcstackCOMMON 0070  
                               ?_I2C_MasterFsm 0070                                ??_I2C_DO_RX_ACK 0055  
                       _I2C_CallbackReturnStop 0625                            ??_SYSTEM_Initialize 0057  
                          __end_of_UartDisplay 058D                                      ?_TMR2_ISR 0070  
                           _PWM1_LoadDutyValue 0458                               ?_TMR2_Initialize 0070  
                               ?_I2C_SetBuffer 0055                        ?_I2C_MasterWaitForEvent 0070  
               __size_of_I2C_DO_SEND_ADR_WRITE 0007             __size_of_I2C_DO_SEND_RESTART_WRITE 0004  
                __end_of_I2C_DO_SEND_ADR_WRITE 05A4                                   ??_COS_TskMan 00A8  
                   ?_I2C_DO_SEND_RESTART_WRITE 0070                           ?_I2C_MasterOperation 0070  
                        ??_I2C_MasterGetRxData 0055                                      ?_Led2_PWM 0070  
                              ?_COS_TmrHandler 0070                                 _OPTION_REGbits 0095  
                        I2C_ReadNBytes@address 006B                                     ??_I2C_Open 0055  
                          ?_PWM1_LoadDutyValue 0070                                ?_COS_TimerSetup 0070  
                   __end_of_I2C_MasterClearIrq 0621                                    ?_SendByUart 0070  
              ??_EUSART_SetOverrunErrorHandler 0057                      __end_of_SYSTEM_Initialize 0483  
                            _I2C_MasterSendAck 05FE                                     __pbssBANK0 0020  
                         __end_of_EUSART_Write 0595                                  ??_I2C_DO_IDLE 0055  
               __size_of_rd2RegCompleteHandler 0012                                  ??_I2C_DO_RCEN 0055  
                __end_of_rd2RegCompleteHandler 04CC                   __end_of_I2C_MasterSendTxData 05C2  
                           ?_I2C_MasterSendAck 0070                              _I2C_MasterStartRx 060C  
                                   ??_COS_Init 0055                 __size_of_wr2RegCompleteHandler 0012  
                        ??_I2C_DO_ADDRESS_NACK 005F                  __end_of_wr2RegCompleteHandler 04F0  
                          _I2C_DO_RX_NACK_STOP 05E6                          _rd1RegCompleteHandler 04CC  
                           ?_I2C_MasterStartRx 0070                             __end_of_COS_TskMan 00A7  
                         ??_PWM1_LoadDutyValue 0072                     __end_of_I2C_MasterSendNack 0606  
                             ?_I2C_WriteNBytes 0068                         I2C_WriteNBytes@address 006B  
                        _wr1RegCompleteHandler 04A8                                     __pmaintext 03D8  
                          ??_I2C_MasterSendAck 0055                       rd1RegCompleteHandler@ptr 005E  
                  __end_of_I2C_DO_SEND_RESTART 05F6                                _I2C_DO_TX_EMPTY 026E  
                          I2C_SetBuffer@buffer 0058                                        ?___wmul 0055  
                                   ??_TMR2_ISR 0076                                     __pintentry 0004  
               __end_of_I2C_MasterWaitForEvent 05E2                            ??_I2C_MasterStartRx 0055  
                __size_of_I2C_DO_SEND_ADR_READ 0008                                        _BAUDCON 019F  
             __size_of_I2C_CallbackReturnReset 0002                          ??_I2C_MasterOperation 0065  
               I2C_SetDataCompleteCallback@ptr 005C                       ??_I2C_DO_RX_NACK_RESTART 0055  
            __end_of_I2C_DO_SEND_RESTART_WRITE 05FA                           ?_I2C_DO_RX_NACK_STOP 0070  
                                   ??_Led2_PWM 0074                                        _COS_tsk 04F0  
                                      _PWM1DCH 0612                                        _PWM1DCL 0611  
                    __end_of_I2C_MasterSendAck 0602                                        _PWM1CON 0613  
                                      _SSP1ADD 0212                                        _SSP1BUF 0211  
                     ??_EUSART_SetErrorHandler 0057                      __end_of_I2C_MasterStartRx 060F  
                         I2C_Close@returnValue 0056                   ?_I2C_SetDataCompleteCallback 005A  
                                    _I2C_DO_RX 01B9                                      _I2C_DO_TX 016A  
             __end_of_I2C_DO_SEND_RESTART_READ 05FE                                        _GetTemp 035B  
                                    _I2C_Close 043F                                        _Command 0053  
                    ??_rdBlkRegCompleteHandler 005F                                    _UartDisplay 0585  
                         _I2C_MasterDisableIrq 0618                                ??_I2C_MasterFsm 0062  
                   ??_TMR2_SetInterruptHandler 0057                                 _I2C_ReadNBytes 039F  
                          __end_of_I2C_DO_IDLE 05D2                            __end_of_I2C_DO_RCEN 05B6  
                          __size_of_SendByUart 0009                                ??_I2C_SetBuffer 0057  
                              __size_of___wmul 001C                        I2C_SetBuffer@bufferSize 0055  
                           I2C_ReadNBytes@data 0068                                 _I2C_MasterRead 05DA  
                               _I2C_MasterOpen 0527                                 _I2C_MasterStop 060F  
                               _I2C_Initialize 0550                      __size_of_I2C_DO_SEND_STOP 0004  
                                      __ptext1 046E                                        __ptext2 05D2  
                                      __ptext3 0496                                        __ptext4 0547  
                                      __ptext5 057D                                        __ptext6 040D  
                                      __ptext7 05AA                                        __ptext8 0550  
                                      __ptext9 0337                          ??_I2C_DO_RX_NACK_STOP 0055  
                                      _counter 0043                          _OSCILLATOR_Initialize 05AA  
                                    _T2CONbits 001C                             I2C_SetCallback@idx 0059  
                     __size_of_I2C_MasterClose 0003                       ??_PIN_MANAGER_Initialize 0055  
                I2C_CallbackReturnReset@funPtr 005E                             I2C_SetCallback@ptr 0057  
                     wr1RegCompleteHandler@ptr 005E                       __size_of_I2C_MasterStart 0003  
                     __size_of_I2C_MasterWrite 0004                     __size_of_SYSTEM_Initialize 0015  
                                      clrloop0 05A5                           end_of_initialization 0027  
                                   ?_I2C_DO_RX 0070                                     ?_I2C_DO_TX 0070  
                   _counter@UART_Display$F1229 004F          __end_of_EUSART_SetOverrunErrorHandler 0562  
       __size_of_EUSART_SetOverrunErrorHandler 0009                  _EUSART_SetOverrunErrorHandler 0559  
                    __size_of_I2C_MasterIsNack 0006                                     ?_I2C_Close 0070  
                              _TimeSlotCounter 0051                         ?_rd1RegCompleteHandler 005E  
                      __end_of_I2C_DO_TX_EMPTY 029B                      __size_of_I2C_MasterSetIrq 0003  
                        ?_I2C_MasterDisableIrq 0070                         __end_of_I2C_ReadNBytes 03BC  
                            _EUSART_Initialize 0337                         ?_wr1RegCompleteHandler 005E  
                           ?_EUSART_Initialize 0070                       __size_of_I2C_SetCallback 0025  
                                    _RCSTAbits 019D                         __end_of_I2C_MasterRead 05DE  
                       __end_of_I2C_MasterOpen 0532                         __end_of_I2C_MasterStop 0612  
                       __end_of_I2C_Initialize 0559                                      _U8Message 007A  
                          ??_EUSART_Initialize 0057                               ??_WDT_Initialize 0055  
              __end_of_rdBlkRegCompleteHandler 043F                           _I2C_MasterSendTxData 05BC  
              __size_of_I2C_DO_RX_NACK_RESTART 0004                    ?_I2C_SetAddressNackCallback 005A  
                        __size_of_EUSART_Write 0008                     __size_of_I2C_MasterSendAck 0004  
                            __size_of_I2C_Open 0038                __size_of_EUSART_SetErrorHandler 0009  
                   __size_of_I2C_MasterStartRx 0003                      __end_of_EUSART_Initialize 035B  
                                  _I2C_DO_IDLE 05CD                                    _I2C_DO_RCEN 05B0  
                   rdBlkRegCompleteHandler@ptr 005E                                      _TXSTAbits 019E  
                              ?_I2C_ReadNBytes 0068                        ?_I2C_CallbackReturnStop 005E  
                     _I2C_DO_SEND_RESTART_READ 05FA                              __size_of_COS_Init 003B  
                     __size_of_PWM1_Initialize 0008                   I2C_CallbackReturnStop@funPtr 005E  
                              ?_I2C_MasterRead 0070                                ?_I2C_MasterOpen 0070  
                              ?_I2C_MasterStop 0070                                ?_I2C_Initialize 0070  
         __end_of_TMR2_DefaultInterruptHandler 0628          __size_of_TMR2_DefaultInterruptHandler 0001  
                 _TMR2_DefaultInterruptHandler 0627                        _I2C_CallbackReturnReset 0623  
                   _EUSART_DefaultErrorHandler 0000                               ??_COS_TmrHandler 0055  
                               __end_of___wmul 03D8           __size_of_I2C_SetDataCompleteCallback 000D  
                                __pidataCOMMON 0621                                   _EUSART_Write 058D  
                            __size_of_TMR2_ISR 0013                               ??_COS_TimerSetup 0055  
                        ?_I2C_MasterSendTxData 0070                         ?_OSCILLATOR_Initialize 0070  
                  ??_I2C_DO_SEND_RESTART_WRITE 0055                            start_initialization 0014  
                                 ??_SendByUart 0055                __size_of_PIN_MANAGER_Initialize 0019  
                            __size_of_Led2_PWM 0066                                  ?_I2C_DO_RESET 0070  
                                  ??_I2C_DO_RX 005F                                    ??_I2C_DO_TX 005F  
                            ??_I2C_MasterClose 0055                         ??_I2C_MasterDisableIrq 0055  
                                  ??_I2C_Close 0055                              ??_I2C_MasterStart 0055  
                            ??_I2C_MasterWrite 0068                 __end_of_I2C_CallbackReturnStop 0627  
                       _I2C_DO_RX_NACK_RESTART 05E2                               ?_I2C_DO_TX_EMPTY 0070  
                           _I2C_MasterClearIrq 061E                 ?_EUSART_SetOverrunErrorHandler 0055  
                   _EUSART_FramingErrorHandler 00A4                                       ??___wmul 0059  
                       _EUSART_SetErrorHandler 056B                                   _COS_tcnt_val 0076  
                          ?_I2C_MasterClearIrq 0070                                   _COS_tcnt_lst 0047  
                           __end_of_SendByUart 057D                    __end_of_I2C_MasterGetRxData 060C  
                        __end_of_I2C_DO_RX_ACK 05EE                  ?_TMR2_DefaultInterruptHandler 0070  
                             _I2C_DO_SEND_STOP 05EE                              ??_I2C_SetCallback 0058  
                          I2C_Open@returnValue 0057                             _I2C_MasterSendNack 0602  
                     ?_I2C_MasterEnableRestart 0070                         __size_of_TMR2_CallBack 000B  
                        _I2C_DO_SEND_ADR_WRITE 059D                                    __pbssCOMMON 0076  
                                    ___latbits 0002                                  __pcstackBANK0 0055  
                                __pcstackBANK1 00A8                                 ??_I2C_DO_RESET 0055  
                     __size_of_TMR2_Initialize 0012                            ?_I2C_MasterSendNack 0070  
                 __end_of_I2C_DO_SEND_ADR_READ 059D                           ??_I2C_MasterClearIrq 0055  
                  __end_of_I2C_DO_ADDRESS_NACK 02C6                               _I2C_MasterIsNack 05B6  
                   __size_of_EUSART_Initialize 0024                                       ?_GetTemp 0070  
                    _I2C_DO_SEND_RESTART_WRITE 05F6                               _I2C_MasterSetIrq 0606  
                                 ?_UartDisplay 0070                                      __pnvBANK0 006D  
                                    __pnvBANK1 00A0                          _rd2RegCompleteHandler 04BA  
                        __end_of_fsmStateTable 039F                    __size_of_PWM1_LoadDutyValue 0016  
                       _PIN_MANAGER_Initialize 040D                          _wr2RegCompleteHandler 04DE  
                    ??_I2C_CallbackReturnReset 005F                    __end_of_I2C_MasterOperation 040D  
                         ??_I2C_MasterSendNack 0055                       rd2RegCompleteHandler@ptr 005E  
                       ??_I2C_MasterSendTxData 0055                              ??_PWM1_Initialize 0055  
                 ??_INTERRUPT_InterruptManager 0076                       __size_of_I2C_WriteNBytes 0025  
                 __size_of_I2C_DO_SEND_RESTART 0004                        I2C_MasterOperation@read 0066  
                                     _I2C_Open 0236                              I2C_ReadNBytes@len 0069  
                      ??_rd1RegCompleteHandler 005F                                      _dutyValue 0041  
                      ??_wr1RegCompleteHandler 005F                                 ___wmul@product 0059  
                                     _COS_Init 01FB         EUSART_SetErrorHandler@interruptHandler 0055  
                                     _LATCbits 010E                                      clear_ram0 05A4  
                                _TMR2_CallBack 0532                                       _PIE1bits 0091  
                            _eusartRxLastError 0079            __size_of_INTERRUPT_InterruptManager 000E  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0057  
                                     _PIR2bits 0012                          __end_of_I2C_MasterFsm 02ED  
                  __end_of_I2C_DO_RX_NACK_STOP 05EA                                       _SSP1CON1 0215  
                                     _SSP1CON2 0216              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _TMR2_ISR 0483                __end_of_I2C_MasterEnableRestart 0615  
                                     _SSP1STAT 0214                          __end_of_I2C_SetBuffer 050D  
                            ___wmul@multiplier 0055                         ?_I2C_DO_SEND_ADR_WRITE 0070  
                     I2C_MasterSendTxData@data 0055                                       _Led2_PWM 00A7  
               ??_TMR2_DefaultInterruptHandler 0070              __size_of_TMR2_SetInterruptHandler 0009  
                    ?_TMR2_SetInterruptHandler 0055                       wr2RegCompleteHandler@ptr 005E  
                            COS_Init@tempbyte1 0058                              COS_Init@tempbyte2 0059  
                   ??_I2C_DO_SEND_RESTART_READ 0055                       ?_rdBlkRegCompleteHandler 005E  
                             ??_I2C_ReadNBytes 006B                                     _I2C_Poller 053D  
                                   _I2C_Status 0020                                   ?_I2C_DO_IDLE 0070  
                                 ?_I2C_DO_RCEN 0070                              ??_TMR2_Initialize 0057  
                       ?_rd2RegCompleteHandler 005E                                 ?_TMR2_CallBack 0070  
                             __size_of_GetTemp 0024                               ??_I2C_MasterRead 0068  
                          I2C_WriteNBytes@data 0068                               ??_I2C_MasterOpen 0055  
                       ?_wr2RegCompleteHandler 005E                               ??_I2C_MasterStop 0055  
                     ??_I2C_MasterWaitForEvent 0055                               ??_I2C_Initialize 0055  
                                  _COS_sec_tmr 004B                           __end_of_I2C_DO_RESET 05CD  
                      ??_OSCILLATOR_Initialize 0055                            _EUSART_ErrorHandler 00A0  
                                  _COS_tsk_ena 006D                                    _COS_tsk_ind 0052  
                                  _COS_tsk_msk 006E                                    _COS_tsk_tmr 0049  
                         _I2C_DO_SEND_ADR_READ 0595                                _I2C_MasterClose 061B  
                I2C_SetAddressNackCallback@ptr 005C                                I2C_Open@address 0056  
                              _I2C_MasterStart 0615                                _I2C_MasterWrite 05D6  
                            ??_I2C_WriteNBytes 006B                                       __ptext10 0559  
                                     __ptext11 0562                                       __ptext20 050D  
                                     __ptext12 056B                                       __ptext21 05D6  
                                     __ptext13 002B                                       __ptext30 029B  
                                     __ptext22 039F                                       __ptext14 03BC  
                                     __ptext31 05C8                                       __ptext23 0236  
                                     __ptext15 035B                                       __ptext40 01B9  
                                     __ptext32 05E2                                       __ptext24 0527  
                                     __ptext16 0585                                       __ptext41 016A  
                                     __ptext33 05E6                                       __ptext25 05DA  
                                     __ptext17 058D                                       __ptext50 0609  
                                     __ptext42 059D                                       __ptext34 05EA  
                                     __ptext26 03F3                                       __ptext18 0574  
                                     __ptext51 0602                                       __ptext43 0595  
                                     __ptext35 05EE                                       __ptext27 053D  
                                     __ptext19 02ED                                       __ptext60 051A  
                                     __ptext52 060C                                       __ptext44 05CD  
                                     __ptext36 05F2                                       __ptext28 05DE  
                                     __ptext61 0312                                       __ptext53 0623  
                                     __ptext45 026E                                       __ptext37 05F6  
                                     __ptext29 02C6                                       __ptext70 010D  
                                     __ptext62 04FF                                       __ptext54 0625  
                                     __ptext46 0606                                       __ptext38 05FA  
                                     __ptext71 01FB                                       __ptext63 060F  
                                     __ptext55 0426                                       __ptext47 05B6  
                                     __ptext39 05B0                                       __ptext72 05C2  
                                     __ptext64 0612                                       __ptext56 04A8  
                                     __ptext48 05BC                                       __ptext65 0615  
                                     __ptext57 04BA                                       __ptext49 05FE  
                                     __ptext74 0483                                       __ptext66 043F  
                                     __ptext58 04CC                                       __ptext75 0532  
                                     __ptext67 0618                                       __ptext59 04DE  
                                     __ptext76 00A7                                       __ptext68 061B  
                                     __ptext77 0627                                       __ptext69 061E  
                                     __ptext78 0458                                   _SSP1CON1bits 0215  
                                 _SSP1CON2bits 0216            __end_of_I2C_SetDataCompleteCallback 0527  
                  _I2C_SetDataCompleteCallback 051A                        ?_I2C_DO_RX_NACK_RESTART 0070  
                     __end_of_I2C_DO_SEND_STOP 05F2                                  __size_of_main 001B  
                      ?_EUSART_SetErrorHandler 0055                                _I2C_SetCallback 0312  
                ??_I2C_SetDataCompleteCallback 005D                           __size_of_UartDisplay 0008  
EUSART_SetOverrunErrorHandler@interruptHandler 0055                                       int$flags 007E  
                        ?_I2C_DO_SEND_ADR_READ 0070             __end_of_INTERRUPT_InterruptManager 0012  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 056B  
       __size_of_EUSART_SetFramingErrorHandler 0009                  _EUSART_SetFramingErrorHandler 0562  
                                 _SSP1STATbits 0214                       __end_of_I2C_MasterIsNack 05BC  
                                   _COS_TskMan 002B                       __end_of_I2C_MasterSetIrq 0609  
                                   _INTCONbits 000B                             I2C_WriteNBytes@len 0069  
                                   _COS_ms_tmr 004D                 __end_of_I2C_DO_RX_NACK_RESTART 05E6  
                      __size_of_WDT_Initialize 0004                                       intlevel1 0000  
                                  ?_I2C_Poller 0070                                ??_TMR2_CallBack 0076  
             __size_of_I2C_MasterEnableRestart 0003                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 0574                            _I2C_DO_SEND_RESTART 05F2  
                __size_of_I2C_MasterDisableIrq 0003                                _PWM1_Initialize 057D  
              __size_of_I2C_MasterWaitForEvent 0004  EUSART_SetFramingErrorHandler@interruptHandler 0055  
                      __end_of_I2C_MasterClose 061E                       __size_of_I2C_DO_TX_EMPTY 002D  
                      __end_of_I2C_MasterStart 0618                        __end_of_I2C_MasterWrite 05DA  
                                __pstringtext1 037F                                  __pstringtext2 04F0  
                         ?_I2C_DO_SEND_RESTART 0070                        COS_TmrHandler@tempbyte1 0058  
                      COS_TmrHandler@tempbyte2 0059                          TMR2_ISR@CountCallBack 0045  
                                SendByUart@Txt 0056                   __size_of_I2C_MasterGetRxData 0003  
                      __size_of_COS_TmrHandler 005D                    __size_of_I2C_MasterClearIrq 0003  
                      __size_of_COS_TimerSetup 0006                             EUSART_Write@txData 0055  
                      __end_of_I2C_SetCallback 0337                 __end_of_PIN_MANAGER_Initialize 0426  
               __size_of_rd1RegCompleteHandler 0012                  __end_of_rd1RegCompleteHandler 04DE  
                       __size_of_I2C_DO_RX_ACK 0004                     __end_of_PWM1_LoadDutyValue 046E  
               __size_of_wr1RegCompleteHandler 0012                          __size_of_I2C_DO_RESET 0005  
                __end_of_wr1RegCompleteHandler 04BA                          _TMR2_InterruptHandler 00A6  
                 __size_of_I2C_DO_ADDRESS_NACK 002B                           __size_of_I2C_DO_IDLE 0005  
                         __size_of_I2C_DO_RCEN 0006                             __size_of_I2C_DO_RX 0042  
                           __size_of_I2C_DO_TX 004F  
