

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Jun 22 15:47:10 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F1509
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,inline,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,inline,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	psect	text42,local,class=CODE,merge=1,delta=2
    62                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    63                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    64                           	psect	text45,local,class=CODE,merge=1,inline,delta=2
    65                           	psect	text46,local,class=CODE,merge=1,inline,delta=2
    66                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    67                           	psect	text48,local,class=CODE,merge=1,inline,delta=2
    68                           	psect	text49,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text50,local,class=CODE,merge=1,delta=2
    70                           	psect	text51,local,class=CODE,merge=1,delta=2
    71                           	psect	text52,local,class=CODE,merge=1,delta=2
    72                           	psect	text53,local,class=CODE,merge=1,delta=2
    73                           	psect	text54,local,class=CODE,merge=1,delta=2
    74                           	psect	text55,local,class=CODE,merge=1,delta=2
    75                           	psect	text56,local,class=CODE,merge=1,delta=2
    76                           	psect	text57,local,class=CODE,merge=1,delta=2
    77                           	psect	text58,local,class=CODE,merge=1,delta=2
    78                           	psect	text59,local,class=CODE,merge=1,delta=2
    79                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    80                           	psect	text61,local,class=CODE,merge=1,inline,delta=2
    81                           	psect	text62,local,class=CODE,merge=1,inline,delta=2
    82                           	psect	text63,local,class=CODE,merge=1,delta=2
    83                           	psect	text64,local,class=CODE,merge=1,inline,delta=2
    84                           	psect	text65,local,class=CODE,merge=1,inline,delta=2
    85                           	psect	text66,local,class=CODE,merge=1,inline,delta=2
    86                           	psect	text67,local,class=CODE,merge=1,delta=2
    87                           	psect	text68,local,class=CODE,merge=1,delta=2
    88                           	psect	text69,local,class=CODE,merge=1,delta=2
    89                           	psect	text70,local,class=CODE,merge=1,delta=2
    90                           	psect	intentry,global,class=CODE,delta=2
    91                           	psect	text72,local,class=CODE,merge=1,delta=2
    92                           	psect	text73,local,class=CODE,merge=1,delta=2
    93                           	psect	text74,local,class=CODE,merge=1,delta=2
    94                           	psect	text75,local,class=CODE,merge=1,delta=2
    95                           	psect	text76,local,class=CODE,merge=1,delta=2
    96                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    97                           	dabs	1,0x7E,2
    98  0000                     
    99                           ; Version 2.20
   100                           ; Generated 12/02/2020 GMT
   101                           ; 
   102                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   103                           ; All rights reserved.
   104                           ; 
   105                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   106                           ; 
   107                           ; Redistribution and use in source and binary forms, with or without modification, are
   108                           ; permitted provided that the following conditions are met:
   109                           ; 
   110                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   111                           ;        conditions and the following disclaimer.
   112                           ; 
   113                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   114                           ;        of conditions and the following disclaimer in the documentation and/or other
   115                           ;        materials provided with the distribution.
   116                           ; 
   117                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   118                           ;        software without specific prior written permission.
   119                           ; 
   120                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   121                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   122                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   123                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   124                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   125                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   126                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   127                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   128                           ; 
   129                           ; 
   130                           ; Code-generator required, PIC16F1509 Definitions
   131                           ; 
   132                           ; SFR Addresses
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  008C                     	;# 
   161  008D                     	;# 
   162  008E                     	;# 
   163  0091                     	;# 
   164  0092                     	;# 
   165  0093                     	;# 
   166  0095                     	;# 
   167  0096                     	;# 
   168  0097                     	;# 
   169  0099                     	;# 
   170  009A                     	;# 
   171  009B                     	;# 
   172  009B                     	;# 
   173  009C                     	;# 
   174  009D                     	;# 
   175  009E                     	;# 
   176  009F                     	;# 
   177  010C                     	;# 
   178  010D                     	;# 
   179  010E                     	;# 
   180  0111                     	;# 
   181  0112                     	;# 
   182  0113                     	;# 
   183  0114                     	;# 
   184  0115                     	;# 
   185  0116                     	;# 
   186  0117                     	;# 
   187  0118                     	;# 
   188  0119                     	;# 
   189  011D                     	;# 
   190  018C                     	;# 
   191  018D                     	;# 
   192  018E                     	;# 
   193  0191                     	;# 
   194  0191                     	;# 
   195  0192                     	;# 
   196  0193                     	;# 
   197  0193                     	;# 
   198  0194                     	;# 
   199  0195                     	;# 
   200  0196                     	;# 
   201  0197                     	;# 
   202  0199                     	;# 
   203  019A                     	;# 
   204  019B                     	;# 
   205  019B                     	;# 
   206  019C                     	;# 
   207  019D                     	;# 
   208  019E                     	;# 
   209  019F                     	;# 
   210  020C                     	;# 
   211  020D                     	;# 
   212  0211                     	;# 
   213  0211                     	;# 
   214  0212                     	;# 
   215  0212                     	;# 
   216  0213                     	;# 
   217  0213                     	;# 
   218  0214                     	;# 
   219  0214                     	;# 
   220  0215                     	;# 
   221  0215                     	;# 
   222  0215                     	;# 
   223  0216                     	;# 
   224  0216                     	;# 
   225  0217                     	;# 
   226  0217                     	;# 
   227  0391                     	;# 
   228  0392                     	;# 
   229  0393                     	;# 
   230  0394                     	;# 
   231  0395                     	;# 
   232  0396                     	;# 
   233  0498                     	;# 
   234  0498                     	;# 
   235  0499                     	;# 
   236  049A                     	;# 
   237  049B                     	;# 
   238  049B                     	;# 
   239  049C                     	;# 
   240  049D                     	;# 
   241  049E                     	;# 
   242  049F                     	;# 
   243  0611                     	;# 
   244  0612                     	;# 
   245  0613                     	;# 
   246  0613                     	;# 
   247  0614                     	;# 
   248  0615                     	;# 
   249  0616                     	;# 
   250  0616                     	;# 
   251  0617                     	;# 
   252  0618                     	;# 
   253  0619                     	;# 
   254  0619                     	;# 
   255  061A                     	;# 
   256  061B                     	;# 
   257  061C                     	;# 
   258  061C                     	;# 
   259  0691                     	;# 
   260  0692                     	;# 
   261  0693                     	;# 
   262  0694                     	;# 
   263  0695                     	;# 
   264  0F0F                     	;# 
   265  0F10                     	;# 
   266  0F11                     	;# 
   267  0F12                     	;# 
   268  0F13                     	;# 
   269  0F14                     	;# 
   270  0F15                     	;# 
   271  0F16                     	;# 
   272  0F17                     	;# 
   273  0F18                     	;# 
   274  0F19                     	;# 
   275  0F1A                     	;# 
   276  0F1B                     	;# 
   277  0F1C                     	;# 
   278  0F1D                     	;# 
   279  0F1E                     	;# 
   280  0F1F                     	;# 
   281  0F20                     	;# 
   282  0F21                     	;# 
   283  0F22                     	;# 
   284  0F23                     	;# 
   285  0F24                     	;# 
   286  0F25                     	;# 
   287  0F26                     	;# 
   288  0F27                     	;# 
   289  0F28                     	;# 
   290  0F29                     	;# 
   291  0F2A                     	;# 
   292  0F2B                     	;# 
   293  0F2C                     	;# 
   294  0F2D                     	;# 
   295  0F2E                     	;# 
   296  0F2F                     	;# 
   297  0F8C                     	;# 
   298  0F8D                     	;# 
   299  0F91                     	;# 
   300  0F95                     	;# 
   301  0F96                     	;# 
   302  0F97                     	;# 
   303  0F9C                     	;# 
   304  0F9D                     	;# 
   305  0F9E                     	;# 
   306  0FE3                     	;# 
   307  0FE4                     	;# 
   308  0FE5                     	;# 
   309  0FE6                     	;# 
   310  0FE7                     	;# 
   311  0FE8                     	;# 
   312  0FE9                     	;# 
   313  0FEA                     	;# 
   314  0FEB                     	;# 
   315  0FED                     	;# 
   316  0FEE                     	;# 
   317  0FEF                     	;# 
   318  0000                     	;# 
   319  0001                     	;# 
   320  0002                     	;# 
   321  0003                     	;# 
   322  0004                     	;# 
   323  0005                     	;# 
   324  0006                     	;# 
   325  0007                     	;# 
   326  0008                     	;# 
   327  0009                     	;# 
   328  000A                     	;# 
   329  000B                     	;# 
   330  000C                     	;# 
   331  000D                     	;# 
   332  000E                     	;# 
   333  0011                     	;# 
   334  0012                     	;# 
   335  0013                     	;# 
   336  0015                     	;# 
   337  0016                     	;# 
   338  0016                     	;# 
   339  0017                     	;# 
   340  0018                     	;# 
   341  0019                     	;# 
   342  001A                     	;# 
   343  001B                     	;# 
   344  001C                     	;# 
   345  008C                     	;# 
   346  008D                     	;# 
   347  008E                     	;# 
   348  0091                     	;# 
   349  0092                     	;# 
   350  0093                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  010C                     	;# 
   363  010D                     	;# 
   364  010E                     	;# 
   365  0111                     	;# 
   366  0112                     	;# 
   367  0113                     	;# 
   368  0114                     	;# 
   369  0115                     	;# 
   370  0116                     	;# 
   371  0117                     	;# 
   372  0118                     	;# 
   373  0119                     	;# 
   374  011D                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  018E                     	;# 
   378  0191                     	;# 
   379  0191                     	;# 
   380  0192                     	;# 
   381  0193                     	;# 
   382  0193                     	;# 
   383  0194                     	;# 
   384  0195                     	;# 
   385  0196                     	;# 
   386  0197                     	;# 
   387  0199                     	;# 
   388  019A                     	;# 
   389  019B                     	;# 
   390  019B                     	;# 
   391  019C                     	;# 
   392  019D                     	;# 
   393  019E                     	;# 
   394  019F                     	;# 
   395  020C                     	;# 
   396  020D                     	;# 
   397  0211                     	;# 
   398  0211                     	;# 
   399  0212                     	;# 
   400  0212                     	;# 
   401  0213                     	;# 
   402  0213                     	;# 
   403  0214                     	;# 
   404  0214                     	;# 
   405  0215                     	;# 
   406  0215                     	;# 
   407  0215                     	;# 
   408  0216                     	;# 
   409  0216                     	;# 
   410  0217                     	;# 
   411  0217                     	;# 
   412  0391                     	;# 
   413  0392                     	;# 
   414  0393                     	;# 
   415  0394                     	;# 
   416  0395                     	;# 
   417  0396                     	;# 
   418  0498                     	;# 
   419  0498                     	;# 
   420  0499                     	;# 
   421  049A                     	;# 
   422  049B                     	;# 
   423  049B                     	;# 
   424  049C                     	;# 
   425  049D                     	;# 
   426  049E                     	;# 
   427  049F                     	;# 
   428  0611                     	;# 
   429  0612                     	;# 
   430  0613                     	;# 
   431  0613                     	;# 
   432  0614                     	;# 
   433  0615                     	;# 
   434  0616                     	;# 
   435  0616                     	;# 
   436  0617                     	;# 
   437  0618                     	;# 
   438  0619                     	;# 
   439  0619                     	;# 
   440  061A                     	;# 
   441  061B                     	;# 
   442  061C                     	;# 
   443  061C                     	;# 
   444  0691                     	;# 
   445  0692                     	;# 
   446  0693                     	;# 
   447  0694                     	;# 
   448  0695                     	;# 
   449  0F0F                     	;# 
   450  0F10                     	;# 
   451  0F11                     	;# 
   452  0F12                     	;# 
   453  0F13                     	;# 
   454  0F14                     	;# 
   455  0F15                     	;# 
   456  0F16                     	;# 
   457  0F17                     	;# 
   458  0F18                     	;# 
   459  0F19                     	;# 
   460  0F1A                     	;# 
   461  0F1B                     	;# 
   462  0F1C                     	;# 
   463  0F1D                     	;# 
   464  0F1E                     	;# 
   465  0F1F                     	;# 
   466  0F20                     	;# 
   467  0F21                     	;# 
   468  0F22                     	;# 
   469  0F23                     	;# 
   470  0F24                     	;# 
   471  0F25                     	;# 
   472  0F26                     	;# 
   473  0F27                     	;# 
   474  0F28                     	;# 
   475  0F29                     	;# 
   476  0F2A                     	;# 
   477  0F2B                     	;# 
   478  0F2C                     	;# 
   479  0F2D                     	;# 
   480  0F2E                     	;# 
   481  0F2F                     	;# 
   482  0F8C                     	;# 
   483  0F8D                     	;# 
   484  0F91                     	;# 
   485  0F95                     	;# 
   486  0F96                     	;# 
   487  0F97                     	;# 
   488  0F9C                     	;# 
   489  0F9D                     	;# 
   490  0F9E                     	;# 
   491  0FE3                     	;# 
   492  0FE4                     	;# 
   493  0FE5                     	;# 
   494  0FE6                     	;# 
   495  0FE7                     	;# 
   496  0FE8                     	;# 
   497  0FE9                     	;# 
   498  0FEA                     	;# 
   499  0FEB                     	;# 
   500  0FED                     	;# 
   501  0FEE                     	;# 
   502  0FEF                     	;# 
   503  0000                     	;# 
   504  0001                     	;# 
   505  0002                     	;# 
   506  0003                     	;# 
   507  0004                     	;# 
   508  0005                     	;# 
   509  0006                     	;# 
   510  0007                     	;# 
   511  0008                     	;# 
   512  0009                     	;# 
   513  000A                     	;# 
   514  000B                     	;# 
   515  000C                     	;# 
   516  000D                     	;# 
   517  000E                     	;# 
   518  0011                     	;# 
   519  0012                     	;# 
   520  0013                     	;# 
   521  0015                     	;# 
   522  0016                     	;# 
   523  0016                     	;# 
   524  0017                     	;# 
   525  0018                     	;# 
   526  0019                     	;# 
   527  001A                     	;# 
   528  001B                     	;# 
   529  001C                     	;# 
   530  008C                     	;# 
   531  008D                     	;# 
   532  008E                     	;# 
   533  0091                     	;# 
   534  0092                     	;# 
   535  0093                     	;# 
   536  0095                     	;# 
   537  0096                     	;# 
   538  0097                     	;# 
   539  0099                     	;# 
   540  009A                     	;# 
   541  009B                     	;# 
   542  009B                     	;# 
   543  009C                     	;# 
   544  009D                     	;# 
   545  009E                     	;# 
   546  009F                     	;# 
   547  010C                     	;# 
   548  010D                     	;# 
   549  010E                     	;# 
   550  0111                     	;# 
   551  0112                     	;# 
   552  0113                     	;# 
   553  0114                     	;# 
   554  0115                     	;# 
   555  0116                     	;# 
   556  0117                     	;# 
   557  0118                     	;# 
   558  0119                     	;# 
   559  011D                     	;# 
   560  018C                     	;# 
   561  018D                     	;# 
   562  018E                     	;# 
   563  0191                     	;# 
   564  0191                     	;# 
   565  0192                     	;# 
   566  0193                     	;# 
   567  0193                     	;# 
   568  0194                     	;# 
   569  0195                     	;# 
   570  0196                     	;# 
   571  0197                     	;# 
   572  0199                     	;# 
   573  019A                     	;# 
   574  019B                     	;# 
   575  019B                     	;# 
   576  019C                     	;# 
   577  019D                     	;# 
   578  019E                     	;# 
   579  019F                     	;# 
   580  020C                     	;# 
   581  020D                     	;# 
   582  0211                     	;# 
   583  0211                     	;# 
   584  0212                     	;# 
   585  0212                     	;# 
   586  0213                     	;# 
   587  0213                     	;# 
   588  0214                     	;# 
   589  0214                     	;# 
   590  0215                     	;# 
   591  0215                     	;# 
   592  0215                     	;# 
   593  0216                     	;# 
   594  0216                     	;# 
   595  0217                     	;# 
   596  0217                     	;# 
   597  0391                     	;# 
   598  0392                     	;# 
   599  0393                     	;# 
   600  0394                     	;# 
   601  0395                     	;# 
   602  0396                     	;# 
   603  0498                     	;# 
   604  0498                     	;# 
   605  0499                     	;# 
   606  049A                     	;# 
   607  049B                     	;# 
   608  049B                     	;# 
   609  049C                     	;# 
   610  049D                     	;# 
   611  049E                     	;# 
   612  049F                     	;# 
   613  0611                     	;# 
   614  0612                     	;# 
   615  0613                     	;# 
   616  0613                     	;# 
   617  0614                     	;# 
   618  0615                     	;# 
   619  0616                     	;# 
   620  0616                     	;# 
   621  0617                     	;# 
   622  0618                     	;# 
   623  0619                     	;# 
   624  0619                     	;# 
   625  061A                     	;# 
   626  061B                     	;# 
   627  061C                     	;# 
   628  061C                     	;# 
   629  0691                     	;# 
   630  0692                     	;# 
   631  0693                     	;# 
   632  0694                     	;# 
   633  0695                     	;# 
   634  0F0F                     	;# 
   635  0F10                     	;# 
   636  0F11                     	;# 
   637  0F12                     	;# 
   638  0F13                     	;# 
   639  0F14                     	;# 
   640  0F15                     	;# 
   641  0F16                     	;# 
   642  0F17                     	;# 
   643  0F18                     	;# 
   644  0F19                     	;# 
   645  0F1A                     	;# 
   646  0F1B                     	;# 
   647  0F1C                     	;# 
   648  0F1D                     	;# 
   649  0F1E                     	;# 
   650  0F1F                     	;# 
   651  0F20                     	;# 
   652  0F21                     	;# 
   653  0F22                     	;# 
   654  0F23                     	;# 
   655  0F24                     	;# 
   656  0F25                     	;# 
   657  0F26                     	;# 
   658  0F27                     	;# 
   659  0F28                     	;# 
   660  0F29                     	;# 
   661  0F2A                     	;# 
   662  0F2B                     	;# 
   663  0F2C                     	;# 
   664  0F2D                     	;# 
   665  0F2E                     	;# 
   666  0F2F                     	;# 
   667  0F8C                     	;# 
   668  0F8D                     	;# 
   669  0F91                     	;# 
   670  0F95                     	;# 
   671  0F96                     	;# 
   672  0F97                     	;# 
   673  0F9C                     	;# 
   674  0F9D                     	;# 
   675  0F9E                     	;# 
   676  0FE3                     	;# 
   677  0FE4                     	;# 
   678  0FE5                     	;# 
   679  0FE6                     	;# 
   680  0FE7                     	;# 
   681  0FE8                     	;# 
   682  0FE9                     	;# 
   683  0FEA                     	;# 
   684  0FEB                     	;# 
   685  0FED                     	;# 
   686  0FEE                     	;# 
   687  0FEF                     	;# 
   688  0000                     	;# 
   689  0001                     	;# 
   690  0002                     	;# 
   691  0003                     	;# 
   692  0004                     	;# 
   693  0005                     	;# 
   694  0006                     	;# 
   695  0007                     	;# 
   696  0008                     	;# 
   697  0009                     	;# 
   698  000A                     	;# 
   699  000B                     	;# 
   700  000C                     	;# 
   701  000D                     	;# 
   702  000E                     	;# 
   703  0011                     	;# 
   704  0012                     	;# 
   705  0013                     	;# 
   706  0015                     	;# 
   707  0016                     	;# 
   708  0016                     	;# 
   709  0017                     	;# 
   710  0018                     	;# 
   711  0019                     	;# 
   712  001A                     	;# 
   713  001B                     	;# 
   714  001C                     	;# 
   715  008C                     	;# 
   716  008D                     	;# 
   717  008E                     	;# 
   718  0091                     	;# 
   719  0092                     	;# 
   720  0093                     	;# 
   721  0095                     	;# 
   722  0096                     	;# 
   723  0097                     	;# 
   724  0099                     	;# 
   725  009A                     	;# 
   726  009B                     	;# 
   727  009B                     	;# 
   728  009C                     	;# 
   729  009D                     	;# 
   730  009E                     	;# 
   731  009F                     	;# 
   732  010C                     	;# 
   733  010D                     	;# 
   734  010E                     	;# 
   735  0111                     	;# 
   736  0112                     	;# 
   737  0113                     	;# 
   738  0114                     	;# 
   739  0115                     	;# 
   740  0116                     	;# 
   741  0117                     	;# 
   742  0118                     	;# 
   743  0119                     	;# 
   744  011D                     	;# 
   745  018C                     	;# 
   746  018D                     	;# 
   747  018E                     	;# 
   748  0191                     	;# 
   749  0191                     	;# 
   750  0192                     	;# 
   751  0193                     	;# 
   752  0193                     	;# 
   753  0194                     	;# 
   754  0195                     	;# 
   755  0196                     	;# 
   756  0197                     	;# 
   757  0199                     	;# 
   758  019A                     	;# 
   759  019B                     	;# 
   760  019B                     	;# 
   761  019C                     	;# 
   762  019D                     	;# 
   763  019E                     	;# 
   764  019F                     	;# 
   765  020C                     	;# 
   766  020D                     	;# 
   767  0211                     	;# 
   768  0211                     	;# 
   769  0212                     	;# 
   770  0212                     	;# 
   771  0213                     	;# 
   772  0213                     	;# 
   773  0214                     	;# 
   774  0214                     	;# 
   775  0215                     	;# 
   776  0215                     	;# 
   777  0215                     	;# 
   778  0216                     	;# 
   779  0216                     	;# 
   780  0217                     	;# 
   781  0217                     	;# 
   782  0391                     	;# 
   783  0392                     	;# 
   784  0393                     	;# 
   785  0394                     	;# 
   786  0395                     	;# 
   787  0396                     	;# 
   788  0498                     	;# 
   789  0498                     	;# 
   790  0499                     	;# 
   791  049A                     	;# 
   792  049B                     	;# 
   793  049B                     	;# 
   794  049C                     	;# 
   795  049D                     	;# 
   796  049E                     	;# 
   797  049F                     	;# 
   798  0611                     	;# 
   799  0612                     	;# 
   800  0613                     	;# 
   801  0613                     	;# 
   802  0614                     	;# 
   803  0615                     	;# 
   804  0616                     	;# 
   805  0616                     	;# 
   806  0617                     	;# 
   807  0618                     	;# 
   808  0619                     	;# 
   809  0619                     	;# 
   810  061A                     	;# 
   811  061B                     	;# 
   812  061C                     	;# 
   813  061C                     	;# 
   814  0691                     	;# 
   815  0692                     	;# 
   816  0693                     	;# 
   817  0694                     	;# 
   818  0695                     	;# 
   819  0F0F                     	;# 
   820  0F10                     	;# 
   821  0F11                     	;# 
   822  0F12                     	;# 
   823  0F13                     	;# 
   824  0F14                     	;# 
   825  0F15                     	;# 
   826  0F16                     	;# 
   827  0F17                     	;# 
   828  0F18                     	;# 
   829  0F19                     	;# 
   830  0F1A                     	;# 
   831  0F1B                     	;# 
   832  0F1C                     	;# 
   833  0F1D                     	;# 
   834  0F1E                     	;# 
   835  0F1F                     	;# 
   836  0F20                     	;# 
   837  0F21                     	;# 
   838  0F22                     	;# 
   839  0F23                     	;# 
   840  0F24                     	;# 
   841  0F25                     	;# 
   842  0F26                     	;# 
   843  0F27                     	;# 
   844  0F28                     	;# 
   845  0F29                     	;# 
   846  0F2A                     	;# 
   847  0F2B                     	;# 
   848  0F2C                     	;# 
   849  0F2D                     	;# 
   850  0F2E                     	;# 
   851  0F2F                     	;# 
   852  0F8C                     	;# 
   853  0F8D                     	;# 
   854  0F91                     	;# 
   855  0F95                     	;# 
   856  0F96                     	;# 
   857  0F97                     	;# 
   858  0F9C                     	;# 
   859  0F9D                     	;# 
   860  0F9E                     	;# 
   861  0FE3                     	;# 
   862  0FE4                     	;# 
   863  0FE5                     	;# 
   864  0FE6                     	;# 
   865  0FE7                     	;# 
   866  0FE8                     	;# 
   867  0FE9                     	;# 
   868  0FEA                     	;# 
   869  0FEB                     	;# 
   870  0FED                     	;# 
   871  0FEE                     	;# 
   872  0FEF                     	;# 
   873  0000                     	;# 
   874  0001                     	;# 
   875  0002                     	;# 
   876  0003                     	;# 
   877  0004                     	;# 
   878  0005                     	;# 
   879  0006                     	;# 
   880  0007                     	;# 
   881  0008                     	;# 
   882  0009                     	;# 
   883  000A                     	;# 
   884  000B                     	;# 
   885  000C                     	;# 
   886  000D                     	;# 
   887  000E                     	;# 
   888  0011                     	;# 
   889  0012                     	;# 
   890  0013                     	;# 
   891  0015                     	;# 
   892  0016                     	;# 
   893  0016                     	;# 
   894  0017                     	;# 
   895  0018                     	;# 
   896  0019                     	;# 
   897  001A                     	;# 
   898  001B                     	;# 
   899  001C                     	;# 
   900  008C                     	;# 
   901  008D                     	;# 
   902  008E                     	;# 
   903  0091                     	;# 
   904  0092                     	;# 
   905  0093                     	;# 
   906  0095                     	;# 
   907  0096                     	;# 
   908  0097                     	;# 
   909  0099                     	;# 
   910  009A                     	;# 
   911  009B                     	;# 
   912  009B                     	;# 
   913  009C                     	;# 
   914  009D                     	;# 
   915  009E                     	;# 
   916  009F                     	;# 
   917  010C                     	;# 
   918  010D                     	;# 
   919  010E                     	;# 
   920  0111                     	;# 
   921  0112                     	;# 
   922  0113                     	;# 
   923  0114                     	;# 
   924  0115                     	;# 
   925  0116                     	;# 
   926  0117                     	;# 
   927  0118                     	;# 
   928  0119                     	;# 
   929  011D                     	;# 
   930  018C                     	;# 
   931  018D                     	;# 
   932  018E                     	;# 
   933  0191                     	;# 
   934  0191                     	;# 
   935  0192                     	;# 
   936  0193                     	;# 
   937  0193                     	;# 
   938  0194                     	;# 
   939  0195                     	;# 
   940  0196                     	;# 
   941  0197                     	;# 
   942  0199                     	;# 
   943  019A                     	;# 
   944  019B                     	;# 
   945  019B                     	;# 
   946  019C                     	;# 
   947  019D                     	;# 
   948  019E                     	;# 
   949  019F                     	;# 
   950  020C                     	;# 
   951  020D                     	;# 
   952  0211                     	;# 
   953  0211                     	;# 
   954  0212                     	;# 
   955  0212                     	;# 
   956  0213                     	;# 
   957  0213                     	;# 
   958  0214                     	;# 
   959  0214                     	;# 
   960  0215                     	;# 
   961  0215                     	;# 
   962  0215                     	;# 
   963  0216                     	;# 
   964  0216                     	;# 
   965  0217                     	;# 
   966  0217                     	;# 
   967  0391                     	;# 
   968  0392                     	;# 
   969  0393                     	;# 
   970  0394                     	;# 
   971  0395                     	;# 
   972  0396                     	;# 
   973  0498                     	;# 
   974  0498                     	;# 
   975  0499                     	;# 
   976  049A                     	;# 
   977  049B                     	;# 
   978  049B                     	;# 
   979  049C                     	;# 
   980  049D                     	;# 
   981  049E                     	;# 
   982  049F                     	;# 
   983  0611                     	;# 
   984  0612                     	;# 
   985  0613                     	;# 
   986  0613                     	;# 
   987  0614                     	;# 
   988  0615                     	;# 
   989  0616                     	;# 
   990  0616                     	;# 
   991  0617                     	;# 
   992  0618                     	;# 
   993  0619                     	;# 
   994  0619                     	;# 
   995  061A                     	;# 
   996  061B                     	;# 
   997  061C                     	;# 
   998  061C                     	;# 
   999  0691                     	;# 
  1000  0692                     	;# 
  1001  0693                     	;# 
  1002  0694                     	;# 
  1003  0695                     	;# 
  1004  0F0F                     	;# 
  1005  0F10                     	;# 
  1006  0F11                     	;# 
  1007  0F12                     	;# 
  1008  0F13                     	;# 
  1009  0F14                     	;# 
  1010  0F15                     	;# 
  1011  0F16                     	;# 
  1012  0F17                     	;# 
  1013  0F18                     	;# 
  1014  0F19                     	;# 
  1015  0F1A                     	;# 
  1016  0F1B                     	;# 
  1017  0F1C                     	;# 
  1018  0F1D                     	;# 
  1019  0F1E                     	;# 
  1020  0F1F                     	;# 
  1021  0F20                     	;# 
  1022  0F21                     	;# 
  1023  0F22                     	;# 
  1024  0F23                     	;# 
  1025  0F24                     	;# 
  1026  0F25                     	;# 
  1027  0F26                     	;# 
  1028  0F27                     	;# 
  1029  0F28                     	;# 
  1030  0F29                     	;# 
  1031  0F2A                     	;# 
  1032  0F2B                     	;# 
  1033  0F2C                     	;# 
  1034  0F2D                     	;# 
  1035  0F2E                     	;# 
  1036  0F2F                     	;# 
  1037  0F8C                     	;# 
  1038  0F8D                     	;# 
  1039  0F91                     	;# 
  1040  0F95                     	;# 
  1041  0F96                     	;# 
  1042  0F97                     	;# 
  1043  0F9C                     	;# 
  1044  0F9D                     	;# 
  1045  0F9E                     	;# 
  1046  0FE3                     	;# 
  1047  0FE4                     	;# 
  1048  0FE5                     	;# 
  1049  0FE6                     	;# 
  1050  0FE7                     	;# 
  1051  0FE8                     	;# 
  1052  0FE9                     	;# 
  1053  0FEA                     	;# 
  1054  0FEB                     	;# 
  1055  0FED                     	;# 
  1056  0FEE                     	;# 
  1057  0FEF                     	;# 
  1058  0000                     	;# 
  1059  0001                     	;# 
  1060  0002                     	;# 
  1061  0003                     	;# 
  1062  0004                     	;# 
  1063  0005                     	;# 
  1064  0006                     	;# 
  1065  0007                     	;# 
  1066  0008                     	;# 
  1067  0009                     	;# 
  1068  000A                     	;# 
  1069  000B                     	;# 
  1070  000C                     	;# 
  1071  000D                     	;# 
  1072  000E                     	;# 
  1073  0011                     	;# 
  1074  0012                     	;# 
  1075  0013                     	;# 
  1076  0015                     	;# 
  1077  0016                     	;# 
  1078  0016                     	;# 
  1079  0017                     	;# 
  1080  0018                     	;# 
  1081  0019                     	;# 
  1082  001A                     	;# 
  1083  001B                     	;# 
  1084  001C                     	;# 
  1085  008C                     	;# 
  1086  008D                     	;# 
  1087  008E                     	;# 
  1088  0091                     	;# 
  1089  0092                     	;# 
  1090  0093                     	;# 
  1091  0095                     	;# 
  1092  0096                     	;# 
  1093  0097                     	;# 
  1094  0099                     	;# 
  1095  009A                     	;# 
  1096  009B                     	;# 
  1097  009B                     	;# 
  1098  009C                     	;# 
  1099  009D                     	;# 
  1100  009E                     	;# 
  1101  009F                     	;# 
  1102  010C                     	;# 
  1103  010D                     	;# 
  1104  010E                     	;# 
  1105  0111                     	;# 
  1106  0112                     	;# 
  1107  0113                     	;# 
  1108  0114                     	;# 
  1109  0115                     	;# 
  1110  0116                     	;# 
  1111  0117                     	;# 
  1112  0118                     	;# 
  1113  0119                     	;# 
  1114  011D                     	;# 
  1115  018C                     	;# 
  1116  018D                     	;# 
  1117  018E                     	;# 
  1118  0191                     	;# 
  1119  0191                     	;# 
  1120  0192                     	;# 
  1121  0193                     	;# 
  1122  0193                     	;# 
  1123  0194                     	;# 
  1124  0195                     	;# 
  1125  0196                     	;# 
  1126  0197                     	;# 
  1127  0199                     	;# 
  1128  019A                     	;# 
  1129  019B                     	;# 
  1130  019B                     	;# 
  1131  019C                     	;# 
  1132  019D                     	;# 
  1133  019E                     	;# 
  1134  019F                     	;# 
  1135  020C                     	;# 
  1136  020D                     	;# 
  1137  0211                     	;# 
  1138  0211                     	;# 
  1139  0212                     	;# 
  1140  0212                     	;# 
  1141  0213                     	;# 
  1142  0213                     	;# 
  1143  0214                     	;# 
  1144  0214                     	;# 
  1145  0215                     	;# 
  1146  0215                     	;# 
  1147  0215                     	;# 
  1148  0216                     	;# 
  1149  0216                     	;# 
  1150  0217                     	;# 
  1151  0217                     	;# 
  1152  0391                     	;# 
  1153  0392                     	;# 
  1154  0393                     	;# 
  1155  0394                     	;# 
  1156  0395                     	;# 
  1157  0396                     	;# 
  1158  0498                     	;# 
  1159  0498                     	;# 
  1160  0499                     	;# 
  1161  049A                     	;# 
  1162  049B                     	;# 
  1163  049B                     	;# 
  1164  049C                     	;# 
  1165  049D                     	;# 
  1166  049E                     	;# 
  1167  049F                     	;# 
  1168  0611                     	;# 
  1169  0612                     	;# 
  1170  0613                     	;# 
  1171  0613                     	;# 
  1172  0614                     	;# 
  1173  0615                     	;# 
  1174  0616                     	;# 
  1175  0616                     	;# 
  1176  0617                     	;# 
  1177  0618                     	;# 
  1178  0619                     	;# 
  1179  0619                     	;# 
  1180  061A                     	;# 
  1181  061B                     	;# 
  1182  061C                     	;# 
  1183  061C                     	;# 
  1184  0691                     	;# 
  1185  0692                     	;# 
  1186  0693                     	;# 
  1187  0694                     	;# 
  1188  0695                     	;# 
  1189  0F0F                     	;# 
  1190  0F10                     	;# 
  1191  0F11                     	;# 
  1192  0F12                     	;# 
  1193  0F13                     	;# 
  1194  0F14                     	;# 
  1195  0F15                     	;# 
  1196  0F16                     	;# 
  1197  0F17                     	;# 
  1198  0F18                     	;# 
  1199  0F19                     	;# 
  1200  0F1A                     	;# 
  1201  0F1B                     	;# 
  1202  0F1C                     	;# 
  1203  0F1D                     	;# 
  1204  0F1E                     	;# 
  1205  0F1F                     	;# 
  1206  0F20                     	;# 
  1207  0F21                     	;# 
  1208  0F22                     	;# 
  1209  0F23                     	;# 
  1210  0F24                     	;# 
  1211  0F25                     	;# 
  1212  0F26                     	;# 
  1213  0F27                     	;# 
  1214  0F28                     	;# 
  1215  0F29                     	;# 
  1216  0F2A                     	;# 
  1217  0F2B                     	;# 
  1218  0F2C                     	;# 
  1219  0F2D                     	;# 
  1220  0F2E                     	;# 
  1221  0F2F                     	;# 
  1222  0F8C                     	;# 
  1223  0F8D                     	;# 
  1224  0F91                     	;# 
  1225  0F95                     	;# 
  1226  0F96                     	;# 
  1227  0F97                     	;# 
  1228  0F9C                     	;# 
  1229  0F9D                     	;# 
  1230  0F9E                     	;# 
  1231  0FE3                     	;# 
  1232  0FE4                     	;# 
  1233  0FE5                     	;# 
  1234  0FE6                     	;# 
  1235  0FE7                     	;# 
  1236  0FE8                     	;# 
  1237  0FE9                     	;# 
  1238  0FEA                     	;# 
  1239  0FEB                     	;# 
  1240  0FED                     	;# 
  1241  0FEE                     	;# 
  1242  0FEF                     	;# 
  1243  0000                     	;# 
  1244  0001                     	;# 
  1245  0002                     	;# 
  1246  0003                     	;# 
  1247  0004                     	;# 
  1248  0005                     	;# 
  1249  0006                     	;# 
  1250  0007                     	;# 
  1251  0008                     	;# 
  1252  0009                     	;# 
  1253  000A                     	;# 
  1254  000B                     	;# 
  1255  000C                     	;# 
  1256  000D                     	;# 
  1257  000E                     	;# 
  1258  0011                     	;# 
  1259  0012                     	;# 
  1260  0013                     	;# 
  1261  0015                     	;# 
  1262  0016                     	;# 
  1263  0016                     	;# 
  1264  0017                     	;# 
  1265  0018                     	;# 
  1266  0019                     	;# 
  1267  001A                     	;# 
  1268  001B                     	;# 
  1269  001C                     	;# 
  1270  008C                     	;# 
  1271  008D                     	;# 
  1272  008E                     	;# 
  1273  0091                     	;# 
  1274  0092                     	;# 
  1275  0093                     	;# 
  1276  0095                     	;# 
  1277  0096                     	;# 
  1278  0097                     	;# 
  1279  0099                     	;# 
  1280  009A                     	;# 
  1281  009B                     	;# 
  1282  009B                     	;# 
  1283  009C                     	;# 
  1284  009D                     	;# 
  1285  009E                     	;# 
  1286  009F                     	;# 
  1287  010C                     	;# 
  1288  010D                     	;# 
  1289  010E                     	;# 
  1290  0111                     	;# 
  1291  0112                     	;# 
  1292  0113                     	;# 
  1293  0114                     	;# 
  1294  0115                     	;# 
  1295  0116                     	;# 
  1296  0117                     	;# 
  1297  0118                     	;# 
  1298  0119                     	;# 
  1299  011D                     	;# 
  1300  018C                     	;# 
  1301  018D                     	;# 
  1302  018E                     	;# 
  1303  0191                     	;# 
  1304  0191                     	;# 
  1305  0192                     	;# 
  1306  0193                     	;# 
  1307  0193                     	;# 
  1308  0194                     	;# 
  1309  0195                     	;# 
  1310  0196                     	;# 
  1311  0197                     	;# 
  1312  0199                     	;# 
  1313  019A                     	;# 
  1314  019B                     	;# 
  1315  019B                     	;# 
  1316  019C                     	;# 
  1317  019D                     	;# 
  1318  019E                     	;# 
  1319  019F                     	;# 
  1320  020C                     	;# 
  1321  020D                     	;# 
  1322  0211                     	;# 
  1323  0211                     	;# 
  1324  0212                     	;# 
  1325  0212                     	;# 
  1326  0213                     	;# 
  1327  0213                     	;# 
  1328  0214                     	;# 
  1329  0214                     	;# 
  1330  0215                     	;# 
  1331  0215                     	;# 
  1332  0215                     	;# 
  1333  0216                     	;# 
  1334  0216                     	;# 
  1335  0217                     	;# 
  1336  0217                     	;# 
  1337  0391                     	;# 
  1338  0392                     	;# 
  1339  0393                     	;# 
  1340  0394                     	;# 
  1341  0395                     	;# 
  1342  0396                     	;# 
  1343  0498                     	;# 
  1344  0498                     	;# 
  1345  0499                     	;# 
  1346  049A                     	;# 
  1347  049B                     	;# 
  1348  049B                     	;# 
  1349  049C                     	;# 
  1350  049D                     	;# 
  1351  049E                     	;# 
  1352  049F                     	;# 
  1353  0611                     	;# 
  1354  0612                     	;# 
  1355  0613                     	;# 
  1356  0613                     	;# 
  1357  0614                     	;# 
  1358  0615                     	;# 
  1359  0616                     	;# 
  1360  0616                     	;# 
  1361  0617                     	;# 
  1362  0618                     	;# 
  1363  0619                     	;# 
  1364  0619                     	;# 
  1365  061A                     	;# 
  1366  061B                     	;# 
  1367  061C                     	;# 
  1368  061C                     	;# 
  1369  0691                     	;# 
  1370  0692                     	;# 
  1371  0693                     	;# 
  1372  0694                     	;# 
  1373  0695                     	;# 
  1374  0F0F                     	;# 
  1375  0F10                     	;# 
  1376  0F11                     	;# 
  1377  0F12                     	;# 
  1378  0F13                     	;# 
  1379  0F14                     	;# 
  1380  0F15                     	;# 
  1381  0F16                     	;# 
  1382  0F17                     	;# 
  1383  0F18                     	;# 
  1384  0F19                     	;# 
  1385  0F1A                     	;# 
  1386  0F1B                     	;# 
  1387  0F1C                     	;# 
  1388  0F1D                     	;# 
  1389  0F1E                     	;# 
  1390  0F1F                     	;# 
  1391  0F20                     	;# 
  1392  0F21                     	;# 
  1393  0F22                     	;# 
  1394  0F23                     	;# 
  1395  0F24                     	;# 
  1396  0F25                     	;# 
  1397  0F26                     	;# 
  1398  0F27                     	;# 
  1399  0F28                     	;# 
  1400  0F29                     	;# 
  1401  0F2A                     	;# 
  1402  0F2B                     	;# 
  1403  0F2C                     	;# 
  1404  0F2D                     	;# 
  1405  0F2E                     	;# 
  1406  0F2F                     	;# 
  1407  0F8C                     	;# 
  1408  0F8D                     	;# 
  1409  0F91                     	;# 
  1410  0F95                     	;# 
  1411  0F96                     	;# 
  1412  0F97                     	;# 
  1413  0F9C                     	;# 
  1414  0F9D                     	;# 
  1415  0F9E                     	;# 
  1416  0FE3                     	;# 
  1417  0FE4                     	;# 
  1418  0FE5                     	;# 
  1419  0FE6                     	;# 
  1420  0FE7                     	;# 
  1421  0FE8                     	;# 
  1422  0FE9                     	;# 
  1423  0FEA                     	;# 
  1424  0FEB                     	;# 
  1425  0FED                     	;# 
  1426  0FEE                     	;# 
  1427  0FEF                     	;# 
  1428  0000                     	;# 
  1429  0001                     	;# 
  1430  0002                     	;# 
  1431  0003                     	;# 
  1432  0004                     	;# 
  1433  0005                     	;# 
  1434  0006                     	;# 
  1435  0007                     	;# 
  1436  0008                     	;# 
  1437  0009                     	;# 
  1438  000A                     	;# 
  1439  000B                     	;# 
  1440  000C                     	;# 
  1441  000D                     	;# 
  1442  000E                     	;# 
  1443  0011                     	;# 
  1444  0012                     	;# 
  1445  0013                     	;# 
  1446  0015                     	;# 
  1447  0016                     	;# 
  1448  0016                     	;# 
  1449  0017                     	;# 
  1450  0018                     	;# 
  1451  0019                     	;# 
  1452  001A                     	;# 
  1453  001B                     	;# 
  1454  001C                     	;# 
  1455  008C                     	;# 
  1456  008D                     	;# 
  1457  008E                     	;# 
  1458  0091                     	;# 
  1459  0092                     	;# 
  1460  0093                     	;# 
  1461  0095                     	;# 
  1462  0096                     	;# 
  1463  0097                     	;# 
  1464  0099                     	;# 
  1465  009A                     	;# 
  1466  009B                     	;# 
  1467  009B                     	;# 
  1468  009C                     	;# 
  1469  009D                     	;# 
  1470  009E                     	;# 
  1471  009F                     	;# 
  1472  010C                     	;# 
  1473  010D                     	;# 
  1474  010E                     	;# 
  1475  0111                     	;# 
  1476  0112                     	;# 
  1477  0113                     	;# 
  1478  0114                     	;# 
  1479  0115                     	;# 
  1480  0116                     	;# 
  1481  0117                     	;# 
  1482  0118                     	;# 
  1483  0119                     	;# 
  1484  011D                     	;# 
  1485  018C                     	;# 
  1486  018D                     	;# 
  1487  018E                     	;# 
  1488  0191                     	;# 
  1489  0191                     	;# 
  1490  0192                     	;# 
  1491  0193                     	;# 
  1492  0193                     	;# 
  1493  0194                     	;# 
  1494  0195                     	;# 
  1495  0196                     	;# 
  1496  0197                     	;# 
  1497  0199                     	;# 
  1498  019A                     	;# 
  1499  019B                     	;# 
  1500  019B                     	;# 
  1501  019C                     	;# 
  1502  019D                     	;# 
  1503  019E                     	;# 
  1504  019F                     	;# 
  1505  020C                     	;# 
  1506  020D                     	;# 
  1507  0211                     	;# 
  1508  0211                     	;# 
  1509  0212                     	;# 
  1510  0212                     	;# 
  1511  0213                     	;# 
  1512  0213                     	;# 
  1513  0214                     	;# 
  1514  0214                     	;# 
  1515  0215                     	;# 
  1516  0215                     	;# 
  1517  0215                     	;# 
  1518  0216                     	;# 
  1519  0216                     	;# 
  1520  0217                     	;# 
  1521  0217                     	;# 
  1522  0391                     	;# 
  1523  0392                     	;# 
  1524  0393                     	;# 
  1525  0394                     	;# 
  1526  0395                     	;# 
  1527  0396                     	;# 
  1528  0498                     	;# 
  1529  0498                     	;# 
  1530  0499                     	;# 
  1531  049A                     	;# 
  1532  049B                     	;# 
  1533  049B                     	;# 
  1534  049C                     	;# 
  1535  049D                     	;# 
  1536  049E                     	;# 
  1537  049F                     	;# 
  1538  0611                     	;# 
  1539  0612                     	;# 
  1540  0613                     	;# 
  1541  0613                     	;# 
  1542  0614                     	;# 
  1543  0615                     	;# 
  1544  0616                     	;# 
  1545  0616                     	;# 
  1546  0617                     	;# 
  1547  0618                     	;# 
  1548  0619                     	;# 
  1549  0619                     	;# 
  1550  061A                     	;# 
  1551  061B                     	;# 
  1552  061C                     	;# 
  1553  061C                     	;# 
  1554  0691                     	;# 
  1555  0692                     	;# 
  1556  0693                     	;# 
  1557  0694                     	;# 
  1558  0695                     	;# 
  1559  0F0F                     	;# 
  1560  0F10                     	;# 
  1561  0F11                     	;# 
  1562  0F12                     	;# 
  1563  0F13                     	;# 
  1564  0F14                     	;# 
  1565  0F15                     	;# 
  1566  0F16                     	;# 
  1567  0F17                     	;# 
  1568  0F18                     	;# 
  1569  0F19                     	;# 
  1570  0F1A                     	;# 
  1571  0F1B                     	;# 
  1572  0F1C                     	;# 
  1573  0F1D                     	;# 
  1574  0F1E                     	;# 
  1575  0F1F                     	;# 
  1576  0F20                     	;# 
  1577  0F21                     	;# 
  1578  0F22                     	;# 
  1579  0F23                     	;# 
  1580  0F24                     	;# 
  1581  0F25                     	;# 
  1582  0F26                     	;# 
  1583  0F27                     	;# 
  1584  0F28                     	;# 
  1585  0F29                     	;# 
  1586  0F2A                     	;# 
  1587  0F2B                     	;# 
  1588  0F2C                     	;# 
  1589  0F2D                     	;# 
  1590  0F2E                     	;# 
  1591  0F2F                     	;# 
  1592  0F8C                     	;# 
  1593  0F8D                     	;# 
  1594  0F91                     	;# 
  1595  0F95                     	;# 
  1596  0F96                     	;# 
  1597  0F97                     	;# 
  1598  0F9C                     	;# 
  1599  0F9D                     	;# 
  1600  0F9E                     	;# 
  1601  0FE3                     	;# 
  1602  0FE4                     	;# 
  1603  0FE5                     	;# 
  1604  0FE6                     	;# 
  1605  0FE7                     	;# 
  1606  0FE8                     	;# 
  1607  0FE9                     	;# 
  1608  0FEA                     	;# 
  1609  0FEB                     	;# 
  1610  0FED                     	;# 
  1611  0FEE                     	;# 
  1612  0FEF                     	;# 
  1613  0000                     	;# 
  1614  0001                     	;# 
  1615  0002                     	;# 
  1616  0003                     	;# 
  1617  0004                     	;# 
  1618  0005                     	;# 
  1619  0006                     	;# 
  1620  0007                     	;# 
  1621  0008                     	;# 
  1622  0009                     	;# 
  1623  000A                     	;# 
  1624  000B                     	;# 
  1625  000C                     	;# 
  1626  000D                     	;# 
  1627  000E                     	;# 
  1628  0011                     	;# 
  1629  0012                     	;# 
  1630  0013                     	;# 
  1631  0015                     	;# 
  1632  0016                     	;# 
  1633  0016                     	;# 
  1634  0017                     	;# 
  1635  0018                     	;# 
  1636  0019                     	;# 
  1637  001A                     	;# 
  1638  001B                     	;# 
  1639  001C                     	;# 
  1640  008C                     	;# 
  1641  008D                     	;# 
  1642  008E                     	;# 
  1643  0091                     	;# 
  1644  0092                     	;# 
  1645  0093                     	;# 
  1646  0095                     	;# 
  1647  0096                     	;# 
  1648  0097                     	;# 
  1649  0099                     	;# 
  1650  009A                     	;# 
  1651  009B                     	;# 
  1652  009B                     	;# 
  1653  009C                     	;# 
  1654  009D                     	;# 
  1655  009E                     	;# 
  1656  009F                     	;# 
  1657  010C                     	;# 
  1658  010D                     	;# 
  1659  010E                     	;# 
  1660  0111                     	;# 
  1661  0112                     	;# 
  1662  0113                     	;# 
  1663  0114                     	;# 
  1664  0115                     	;# 
  1665  0116                     	;# 
  1666  0117                     	;# 
  1667  0118                     	;# 
  1668  0119                     	;# 
  1669  011D                     	;# 
  1670  018C                     	;# 
  1671  018D                     	;# 
  1672  018E                     	;# 
  1673  0191                     	;# 
  1674  0191                     	;# 
  1675  0192                     	;# 
  1676  0193                     	;# 
  1677  0193                     	;# 
  1678  0194                     	;# 
  1679  0195                     	;# 
  1680  0196                     	;# 
  1681  0197                     	;# 
  1682  0199                     	;# 
  1683  019A                     	;# 
  1684  019B                     	;# 
  1685  019B                     	;# 
  1686  019C                     	;# 
  1687  019D                     	;# 
  1688  019E                     	;# 
  1689  019F                     	;# 
  1690  020C                     	;# 
  1691  020D                     	;# 
  1692  0211                     	;# 
  1693  0211                     	;# 
  1694  0212                     	;# 
  1695  0212                     	;# 
  1696  0213                     	;# 
  1697  0213                     	;# 
  1698  0214                     	;# 
  1699  0214                     	;# 
  1700  0215                     	;# 
  1701  0215                     	;# 
  1702  0215                     	;# 
  1703  0216                     	;# 
  1704  0216                     	;# 
  1705  0217                     	;# 
  1706  0217                     	;# 
  1707  0391                     	;# 
  1708  0392                     	;# 
  1709  0393                     	;# 
  1710  0394                     	;# 
  1711  0395                     	;# 
  1712  0396                     	;# 
  1713  0498                     	;# 
  1714  0498                     	;# 
  1715  0499                     	;# 
  1716  049A                     	;# 
  1717  049B                     	;# 
  1718  049B                     	;# 
  1719  049C                     	;# 
  1720  049D                     	;# 
  1721  049E                     	;# 
  1722  049F                     	;# 
  1723  0611                     	;# 
  1724  0612                     	;# 
  1725  0613                     	;# 
  1726  0613                     	;# 
  1727  0614                     	;# 
  1728  0615                     	;# 
  1729  0616                     	;# 
  1730  0616                     	;# 
  1731  0617                     	;# 
  1732  0618                     	;# 
  1733  0619                     	;# 
  1734  0619                     	;# 
  1735  061A                     	;# 
  1736  061B                     	;# 
  1737  061C                     	;# 
  1738  061C                     	;# 
  1739  0691                     	;# 
  1740  0692                     	;# 
  1741  0693                     	;# 
  1742  0694                     	;# 
  1743  0695                     	;# 
  1744  0F0F                     	;# 
  1745  0F10                     	;# 
  1746  0F11                     	;# 
  1747  0F12                     	;# 
  1748  0F13                     	;# 
  1749  0F14                     	;# 
  1750  0F15                     	;# 
  1751  0F16                     	;# 
  1752  0F17                     	;# 
  1753  0F18                     	;# 
  1754  0F19                     	;# 
  1755  0F1A                     	;# 
  1756  0F1B                     	;# 
  1757  0F1C                     	;# 
  1758  0F1D                     	;# 
  1759  0F1E                     	;# 
  1760  0F1F                     	;# 
  1761  0F20                     	;# 
  1762  0F21                     	;# 
  1763  0F22                     	;# 
  1764  0F23                     	;# 
  1765  0F24                     	;# 
  1766  0F25                     	;# 
  1767  0F26                     	;# 
  1768  0F27                     	;# 
  1769  0F28                     	;# 
  1770  0F29                     	;# 
  1771  0F2A                     	;# 
  1772  0F2B                     	;# 
  1773  0F2C                     	;# 
  1774  0F2D                     	;# 
  1775  0F2E                     	;# 
  1776  0F2F                     	;# 
  1777  0F8C                     	;# 
  1778  0F8D                     	;# 
  1779  0F91                     	;# 
  1780  0F95                     	;# 
  1781  0F96                     	;# 
  1782  0F97                     	;# 
  1783  0F9C                     	;# 
  1784  0F9D                     	;# 
  1785  0F9E                     	;# 
  1786  0FE3                     	;# 
  1787  0FE4                     	;# 
  1788  0FE5                     	;# 
  1789  0FE6                     	;# 
  1790  0FE7                     	;# 
  1791  0FE8                     	;# 
  1792  0FE9                     	;# 
  1793  0FEA                     	;# 
  1794  0FEB                     	;# 
  1795  0FED                     	;# 
  1796  0FEE                     	;# 
  1797  0FEF                     	;# 
  1798  0000                     	;# 
  1799  0001                     	;# 
  1800  0002                     	;# 
  1801  0003                     	;# 
  1802  0004                     	;# 
  1803  0005                     	;# 
  1804  0006                     	;# 
  1805  0007                     	;# 
  1806  0008                     	;# 
  1807  0009                     	;# 
  1808  000A                     	;# 
  1809  000B                     	;# 
  1810  000C                     	;# 
  1811  000D                     	;# 
  1812  000E                     	;# 
  1813  0011                     	;# 
  1814  0012                     	;# 
  1815  0013                     	;# 
  1816  0015                     	;# 
  1817  0016                     	;# 
  1818  0016                     	;# 
  1819  0017                     	;# 
  1820  0018                     	;# 
  1821  0019                     	;# 
  1822  001A                     	;# 
  1823  001B                     	;# 
  1824  001C                     	;# 
  1825  008C                     	;# 
  1826  008D                     	;# 
  1827  008E                     	;# 
  1828  0091                     	;# 
  1829  0092                     	;# 
  1830  0093                     	;# 
  1831  0095                     	;# 
  1832  0096                     	;# 
  1833  0097                     	;# 
  1834  0099                     	;# 
  1835  009A                     	;# 
  1836  009B                     	;# 
  1837  009B                     	;# 
  1838  009C                     	;# 
  1839  009D                     	;# 
  1840  009E                     	;# 
  1841  009F                     	;# 
  1842  010C                     	;# 
  1843  010D                     	;# 
  1844  010E                     	;# 
  1845  0111                     	;# 
  1846  0112                     	;# 
  1847  0113                     	;# 
  1848  0114                     	;# 
  1849  0115                     	;# 
  1850  0116                     	;# 
  1851  0117                     	;# 
  1852  0118                     	;# 
  1853  0119                     	;# 
  1854  011D                     	;# 
  1855  018C                     	;# 
  1856  018D                     	;# 
  1857  018E                     	;# 
  1858  0191                     	;# 
  1859  0191                     	;# 
  1860  0192                     	;# 
  1861  0193                     	;# 
  1862  0193                     	;# 
  1863  0194                     	;# 
  1864  0195                     	;# 
  1865  0196                     	;# 
  1866  0197                     	;# 
  1867  0199                     	;# 
  1868  019A                     	;# 
  1869  019B                     	;# 
  1870  019B                     	;# 
  1871  019C                     	;# 
  1872  019D                     	;# 
  1873  019E                     	;# 
  1874  019F                     	;# 
  1875  020C                     	;# 
  1876  020D                     	;# 
  1877  0211                     	;# 
  1878  0211                     	;# 
  1879  0212                     	;# 
  1880  0212                     	;# 
  1881  0213                     	;# 
  1882  0213                     	;# 
  1883  0214                     	;# 
  1884  0214                     	;# 
  1885  0215                     	;# 
  1886  0215                     	;# 
  1887  0215                     	;# 
  1888  0216                     	;# 
  1889  0216                     	;# 
  1890  0217                     	;# 
  1891  0217                     	;# 
  1892  0391                     	;# 
  1893  0392                     	;# 
  1894  0393                     	;# 
  1895  0394                     	;# 
  1896  0395                     	;# 
  1897  0396                     	;# 
  1898  0498                     	;# 
  1899  0498                     	;# 
  1900  0499                     	;# 
  1901  049A                     	;# 
  1902  049B                     	;# 
  1903  049B                     	;# 
  1904  049C                     	;# 
  1905  049D                     	;# 
  1906  049E                     	;# 
  1907  049F                     	;# 
  1908  0611                     	;# 
  1909  0612                     	;# 
  1910  0613                     	;# 
  1911  0613                     	;# 
  1912  0614                     	;# 
  1913  0615                     	;# 
  1914  0616                     	;# 
  1915  0616                     	;# 
  1916  0617                     	;# 
  1917  0618                     	;# 
  1918  0619                     	;# 
  1919  0619                     	;# 
  1920  061A                     	;# 
  1921  061B                     	;# 
  1922  061C                     	;# 
  1923  061C                     	;# 
  1924  0691                     	;# 
  1925  0692                     	;# 
  1926  0693                     	;# 
  1927  0694                     	;# 
  1928  0695                     	;# 
  1929  0F0F                     	;# 
  1930  0F10                     	;# 
  1931  0F11                     	;# 
  1932  0F12                     	;# 
  1933  0F13                     	;# 
  1934  0F14                     	;# 
  1935  0F15                     	;# 
  1936  0F16                     	;# 
  1937  0F17                     	;# 
  1938  0F18                     	;# 
  1939  0F19                     	;# 
  1940  0F1A                     	;# 
  1941  0F1B                     	;# 
  1942  0F1C                     	;# 
  1943  0F1D                     	;# 
  1944  0F1E                     	;# 
  1945  0F1F                     	;# 
  1946  0F20                     	;# 
  1947  0F21                     	;# 
  1948  0F22                     	;# 
  1949  0F23                     	;# 
  1950  0F24                     	;# 
  1951  0F25                     	;# 
  1952  0F26                     	;# 
  1953  0F27                     	;# 
  1954  0F28                     	;# 
  1955  0F29                     	;# 
  1956  0F2A                     	;# 
  1957  0F2B                     	;# 
  1958  0F2C                     	;# 
  1959  0F2D                     	;# 
  1960  0F2E                     	;# 
  1961  0F2F                     	;# 
  1962  0F8C                     	;# 
  1963  0F8D                     	;# 
  1964  0F91                     	;# 
  1965  0F95                     	;# 
  1966  0F96                     	;# 
  1967  0F97                     	;# 
  1968  0F9C                     	;# 
  1969  0F9D                     	;# 
  1970  0F9E                     	;# 
  1971  0FE3                     	;# 
  1972  0FE4                     	;# 
  1973  0FE5                     	;# 
  1974  0FE6                     	;# 
  1975  0FE7                     	;# 
  1976  0FE8                     	;# 
  1977  0FE9                     	;# 
  1978  0FEA                     	;# 
  1979  0FEB                     	;# 
  1980  0FED                     	;# 
  1981  0FEE                     	;# 
  1982  0FEF                     	;# 
  1983  0000                     	;# 
  1984  0001                     	;# 
  1985  0002                     	;# 
  1986  0003                     	;# 
  1987  0004                     	;# 
  1988  0005                     	;# 
  1989  0006                     	;# 
  1990  0007                     	;# 
  1991  0008                     	;# 
  1992  0009                     	;# 
  1993  000A                     	;# 
  1994  000B                     	;# 
  1995  000C                     	;# 
  1996  000D                     	;# 
  1997  000E                     	;# 
  1998  0011                     	;# 
  1999  0012                     	;# 
  2000  0013                     	;# 
  2001  0015                     	;# 
  2002  0016                     	;# 
  2003  0016                     	;# 
  2004  0017                     	;# 
  2005  0018                     	;# 
  2006  0019                     	;# 
  2007  001A                     	;# 
  2008  001B                     	;# 
  2009  001C                     	;# 
  2010  008C                     	;# 
  2011  008D                     	;# 
  2012  008E                     	;# 
  2013  0091                     	;# 
  2014  0092                     	;# 
  2015  0093                     	;# 
  2016  0095                     	;# 
  2017  0096                     	;# 
  2018  0097                     	;# 
  2019  0099                     	;# 
  2020  009A                     	;# 
  2021  009B                     	;# 
  2022  009B                     	;# 
  2023  009C                     	;# 
  2024  009D                     	;# 
  2025  009E                     	;# 
  2026  009F                     	;# 
  2027  010C                     	;# 
  2028  010D                     	;# 
  2029  010E                     	;# 
  2030  0111                     	;# 
  2031  0112                     	;# 
  2032  0113                     	;# 
  2033  0114                     	;# 
  2034  0115                     	;# 
  2035  0116                     	;# 
  2036  0117                     	;# 
  2037  0118                     	;# 
  2038  0119                     	;# 
  2039  011D                     	;# 
  2040  018C                     	;# 
  2041  018D                     	;# 
  2042  018E                     	;# 
  2043  0191                     	;# 
  2044  0191                     	;# 
  2045  0192                     	;# 
  2046  0193                     	;# 
  2047  0193                     	;# 
  2048  0194                     	;# 
  2049  0195                     	;# 
  2050  0196                     	;# 
  2051  0197                     	;# 
  2052  0199                     	;# 
  2053  019A                     	;# 
  2054  019B                     	;# 
  2055  019B                     	;# 
  2056  019C                     	;# 
  2057  019D                     	;# 
  2058  019E                     	;# 
  2059  019F                     	;# 
  2060  020C                     	;# 
  2061  020D                     	;# 
  2062  0211                     	;# 
  2063  0211                     	;# 
  2064  0212                     	;# 
  2065  0212                     	;# 
  2066  0213                     	;# 
  2067  0213                     	;# 
  2068  0214                     	;# 
  2069  0214                     	;# 
  2070  0215                     	;# 
  2071  0215                     	;# 
  2072  0215                     	;# 
  2073  0216                     	;# 
  2074  0216                     	;# 
  2075  0217                     	;# 
  2076  0217                     	;# 
  2077  0391                     	;# 
  2078  0392                     	;# 
  2079  0393                     	;# 
  2080  0394                     	;# 
  2081  0395                     	;# 
  2082  0396                     	;# 
  2083  0498                     	;# 
  2084  0498                     	;# 
  2085  0499                     	;# 
  2086  049A                     	;# 
  2087  049B                     	;# 
  2088  049B                     	;# 
  2089  049C                     	;# 
  2090  049D                     	;# 
  2091  049E                     	;# 
  2092  049F                     	;# 
  2093  0611                     	;# 
  2094  0612                     	;# 
  2095  0613                     	;# 
  2096  0613                     	;# 
  2097  0614                     	;# 
  2098  0615                     	;# 
  2099  0616                     	;# 
  2100  0616                     	;# 
  2101  0617                     	;# 
  2102  0618                     	;# 
  2103  0619                     	;# 
  2104  0619                     	;# 
  2105  061A                     	;# 
  2106  061B                     	;# 
  2107  061C                     	;# 
  2108  061C                     	;# 
  2109  0691                     	;# 
  2110  0692                     	;# 
  2111  0693                     	;# 
  2112  0694                     	;# 
  2113  0695                     	;# 
  2114  0F0F                     	;# 
  2115  0F10                     	;# 
  2116  0F11                     	;# 
  2117  0F12                     	;# 
  2118  0F13                     	;# 
  2119  0F14                     	;# 
  2120  0F15                     	;# 
  2121  0F16                     	;# 
  2122  0F17                     	;# 
  2123  0F18                     	;# 
  2124  0F19                     	;# 
  2125  0F1A                     	;# 
  2126  0F1B                     	;# 
  2127  0F1C                     	;# 
  2128  0F1D                     	;# 
  2129  0F1E                     	;# 
  2130  0F1F                     	;# 
  2131  0F20                     	;# 
  2132  0F21                     	;# 
  2133  0F22                     	;# 
  2134  0F23                     	;# 
  2135  0F24                     	;# 
  2136  0F25                     	;# 
  2137  0F26                     	;# 
  2138  0F27                     	;# 
  2139  0F28                     	;# 
  2140  0F29                     	;# 
  2141  0F2A                     	;# 
  2142  0F2B                     	;# 
  2143  0F2C                     	;# 
  2144  0F2D                     	;# 
  2145  0F2E                     	;# 
  2146  0F2F                     	;# 
  2147  0F8C                     	;# 
  2148  0F8D                     	;# 
  2149  0F91                     	;# 
  2150  0F95                     	;# 
  2151  0F96                     	;# 
  2152  0F97                     	;# 
  2153  0F9C                     	;# 
  2154  0F9D                     	;# 
  2155  0F9E                     	;# 
  2156  0FE3                     	;# 
  2157  0FE4                     	;# 
  2158  0FE5                     	;# 
  2159  0FE6                     	;# 
  2160  0FE7                     	;# 
  2161  0FE8                     	;# 
  2162  0FE9                     	;# 
  2163  0FEA                     	;# 
  2164  0FEB                     	;# 
  2165  0FED                     	;# 
  2166  0FEE                     	;# 
  2167  0FEF                     	;# 
  2168  0000                     	;# 
  2169  0001                     	;# 
  2170  0002                     	;# 
  2171  0003                     	;# 
  2172  0004                     	;# 
  2173  0005                     	;# 
  2174  0006                     	;# 
  2175  0007                     	;# 
  2176  0008                     	;# 
  2177  0009                     	;# 
  2178  000A                     	;# 
  2179  000B                     	;# 
  2180  000C                     	;# 
  2181  000D                     	;# 
  2182  000E                     	;# 
  2183  0011                     	;# 
  2184  0012                     	;# 
  2185  0013                     	;# 
  2186  0015                     	;# 
  2187  0016                     	;# 
  2188  0016                     	;# 
  2189  0017                     	;# 
  2190  0018                     	;# 
  2191  0019                     	;# 
  2192  001A                     	;# 
  2193  001B                     	;# 
  2194  001C                     	;# 
  2195  008C                     	;# 
  2196  008D                     	;# 
  2197  008E                     	;# 
  2198  0091                     	;# 
  2199  0092                     	;# 
  2200  0093                     	;# 
  2201  0095                     	;# 
  2202  0096                     	;# 
  2203  0097                     	;# 
  2204  0099                     	;# 
  2205  009A                     	;# 
  2206  009B                     	;# 
  2207  009B                     	;# 
  2208  009C                     	;# 
  2209  009D                     	;# 
  2210  009E                     	;# 
  2211  009F                     	;# 
  2212  010C                     	;# 
  2213  010D                     	;# 
  2214  010E                     	;# 
  2215  0111                     	;# 
  2216  0112                     	;# 
  2217  0113                     	;# 
  2218  0114                     	;# 
  2219  0115                     	;# 
  2220  0116                     	;# 
  2221  0117                     	;# 
  2222  0118                     	;# 
  2223  0119                     	;# 
  2224  011D                     	;# 
  2225  018C                     	;# 
  2226  018D                     	;# 
  2227  018E                     	;# 
  2228  0191                     	;# 
  2229  0191                     	;# 
  2230  0192                     	;# 
  2231  0193                     	;# 
  2232  0193                     	;# 
  2233  0194                     	;# 
  2234  0195                     	;# 
  2235  0196                     	;# 
  2236  0197                     	;# 
  2237  0199                     	;# 
  2238  019A                     	;# 
  2239  019B                     	;# 
  2240  019B                     	;# 
  2241  019C                     	;# 
  2242  019D                     	;# 
  2243  019E                     	;# 
  2244  019F                     	;# 
  2245  020C                     	;# 
  2246  020D                     	;# 
  2247  0211                     	;# 
  2248  0211                     	;# 
  2249  0212                     	;# 
  2250  0212                     	;# 
  2251  0213                     	;# 
  2252  0213                     	;# 
  2253  0214                     	;# 
  2254  0214                     	;# 
  2255  0215                     	;# 
  2256  0215                     	;# 
  2257  0215                     	;# 
  2258  0216                     	;# 
  2259  0216                     	;# 
  2260  0217                     	;# 
  2261  0217                     	;# 
  2262  0391                     	;# 
  2263  0392                     	;# 
  2264  0393                     	;# 
  2265  0394                     	;# 
  2266  0395                     	;# 
  2267  0396                     	;# 
  2268  0498                     	;# 
  2269  0498                     	;# 
  2270  0499                     	;# 
  2271  049A                     	;# 
  2272  049B                     	;# 
  2273  049B                     	;# 
  2274  049C                     	;# 
  2275  049D                     	;# 
  2276  049E                     	;# 
  2277  049F                     	;# 
  2278  0611                     	;# 
  2279  0612                     	;# 
  2280  0613                     	;# 
  2281  0613                     	;# 
  2282  0614                     	;# 
  2283  0615                     	;# 
  2284  0616                     	;# 
  2285  0616                     	;# 
  2286  0617                     	;# 
  2287  0618                     	;# 
  2288  0619                     	;# 
  2289  0619                     	;# 
  2290  061A                     	;# 
  2291  061B                     	;# 
  2292  061C                     	;# 
  2293  061C                     	;# 
  2294  0691                     	;# 
  2295  0692                     	;# 
  2296  0693                     	;# 
  2297  0694                     	;# 
  2298  0695                     	;# 
  2299  0F0F                     	;# 
  2300  0F10                     	;# 
  2301  0F11                     	;# 
  2302  0F12                     	;# 
  2303  0F13                     	;# 
  2304  0F14                     	;# 
  2305  0F15                     	;# 
  2306  0F16                     	;# 
  2307  0F17                     	;# 
  2308  0F18                     	;# 
  2309  0F19                     	;# 
  2310  0F1A                     	;# 
  2311  0F1B                     	;# 
  2312  0F1C                     	;# 
  2313  0F1D                     	;# 
  2314  0F1E                     	;# 
  2315  0F1F                     	;# 
  2316  0F20                     	;# 
  2317  0F21                     	;# 
  2318  0F22                     	;# 
  2319  0F23                     	;# 
  2320  0F24                     	;# 
  2321  0F25                     	;# 
  2322  0F26                     	;# 
  2323  0F27                     	;# 
  2324  0F28                     	;# 
  2325  0F29                     	;# 
  2326  0F2A                     	;# 
  2327  0F2B                     	;# 
  2328  0F2C                     	;# 
  2329  0F2D                     	;# 
  2330  0F2E                     	;# 
  2331  0F2F                     	;# 
  2332  0F8C                     	;# 
  2333  0F8D                     	;# 
  2334  0F91                     	;# 
  2335  0F95                     	;# 
  2336  0F96                     	;# 
  2337  0F97                     	;# 
  2338  0F9C                     	;# 
  2339  0F9D                     	;# 
  2340  0F9E                     	;# 
  2341  0FE3                     	;# 
  2342  0FE4                     	;# 
  2343  0FE5                     	;# 
  2344  0FE6                     	;# 
  2345  0FE7                     	;# 
  2346  0FE8                     	;# 
  2347  0FE9                     	;# 
  2348  0FEA                     	;# 
  2349  0FEB                     	;# 
  2350  0FED                     	;# 
  2351  0FEE                     	;# 
  2352  0FEF                     	;# 
  2353  0000                     	;# 
  2354  0001                     	;# 
  2355  0002                     	;# 
  2356  0003                     	;# 
  2357  0004                     	;# 
  2358  0005                     	;# 
  2359  0006                     	;# 
  2360  0007                     	;# 
  2361  0008                     	;# 
  2362  0009                     	;# 
  2363  000A                     	;# 
  2364  000B                     	;# 
  2365  000C                     	;# 
  2366  000D                     	;# 
  2367  000E                     	;# 
  2368  0011                     	;# 
  2369  0012                     	;# 
  2370  0013                     	;# 
  2371  0015                     	;# 
  2372  0016                     	;# 
  2373  0016                     	;# 
  2374  0017                     	;# 
  2375  0018                     	;# 
  2376  0019                     	;# 
  2377  001A                     	;# 
  2378  001B                     	;# 
  2379  001C                     	;# 
  2380  008C                     	;# 
  2381  008D                     	;# 
  2382  008E                     	;# 
  2383  0091                     	;# 
  2384  0092                     	;# 
  2385  0093                     	;# 
  2386  0095                     	;# 
  2387  0096                     	;# 
  2388  0097                     	;# 
  2389  0099                     	;# 
  2390  009A                     	;# 
  2391  009B                     	;# 
  2392  009B                     	;# 
  2393  009C                     	;# 
  2394  009D                     	;# 
  2395  009E                     	;# 
  2396  009F                     	;# 
  2397  010C                     	;# 
  2398  010D                     	;# 
  2399  010E                     	;# 
  2400  0111                     	;# 
  2401  0112                     	;# 
  2402  0113                     	;# 
  2403  0114                     	;# 
  2404  0115                     	;# 
  2405  0116                     	;# 
  2406  0117                     	;# 
  2407  0118                     	;# 
  2408  0119                     	;# 
  2409  011D                     	;# 
  2410  018C                     	;# 
  2411  018D                     	;# 
  2412  018E                     	;# 
  2413  0191                     	;# 
  2414  0191                     	;# 
  2415  0192                     	;# 
  2416  0193                     	;# 
  2417  0193                     	;# 
  2418  0194                     	;# 
  2419  0195                     	;# 
  2420  0196                     	;# 
  2421  0197                     	;# 
  2422  0199                     	;# 
  2423  019A                     	;# 
  2424  019B                     	;# 
  2425  019B                     	;# 
  2426  019C                     	;# 
  2427  019D                     	;# 
  2428  019E                     	;# 
  2429  019F                     	;# 
  2430  020C                     	;# 
  2431  020D                     	;# 
  2432  0211                     	;# 
  2433  0211                     	;# 
  2434  0212                     	;# 
  2435  0212                     	;# 
  2436  0213                     	;# 
  2437  0213                     	;# 
  2438  0214                     	;# 
  2439  0214                     	;# 
  2440  0215                     	;# 
  2441  0215                     	;# 
  2442  0215                     	;# 
  2443  0216                     	;# 
  2444  0216                     	;# 
  2445  0217                     	;# 
  2446  0217                     	;# 
  2447  0391                     	;# 
  2448  0392                     	;# 
  2449  0393                     	;# 
  2450  0394                     	;# 
  2451  0395                     	;# 
  2452  0396                     	;# 
  2453  0498                     	;# 
  2454  0498                     	;# 
  2455  0499                     	;# 
  2456  049A                     	;# 
  2457  049B                     	;# 
  2458  049B                     	;# 
  2459  049C                     	;# 
  2460  049D                     	;# 
  2461  049E                     	;# 
  2462  049F                     	;# 
  2463  0611                     	;# 
  2464  0612                     	;# 
  2465  0613                     	;# 
  2466  0613                     	;# 
  2467  0614                     	;# 
  2468  0615                     	;# 
  2469  0616                     	;# 
  2470  0616                     	;# 
  2471  0617                     	;# 
  2472  0618                     	;# 
  2473  0619                     	;# 
  2474  0619                     	;# 
  2475  061A                     	;# 
  2476  061B                     	;# 
  2477  061C                     	;# 
  2478  061C                     	;# 
  2479  0691                     	;# 
  2480  0692                     	;# 
  2481  0693                     	;# 
  2482  0694                     	;# 
  2483  0695                     	;# 
  2484  0F0F                     	;# 
  2485  0F10                     	;# 
  2486  0F11                     	;# 
  2487  0F12                     	;# 
  2488  0F13                     	;# 
  2489  0F14                     	;# 
  2490  0F15                     	;# 
  2491  0F16                     	;# 
  2492  0F17                     	;# 
  2493  0F18                     	;# 
  2494  0F19                     	;# 
  2495  0F1A                     	;# 
  2496  0F1B                     	;# 
  2497  0F1C                     	;# 
  2498  0F1D                     	;# 
  2499  0F1E                     	;# 
  2500  0F1F                     	;# 
  2501  0F20                     	;# 
  2502  0F21                     	;# 
  2503  0F22                     	;# 
  2504  0F23                     	;# 
  2505  0F24                     	;# 
  2506  0F25                     	;# 
  2507  0F26                     	;# 
  2508  0F27                     	;# 
  2509  0F28                     	;# 
  2510  0F29                     	;# 
  2511  0F2A                     	;# 
  2512  0F2B                     	;# 
  2513  0F2C                     	;# 
  2514  0F2D                     	;# 
  2515  0F2E                     	;# 
  2516  0F2F                     	;# 
  2517  0F8C                     	;# 
  2518  0F8D                     	;# 
  2519  0F91                     	;# 
  2520  0F95                     	;# 
  2521  0F96                     	;# 
  2522  0F97                     	;# 
  2523  0F9C                     	;# 
  2524  0F9D                     	;# 
  2525  0F9E                     	;# 
  2526  0FE3                     	;# 
  2527  0FE4                     	;# 
  2528  0FE5                     	;# 
  2529  0FE6                     	;# 
  2530  0FE7                     	;# 
  2531  0FE8                     	;# 
  2532  0FE9                     	;# 
  2533  0FEA                     	;# 
  2534  0FEB                     	;# 
  2535  0FED                     	;# 
  2536  0FEE                     	;# 
  2537  0FEF                     	;# 
  2538                           
  2539 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2540  0000                     
  2541 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2542  0000                     
  2543 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2544  0000                     
  2545                           	psect	idataCOMMON
  2546  0634                     __pidataCOMMON:
  2547                           
  2548                           ;initializer for _U8Message
  2549  0634  3455               	retlw	85
  2550                           
  2551                           ;initializer for _BreathState
  2552  0635  3401               	retlw	1
  2553                           
  2554                           	psect	idataBANK0
  2555  063A                     __pidataBANK0:
  2556                           
  2557                           ;initializer for _I2cState
  2558  063A  3401               	retlw	1
  2559                           
  2560                           	psect	stringtext1
  2561  0393                     __pstringtext1:
  2562  0393                     _fsmStateTable:
  2563  0393  34E4               	retlw	low _I2C_DO_IDLE
  2564  0394  3405               	retlw	high _I2C_DO_IDLE
  2565  0395  34AC               	retlw	low _I2C_DO_SEND_ADR_READ
  2566  0396  3405               	retlw	high _I2C_DO_SEND_ADR_READ
  2567  0397  34B4               	retlw	low _I2C_DO_SEND_ADR_WRITE
  2568  0398  3405               	retlw	high _I2C_DO_SEND_ADR_WRITE
  2569  0399  34C5               	retlw	low _I2C_DO_TX
  2570  039A  3401               	retlw	high _I2C_DO_TX
  2571  039B  3414               	retlw	low _I2C_DO_RX
  2572  039C  3402               	retlw	high _I2C_DO_RX
  2573  039D  34C7               	retlw	low _I2C_DO_RCEN
  2574  039E  3405               	retlw	high _I2C_DO_RCEN
  2575  039F  34CB               	retlw	low _I2C_DO_TX_EMPTY
  2576  03A0  3402               	retlw	high _I2C_DO_TX_EMPTY
  2577  03A1  340D               	retlw	low _I2C_DO_SEND_RESTART_READ
  2578  03A2  3406               	retlw	high _I2C_DO_SEND_RESTART_READ
  2579  03A3  3409               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  2580  03A4  3406               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  2581  03A5  3405               	retlw	low _I2C_DO_SEND_RESTART
  2582  03A6  3406               	retlw	high _I2C_DO_SEND_RESTART
  2583  03A7  3401               	retlw	low _I2C_DO_SEND_STOP
  2584  03A8  3406               	retlw	high _I2C_DO_SEND_STOP
  2585  03A9  34FD               	retlw	low _I2C_DO_RX_ACK
  2586  03AA  3405               	retlw	high _I2C_DO_RX_ACK
  2587  03AB  34F9               	retlw	low _I2C_DO_RX_NACK_STOP
  2588  03AC  3405               	retlw	high _I2C_DO_RX_NACK_STOP
  2589  03AD  34F5               	retlw	low _I2C_DO_RX_NACK_RESTART
  2590  03AE  3405               	retlw	high _I2C_DO_RX_NACK_RESTART
  2591  03AF  34DF               	retlw	low _I2C_DO_RESET
  2592  03B0  3405               	retlw	high _I2C_DO_RESET
  2593  03B1  34F8               	retlw	low _I2C_DO_ADDRESS_NACK
  2594  03B2  3402               	retlw	high _I2C_DO_ADDRESS_NACK
  2595  03B3                     __end_of_fsmStateTable:
  2596                           
  2597                           	psect	stringtext2
  2598  0514                     __pstringtext2:
  2599  0514                     _COS_tsk:
  2600  0514  349C               	retlw	low _UartDisplay
  2601  0515  3405               	retlw	high _UartDisplay
  2602  0516  3480               	retlw	128
  2603  0517  3473               	retlw	low _GetTemp
  2604  0518  3401               	retlw	high _GetTemp
  2605  0519  3440               	retlw	64
  2606  051A  3400               	retlw	0
  2607  051B  3400               	retlw	0
  2608  051C  3400               	retlw	0
  2609  051D  3400               	retlw	0
  2610  051E  3400               	retlw	0
  2611  051F  3400               	retlw	0
  2612  0520  3400               	retlw	0
  2613  0521  3400               	retlw	0
  2614  0522  3400               	retlw	0
  2615  0523                     __end_of_COS_tsk:
  2616                           
  2617                           	psect	nvBANK0
  2618  006E                     __pnvBANK0:
  2619  006E                     _COS_tsk_msk:
  2620  006E                     	ds	1
  2621                           
  2622                           	psect	nvBANK1
  2623  00A0                     __pnvBANK1:
  2624  00A0                     _EUSART_ErrorHandler:
  2625  00A0                     	ds	2
  2626  00A2                     _EUSART_OverrunErrorHandler:
  2627  00A2                     	ds	2
  2628  00A4                     _EUSART_FramingErrorHandler:
  2629  00A4                     	ds	2
  2630  00A6                     _TMR2_InterruptHandler:
  2631  00A6                     	ds	2
  2632  00A8                     _COS_tsk_ena:
  2633  00A8                     	ds	1
  2634  0012                     _PIR2bits	set	18
  2635  000B                     _INTCONbits	set	11
  2636  001C                     _T2CONbits	set	28
  2637  001C                     _T2CON	set	28
  2638  0011                     _PIR1bits	set	17
  2639  001A                     _TMR2	set	26
  2640  001B                     _PR2	set	27
  2641  0018                     _T1CON	set	24
  2642  0016                     _TMR1L	set	22
  2643  0017                     _TMR1H	set	23
  2644  0095                     _OPTION_REGbits	set	149
  2645  008E                     _TRISC	set	142
  2646  008D                     _TRISB	set	141
  2647  008C                     _TRISA	set	140
  2648  0097                     _WDTCON	set	151
  2649  0099                     _OSCCON	set	153
  2650  0091                     _PIE1bits	set	145
  2651  010E                     _LATCbits	set	270
  2652  011D                     _APFCON	set	285
  2653  010E                     _LATC	set	270
  2654  010D                     _LATB	set	269
  2655  010C                     _LATA	set	268
  2656  0116                     _BORCON	set	278
  2657  019A                     _TXREG	set	410
  2658  0199                     _RCREG	set	409
  2659  019D                     _RCSTAbits	set	413
  2660  019E                     _TXSTAbits	set	414
  2661  019C                     _SPBRGH	set	412
  2662  019B                     _SPBRGL	set	411
  2663  019E                     _TXSTA	set	414
  2664  019D                     _RCSTA	set	413
  2665  019F                     _BAUDCON	set	415
  2666  018C                     _ANSELA	set	396
  2667  018D                     _ANSELB	set	397
  2668  018E                     _ANSELC	set	398
  2669  0214                     _SSP1STATbits	set	532
  2670  0216                     _SSP1CON2bits	set	534
  2671  0211                     _SSP1BUF	set	529
  2672  0215                     _SSP1CON1bits	set	533
  2673  0212                     _SSP1ADD	set	530
  2674  0216                     _SSP1CON2	set	534
  2675  0215                     _SSP1CON1	set	533
  2676  0214                     _SSP1STAT	set	532
  2677  020C                     _WPUA	set	524
  2678  020D                     _WPUB	set	525
  2679  0611                     _PWM1DCL	set	1553
  2680  0612                     _PWM1DCH	set	1554
  2681  0613                     _PWM1CON	set	1555
  2682                           
  2683                           	psect	cinit
  2684  0014                     start_initialization:	
  2685                           ; #config settings
  2686                           
  2687  0014                     __initialization:
  2688                           
  2689                           ; Initialize objects allocated to COMMON
  2690  0014  3186  2634  3180   	fcall	__pidataCOMMON	;fetch initializer
  2691  0017  00FA               	movwf	__pdataCOMMON& (0+127)
  2692  0018  3186  2635  3180   	fcall	__pidataCOMMON+1	;fetch initializer
  2693  001B  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
  2694                           
  2695                           ; Initialize objects allocated to BANK0
  2696  001C  3186  263A  3180   	fcall	__pidataBANK0	;fetch initializer
  2697  001F  00EF               	movwf	__pdataBANK0& (0+127)
  2698                           
  2699                           ; Clear objects allocated to COMMON
  2700  0020  01F6               	clrf	__pbssCOMMON& (0+127)
  2701  0021  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  2702  0022  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  2703  0023  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  2704                           
  2705                           ; Clear objects allocated to BANK0
  2706  0024  3020               	movlw	low __pbssBANK0
  2707  0025  0084               	movwf	4
  2708  0026  3000               	movlw	high __pbssBANK0
  2709  0027  0085               	movwf	5
  2710  0028  3035               	movlw	53
  2711  0029  3185  25BB         	fcall	clear_ram0
  2712  002B                     end_of_initialization:	
  2713                           ;End of C runtime variable initialization code
  2714                           
  2715  002B                     __end_of__initialization:
  2716  002B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2717  002C  0020               	movlb	0
  2718  002D  3183  2BEC         	ljmp	_main	;jump to C main() function
  2719                           
  2720                           	psect	bssCOMMON
  2721  0076                     __pbssCOMMON:
  2722  0076                     _COS_tcnt_val:
  2723  0076                     	ds	2
  2724  0078                     _NewMessageFlag:
  2725  0078                     	ds	1
  2726  0079                     _eusartRxLastError:
  2727  0079                     	ds	1
  2728                           
  2729                           	psect	dataCOMMON
  2730  007A                     __pdataCOMMON:
  2731  007A                     _U8Message:
  2732  007A                     	ds	1
  2733  007B                     _BreathState:
  2734  007B                     	ds	1
  2735                           
  2736                           	psect	bssBANK0
  2737  0020                     __pbssBANK0:
  2738  0020                     _I2C_Status:
  2739  0020                     	ds	29
  2740  003D                     _Humi:
  2741  003D                     	ds	2
  2742  003F                     _dutyValue:
  2743  003F                     	ds	2
  2744  0041                     _counter:
  2745  0041                     	ds	2
  2746  0043                     TMR2_ISR@CountCallBack:
  2747  0043                     	ds	2
  2748  0045                     _COS_tcnt_lst:
  2749  0045                     	ds	2
  2750  0047                     _COS_tsk_tmr:
  2751  0047                     	ds	2
  2752  0049                     _COS_sec_tmr:
  2753  0049                     	ds	2
  2754  004B                     _COS_ms_tmr:
  2755  004B                     	ds	2
  2756  004D                     _Command:
  2757  004D                     	ds	1
  2758  004E                     _TempH:
  2759  004E                     	ds	1
  2760  004F                     _counter@UART_Display$F1229:
  2761  004F                     	ds	1
  2762  0050                     _Timer2Flag:
  2763  0050                     	ds	1
  2764  0051                     _TimeSlotCounter:
  2765  0051                     	ds	1
  2766  0052                     _COS_tsk_ind:
  2767  0052                     	ds	1
  2768  0053                     _Temp:
  2769  0053                     	ds	2
  2770                           
  2771                           	psect	dataBANK0
  2772  006F                     __pdataBANK0:
  2773  006F                     _I2cState:
  2774  006F                     	ds	1
  2775                           
  2776                           	psect	clrtext
  2777  05BB                     clear_ram0:	
  2778                           ;	Called with FSR0 containing the base address, and
  2779                           ;	WREG with the size to clear
  2780                           
  2781  05BB  0064               	clrwdt	;clear the watchdog before getting into this loop
  2782  05BC                     clrloop0:
  2783  05BC  0180               	clrf	0	;clear RAM location pointed to by FSR
  2784  05BD  3101               	addfsr 0,1
  2785  05BE  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2786  05BF  2DBC               	goto	clrloop0	;have we reached the end yet?
  2787  05C0  3400               	retlw	0	;all done for this memory range, return
  2788                           
  2789                           	psect	cstackBANK1
  2790  00A9                     __pcstackBANK1:
  2791  00A9                     ??_COS_TskMan:
  2792                           
  2793                           ; 1 bytes @ 0x0
  2794  00A9                     	ds	2
  2795                           
  2796                           	psect	cstackCOMMON
  2797  0070                     __pcstackCOMMON:
  2798  0070                     ?_COS_TimerSetup:
  2799  0070                     ?_UartDisplay:	
  2800                           ; 1 bytes @ 0x0
  2801                           
  2802  0070                     ?_GetTemp:	
  2803                           ; 1 bytes @ 0x0
  2804                           
  2805  0070                     ?_I2C_Open:	
  2806                           ; 1 bytes @ 0x0
  2807                           
  2808  0070                     ?_I2C_Close:	
  2809                           ; 1 bytes @ 0x0
  2810                           
  2811  0070                     ?_I2C_MasterRead:	
  2812                           ; 1 bytes @ 0x0
  2813                           
  2814  0070                     ?_TMR2_DefaultInterruptHandler:	
  2815                           ; 1 bytes @ 0x0
  2816                           
  2817  0070                     ??_TMR2_DefaultInterruptHandler:	
  2818                           ; 1 bytes @ 0x0
  2819                           
  2820  0070                     ?_TMR2_CallBack:	
  2821                           ; 1 bytes @ 0x0
  2822                           
  2823  0070                     ?_I2C_Initialize:	
  2824                           ; 1 bytes @ 0x0
  2825                           
  2826  0070                     ?_PIN_MANAGER_Initialize:	
  2827                           ; 1 bytes @ 0x0
  2828                           
  2829  0070                     ?_OSCILLATOR_Initialize:	
  2830                           ; 1 bytes @ 0x0
  2831                           
  2832  0070                     ?_WDT_Initialize:	
  2833                           ; 1 bytes @ 0x0
  2834                           
  2835  0070                     ?_PWM1_Initialize:	
  2836                           ; 1 bytes @ 0x0
  2837                           
  2838  0070                     ?_EUSART_Initialize:	
  2839                           ; 1 bytes @ 0x0
  2840                           
  2841  0070                     ?_I2C_DO_IDLE:	
  2842                           ; 1 bytes @ 0x0
  2843                           
  2844  0070                     ?_I2C_DO_SEND_ADR_READ:	
  2845                           ; 1 bytes @ 0x0
  2846                           
  2847  0070                     ?_I2C_DO_SEND_ADR_WRITE:	
  2848                           ; 1 bytes @ 0x0
  2849                           
  2850  0070                     ?_I2C_DO_TX:	
  2851                           ; 1 bytes @ 0x0
  2852                           
  2853  0070                     ?_I2C_DO_RX:	
  2854                           ; 1 bytes @ 0x0
  2855                           
  2856  0070                     ?_I2C_DO_RCEN:	
  2857                           ; 1 bytes @ 0x0
  2858                           
  2859  0070                     ?_I2C_DO_TX_EMPTY:	
  2860                           ; 1 bytes @ 0x0
  2861                           
  2862  0070                     ?_I2C_DO_SEND_RESTART_READ:	
  2863                           ; 1 bytes @ 0x0
  2864                           
  2865  0070                     ?_I2C_DO_SEND_RESTART_WRITE:	
  2866                           ; 1 bytes @ 0x0
  2867                           
  2868  0070                     ?_I2C_DO_SEND_RESTART:	
  2869                           ; 1 bytes @ 0x0
  2870                           
  2871  0070                     ?_I2C_DO_SEND_STOP:	
  2872                           ; 1 bytes @ 0x0
  2873                           
  2874  0070                     ?_I2C_DO_RX_ACK:	
  2875                           ; 1 bytes @ 0x0
  2876                           
  2877  0070                     ?_I2C_DO_RX_NACK_STOP:	
  2878                           ; 1 bytes @ 0x0
  2879                           
  2880  0070                     ?_I2C_DO_RX_NACK_RESTART:	
  2881                           ; 1 bytes @ 0x0
  2882                           
  2883  0070                     ?_I2C_DO_RESET:	
  2884                           ; 1 bytes @ 0x0
  2885                           
  2886  0070                     ?_I2C_DO_ADDRESS_NACK:	
  2887                           ; 1 bytes @ 0x0
  2888                           
  2889  0070                     ?_I2C_MasterClearIrq:	
  2890                           ; 1 bytes @ 0x0
  2891                           
  2892  0070                     ?_I2C_MasterOpen:	
  2893                           ; 1 bytes @ 0x0
  2894                           
  2895  0070                     ?_I2C_MasterDisableIrq:	
  2896                           ; 1 bytes @ 0x0
  2897                           
  2898  0070                     ?_I2C_MasterClose:	
  2899                           ; 1 bytes @ 0x0
  2900                           
  2901  0070                     ?_I2C_MasterStart:	
  2902                           ; 1 bytes @ 0x0
  2903                           
  2904  0070                     ?_I2C_Poller:	
  2905                           ; 1 bytes @ 0x0
  2906                           
  2907  0070                     ?_I2C_MasterWaitForEvent:	
  2908                           ; 1 bytes @ 0x0
  2909                           
  2910  0070                     ?_I2C_MasterFsm:	
  2911                           ; 1 bytes @ 0x0
  2912                           
  2913  0070                     ?_I2C_MasterIsNack:	
  2914                           ; 1 bytes @ 0x0
  2915                           
  2916  0070                     ?_I2C_MasterSendTxData:	
  2917                           ; 1 bytes @ 0x0
  2918                           
  2919  0070                     ?_I2C_MasterGetRxData:	
  2920                           ; 1 bytes @ 0x0
  2921                           
  2922  0070                     ?_I2C_MasterSendAck:	
  2923                           ; 1 bytes @ 0x0
  2924                           
  2925  0070                     ?_I2C_MasterStartRx:	
  2926                           ; 1 bytes @ 0x0
  2927                           
  2928  0070                     ?_I2C_MasterSetIrq:	
  2929                           ; 1 bytes @ 0x0
  2930                           
  2931  0070                     ?_I2C_MasterEnableRestart:	
  2932                           ; 1 bytes @ 0x0
  2933                           
  2934  0070                     ?_I2C_MasterStop:	
  2935                           ; 1 bytes @ 0x0
  2936                           
  2937  0070                     ?_I2C_MasterSendNack:	
  2938                           ; 1 bytes @ 0x0
  2939                           
  2940  0070                     ?_COS_Init:	
  2941                           ; 1 bytes @ 0x0
  2942                           
  2943  0070                     ?_COS_TmrHandler:	
  2944                           ; 1 bytes @ 0x0
  2945                           
  2946  0070                     ?_COS_TskMan:	
  2947                           ; 1 bytes @ 0x0
  2948                           
  2949  0070                     ?_TMR2_Initialize:	
  2950                           ; 1 bytes @ 0x0
  2951                           
  2952  0070                     ?_TMR2_ISR:	
  2953                           ; 1 bytes @ 0x0
  2954                           
  2955  0070                     ?_INTERRUPT_InterruptManager:	
  2956                           ; 1 bytes @ 0x0
  2957                           
  2958  0070                     ?_SYSTEM_Initialize:	
  2959                           ; 1 bytes @ 0x0
  2960                           
  2961  0070                     ?_PWM1_LoadDutyValue:	
  2962                           ; 1 bytes @ 0x0
  2963                           
  2964  0070                     ?_I2C_MasterOperation:	
  2965                           ; 1 bytes @ 0x0
  2966                           
  2967  0070                     ?_EUSART_Write:	
  2968                           ; 1 bytes @ 0x0
  2969                           
  2970  0070                     ?_Led2_PWM:	
  2971                           ; 1 bytes @ 0x0
  2972                           
  2973  0070                     ?_SendByUart:	
  2974                           ; 1 bytes @ 0x0
  2975                           
  2976  0070                     ?_main:	
  2977                           ; 1 bytes @ 0x0
  2978                           
  2979  0070                     PWM1_LoadDutyValue@dutyValue:	
  2980                           ; 1 bytes @ 0x0
  2981                           
  2982                           
  2983                           ; 2 bytes @ 0x0
  2984  0070                     	ds	2
  2985  0072                     ??_PWM1_LoadDutyValue:
  2986                           
  2987                           ; 1 bytes @ 0x2
  2988  0072                     	ds	2
  2989  0074                     ??_Led2_PWM:
  2990                           
  2991                           ; 1 bytes @ 0x4
  2992  0074                     	ds	2
  2993  0076                     ??_TMR2_CallBack:
  2994  0076                     ??_TMR2_ISR:	
  2995                           ; 1 bytes @ 0x6
  2996                           
  2997  0076                     ??_INTERRUPT_InterruptManager:	
  2998                           ; 1 bytes @ 0x6
  2999                           
  3000                           
  3001                           	psect	cstackBANK0
  3002  0055                     __pcstackBANK0:	
  3003                           ; 1 bytes @ 0x6
  3004                           
  3005  0055                     ??_COS_TimerSetup:
  3006  0055                     ??_I2C_Open:	
  3007                           ; 1 bytes @ 0x0
  3008                           
  3009  0055                     ?_I2C_SetBuffer:	
  3010                           ; 1 bytes @ 0x0
  3011                           
  3012  0055                     ??_I2C_Close:	
  3013                           ; 1 bytes @ 0x0
  3014                           
  3015  0055                     ?_TMR2_SetInterruptHandler:	
  3016                           ; 1 bytes @ 0x0
  3017                           
  3018  0055                     ??_I2C_Initialize:	
  3019                           ; 1 bytes @ 0x0
  3020                           
  3021  0055                     ??_PIN_MANAGER_Initialize:	
  3022                           ; 1 bytes @ 0x0
  3023                           
  3024  0055                     ??_OSCILLATOR_Initialize:	
  3025                           ; 1 bytes @ 0x0
  3026                           
  3027  0055                     ??_WDT_Initialize:	
  3028                           ; 1 bytes @ 0x0
  3029                           
  3030  0055                     ??_PWM1_Initialize:	
  3031                           ; 1 bytes @ 0x0
  3032                           
  3033  0055                     ??_I2C_DO_IDLE:	
  3034                           ; 1 bytes @ 0x0
  3035                           
  3036  0055                     ??_I2C_DO_SEND_ADR_READ:	
  3037                           ; 1 bytes @ 0x0
  3038                           
  3039  0055                     ??_I2C_DO_RCEN:	
  3040                           ; 1 bytes @ 0x0
  3041                           
  3042  0055                     ??_I2C_DO_SEND_RESTART_READ:	
  3043                           ; 1 bytes @ 0x0
  3044                           
  3045  0055                     ??_I2C_DO_SEND_RESTART_WRITE:	
  3046                           ; 1 bytes @ 0x0
  3047                           
  3048  0055                     ??_I2C_DO_SEND_RESTART:	
  3049                           ; 1 bytes @ 0x0
  3050                           
  3051  0055                     ??_I2C_DO_SEND_STOP:	
  3052                           ; 1 bytes @ 0x0
  3053                           
  3054  0055                     ??_I2C_DO_RX_ACK:	
  3055                           ; 1 bytes @ 0x0
  3056                           
  3057  0055                     ??_I2C_DO_RX_NACK_STOP:	
  3058                           ; 1 bytes @ 0x0
  3059                           
  3060  0055                     ??_I2C_DO_RX_NACK_RESTART:	
  3061                           ; 1 bytes @ 0x0
  3062                           
  3063  0055                     ??_I2C_DO_RESET:	
  3064                           ; 1 bytes @ 0x0
  3065                           
  3066  0055                     ??_I2C_MasterClearIrq:	
  3067                           ; 1 bytes @ 0x0
  3068                           
  3069  0055                     ??_I2C_MasterOpen:	
  3070                           ; 1 bytes @ 0x0
  3071                           
  3072  0055                     ??_I2C_MasterDisableIrq:	
  3073                           ; 1 bytes @ 0x0
  3074                           
  3075  0055                     ??_I2C_MasterClose:	
  3076                           ; 1 bytes @ 0x0
  3077                           
  3078  0055                     ??_I2C_MasterStart:	
  3079                           ; 1 bytes @ 0x0
  3080                           
  3081  0055                     ?_I2C_SetCallback:	
  3082                           ; 1 bytes @ 0x0
  3083                           
  3084  0055                     ??_I2C_MasterWaitForEvent:	
  3085                           ; 1 bytes @ 0x0
  3086                           
  3087  0055                     ??_I2C_MasterIsNack:	
  3088                           ; 1 bytes @ 0x0
  3089                           
  3090  0055                     ??_I2C_MasterSendTxData:	
  3091                           ; 1 bytes @ 0x0
  3092                           
  3093  0055                     ??_I2C_MasterGetRxData:	
  3094                           ; 1 bytes @ 0x0
  3095                           
  3096  0055                     ??_I2C_MasterSendAck:	
  3097                           ; 1 bytes @ 0x0
  3098                           
  3099  0055                     ??_I2C_MasterStartRx:	
  3100                           ; 1 bytes @ 0x0
  3101                           
  3102  0055                     ??_I2C_MasterSetIrq:	
  3103                           ; 1 bytes @ 0x0
  3104                           
  3105  0055                     ??_I2C_MasterEnableRestart:	
  3106                           ; 1 bytes @ 0x0
  3107                           
  3108  0055                     ??_I2C_MasterStop:	
  3109                           ; 1 bytes @ 0x0
  3110                           
  3111  0055                     ??_I2C_MasterSendNack:	
  3112                           ; 1 bytes @ 0x0
  3113                           
  3114  0055                     ?_EUSART_SetFramingErrorHandler:	
  3115                           ; 1 bytes @ 0x0
  3116                           
  3117  0055                     ?_EUSART_SetOverrunErrorHandler:	
  3118                           ; 1 bytes @ 0x0
  3119                           
  3120  0055                     ?_EUSART_SetErrorHandler:	
  3121                           ; 1 bytes @ 0x0
  3122                           
  3123  0055                     ??_COS_Init:	
  3124                           ; 1 bytes @ 0x0
  3125                           
  3126  0055                     ??_COS_TmrHandler:	
  3127                           ; 1 bytes @ 0x0
  3128                           
  3129  0055                     ??_EUSART_Write:	
  3130                           ; 1 bytes @ 0x0
  3131                           
  3132  0055                     ??_SendByUart:	
  3133                           ; 1 bytes @ 0x0
  3134                           
  3135  0055                     ?_Delay:	
  3136                           ; 1 bytes @ 0x0
  3137                           
  3138  0055                     ?___wmul:	
  3139                           ; 1 bytes @ 0x0
  3140                           
  3141  0055                     I2C_MasterSendTxData@data:	
  3142                           ; 2 bytes @ 0x0
  3143                           
  3144  0055                     EUSART_Write@txData:	
  3145                           ; 1 bytes @ 0x0
  3146                           
  3147  0055                     TMR2_SetInterruptHandler@InterruptHandler:	
  3148                           ; 1 bytes @ 0x0
  3149                           
  3150  0055                     I2C_SetBuffer@bufferSize:	
  3151                           ; 2 bytes @ 0x0
  3152                           
  3153  0055                     I2C_SetCallback@cb:	
  3154                           ; 2 bytes @ 0x0
  3155                           
  3156  0055                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3157                           ; 2 bytes @ 0x0
  3158                           
  3159  0055                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3160                           ; 2 bytes @ 0x0
  3161                           
  3162  0055                     EUSART_SetErrorHandler@interruptHandler:	
  3163                           ; 2 bytes @ 0x0
  3164                           
  3165  0055                     Delay@Timecounter:	
  3166                           ; 2 bytes @ 0x0
  3167                           
  3168  0055                     ___wmul@multiplier:	
  3169                           ; 2 bytes @ 0x0
  3170                           
  3171                           
  3172                           ; 2 bytes @ 0x0
  3173  0055                     	ds	1
  3174  0056                     ??_UartDisplay:
  3175  0056                     ??_I2C_DO_SEND_ADR_WRITE:	
  3176                           ; 1 bytes @ 0x1
  3177                           
  3178  0056                     I2C_Open@address:	
  3179                           ; 1 bytes @ 0x1
  3180                           
  3181  0056                     I2C_Close@returnValue:	
  3182                           ; 1 bytes @ 0x1
  3183                           
  3184  0056                     SendByUart@Txt:	
  3185                           ; 1 bytes @ 0x1
  3186                           
  3187                           
  3188                           ; 1 bytes @ 0x1
  3189  0056                     	ds	1
  3190  0057                     ??_I2C_SetBuffer:
  3191  0057                     ??_TMR2_SetInterruptHandler:	
  3192                           ; 1 bytes @ 0x2
  3193                           
  3194  0057                     ??_EUSART_Initialize:	
  3195                           ; 1 bytes @ 0x2
  3196                           
  3197  0057                     ??_EUSART_SetFramingErrorHandler:	
  3198                           ; 1 bytes @ 0x2
  3199                           
  3200  0057                     ??_EUSART_SetOverrunErrorHandler:	
  3201                           ; 1 bytes @ 0x2
  3202                           
  3203  0057                     ??_EUSART_SetErrorHandler:	
  3204                           ; 1 bytes @ 0x2
  3205                           
  3206  0057                     ??_TMR2_Initialize:	
  3207                           ; 1 bytes @ 0x2
  3208                           
  3209  0057                     ??_SYSTEM_Initialize:	
  3210                           ; 1 bytes @ 0x2
  3211                           
  3212  0057                     ??_Delay:	
  3213                           ; 1 bytes @ 0x2
  3214                           
  3215  0057                     I2C_Open@returnValue:	
  3216                           ; 1 bytes @ 0x2
  3217                           
  3218  0057                     I2C_SetCallback@ptr:	
  3219                           ; 1 bytes @ 0x2
  3220                           
  3221  0057                     Delay@i:	
  3222                           ; 1 bytes @ 0x2
  3223                           
  3224  0057                     ___wmul@multiplicand:	
  3225                           ; 2 bytes @ 0x2
  3226                           
  3227                           
  3228                           ; 2 bytes @ 0x2
  3229  0057                     	ds	1
  3230  0058                     ??_I2C_SetCallback:
  3231  0058                     COS_Init@tempbyte1:	
  3232                           ; 1 bytes @ 0x3
  3233                           
  3234  0058                     COS_TmrHandler@tempbyte1:	
  3235                           ; 1 bytes @ 0x3
  3236                           
  3237  0058                     I2C_SetBuffer@buffer:	
  3238                           ; 1 bytes @ 0x3
  3239                           
  3240                           
  3241                           ; 1 bytes @ 0x3
  3242  0058                     	ds	1
  3243  0059                     ??___wmul:
  3244  0059                     COS_Init@tempbyte2:	
  3245                           ; 1 bytes @ 0x4
  3246                           
  3247  0059                     COS_TmrHandler@tempbyte2:	
  3248                           ; 1 bytes @ 0x4
  3249                           
  3250  0059                     I2C_SetCallback@idx:	
  3251                           ; 1 bytes @ 0x4
  3252                           
  3253  0059                     ___wmul@product:	
  3254                           ; 1 bytes @ 0x4
  3255                           
  3256                           
  3257                           ; 2 bytes @ 0x4
  3258  0059                     	ds	1
  3259  005A                     ?_I2C_SetDataCompleteCallback:
  3260  005A                     I2C_SetDataCompleteCallback@cb:	
  3261                           ; 1 bytes @ 0x5
  3262                           
  3263                           
  3264                           ; 2 bytes @ 0x5
  3265  005A                     	ds	2
  3266  005C                     I2C_SetDataCompleteCallback@ptr:
  3267                           
  3268                           ; 1 bytes @ 0x7
  3269  005C                     	ds	1
  3270  005D                     ??_I2C_SetDataCompleteCallback:
  3271                           
  3272                           ; 1 bytes @ 0x8
  3273  005D                     	ds	1
  3274  005E                     ?_rd1RegCompleteHandler:
  3275  005E                     ?_rd2RegCompleteHandler:	
  3276                           ; 1 bytes @ 0x9
  3277                           
  3278  005E                     ?_wr1RegCompleteHandler:	
  3279                           ; 1 bytes @ 0x9
  3280                           
  3281  005E                     ?_wr2RegCompleteHandler:	
  3282                           ; 1 bytes @ 0x9
  3283                           
  3284  005E                     ?_rdBlkRegCompleteHandler:	
  3285                           ; 1 bytes @ 0x9
  3286                           
  3287  005E                     ?_I2C_CallbackReturnStop:	
  3288                           ; 1 bytes @ 0x9
  3289                           
  3290  005E                     ?_I2C_CallbackReturnReset:	
  3291                           ; 1 bytes @ 0x9
  3292                           
  3293  005E                     rd1RegCompleteHandler@ptr:	
  3294                           ; 1 bytes @ 0x9
  3295                           
  3296  005E                     rd2RegCompleteHandler@ptr:	
  3297                           ; 1 bytes @ 0x9
  3298                           
  3299  005E                     wr1RegCompleteHandler@ptr:	
  3300                           ; 1 bytes @ 0x9
  3301                           
  3302  005E                     wr2RegCompleteHandler@ptr:	
  3303                           ; 1 bytes @ 0x9
  3304                           
  3305  005E                     rdBlkRegCompleteHandler@ptr:	
  3306                           ; 1 bytes @ 0x9
  3307                           
  3308  005E                     I2C_CallbackReturnStop@funPtr:	
  3309                           ; 1 bytes @ 0x9
  3310                           
  3311  005E                     I2C_CallbackReturnReset@funPtr:	
  3312                           ; 1 bytes @ 0x9
  3313                           
  3314                           
  3315                           ; 1 bytes @ 0x9
  3316  005E                     	ds	1
  3317  005F                     ??_rd1RegCompleteHandler:
  3318  005F                     ??_rd2RegCompleteHandler:	
  3319                           ; 1 bytes @ 0xA
  3320                           
  3321  005F                     ??_wr1RegCompleteHandler:	
  3322                           ; 1 bytes @ 0xA
  3323                           
  3324  005F                     ??_wr2RegCompleteHandler:	
  3325                           ; 1 bytes @ 0xA
  3326                           
  3327  005F                     ??_rdBlkRegCompleteHandler:	
  3328                           ; 1 bytes @ 0xA
  3329                           
  3330  005F                     ??_I2C_DO_TX:	
  3331                           ; 1 bytes @ 0xA
  3332                           
  3333  005F                     ??_I2C_DO_RX:	
  3334                           ; 1 bytes @ 0xA
  3335                           
  3336  005F                     ??_I2C_DO_TX_EMPTY:	
  3337                           ; 1 bytes @ 0xA
  3338                           
  3339  005F                     ??_I2C_DO_ADDRESS_NACK:	
  3340                           ; 1 bytes @ 0xA
  3341                           
  3342  005F                     ??_I2C_CallbackReturnStop:	
  3343                           ; 1 bytes @ 0xA
  3344                           
  3345  005F                     ??_I2C_CallbackReturnReset:	
  3346                           ; 1 bytes @ 0xA
  3347                           
  3348                           
  3349                           ; 1 bytes @ 0xA
  3350  005F                     	ds	3
  3351  0062                     ??_I2C_MasterFsm:
  3352                           
  3353                           ; 1 bytes @ 0xD
  3354  0062                     	ds	3
  3355  0065                     ??_I2C_Poller:
  3356  0065                     ??_I2C_MasterOperation:	
  3357                           ; 1 bytes @ 0x10
  3358                           
  3359                           
  3360                           ; 1 bytes @ 0x10
  3361  0065                     	ds	1
  3362  0066                     I2C_MasterOperation@read:
  3363                           
  3364                           ; 1 bytes @ 0x11
  3365  0066                     	ds	1
  3366  0067                     I2C_MasterOperation@returnValue:
  3367                           
  3368                           ; 1 bytes @ 0x12
  3369  0067                     	ds	1
  3370  0068                     ??_I2C_MasterRead:
  3371  0068                     ?_I2C_ReadNBytes:	
  3372                           ; 1 bytes @ 0x13
  3373                           
  3374  0068                     I2C_ReadNBytes@data:	
  3375                           ; 1 bytes @ 0x13
  3376                           
  3377                           
  3378                           ; 1 bytes @ 0x13
  3379  0068                     	ds	1
  3380  0069                     I2C_ReadNBytes@len:
  3381                           
  3382                           ; 2 bytes @ 0x14
  3383  0069                     	ds	2
  3384  006B                     ??_I2C_ReadNBytes:
  3385  006B                     I2C_ReadNBytes@address:	
  3386                           ; 1 bytes @ 0x16
  3387                           
  3388                           
  3389                           ; 1 bytes @ 0x16
  3390  006B                     	ds	1
  3391  006C                     ??_GetTemp:
  3392                           
  3393                           ; 1 bytes @ 0x17
  3394  006C                     	ds	2
  3395  006E                     ??_main:
  3396                           
  3397                           	psect	maintext
  3398  03EC                     __pmaintext:	
  3399                           ; 1 bytes @ 0x19
  3400 ;;
  3401 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3402 ;;
  3403 ;; *************** function _main *****************
  3404 ;; Defined at:
  3405 ;;		line 52 in file "main.c"
  3406 ;; Parameters:    Size  Location     Type
  3407 ;;		None
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;		None
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  1    wreg      void 
  3412 ;; Registers used:
  3413 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3414 ;; Tracked objects:
  3415 ;;		On entry : B1F/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3419 ;;      Params:         0       0       0       0       0       0       0       0
  3420 ;;      Locals:         0       0       0       0       0       0       0       0
  3421 ;;      Temps:          0       0       0       0       0       0       0       0
  3422 ;;      Totals:         0       0       0       0       0       0       0       0
  3423 ;;Total ram usage:        0 bytes
  3424 ;; Hardware stack levels required when called:   16
  3425 ;; This function calls:
  3426 ;;		_COS_Init
  3427 ;;		_COS_TmrHandler
  3428 ;;		_COS_TskMan
  3429 ;;		_SYSTEM_Initialize
  3430 ;;		_TMR2_SetInterruptHandler
  3431 ;; This function is called by:
  3432 ;;		Startup code after reset
  3433 ;; This function uses a non-reentrant model
  3434 ;;
  3435                           
  3436                           
  3437                           ;psect for function _main
  3438  03EC                     _main:
  3439                           
  3440                           ;main.c: 55:     SYSTEM_Initialize();
  3441                           
  3442                           ;incstack = 0
  3443                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3444  03EC  3184  2482  3183   	fcall	_SYSTEM_Initialize
  3445                           
  3446                           ;main.c: 56:     COS_Init();
  3447  03EF  3182  2256  3183   	fcall	_COS_Init
  3448                           
  3449                           ;main.c: 57:     TMR2_SetInterruptHandler(Led2_PWM);
  3450  03F2  30AD               	movlw	low _Led2_PWM
  3451  03F3  0020               	movlb	0	; select bank0
  3452  03F4  00D5               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  3453  03F5  3000               	movlw	high _Led2_PWM
  3454  03F6  00D6               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  3455  03F7  3185  255E  3183   	fcall	_TMR2_SetInterruptHandler
  3456                           
  3457                           ;main.c: 63:     (INTCONbits.GIE = 1);
  3458  03FA  178B               	bsf	11,7	;volatile
  3459                           
  3460                           ;main.c: 66:     (INTCONbits.PEIE = 1);
  3461  03FB  170B               	bsf	11,6	;volatile
  3462  03FC                     l836:	
  3463                           ;main.c: 74:     while (1)
  3464                           
  3465                           
  3466                           ;main.c: 75:     {;main.c: 76:         COS_TmrHandler();
  3467  03FC  3181  2113  3183   	fcall	_COS_TmrHandler
  3468                           
  3469                           ;main.c: 78:         if (COS_tsk_ena)
  3470  03FF  0021               	movlb	1	; select bank1
  3471  0400  0828               	movf	_COS_tsk_ena^(0+128),w
  3472  0401  1903               	btfsc	3,2
  3473  0402  2BFC               	goto	l836
  3474                           
  3475                           ;main.c: 79:         {;main.c: 80:             COS_TskMan();
  3476  0403  3180  202F  3183   	fcall	_COS_TskMan
  3477  0406  2BFC               	goto	l836
  3478  0407                     __end_of_main:
  3479                           
  3480                           	psect	text1
  3481  0482                     __ptext1:	
  3482 ;; *************** function _SYSTEM_Initialize *****************
  3483 ;; Defined at:
  3484 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3485 ;; Parameters:    Size  Location     Type
  3486 ;;		None
  3487 ;; Auto vars:     Size  Location     Type
  3488 ;;		None
  3489 ;; Return value:  Size  Location     Type
  3490 ;;                  1    wreg      void 
  3491 ;; Registers used:
  3492 ;;		wreg, status,2, status,0, pclath, cstack
  3493 ;; Tracked objects:
  3494 ;;		On entry : 0/0
  3495 ;;		On exit  : 0/0
  3496 ;;		Unchanged: 0/0
  3497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3498 ;;      Params:         0       0       0       0       0       0       0       0
  3499 ;;      Locals:         0       0       0       0       0       0       0       0
  3500 ;;      Temps:          0       0       0       0       0       0       0       0
  3501 ;;      Totals:         0       0       0       0       0       0       0       0
  3502 ;;Total ram usage:        0 bytes
  3503 ;; Hardware stack levels used:    1
  3504 ;; Hardware stack levels required when called:    7
  3505 ;; This function calls:
  3506 ;;		_EUSART_Initialize
  3507 ;;		_I2C_Initialize
  3508 ;;		_OSCILLATOR_Initialize
  3509 ;;		_PIN_MANAGER_Initialize
  3510 ;;		_PWM1_Initialize
  3511 ;;		_TMR2_Initialize
  3512 ;;		_WDT_Initialize
  3513 ;; This function is called by:
  3514 ;;		_main
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517                           
  3518                           
  3519                           ;psect for function _SYSTEM_Initialize
  3520  0482                     _SYSTEM_Initialize:
  3521                           
  3522                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  3523                           
  3524                           ;incstack = 0
  3525                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3526  0482  3185  2567  3184   	fcall	_I2C_Initialize
  3527                           
  3528                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3529  0485  3184  2421  3184   	fcall	_PIN_MANAGER_Initialize
  3530                           
  3531                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3532  0488  3185  25C1  3184   	fcall	_OSCILLATOR_Initialize
  3533                           
  3534                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  3535  048B  3185  25E9  3184   	fcall	_WDT_Initialize
  3536                           
  3537                           ;mcc_generated_files/mcc.c: 57:     PWM1_Initialize();
  3538  048E  3185  2594  3184   	fcall	_PWM1_Initialize
  3539                           
  3540                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  3541  0491  3184  24AA  3184   	fcall	_TMR2_Initialize
  3542                           
  3543                           ;mcc_generated_files/mcc.c: 59:     EUSART_Initialize();
  3544  0494  3183  236F         	fcall	_EUSART_Initialize
  3545  0496  0008               	return
  3546  0497                     __end_of_SYSTEM_Initialize:
  3547                           
  3548                           	psect	text2
  3549  05E9                     __ptext2:	
  3550 ;; *************** function _WDT_Initialize *****************
  3551 ;; Defined at:
  3552 ;;		line 70 in file "mcc_generated_files/mcc.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;		None
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;		None
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  1    wreg      void 
  3559 ;; Registers used:
  3560 ;;		wreg
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3566 ;;      Params:         0       0       0       0       0       0       0       0
  3567 ;;      Locals:         0       0       0       0       0       0       0       0
  3568 ;;      Temps:          0       0       0       0       0       0       0       0
  3569 ;;      Totals:         0       0       0       0       0       0       0       0
  3570 ;;Total ram usage:        0 bytes
  3571 ;; Hardware stack levels used:    1
  3572 ;; Hardware stack levels required when called:    5
  3573 ;; This function calls:
  3574 ;;		Nothing
  3575 ;; This function is called by:
  3576 ;;		_SYSTEM_Initialize
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           
  3581                           ;psect for function _WDT_Initialize
  3582  05E9                     _WDT_Initialize:
  3583                           
  3584                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x16;
  3585                           
  3586                           ;incstack = 0
  3587                           ; Regs used in _WDT_Initialize: [wreg]
  3588  05E9  3016               	movlw	22
  3589  05EA  0021               	movlb	1	; select bank1
  3590  05EB  0097               	movwf	23	;volatile
  3591  05EC  0008               	return
  3592  05ED                     __end_of_WDT_Initialize:
  3593                           
  3594                           	psect	text3
  3595  04AA                     __ptext3:	
  3596 ;; *************** function _TMR2_Initialize *****************
  3597 ;; Defined at:
  3598 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;		None
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;		None
  3603 ;; Return value:  Size  Location     Type
  3604 ;;                  1    wreg      void 
  3605 ;; Registers used:
  3606 ;;		wreg, status,2, status,0, pclath, cstack
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/0
  3609 ;;		On exit  : 0/0
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3612 ;;      Params:         0       0       0       0       0       0       0       0
  3613 ;;      Locals:         0       0       0       0       0       0       0       0
  3614 ;;      Temps:          0       0       0       0       0       0       0       0
  3615 ;;      Totals:         0       0       0       0       0       0       0       0
  3616 ;;Total ram usage:        0 bytes
  3617 ;; Hardware stack levels used:    1
  3618 ;; Hardware stack levels required when called:    6
  3619 ;; This function calls:
  3620 ;;		_TMR2_SetInterruptHandler
  3621 ;; This function is called by:
  3622 ;;		_SYSTEM_Initialize
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           
  3627                           ;psect for function _TMR2_Initialize
  3628  04AA                     _TMR2_Initialize:
  3629                           
  3630                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0xF9;
  3631                           
  3632                           ;incstack = 0
  3633                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3634  04AA  30F9               	movlw	249
  3635  04AB  0020               	movlb	0	; select bank0
  3636  04AC  009B               	movwf	27	;volatile
  3637                           
  3638                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  3639  04AD  019A               	clrf	26	;volatile
  3640                           
  3641                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  3642  04AE  1091               	bcf	17,1	;volatile
  3643                           
  3644                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  3645  04AF  0021               	movlb	1	; select bank1
  3646  04B0  1491               	bsf	17,1	;volatile
  3647                           
  3648                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  3649  04B1  303B               	movlw	low _TMR2_DefaultInterruptHandler
  3650  04B2  0020               	movlb	0	; select bank0
  3651  04B3  00D5               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  3652  04B4  3006               	movlw	high _TMR2_DefaultInterruptHandler
  3653  04B5  00D6               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  3654  04B6  3185  255E         	fcall	_TMR2_SetInterruptHandler
  3655                           
  3656                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x06;
  3657  04B8  3006               	movlw	6
  3658  04B9  0020               	movlb	0	; select bank0
  3659  04BA  009C               	movwf	28	;volatile
  3660  04BB  0008               	return
  3661  04BC                     __end_of_TMR2_Initialize:
  3662                           
  3663                           	psect	text4
  3664  055E                     __ptext4:	
  3665 ;; *************** function _TMR2_SetInterruptHandler *****************
  3666 ;; Defined at:
  3667 ;;		line 147 in file "mcc_generated_files/tmr2.c"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3670 ;;		 -> Led2_PWM(1), TMR2_DefaultInterruptHandler(1), 
  3671 ;; Auto vars:     Size  Location     Type
  3672 ;;		None
  3673 ;; Return value:  Size  Location     Type
  3674 ;;                  1    wreg      void 
  3675 ;; Registers used:
  3676 ;;		wreg
  3677 ;; Tracked objects:
  3678 ;;		On entry : 0/0
  3679 ;;		On exit  : 0/0
  3680 ;;		Unchanged: 0/0
  3681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3682 ;;      Params:         0       2       0       0       0       0       0       0
  3683 ;;      Locals:         0       0       0       0       0       0       0       0
  3684 ;;      Temps:          0       0       0       0       0       0       0       0
  3685 ;;      Totals:         0       2       0       0       0       0       0       0
  3686 ;;Total ram usage:        2 bytes
  3687 ;; Hardware stack levels used:    1
  3688 ;; Hardware stack levels required when called:    5
  3689 ;; This function calls:
  3690 ;;		Nothing
  3691 ;; This function is called by:
  3692 ;;		_TMR2_Initialize
  3693 ;;		_main
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           
  3698                           ;psect for function _TMR2_SetInterruptHandler
  3699  055E                     _TMR2_SetInterruptHandler:
  3700                           
  3701                           ;mcc_generated_files/tmr2.c: 148:     TMR2_InterruptHandler = InterruptHandler;
  3702                           
  3703                           ;incstack = 0
  3704                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  3705  055E  0020               	movlb	0	; select bank0
  3706  055F  0856               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  3707  0560  0021               	movlb	1	; select bank1
  3708  0561  00A7               	movwf	(_TMR2_InterruptHandler+1)^(0+128)
  3709  0562  0020               	movlb	0	; select bank0
  3710  0563  0855               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  3711  0564  0021               	movlb	1	; select bank1
  3712  0565  00A6               	movwf	_TMR2_InterruptHandler^(0+128)
  3713  0566  0008               	return
  3714  0567                     __end_of_TMR2_SetInterruptHandler:
  3715                           
  3716                           	psect	text5
  3717  0594                     __ptext5:	
  3718 ;; *************** function _PWM1_Initialize *****************
  3719 ;; Defined at:
  3720 ;;		line 58 in file "mcc_generated_files/pwm1.c"
  3721 ;; Parameters:    Size  Location     Type
  3722 ;;		None
  3723 ;; Auto vars:     Size  Location     Type
  3724 ;;		None
  3725 ;; Return value:  Size  Location     Type
  3726 ;;                  1    wreg      void 
  3727 ;; Registers used:
  3728 ;;		wreg
  3729 ;; Tracked objects:
  3730 ;;		On entry : 0/0
  3731 ;;		On exit  : 0/0
  3732 ;;		Unchanged: 0/0
  3733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3734 ;;      Params:         0       0       0       0       0       0       0       0
  3735 ;;      Locals:         0       0       0       0       0       0       0       0
  3736 ;;      Temps:          0       0       0       0       0       0       0       0
  3737 ;;      Totals:         0       0       0       0       0       0       0       0
  3738 ;;Total ram usage:        0 bytes
  3739 ;; Hardware stack levels used:    1
  3740 ;; Hardware stack levels required when called:    5
  3741 ;; This function calls:
  3742 ;;		Nothing
  3743 ;; This function is called by:
  3744 ;;		_SYSTEM_Initialize
  3745 ;; This function uses a non-reentrant model
  3746 ;;
  3747                           
  3748                           
  3749                           ;psect for function _PWM1_Initialize
  3750  0594                     _PWM1_Initialize:
  3751                           
  3752                           ;mcc_generated_files/pwm1.c: 62:     PWM1CON = 0xC0;
  3753                           
  3754                           ;incstack = 0
  3755                           ; Regs used in _PWM1_Initialize: [wreg]
  3756  0594  30C0               	movlw	192
  3757  0595  002C               	movlb	12	; select bank12
  3758  0596  0093               	movwf	19	;volatile
  3759                           
  3760                           ;mcc_generated_files/pwm1.c: 65:     PWM1DCH = 0x7C;
  3761  0597  307C               	movlw	124
  3762  0598  0092               	movwf	18	;volatile
  3763                           
  3764                           ;mcc_generated_files/pwm1.c: 68:     PWM1DCL = 0xC0;
  3765  0599  30C0               	movlw	192
  3766  059A  0091               	movwf	17	;volatile
  3767  059B  0008               	return
  3768  059C                     __end_of_PWM1_Initialize:
  3769                           
  3770                           	psect	text6
  3771  0421                     __ptext6:	
  3772 ;; *************** function _PIN_MANAGER_Initialize *****************
  3773 ;; Defined at:
  3774 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3775 ;; Parameters:    Size  Location     Type
  3776 ;;		None
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;		None
  3779 ;; Return value:  Size  Location     Type
  3780 ;;                  1    wreg      void 
  3781 ;; Registers used:
  3782 ;;		wreg, status,2
  3783 ;; Tracked objects:
  3784 ;;		On entry : 0/0
  3785 ;;		On exit  : 0/0
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3788 ;;      Params:         0       0       0       0       0       0       0       0
  3789 ;;      Locals:         0       0       0       0       0       0       0       0
  3790 ;;      Temps:          0       0       0       0       0       0       0       0
  3791 ;;      Totals:         0       0       0       0       0       0       0       0
  3792 ;;Total ram usage:        0 bytes
  3793 ;; Hardware stack levels used:    1
  3794 ;; Hardware stack levels required when called:    5
  3795 ;; This function calls:
  3796 ;;		Nothing
  3797 ;; This function is called by:
  3798 ;;		_SYSTEM_Initialize
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802                           
  3803                           ;psect for function _PIN_MANAGER_Initialize
  3804  0421                     _PIN_MANAGER_Initialize:
  3805                           
  3806                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3807                           
  3808                           ;incstack = 0
  3809                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3810  0421  0022               	movlb	2	; select bank2
  3811  0422  018C               	clrf	12	;volatile
  3812                           
  3813                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3814  0423  018D               	clrf	13	;volatile
  3815                           
  3816                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  3817  0424  018E               	clrf	14	;volatile
  3818                           
  3819                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  3820  0425  303F               	movlw	63
  3821  0426  0021               	movlb	1	; select bank1
  3822  0427  008C               	movwf	12	;volatile
  3823                           
  3824                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x70;
  3825  0428  3070               	movlw	112
  3826  0429  008D               	movwf	13	;volatile
  3827                           
  3828                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x9B;
  3829  042A  309B               	movlw	155
  3830  042B  008E               	movwf	14	;volatile
  3831                           
  3832                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x8B;
  3833  042C  308B               	movlw	139
  3834  042D  0023               	movlb	3	; select bank3
  3835  042E  008E               	movwf	14	;volatile
  3836                           
  3837                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  3838  042F  018D               	clrf	13	;volatile
  3839                           
  3840                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x17;
  3841  0430  3017               	movlw	23
  3842  0431  008C               	movwf	12	;volatile
  3843                           
  3844                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  3845  0432  0024               	movlb	4	; select bank4
  3846  0433  018D               	clrf	13	;volatile
  3847                           
  3848                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  3849  0434  018C               	clrf	12	;volatile
  3850                           
  3851                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 1;
  3852  0435  0021               	movlb	1	; select bank1
  3853  0436  1795               	bsf	21,7	;volatile
  3854                           
  3855                           ;mcc_generated_files/pin_manager.c: 89:     APFCON = 0x00;
  3856  0437  0022               	movlb	2	; select bank2
  3857  0438  019D               	clrf	29	;volatile
  3858  0439  0008               	return
  3859  043A                     __end_of_PIN_MANAGER_Initialize:
  3860                           
  3861                           	psect	text7
  3862  05C1                     __ptext7:	
  3863 ;; *************** function _OSCILLATOR_Initialize *****************
  3864 ;; Defined at:
  3865 ;;		line 62 in file "mcc_generated_files/mcc.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;		None
  3868 ;; Auto vars:     Size  Location     Type
  3869 ;;		None
  3870 ;; Return value:  Size  Location     Type
  3871 ;;                  1    wreg      void 
  3872 ;; Registers used:
  3873 ;;		wreg, status,2
  3874 ;; Tracked objects:
  3875 ;;		On entry : 0/0
  3876 ;;		On exit  : 0/0
  3877 ;;		Unchanged: 0/0
  3878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3879 ;;      Params:         0       0       0       0       0       0       0       0
  3880 ;;      Locals:         0       0       0       0       0       0       0       0
  3881 ;;      Temps:          0       0       0       0       0       0       0       0
  3882 ;;      Totals:         0       0       0       0       0       0       0       0
  3883 ;;Total ram usage:        0 bytes
  3884 ;; Hardware stack levels used:    1
  3885 ;; Hardware stack levels required when called:    5
  3886 ;; This function calls:
  3887 ;;		Nothing
  3888 ;; This function is called by:
  3889 ;;		_SYSTEM_Initialize
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893                           
  3894                           ;psect for function _OSCILLATOR_Initialize
  3895  05C1                     _OSCILLATOR_Initialize:
  3896                           
  3897                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x78;
  3898                           
  3899                           ;incstack = 0
  3900                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3901  05C1  3078               	movlw	120
  3902  05C2  0021               	movlb	1	; select bank1
  3903  05C3  0099               	movwf	25	;volatile
  3904                           
  3905                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  3906  05C4  0022               	movlb	2	; select bank2
  3907  05C5  0196               	clrf	22	;volatile
  3908  05C6  0008               	return
  3909  05C7                     __end_of_OSCILLATOR_Initialize:
  3910                           
  3911                           	psect	text8
  3912  0567                     __ptext8:	
  3913 ;; *************** function _I2C_Initialize *****************
  3914 ;; Defined at:
  3915 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;		None
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;		None
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  1    wreg      void 
  3922 ;; Registers used:
  3923 ;;		wreg, status,2
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3929 ;;      Params:         0       0       0       0       0       0       0       0
  3930 ;;      Locals:         0       0       0       0       0       0       0       0
  3931 ;;      Temps:          0       0       0       0       0       0       0       0
  3932 ;;      Totals:         0       0       0       0       0       0       0       0
  3933 ;;Total ram usage:        0 bytes
  3934 ;; Hardware stack levels used:    1
  3935 ;; Hardware stack levels required when called:    5
  3936 ;; This function calls:
  3937 ;;		Nothing
  3938 ;; This function is called by:
  3939 ;;		_SYSTEM_Initialize
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           
  3944                           ;psect for function _I2C_Initialize
  3945  0567                     _I2C_Initialize:
  3946                           
  3947                           ;mcc_generated_files/i2c_master.c: 169:     SSP1STAT = 0x00;
  3948                           
  3949                           ;incstack = 0
  3950                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  3951  0567  0024               	movlb	4	; select bank4
  3952  0568  0194               	clrf	20	;volatile
  3953                           
  3954                           ;mcc_generated_files/i2c_master.c: 170:     SSP1CON1 = 0x08;
  3955  0569  3008               	movlw	8
  3956  056A  0095               	movwf	21	;volatile
  3957                           
  3958                           ;mcc_generated_files/i2c_master.c: 171:     SSP1CON2 = 0x00;
  3959  056B  0196               	clrf	22	;volatile
  3960                           
  3961                           ;mcc_generated_files/i2c_master.c: 172:     SSP1ADD = 0x27;
  3962  056C  3027               	movlw	39
  3963  056D  0092               	movwf	18	;volatile
  3964                           
  3965                           ;mcc_generated_files/i2c_master.c: 173:     SSP1CON1bits.SSPEN = 0;
  3966  056E  1295               	bcf	21,5	;volatile
  3967  056F  0008               	return
  3968  0570                     __end_of_I2C_Initialize:
  3969                           
  3970                           	psect	text9
  3971  036F                     __ptext9:	
  3972 ;; *************** function _EUSART_Initialize *****************
  3973 ;; Defined at:
  3974 ;;		line 66 in file "mcc_generated_files/eusart.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;		None
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;		None
  3979 ;; Return value:  Size  Location     Type
  3980 ;;                  1    wreg      void 
  3981 ;; Registers used:
  3982 ;;		wreg, status,2, status,0, pclath, cstack
  3983 ;; Tracked objects:
  3984 ;;		On entry : 0/0
  3985 ;;		On exit  : 0/0
  3986 ;;		Unchanged: 0/0
  3987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3988 ;;      Params:         0       0       0       0       0       0       0       0
  3989 ;;      Locals:         0       0       0       0       0       0       0       0
  3990 ;;      Temps:          0       0       0       0       0       0       0       0
  3991 ;;      Totals:         0       0       0       0       0       0       0       0
  3992 ;;Total ram usage:        0 bytes
  3993 ;; Hardware stack levels used:    1
  3994 ;; Hardware stack levels required when called:    6
  3995 ;; This function calls:
  3996 ;;		_EUSART_SetErrorHandler
  3997 ;;		_EUSART_SetFramingErrorHandler
  3998 ;;		_EUSART_SetOverrunErrorHandler
  3999 ;; This function is called by:
  4000 ;;		_SYSTEM_Initialize
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004                           
  4005                           ;psect for function _EUSART_Initialize
  4006  036F                     _EUSART_Initialize:
  4007                           
  4008                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  4009                           
  4010                           ;incstack = 0
  4011                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4012  036F  3008               	movlw	8
  4013  0370  0023               	movlb	3	; select bank3
  4014  0371  009F               	movwf	31	;volatile
  4015                           
  4016                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  4017  0372  3090               	movlw	144
  4018  0373  009D               	movwf	29	;volatile
  4019                           
  4020                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  4021  0374  3024               	movlw	36
  4022  0375  009E               	movwf	30	;volatile
  4023                           
  4024                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0xA0;
  4025  0376  30A0               	movlw	160
  4026  0377  009B               	movwf	27	;volatile
  4027                           
  4028                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x01;
  4029  0378  3001               	movlw	1
  4030  0379  009C               	movwf	28	;volatile
  4031                           
  4032                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  4033  037A  3000               	movlw	0
  4034  037B  0020               	movlb	0	; select bank0
  4035  037C  00D5               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  4036  037D  3000               	movlw	0
  4037  037E  00D6               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  4038  037F  3185  2579  3183   	fcall	_EUSART_SetFramingErrorHandler
  4039                           
  4040                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  4041  0382  3000               	movlw	0
  4042  0383  0020               	movlb	0	; select bank0
  4043  0384  00D5               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  4044  0385  3000               	movlw	0
  4045  0386  00D6               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  4046  0387  3185  2570  3183   	fcall	_EUSART_SetOverrunErrorHandler
  4047                           
  4048                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  4049  038A  3000               	movlw	0
  4050  038B  0020               	movlb	0	; select bank0
  4051  038C  00D5               	movwf	EUSART_SetErrorHandler@interruptHandler
  4052  038D  3000               	movlw	0
  4053  038E  00D6               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  4054  038F  3185  2582         	fcall	_EUSART_SetErrorHandler
  4055                           
  4056                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  4057  0391  01F9               	clrf	_eusartRxLastError	;volatile
  4058  0392  0008               	return
  4059  0393                     __end_of_EUSART_Initialize:
  4060                           
  4061                           	psect	text10
  4062  0570                     __ptext10:	
  4063 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  4064 ;; Defined at:
  4065 ;;		line 161 in file "mcc_generated_files/eusart.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4068 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  4069 ;; Auto vars:     Size  Location     Type
  4070 ;;		None
  4071 ;; Return value:  Size  Location     Type
  4072 ;;                  1    wreg      void 
  4073 ;; Registers used:
  4074 ;;		wreg
  4075 ;; Tracked objects:
  4076 ;;		On entry : 0/0
  4077 ;;		On exit  : 0/0
  4078 ;;		Unchanged: 0/0
  4079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4080 ;;      Params:         0       2       0       0       0       0       0       0
  4081 ;;      Locals:         0       0       0       0       0       0       0       0
  4082 ;;      Temps:          0       0       0       0       0       0       0       0
  4083 ;;      Totals:         0       2       0       0       0       0       0       0
  4084 ;;Total ram usage:        2 bytes
  4085 ;; Hardware stack levels used:    1
  4086 ;; Hardware stack levels required when called:    5
  4087 ;; This function calls:
  4088 ;;		Nothing
  4089 ;; This function is called by:
  4090 ;;		_EUSART_Initialize
  4091 ;; This function uses a non-reentrant model
  4092 ;;
  4093                           
  4094                           
  4095                           ;psect for function _EUSART_SetOverrunErrorHandler
  4096  0570                     _EUSART_SetOverrunErrorHandler:
  4097                           
  4098                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  4099                           
  4100                           ;incstack = 0
  4101                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  4102  0570  0020               	movlb	0	; select bank0
  4103  0571  0856               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  4104  0572  0021               	movlb	1	; select bank1
  4105  0573  00A3               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  4106  0574  0020               	movlb	0	; select bank0
  4107  0575  0855               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  4108  0576  0021               	movlb	1	; select bank1
  4109  0577  00A2               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  4110  0578  0008               	return
  4111  0579                     __end_of_EUSART_SetOverrunErrorHandler:
  4112                           
  4113                           	psect	text11
  4114  0579                     __ptext11:	
  4115 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  4116 ;; Defined at:
  4117 ;;		line 157 in file "mcc_generated_files/eusart.c"
  4118 ;; Parameters:    Size  Location     Type
  4119 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4120 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  4121 ;; Auto vars:     Size  Location     Type
  4122 ;;		None
  4123 ;; Return value:  Size  Location     Type
  4124 ;;                  1    wreg      void 
  4125 ;; Registers used:
  4126 ;;		wreg
  4127 ;; Tracked objects:
  4128 ;;		On entry : 0/0
  4129 ;;		On exit  : 0/0
  4130 ;;		Unchanged: 0/0
  4131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4132 ;;      Params:         0       2       0       0       0       0       0       0
  4133 ;;      Locals:         0       0       0       0       0       0       0       0
  4134 ;;      Temps:          0       0       0       0       0       0       0       0
  4135 ;;      Totals:         0       2       0       0       0       0       0       0
  4136 ;;Total ram usage:        2 bytes
  4137 ;; Hardware stack levels used:    1
  4138 ;; Hardware stack levels required when called:    5
  4139 ;; This function calls:
  4140 ;;		Nothing
  4141 ;; This function is called by:
  4142 ;;		_EUSART_Initialize
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146                           
  4147                           ;psect for function _EUSART_SetFramingErrorHandler
  4148  0579                     _EUSART_SetFramingErrorHandler:
  4149                           
  4150                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  4151                           
  4152                           ;incstack = 0
  4153                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  4154  0579  0020               	movlb	0	; select bank0
  4155  057A  0856               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  4156  057B  0021               	movlb	1	; select bank1
  4157  057C  00A5               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  4158  057D  0020               	movlb	0	; select bank0
  4159  057E  0855               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  4160  057F  0021               	movlb	1	; select bank1
  4161  0580  00A4               	movwf	_EUSART_FramingErrorHandler^(0+128)
  4162  0581  0008               	return
  4163  0582                     __end_of_EUSART_SetFramingErrorHandler:
  4164                           
  4165                           	psect	text12
  4166  0582                     __ptext12:	
  4167 ;; *************** function _EUSART_SetErrorHandler *****************
  4168 ;; Defined at:
  4169 ;;		line 165 in file "mcc_generated_files/eusart.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4172 ;;		 -> EUSART_DefaultErrorHandler(1), 
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;		None
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  1    wreg      void 
  4177 ;; Registers used:
  4178 ;;		wreg
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4184 ;;      Params:         0       2       0       0       0       0       0       0
  4185 ;;      Locals:         0       0       0       0       0       0       0       0
  4186 ;;      Temps:          0       0       0       0       0       0       0       0
  4187 ;;      Totals:         0       2       0       0       0       0       0       0
  4188 ;;Total ram usage:        2 bytes
  4189 ;; Hardware stack levels used:    1
  4190 ;; Hardware stack levels required when called:    5
  4191 ;; This function calls:
  4192 ;;		Nothing
  4193 ;; This function is called by:
  4194 ;;		_EUSART_Initialize
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           
  4199                           ;psect for function _EUSART_SetErrorHandler
  4200  0582                     _EUSART_SetErrorHandler:
  4201                           
  4202                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  4203                           
  4204                           ;incstack = 0
  4205                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  4206  0582  0020               	movlb	0	; select bank0
  4207  0583  0856               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  4208  0584  0021               	movlb	1	; select bank1
  4209  0585  00A1               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  4210  0586  0020               	movlb	0	; select bank0
  4211  0587  0855               	movf	EUSART_SetErrorHandler@interruptHandler,w
  4212  0588  0021               	movlb	1	; select bank1
  4213  0589  00A0               	movwf	_EUSART_ErrorHandler^(0+128)
  4214  058A  0008               	return
  4215  058B                     __end_of_EUSART_SetErrorHandler:
  4216                           
  4217                           	psect	text13
  4218  002F                     __ptext13:	
  4219 ;; *************** function _COS_TskMan *****************
  4220 ;; Defined at:
  4221 ;;		line 133 in file "SourceFiles/COS/COS_Main.c"
  4222 ;; Parameters:    Size  Location     Type
  4223 ;;		None
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;		None
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  1    wreg      void 
  4228 ;; Registers used:
  4229 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4235 ;;      Params:         0       0       0       0       0       0       0       0
  4236 ;;      Locals:         0       0       0       0       0       0       0       0
  4237 ;;      Temps:          0       0       2       0       0       0       0       0
  4238 ;;      Totals:         0       0       2       0       0       0       0       0
  4239 ;;Total ram usage:        2 bytes
  4240 ;; Hardware stack levels used:    1
  4241 ;; Hardware stack levels required when called:   15
  4242 ;; This function calls:
  4243 ;;		_GetTemp
  4244 ;;		_UartDisplay
  4245 ;;		___wmul
  4246 ;; This function is called by:
  4247 ;;		_main
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251                           
  4252                           ;psect for function _COS_TskMan
  4253  002F                     _COS_TskMan:
  4254                           
  4255                           ;SourceFiles/COS/COS_Main.c: 135:  if ((COS_tsk[COS_tsk_ind].sched & COS_tsk_msk) != 0)
  4256                           
  4257                           ;incstack = 0
  4258                           ; Regs used in _COS_TskMan: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4259  002F  0020               	movlb	0	; select bank0
  4260  0030  0852               	movf	_COS_tsk_ind,w
  4261  0031  0021               	movlb	1	; select bank1
  4262  0032  00A9               	movwf	??_COS_TskMan^(0+128)
  4263  0033  01AA               	clrf	(??_COS_TskMan^(0+128)+1)
  4264  0034  0829               	movf	??_COS_TskMan^(0+128),w
  4265  0035  0020               	movlb	0	; select bank0
  4266  0036  00D5               	movwf	___wmul@multiplier
  4267  0037  0021               	movlb	1	; select bank1
  4268  0038  082A               	movf	(??_COS_TskMan+1)^(0+128),w
  4269  0039  0020               	movlb	0	; select bank0
  4270  003A  00D6               	movwf	___wmul@multiplier+1
  4271  003B  3003               	movlw	3
  4272  003C  00D7               	movwf	___wmul@multiplicand
  4273  003D  3000               	movlw	0
  4274  003E  00D8               	movwf	___wmul@multiplicand+1
  4275  003F  3183  23D0  3180   	fcall	___wmul
  4276  0042  0020               	movlb	0	; select bank0
  4277  0043  0856               	movf	?___wmul+1,w
  4278  0044  0085               	movwf	5
  4279  0045  0855               	movf	?___wmul,w
  4280  0046  0084               	movwf	4
  4281  0047  3016               	movlw	low ((_COS_tsk+2)| (0+32768))
  4282  0048  0784               	addwf	4,f
  4283  0049  3085               	movlw	high ((_COS_tsk+2)| (0+32768))
  4284  004A  3D85               	addwfc	5,f
  4285  004B  0800               	movf	0,w	;code access
  4286  004C  056E               	andwf	_COS_tsk_msk,w
  4287  004D  1903               	btfsc	3,2
  4288  004E  286F               	goto	l3846
  4289                           
  4290                           ;SourceFiles/COS/COS_Main.c: 136:  {;SourceFiles/COS/COS_Main.c: 143:   (*COS_tsk[COS_ts
      +                          k_ind].tptr)();
  4291  004F  0852               	movf	_COS_tsk_ind,w
  4292  0050  0021               	movlb	1	; select bank1
  4293  0051  00A9               	movwf	??_COS_TskMan^(0+128)
  4294  0052  01AA               	clrf	(??_COS_TskMan^(0+128)+1)
  4295  0053  0829               	movf	??_COS_TskMan^(0+128),w
  4296  0054  0020               	movlb	0	; select bank0
  4297  0055  00D5               	movwf	___wmul@multiplier
  4298  0056  0021               	movlb	1	; select bank1
  4299  0057  082A               	movf	(??_COS_TskMan+1)^(0+128),w
  4300  0058  0020               	movlb	0	; select bank0
  4301  0059  00D6               	movwf	___wmul@multiplier+1
  4302  005A  3003               	movlw	3
  4303  005B  00D7               	movwf	___wmul@multiplicand
  4304  005C  3000               	movlw	0
  4305  005D  00D8               	movwf	___wmul@multiplicand+1
  4306  005E  3183  23D0  3180   	fcall	___wmul
  4307  0061  0020               	movlb	0	; select bank0
  4308  0062  0856               	movf	?___wmul+1,w
  4309  0063  0085               	movwf	5
  4310  0064  0855               	movf	?___wmul,w
  4311  0065  0084               	movwf	4
  4312  0066  3014               	movlw	low (_COS_tsk| (0+32768))
  4313  0067  0784               	addwf	4,f
  4314  0068  3085               	movlw	high (_COS_tsk| (0+32768))
  4315  0069  3D85               	addwfc	5,f
  4316  006A  3F01               	moviw [1]fsr0
  4317  006B  008A               	movwf	10
  4318  006C  3F00               	moviw [0]fsr0
  4319  006D  000A               	callw
  4320  006E  3180               	pagesel	$
  4321  006F                     l3846:
  4322                           
  4323                           ;SourceFiles/COS/COS_Main.c: 150:  COS_tsk_ind++;
  4324  006F  3001               	movlw	1
  4325  0070  0021               	movlb	1	; select bank1
  4326  0071  00A9               	movwf	??_COS_TskMan^(0+128)
  4327  0072  0829               	movf	??_COS_TskMan^(0+128),w
  4328  0073  0020               	movlb	0	; select bank0
  4329  0074  07D2               	addwf	_COS_tsk_ind,f
  4330                           
  4331                           ;SourceFiles/COS/COS_Main.c: 151:  if (COS_tsk_ind >= (3 +2))
  4332  0075  3005               	movlw	5
  4333  0076  0252               	subwf	_COS_tsk_ind,w
  4334  0077  1C03               	skipc
  4335  0078  0008               	return
  4336                           
  4337                           ;SourceFiles/COS/COS_Main.c: 152:  {;SourceFiles/COS/COS_Main.c: 153:   COS_tsk_ena = 0;
  4338  0079  0021               	movlb	1	; select bank1
  4339  007A  01A8               	clrf	_COS_tsk_ena^(0+128)
  4340                           
  4341                           ;SourceFiles/COS/COS_Main.c: 154:   COS_tsk_ind = 0;
  4342  007B  0020               	movlb	0	; select bank0
  4343  007C  01D2               	clrf	_COS_tsk_ind
  4344                           
  4345                           ;SourceFiles/COS/COS_Main.c: 157:   if (!((COS_tsk_msk == 0x80) ||
  4346  007D  3080               	movlw	128
  4347  007E  066E               	xorwf	_COS_tsk_msk,w
  4348  007F  1903               	btfsc	3,2
  4349  0080  289D               	goto	l3868
  4350  0081  3040               	movlw	64
  4351  0082  066E               	xorwf	_COS_tsk_msk,w
  4352  0083  1903               	btfsc	3,2
  4353  0084  289D               	goto	l3868
  4354  0085  3020               	movlw	32
  4355  0086  066E               	xorwf	_COS_tsk_msk,w
  4356  0087  1903               	btfsc	3,2
  4357  0088  289D               	goto	l3868
  4358  0089  3010               	movlw	16
  4359  008A  066E               	xorwf	_COS_tsk_msk,w
  4360  008B  1903               	btfsc	3,2
  4361  008C  289D               	goto	l3868
  4362  008D  3008               	movlw	8
  4363  008E  066E               	xorwf	_COS_tsk_msk,w
  4364  008F  1903               	btfsc	3,2
  4365  0090  289D               	goto	l3868
  4366  0091  3004               	movlw	4
  4367  0092  066E               	xorwf	_COS_tsk_msk,w
  4368  0093  1903               	btfsc	3,2
  4369  0094  289D               	goto	l3868
  4370  0095  3002               	movlw	2
  4371  0096  066E               	xorwf	_COS_tsk_msk,w
  4372  0097  1903               	btfsc	3,2
  4373  0098  289D               	goto	l3868
  4374  0099  036E               	decf	_COS_tsk_msk,w
  4375  009A  1903               	btfsc	3,2
  4376  009B  289D               	goto	l3868
  4377  009C                     l47:	
  4378                           ;SourceFiles/COS/COS_Main.c: 165:   {;SourceFiles/COS/COS_Main.c: 169:     while(1);
  4379                           
  4380  009C  289C               	goto	l47
  4381  009D                     l3868:
  4382                           
  4383                           ;SourceFiles/COS/COS_Main.c: 174:   COS_tsk_msk = COS_tsk_msk >> 1;
  4384  009D  366E               	lsrf	_COS_tsk_msk,w
  4385  009E  0021               	movlb	1	; select bank1
  4386  009F  00A9               	movwf	??_COS_TskMan^(0+128)
  4387  00A0  0829               	movf	??_COS_TskMan^(0+128),w
  4388  00A1  0020               	movlb	0	; select bank0
  4389  00A2  00EE               	movwf	_COS_tsk_msk
  4390                           
  4391                           ;SourceFiles/COS/COS_Main.c: 175:   if (COS_tsk_msk == 0x00)
  4392  00A3  086E               	movf	_COS_tsk_msk,w
  4393  00A4  1D03               	btfss	3,2
  4394  00A5  0008               	return
  4395                           
  4396                           ;SourceFiles/COS/COS_Main.c: 176:   {;SourceFiles/COS/COS_Main.c: 177:    COS_tsk_msk = 
      +                          0x80;
  4397  00A6  3080               	movlw	128
  4398  00A7  0021               	movlb	1	; select bank1
  4399  00A8  00A9               	movwf	??_COS_TskMan^(0+128)
  4400  00A9  0829               	movf	??_COS_TskMan^(0+128),w
  4401  00AA  0020               	movlb	0	; select bank0
  4402  00AB  00EE               	movwf	_COS_tsk_msk
  4403  00AC  0008               	return
  4404  00AD                     __end_of_COS_TskMan:
  4405                           
  4406                           	psect	text14
  4407  03D0                     __ptext14:	
  4408 ;; *************** function ___wmul *****************
  4409 ;; Defined at:
  4410 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  4411 ;; Parameters:    Size  Location     Type
  4412 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4413 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4414 ;; Auto vars:     Size  Location     Type
  4415 ;;  product         2    4[BANK0 ] unsigned int 
  4416 ;; Return value:  Size  Location     Type
  4417 ;;                  2    0[BANK0 ] unsigned int 
  4418 ;; Registers used:
  4419 ;;		wreg, status,2, status,0
  4420 ;; Tracked objects:
  4421 ;;		On entry : 0/0
  4422 ;;		On exit  : 0/0
  4423 ;;		Unchanged: 0/0
  4424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4425 ;;      Params:         0       4       0       0       0       0       0       0
  4426 ;;      Locals:         0       2       0       0       0       0       0       0
  4427 ;;      Temps:          0       0       0       0       0       0       0       0
  4428 ;;      Totals:         0       6       0       0       0       0       0       0
  4429 ;;Total ram usage:        6 bytes
  4430 ;; Hardware stack levels used:    1
  4431 ;; Hardware stack levels required when called:    5
  4432 ;; This function calls:
  4433 ;;		Nothing
  4434 ;; This function is called by:
  4435 ;;		_COS_TskMan
  4436 ;; This function uses a non-reentrant model
  4437 ;;
  4438                           
  4439                           
  4440                           ;psect for function ___wmul
  4441  03D0                     ___wmul:
  4442                           
  4443                           ;incstack = 0
  4444                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4445  03D0  0020               	movlb	0	; select bank0
  4446  03D1  01D9               	clrf	___wmul@product
  4447  03D2  01DA               	clrf	___wmul@product+1
  4448  03D3                     l3782:
  4449  03D3  1C55               	btfss	___wmul@multiplier,0
  4450  03D4  2BD9               	goto	l908
  4451  03D5  0857               	movf	___wmul@multiplicand,w
  4452  03D6  07D9               	addwf	___wmul@product,f
  4453  03D7  0858               	movf	___wmul@multiplicand+1,w
  4454  03D8  3DDA               	addwfc	___wmul@product+1,f
  4455  03D9                     l908:
  4456  03D9  3001               	movlw	1
  4457  03DA                     u1635:
  4458  03DA  35D7               	lslf	___wmul@multiplicand,f
  4459  03DB  0DD8               	rlf	___wmul@multiplicand+1,f
  4460  03DC  0B89               	decfsz	9,f
  4461  03DD  2BDA               	goto	u1635
  4462  03DE  3001               	movlw	1
  4463  03DF                     u1645:
  4464  03DF  36D6               	lsrf	___wmul@multiplier+1,f
  4465  03E0  0CD5               	rrf	___wmul@multiplier,f
  4466  03E1  0B89               	decfsz	9,f
  4467  03E2  2BDF               	goto	u1645
  4468  03E3  0855               	movf	___wmul@multiplier,w
  4469  03E4  0456               	iorwf	___wmul@multiplier+1,w
  4470  03E5  1D03               	btfss	3,2
  4471  03E6  2BD3               	goto	l3782
  4472  03E7  085A               	movf	___wmul@product+1,w
  4473  03E8  00D6               	movwf	?___wmul+1
  4474  03E9  0859               	movf	___wmul@product,w
  4475  03EA  00D5               	movwf	?___wmul
  4476  03EB  0008               	return
  4477  03EC                     __end_of___wmul:
  4478                           
  4479                           	psect	text15
  4480  0173                     __ptext15:	
  4481 ;; *************** function _GetTemp *****************
  4482 ;; Defined at:
  4483 ;;		line 36 in file "SourceFiles/SunSensor/SHT25.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;		None
  4486 ;; Auto vars:     Size  Location     Type
  4487 ;;		None
  4488 ;; Return value:  Size  Location     Type
  4489 ;;                  1    wreg      void 
  4490 ;; Registers used:
  4491 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4492 ;; Tracked objects:
  4493 ;;		On entry : 0/0
  4494 ;;		On exit  : 0/0
  4495 ;;		Unchanged: 0/0
  4496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4497 ;;      Params:         0       0       0       0       0       0       0       0
  4498 ;;      Locals:         0       0       0       0       0       0       0       0
  4499 ;;      Temps:          0       2       0       0       0       0       0       0
  4500 ;;      Totals:         0       2       0       0       0       0       0       0
  4501 ;;Total ram usage:        2 bytes
  4502 ;; Hardware stack levels used:    1
  4503 ;; Hardware stack levels required when called:   14
  4504 ;; This function calls:
  4505 ;;		_Delay
  4506 ;;		_I2C_ReadNBytes
  4507 ;;		_SendByUart
  4508 ;; This function is called by:
  4509 ;;		_COS_TskMan
  4510 ;; This function uses a non-reentrant model
  4511 ;;
  4512                           
  4513                           
  4514                           ;psect for function _GetTemp
  4515  0173                     _GetTemp:
  4516                           
  4517                           ;SourceFiles/SunSensor/SHT25.c: 41:     switch (I2cState)
  4518                           
  4519                           ;incstack = 0
  4520                           ; Regs used in _GetTemp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4521  0173  29A5               	goto	l3772
  4522  0174                     l806:	
  4523                           ;SourceFiles/SunSensor/SHT25.c: 42:     {;SourceFiles/SunSensor/SHT25.c: 43:         cas
      +                          e 1:
  4524                           
  4525                           
  4526                           ;SourceFiles/SunSensor/SHT25.c: 44:             SSP1CON2bits.SEN = 1;
  4527  0174  0024               	movlb	4	; select bank4
  4528  0175  1416               	bsf	22,0	;volatile
  4529                           
  4530                           ;SourceFiles/SunSensor/SHT25.c: 45:             SSP1BUF = 128;
  4531  0176  3080               	movlw	128
  4532  0177  0091               	movwf	17	;volatile
  4533                           
  4534                           ;SourceFiles/SunSensor/SHT25.c: 47:             I2cState = 2;
  4535  0178  3002               	movlw	2
  4536  0179  299D               	goto	L3
  4537  017A                     l808:	
  4538                           ;SourceFiles/SunSensor/SHT25.c: 49:         case 2:
  4539                           
  4540                           ;SourceFiles/SunSensor/SHT25.c: 48:             break;
  4541                           
  4542                           
  4543                           ;SourceFiles/SunSensor/SHT25.c: 50:             if (SSP1CON2bits.ACKSTAT)
  4544  017A  0024               	movlb	4	; select bank4
  4545  017B  1F16               	btfss	22,6	;volatile
  4546  017C  29BF               	goto	l3774
  4547                           
  4548                           ;SourceFiles/SunSensor/SHT25.c: 51:             {;SourceFiles/SunSensor/SHT25.c: 52:    
      +                                       SSP1BUF = 0xF5;
  4549  017D  30F5               	movlw	245
  4550  017E  0091               	movwf	17	;volatile
  4551                           
  4552                           ;SourceFiles/SunSensor/SHT25.c: 53:                 I2cState = 3;
  4553  017F  3003               	movlw	3
  4554  0180  299D               	goto	L3
  4555  0181                     l810:	
  4556                           ;SourceFiles/SunSensor/SHT25.c: 56:         case 3:
  4557                           
  4558                           
  4559                           ;SourceFiles/SunSensor/SHT25.c: 57:             if (SSP1CON2bits.ACKSTAT)
  4560  0181  0024               	movlb	4	; select bank4
  4561  0182  1F16               	btfss	22,6	;volatile
  4562  0183  29BF               	goto	l3774
  4563                           
  4564                           ;SourceFiles/SunSensor/SHT25.c: 58:             {;SourceFiles/SunSensor/SHT25.c: 59:    
      +                                       Delay(100);
  4565  0184  3064               	movlw	100
  4566  0185  0020               	movlb	0	; select bank0
  4567  0186  00D5               	movwf	Delay@Timecounter
  4568  0187  3000               	movlw	0
  4569  0188  00D6               	movwf	Delay@Timecounter+1
  4570  0189  3185  2504  3181   	fcall	_Delay
  4571                           
  4572                           ;SourceFiles/SunSensor/SHT25.c: 60:                 SSP1CON2bits.PEN = 1;
  4573  018C  0024               	movlb	4	; select bank4
  4574  018D  1516               	bsf	22,2	;volatile
  4575                           
  4576                           ;SourceFiles/SunSensor/SHT25.c: 61:                 I2cState = 4;
  4577  018E  3004               	movlw	4
  4578  018F  299D               	goto	L3
  4579  0190                     l3766:
  4580                           
  4581                           ;SourceFiles/SunSensor/SHT25.c: 65:             I2C_ReadNBytes(128,&Temp,2);
  4582  0190  3053               	movlw	(low (_Temp| 0))& (0+255)
  4583  0191  00EC               	movwf	??_GetTemp
  4584  0192  086C               	movf	??_GetTemp,w
  4585  0193  00E8               	movwf	I2C_ReadNBytes@data
  4586  0194  3002               	movlw	2
  4587  0195  00E9               	movwf	I2C_ReadNBytes@len
  4588  0196  3000               	movlw	0
  4589  0197  00EA               	movwf	I2C_ReadNBytes@len+1
  4590  0198  3080               	movlw	128
  4591  0199  3183  23B3  3181   	fcall	_I2C_ReadNBytes
  4592                           
  4593                           ;SourceFiles/SunSensor/SHT25.c: 67:             I2cState = 5;
  4594  019C  3005               	movlw	5
  4595  019D                     L3:
  4596  019D  0020               	movlb	0	; select bank0
  4597  019E  00EC               	movwf	??_GetTemp
  4598  019F  086C               	movf	??_GetTemp,w
  4599  01A0  00EF               	movwf	_I2cState
  4600                           
  4601                           ;SourceFiles/SunSensor/SHT25.c: 68:             break;
  4602  01A1  29BF               	goto	l3774
  4603  01A2                     l813:	
  4604                           ;SourceFiles/SunSensor/SHT25.c: 69:         case 5:
  4605                           
  4606                           
  4607                           ;SourceFiles/SunSensor/SHT25.c: 70:             I2cState = 1;
  4608  01A2  01EF               	clrf	_I2cState
  4609  01A3  0AEF               	incf	_I2cState,f
  4610                           
  4611                           ;SourceFiles/SunSensor/SHT25.c: 71:             break;
  4612  01A4  29BF               	goto	l3774
  4613  01A5                     l3772:
  4614  01A5  0020               	movlb	0	; select bank0
  4615  01A6  086F               	movf	_I2cState,w
  4616  01A7  00EC               	movwf	??_GetTemp
  4617  01A8  01ED               	clrf	??_GetTemp+1
  4618                           
  4619                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4620                           ; Switch size 1, requested type "simple"
  4621                           ; Number of cases is 1, Range of values is 0 to 0
  4622                           ; switch strategies available:
  4623                           ; Name         Instructions Cycles
  4624                           ; simple_byte            4     3 (average)
  4625                           ; direct_byte            8     6 (fixed)
  4626                           ; jumptable            260     6 (fixed)
  4627                           ;	Chosen strategy is simple_byte
  4628  01A9  086D               	movf	??_GetTemp+1,w
  4629  01AA  3A00               	xorlw	0	; case 0
  4630  01AB  1903               	skipnz
  4631  01AC  29AE               	goto	l4128
  4632  01AD  29BF               	goto	l3774
  4633  01AE                     l4128:
  4634                           
  4635                           ; Switch size 1, requested type "simple"
  4636                           ; Number of cases is 5, Range of values is 1 to 5
  4637                           ; switch strategies available:
  4638                           ; Name         Instructions Cycles
  4639                           ; simple_byte           16     9 (average)
  4640                           ; direct_byte           19     9 (fixed)
  4641                           ; jumptable            263     9 (fixed)
  4642                           ;	Chosen strategy is simple_byte
  4643  01AE  086C               	movf	??_GetTemp,w
  4644  01AF  3A01               	xorlw	1	; case 1
  4645  01B0  1903               	skipnz
  4646  01B1  2974               	goto	l806
  4647  01B2  3A03               	xorlw	3	; case 2
  4648  01B3  1903               	skipnz
  4649  01B4  297A               	goto	l808
  4650  01B5  3A01               	xorlw	1	; case 3
  4651  01B6  1903               	skipnz
  4652  01B7  2981               	goto	l810
  4653  01B8  3A07               	xorlw	7	; case 4
  4654  01B9  1903               	skipnz
  4655  01BA  2990               	goto	l3766
  4656  01BB  3A01               	xorlw	1	; case 5
  4657  01BC  1903               	skipnz
  4658  01BD  29A2               	goto	l813
  4659  01BE  29BF               	goto	l3774
  4660  01BF                     l3774:
  4661                           
  4662                           ;SourceFiles/SunSensor/SHT25.c: 104:     SendByUart((uint8_t)Temp+0x30);
  4663  01BF  0020               	movlb	0	; select bank0
  4664  01C0  0853               	movf	_Temp,w
  4665  01C1  3E30               	addlw	48
  4666  01C2  3185  258B         	fcall	_SendByUart
  4667  01C4  0008               	return
  4668  01C5                     __end_of_GetTemp:
  4669                           
  4670                           	psect	text16
  4671  059C                     __ptext16:	
  4672 ;; *************** function _UartDisplay *****************
  4673 ;; Defined at:
  4674 ;;		line 23 in file "SourceFiles/SunSensor/UART_Display.c"
  4675 ;; Parameters:    Size  Location     Type
  4676 ;;		None
  4677 ;; Auto vars:     Size  Location     Type
  4678 ;;		None
  4679 ;; Return value:  Size  Location     Type
  4680 ;;                  1    wreg      void 
  4681 ;; Registers used:
  4682 ;;		wreg, status,2, status,0, pclath, cstack
  4683 ;; Tracked objects:
  4684 ;;		On entry : 0/0
  4685 ;;		On exit  : 0/0
  4686 ;;		Unchanged: 0/0
  4687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4688 ;;      Params:         0       0       0       0       0       0       0       0
  4689 ;;      Locals:         0       0       0       0       0       0       0       0
  4690 ;;      Temps:          0       0       0       0       0       0       0       0
  4691 ;;      Totals:         0       0       0       0       0       0       0       0
  4692 ;;Total ram usage:        0 bytes
  4693 ;; Hardware stack levels used:    1
  4694 ;; Hardware stack levels required when called:    6
  4695 ;; This function calls:
  4696 ;;		_EUSART_Write
  4697 ;; This function is called by:
  4698 ;;		_COS_TskMan
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           
  4702                           
  4703                           ;psect for function _UartDisplay
  4704  059C                     _UartDisplay:
  4705                           
  4706                           ;SourceFiles/SunSensor/UART_Display.c: 25:     if (NewMessageFlag == 1)
  4707                           
  4708                           ;incstack = 0
  4709                           ; Regs used in _UartDisplay: [wreg+status,2+status,0+pclath+cstack]
  4710  059C  0378               	decf	_NewMessageFlag,w
  4711  059D  1D03               	btfss	3,2
  4712  059E  0008               	return
  4713                           
  4714                           ;SourceFiles/SunSensor/UART_Display.c: 26:     {;SourceFiles/SunSensor/UART_Display.c: 2
      +                          7:         EUSART_Write(U8Message);
  4715  059F  087A               	movf	_U8Message,w
  4716  05A0  3185  25A4         	fcall	_EUSART_Write
  4717                           
  4718                           ;SourceFiles/SunSensor/UART_Display.c: 28:         NewMessageFlag = 0;
  4719  05A2  01F8               	clrf	_NewMessageFlag
  4720  05A3  0008               	return
  4721  05A4                     __end_of_UartDisplay:
  4722                           
  4723                           	psect	text17
  4724  05A4                     __ptext17:	
  4725 ;; *************** function _EUSART_Write *****************
  4726 ;; Defined at:
  4727 ;;		line 132 in file "mcc_generated_files/eusart.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;  txData          1    wreg     unsigned char 
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;  txData          1    0[BANK0 ] unsigned char 
  4732 ;; Return value:  Size  Location     Type
  4733 ;;                  1    wreg      void 
  4734 ;; Registers used:
  4735 ;;		wreg
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4741 ;;      Params:         0       0       0       0       0       0       0       0
  4742 ;;      Locals:         0       1       0       0       0       0       0       0
  4743 ;;      Temps:          0       0       0       0       0       0       0       0
  4744 ;;      Totals:         0       1       0       0       0       0       0       0
  4745 ;;Total ram usage:        1 bytes
  4746 ;; Hardware stack levels used:    1
  4747 ;; Hardware stack levels required when called:    5
  4748 ;; This function calls:
  4749 ;;		Nothing
  4750 ;; This function is called by:
  4751 ;;		_UartDisplay
  4752 ;; This function uses a non-reentrant model
  4753 ;;
  4754                           
  4755                           
  4756                           ;psect for function _EUSART_Write
  4757  05A4                     _EUSART_Write:
  4758                           
  4759                           ;incstack = 0
  4760                           ; Regs used in _EUSART_Write: [wreg]
  4761                           ;EUSART_Write@txData stored from wreg
  4762  05A4  0020               	movlb	0	; select bank0
  4763  05A5  00D5               	movwf	EUSART_Write@txData
  4764  05A6                     l706:	
  4765                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  4766                           
  4767                           
  4768                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  4769  05A6  1E11               	btfss	17,4	;volatile
  4770  05A7  2DA6               	goto	l706
  4771                           
  4772                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  4773  05A8  0855               	movf	EUSART_Write@txData,w
  4774  05A9  0023               	movlb	3	; select bank3
  4775  05AA  009A               	movwf	26	;volatile
  4776  05AB  0008               	return
  4777  05AC                     __end_of_EUSART_Write:
  4778                           
  4779                           	psect	text18
  4780  058B                     __ptext18:	
  4781 ;; *************** function _SendByUart *****************
  4782 ;; Defined at:
  4783 ;;		line 17 in file "SourceFiles/SunSensor/UART_Display.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;  Txt             1    wreg     unsigned char 
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;  Txt             1    1[BANK0 ] unsigned char 
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  1    wreg      void 
  4790 ;; Registers used:
  4791 ;;		wreg
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4797 ;;      Params:         0       0       0       0       0       0       0       0
  4798 ;;      Locals:         0       1       0       0       0       0       0       0
  4799 ;;      Temps:          0       1       0       0       0       0       0       0
  4800 ;;      Totals:         0       2       0       0       0       0       0       0
  4801 ;;Total ram usage:        2 bytes
  4802 ;; Hardware stack levels used:    1
  4803 ;; Hardware stack levels required when called:    5
  4804 ;; This function calls:
  4805 ;;		Nothing
  4806 ;; This function is called by:
  4807 ;;		_GetTemp
  4808 ;; This function uses a non-reentrant model
  4809 ;;
  4810                           
  4811                           
  4812                           ;psect for function _SendByUart
  4813  058B                     _SendByUart:
  4814                           
  4815                           ;incstack = 0
  4816                           ; Regs used in _SendByUart: [wreg]
  4817                           ;SendByUart@Txt stored from wreg
  4818  058B  0020               	movlb	0	; select bank0
  4819  058C  00D6               	movwf	SendByUart@Txt
  4820                           
  4821                           ;SourceFiles/SunSensor/UART_Display.c: 17: void SendByUart(uint8_t Txt);SourceFiles/SunS
      +                          ensor/UART_Display.c: 18: {;SourceFiles/SunSensor/UART_Display.c: 19:     U8Message = Tx
      +                          t;
  4822  058D  0856               	movf	SendByUart@Txt,w
  4823  058E  00D5               	movwf	??_SendByUart
  4824  058F  0855               	movf	??_SendByUart,w
  4825  0590  00FA               	movwf	_U8Message
  4826                           
  4827                           ;SourceFiles/SunSensor/UART_Display.c: 20:     NewMessageFlag = 1;
  4828  0591  01F8               	clrf	_NewMessageFlag
  4829  0592  0AF8               	incf	_NewMessageFlag,f
  4830  0593  0008               	return
  4831  0594                     __end_of_SendByUart:
  4832                           
  4833                           	psect	text19
  4834  03B3                     __ptext19:	
  4835 ;; *************** function _I2C_ReadNBytes *****************
  4836 ;; Defined at:
  4837 ;;		line 120 in file "mcc_generated_files/examples/i2c_master_example.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;  address         1    wreg     unsigned char 
  4840 ;;  data            1   19[BANK0 ] PTR unsigned char 
  4841 ;;		 -> Temp(2), 
  4842 ;;  len             2   20[BANK0 ] unsigned int 
  4843 ;; Auto vars:     Size  Location     Type
  4844 ;;  address         1   22[BANK0 ] unsigned char 
  4845 ;; Return value:  Size  Location     Type
  4846 ;;                  1    wreg      void 
  4847 ;; Registers used:
  4848 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4849 ;; Tracked objects:
  4850 ;;		On entry : 0/0
  4851 ;;		On exit  : 0/0
  4852 ;;		Unchanged: 0/0
  4853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4854 ;;      Params:         0       3       0       0       0       0       0       0
  4855 ;;      Locals:         0       1       0       0       0       0       0       0
  4856 ;;      Temps:          0       0       0       0       0       0       0       0
  4857 ;;      Totals:         0       4       0       0       0       0       0       0
  4858 ;;Total ram usage:        4 bytes
  4859 ;; Hardware stack levels used:    1
  4860 ;; Hardware stack levels required when called:   13
  4861 ;; This function calls:
  4862 ;;		_I2C_Close
  4863 ;;		_I2C_MasterRead
  4864 ;;		_I2C_Open
  4865 ;;		_I2C_SetBuffer
  4866 ;; This function is called by:
  4867 ;;		_GetTemp
  4868 ;; This function uses a non-reentrant model
  4869 ;;
  4870                           
  4871                           
  4872                           ;psect for function _I2C_ReadNBytes
  4873  03B3                     _I2C_ReadNBytes:
  4874                           
  4875                           ;incstack = 0
  4876                           ; Regs used in _I2C_ReadNBytes: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4877                           ;I2C_ReadNBytes@address stored from wreg
  4878  03B3  0020               	movlb	0	; select bank0
  4879  03B4  00EB               	movwf	I2C_ReadNBytes@address
  4880  03B5                     l3658:	
  4881                           ;mcc_generated_files/examples/i2c_master_example.c: 120: void I2C_ReadNBytes(i2c_address
      +                          _t address, uint8_t *data, size_t len);mcc_generated_files/examples/i2c_master_example.c
      +                          : 121: {;mcc_generated_files/examples/i2c_master_example.c: 122:     while(!I2C_Open(add
      +                          ress));
  4882                           
  4883  03B5  0020               	movlb	0	; select bank0
  4884  03B6  086B               	movf	I2C_ReadNBytes@address,w
  4885  03B7  3182  2293  3183   	fcall	_I2C_Open
  4886  03BA  3A00               	xorlw	0
  4887  03BB  1903               	skipnz
  4888  03BC  2BB5               	goto	l3658
  4889                           
  4890                           ;mcc_generated_files/examples/i2c_master_example.c: 123:     I2C_SetBuffer(data,len);
  4891  03BD  0020               	movlb	0	; select bank0
  4892  03BE  086A               	movf	I2C_ReadNBytes@len+1,w
  4893  03BF  00D6               	movwf	I2C_SetBuffer@bufferSize+1
  4894  03C0  0869               	movf	I2C_ReadNBytes@len,w
  4895  03C1  00D5               	movwf	I2C_SetBuffer@bufferSize
  4896  03C2  0868               	movf	I2C_ReadNBytes@data,w
  4897  03C3  3185  2523  3183   	fcall	_I2C_SetBuffer
  4898                           
  4899                           ;mcc_generated_files/examples/i2c_master_example.c: 124:     I2C_MasterRead();
  4900  03C6  3185  25ED  3183   	fcall	_I2C_MasterRead
  4901  03C9                     l3664:	
  4902                           ;mcc_generated_files/examples/i2c_master_example.c: 125:     while(I2C_BUSY == I2C_Close
      +                          ());
  4903                           
  4904  03C9  3184  2453  3183   	fcall	_I2C_Close
  4905  03CC  3A01               	xorlw	1
  4906  03CD  1D03               	btfss	3,2
  4907  03CE  0008               	return
  4908  03CF  2BC9               	goto	l3664
  4909  03D0                     __end_of_I2C_ReadNBytes:
  4910                           
  4911                           	psect	text20
  4912  0293                     __ptext20:	
  4913 ;; *************** function _I2C_Open *****************
  4914 ;; Defined at:
  4915 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  4916 ;; Parameters:    Size  Location     Type
  4917 ;;  address         1    wreg     unsigned char 
  4918 ;; Auto vars:     Size  Location     Type
  4919 ;;  address         1    1[BANK0 ] unsigned char 
  4920 ;;  returnValue     1    2[BANK0 ] enum E353
  4921 ;; Return value:  Size  Location     Type
  4922 ;;                  1    wreg      enum E353
  4923 ;; Registers used:
  4924 ;;		wreg, status,2, status,0, pclath, cstack
  4925 ;; Tracked objects:
  4926 ;;		On entry : 0/0
  4927 ;;		On exit  : 0/0
  4928 ;;		Unchanged: 0/0
  4929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4930 ;;      Params:         0       0       0       0       0       0       0       0
  4931 ;;      Locals:         0       2       0       0       0       0       0       0
  4932 ;;      Temps:          0       1       0       0       0       0       0       0
  4933 ;;      Totals:         0       3       0       0       0       0       0       0
  4934 ;;Total ram usage:        3 bytes
  4935 ;; Hardware stack levels used:    1
  4936 ;; Hardware stack levels required when called:    6
  4937 ;; This function calls:
  4938 ;;		_I2C_MasterClearIrq
  4939 ;;		_I2C_MasterOpen
  4940 ;; This function is called by:
  4941 ;;		_I2C_ReadNBytes
  4942 ;;		_I2C_Read1ByteRegister
  4943 ;;		_I2C_Read2ByteRegister
  4944 ;;		_I2C_Write1ByteRegister
  4945 ;;		_I2C_Write2ByteRegister
  4946 ;;		_I2C_WriteNBytes
  4947 ;;		_I2C_ReadDataBlock
  4948 ;; This function uses a non-reentrant model
  4949 ;;
  4950                           
  4951                           
  4952                           ;psect for function _I2C_Open
  4953  0293                     _I2C_Open:
  4954                           
  4955                           ;incstack = 0
  4956                           ; Regs used in _I2C_Open: [wreg+status,2+status,0+pclath+cstack]
  4957                           ;I2C_Open@address stored from wreg
  4958  0293  0020               	movlb	0	; select bank0
  4959  0294  00D6               	movwf	I2C_Open@address
  4960                           
  4961                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  4962  0295  01D7               	clrf	I2C_Open@returnValue
  4963  0296  0AD7               	incf	I2C_Open@returnValue,f
  4964                           
  4965                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
  4966  0297  193C               	btfsc	_I2C_Status+28,2
  4967  0298  2AC9               	goto	l412
  4968                           
  4969                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
  4970  0299  0856               	movf	I2C_Open@address,w
  4971  029A  00D5               	movwf	??_I2C_Open
  4972  029B  0855               	movf	??_I2C_Open,w
  4973  029C  00B6               	movwf	_I2C_Status+22
  4974                           
  4975                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
  4976  029D  10BC               	bcf	_I2C_Status+28,1
  4977                           
  4978                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
  4979  029E  153C               	bsf	_I2C_Status+28,2
  4980                           
  4981                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
  4982  029F  103C               	bcf	_I2C_Status+28,0
  4983                           
  4984                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
  4985  02A0  300E               	movlw	14
  4986  02A1  00D5               	movwf	??_I2C_Open
  4987  02A2  0855               	movf	??_I2C_Open,w
  4988  02A3  00BA               	movwf	_I2C_Status+26
  4989                           
  4990                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
  4991  02A4  30F4               	movlw	244
  4992  02A5  00B4               	movwf	_I2C_Status+20
  4993  02A6  3001               	movlw	1
  4994  02A7  00B5               	movwf	_I2C_Status+21
  4995                           
  4996                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
  4997  02A8  15BC               	bsf	_I2C_Status+28,3
  4998                           
  4999                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
  5000  02A9  3038               	movlw	low _I2C_CallbackReturnStop
  5001  02AA  00A0               	movwf	_I2C_Status
  5002  02AB  3006               	movlw	high _I2C_CallbackReturnStop
  5003  02AC  00A1               	movwf	_I2C_Status+1
  5004                           
  5005                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
  5006  02AD  01AC               	clrf	low ((_I2C_Status| 0+12))
  5007                           
  5008                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
  5009  02AE  3038               	movlw	low _I2C_CallbackReturnStop
  5010  02AF  00A2               	movwf	low ((_I2C_Status| 0+2))
  5011  02B0  3006               	movlw	high _I2C_CallbackReturnStop
  5012  02B1  00A3               	movwf	(low ((_I2C_Status| 0+2))+1)
  5013                           
  5014                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
  5015  02B2  01AD               	clrf	low ((_I2C_Status| 0+13))
  5016                           
  5017                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
  5018  02B3  3038               	movlw	low _I2C_CallbackReturnStop
  5019  02B4  00A4               	movwf	low ((_I2C_Status| 0+4))
  5020  02B5  3006               	movlw	high _I2C_CallbackReturnStop
  5021  02B6  00A5               	movwf	(low ((_I2C_Status| 0+4))+1)
  5022                           
  5023                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
  5024  02B7  01AE               	clrf	low ((_I2C_Status| 0+14))
  5025                           
  5026                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
  5027  02B8  3038               	movlw	low _I2C_CallbackReturnStop
  5028  02B9  00A6               	movwf	low ((_I2C_Status| 0+6))
  5029  02BA  3006               	movlw	high _I2C_CallbackReturnStop
  5030  02BB  00A7               	movwf	(low ((_I2C_Status| 0+6))+1)
  5031                           
  5032                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
  5033  02BC  01AF               	clrf	low ((_I2C_Status| 0+15))
  5034                           
  5035                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
  5036  02BD  3036               	movlw	low _I2C_CallbackReturnReset
  5037  02BE  00A8               	movwf	low ((_I2C_Status| 0+8))
  5038  02BF  3006               	movlw	high _I2C_CallbackReturnReset
  5039  02C0  00A9               	movwf	(low ((_I2C_Status| 0+8))+1)
  5040                           
  5041                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
  5042  02C1  01B0               	clrf	low ((_I2C_Status| 0+16))
  5043                           
  5044                           ;mcc_generated_files/i2c_master.c: 202:         I2C_MasterClearIrq();
  5045  02C2  3186  2631  3182   	fcall	_I2C_MasterClearIrq
  5046                           
  5047                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterOpen();
  5048  02C5  3185  253E         	fcall	_I2C_MasterOpen
  5049                           
  5050                           ;mcc_generated_files/i2c_master.c: 204:         returnValue = I2C_NOERR;
  5051  02C7  0020               	movlb	0	; select bank0
  5052  02C8  01D7               	clrf	I2C_Open@returnValue
  5053  02C9                     l412:	
  5054                           ;mcc_generated_files/i2c_master.c: 205:     }
  5055                           
  5056                           
  5057                           ;mcc_generated_files/i2c_master.c: 206:     return returnValue;
  5058  02C9  0857               	movf	I2C_Open@returnValue,w
  5059  02CA  0008               	return
  5060  02CB                     __end_of_I2C_Open:
  5061                           
  5062                           	psect	text21
  5063  053E                     __ptext21:	
  5064 ;; *************** function _I2C_MasterOpen *****************
  5065 ;; Defined at:
  5066 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;		None
  5069 ;; Auto vars:     Size  Location     Type
  5070 ;;		None
  5071 ;; Return value:  Size  Location     Type
  5072 ;;                  1    wreg      _Bool 
  5073 ;; Registers used:
  5074 ;;		wreg, status,2
  5075 ;; Tracked objects:
  5076 ;;		On entry : 0/0
  5077 ;;		On exit  : 0/0
  5078 ;;		Unchanged: 0/0
  5079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5080 ;;      Params:         0       0       0       0       0       0       0       0
  5081 ;;      Locals:         0       0       0       0       0       0       0       0
  5082 ;;      Temps:          0       0       0       0       0       0       0       0
  5083 ;;      Totals:         0       0       0       0       0       0       0       0
  5084 ;;Total ram usage:        0 bytes
  5085 ;; Hardware stack levels used:    1
  5086 ;; Hardware stack levels required when called:    5
  5087 ;; This function calls:
  5088 ;;		Nothing
  5089 ;; This function is called by:
  5090 ;;		_I2C_Open
  5091 ;; This function uses a non-reentrant model
  5092 ;;
  5093                           
  5094                           
  5095                           ;psect for function _I2C_MasterOpen
  5096  053E                     _I2C_MasterOpen:
  5097                           
  5098                           ;mcc_generated_files/i2c_master.c: 545:     if(!SSP1CON1bits.SSPEN)
  5099                           
  5100                           ;incstack = 0
  5101                           ; Regs used in _I2C_MasterOpen: [wreg+status,2]
  5102  053E  0024               	movlb	4	; select bank4
  5103  053F  1A95               	btfsc	21,5	;volatile
  5104  0540  0008               	return
  5105                           
  5106                           ;mcc_generated_files/i2c_master.c: 546:     {;mcc_generated_files/i2c_master.c: 547:    
      +                               SSP1STAT = 0x00;
  5107  0541  0194               	clrf	20	;volatile
  5108                           
  5109                           ;mcc_generated_files/i2c_master.c: 548:         SSP1CON1 = 0x08;
  5110  0542  3008               	movlw	8
  5111  0543  0095               	movwf	21	;volatile
  5112                           
  5113                           ;mcc_generated_files/i2c_master.c: 549:         SSP1CON2 = 0x00;
  5114  0544  0196               	clrf	22	;volatile
  5115                           
  5116                           ;mcc_generated_files/i2c_master.c: 550:         SSP1ADD = 0x27;
  5117  0545  3027               	movlw	39
  5118  0546  0092               	movwf	18	;volatile
  5119                           
  5120                           ;mcc_generated_files/i2c_master.c: 551:         SSP1CON1bits.SSPEN = 1;
  5121  0547  1695               	bsf	21,5	;volatile
  5122  0548  0008               	return
  5123  0549                     __end_of_I2C_MasterOpen:
  5124                           
  5125                           	psect	text22
  5126  05ED                     __ptext22:	
  5127 ;; *************** function _I2C_MasterRead *****************
  5128 ;; Defined at:
  5129 ;;		line 246 in file "mcc_generated_files/i2c_master.c"
  5130 ;; Parameters:    Size  Location     Type
  5131 ;;		None
  5132 ;; Auto vars:     Size  Location     Type
  5133 ;;		None
  5134 ;; Return value:  Size  Location     Type
  5135 ;;                  1    wreg      enum E353
  5136 ;; Registers used:
  5137 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5138 ;; Tracked objects:
  5139 ;;		On entry : 0/0
  5140 ;;		On exit  : 0/0
  5141 ;;		Unchanged: 0/0
  5142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5143 ;;      Params:         0       0       0       0       0       0       0       0
  5144 ;;      Locals:         0       0       0       0       0       0       0       0
  5145 ;;      Temps:          0       0       0       0       0       0       0       0
  5146 ;;      Totals:         0       0       0       0       0       0       0       0
  5147 ;;Total ram usage:        0 bytes
  5148 ;; Hardware stack levels used:    1
  5149 ;; Hardware stack levels required when called:   12
  5150 ;; This function calls:
  5151 ;;		_I2C_MasterOperation
  5152 ;; This function is called by:
  5153 ;;		_I2C_ReadNBytes
  5154 ;; This function uses a non-reentrant model
  5155 ;;
  5156                           
  5157                           
  5158                           ;psect for function _I2C_MasterRead
  5159  05ED                     _I2C_MasterRead:
  5160                           
  5161                           ;mcc_generated_files/i2c_master.c: 248:     return I2C_MasterOperation(1);;	Return value
      +                           of _I2C_MasterRead is never used
  5162                           
  5163                           ;incstack = 0
  5164                           ; Regs used in _I2C_MasterRead: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5165  05ED  3001               	movlw	1
  5166  05EE  3184  2407         	fcall	_I2C_MasterOperation
  5167  05F0  0008               	return
  5168  05F1                     __end_of_I2C_MasterRead:
  5169                           
  5170                           	psect	text23
  5171  0407                     __ptext23:	
  5172 ;; *************** function _I2C_MasterOperation *****************
  5173 ;; Defined at:
  5174 ;;		line 224 in file "mcc_generated_files/i2c_master.c"
  5175 ;; Parameters:    Size  Location     Type
  5176 ;;  read            1    wreg     _Bool 
  5177 ;; Auto vars:     Size  Location     Type
  5178 ;;  read            1   17[BANK0 ] _Bool 
  5179 ;;  returnValue     1   18[BANK0 ] enum E353
  5180 ;; Return value:  Size  Location     Type
  5181 ;;                  1    wreg      enum E353
  5182 ;; Registers used:
  5183 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5189 ;;      Params:         0       0       0       0       0       0       0       0
  5190 ;;      Locals:         0       2       0       0       0       0       0       0
  5191 ;;      Temps:          0       1       0       0       0       0       0       0
  5192 ;;      Totals:         0       3       0       0       0       0       0       0
  5193 ;;Total ram usage:        3 bytes
  5194 ;; Hardware stack levels used:    1
  5195 ;; Hardware stack levels required when called:   11
  5196 ;; This function calls:
  5197 ;;		_I2C_MasterStart
  5198 ;;		_I2C_Poller
  5199 ;; This function is called by:
  5200 ;;		_I2C_MasterRead
  5201 ;;		_I2C_MasterWrite
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205                           
  5206                           ;psect for function _I2C_MasterOperation
  5207  0407                     _I2C_MasterOperation:
  5208                           
  5209                           ;incstack = 0
  5210                           ; Regs used in _I2C_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5211                           ;I2C_MasterOperation@read stored from wreg
  5212  0407  0020               	movlb	0	; select bank0
  5213  0408  00E6               	movwf	I2C_MasterOperation@read
  5214                           
  5215                           ;mcc_generated_files/i2c_master.c: 224: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 225: {;mcc_generated_files/i2c_master.c: 226:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  5216  0409  01E7               	clrf	I2C_MasterOperation@returnValue
  5217  040A  0AE7               	incf	I2C_MasterOperation@returnValue,f
  5218                           
  5219                           ;mcc_generated_files/i2c_master.c: 227:     if(!I2C_Status.busy)
  5220  040B  18BC               	btfsc	_I2C_Status+28,1
  5221  040C  2C1E               	goto	l3598
  5222                           
  5223                           ;mcc_generated_files/i2c_master.c: 228:     {;mcc_generated_files/i2c_master.c: 229:    
      +                               I2C_Status.busy = 1;
  5224  040D  14BC               	bsf	_I2C_Status+28,1
  5225                           
  5226                           ;mcc_generated_files/i2c_master.c: 230:         returnValue = I2C_NOERR;
  5227  040E  01E7               	clrf	I2C_MasterOperation@returnValue
  5228                           
  5229                           ;mcc_generated_files/i2c_master.c: 232:         if(read)
  5230  040F  0866               	movf	I2C_MasterOperation@read,w
  5231  0410  1903               	btfsc	3,2
  5232  0411  2C15               	goto	l3592
  5233                           
  5234                           ;mcc_generated_files/i2c_master.c: 233:         {;mcc_generated_files/i2c_master.c: 234:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
  5235  0412  01BA               	clrf	_I2C_Status+26
  5236  0413  0ABA               	incf	_I2C_Status+26,f
  5237                           
  5238                           ;mcc_generated_files/i2c_master.c: 235:         }
  5239  0414  2C19               	goto	l3594
  5240  0415                     l3592:
  5241                           
  5242                           ;mcc_generated_files/i2c_master.c: 237:         {;mcc_generated_files/i2c_master.c: 238:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
  5243  0415  3002               	movlw	2
  5244  0416  00E5               	movwf	??_I2C_MasterOperation
  5245  0417  0865               	movf	??_I2C_MasterOperation,w
  5246  0418  00BA               	movwf	_I2C_Status+26
  5247  0419                     l3594:
  5248                           
  5249                           ;mcc_generated_files/i2c_master.c: 240:         I2C_MasterStart();
  5250  0419  3186  2628  3184   	fcall	_I2C_MasterStart
  5251                           
  5252                           ;mcc_generated_files/i2c_master.c: 241:         I2C_Poller();
  5253  041C  3185  2554         	fcall	_I2C_Poller
  5254  041E                     l3598:
  5255                           
  5256                           ;mcc_generated_files/i2c_master.c: 243:     return returnValue;
  5257  041E  0020               	movlb	0	; select bank0
  5258  041F  0867               	movf	I2C_MasterOperation@returnValue,w
  5259  0420  0008               	return
  5260  0421                     __end_of_I2C_MasterOperation:
  5261                           
  5262                           	psect	text24
  5263  0554                     __ptext24:	
  5264 ;; *************** function _I2C_Poller *****************
  5265 ;; Defined at:
  5266 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
  5267 ;; Parameters:    Size  Location     Type
  5268 ;;		None
  5269 ;; Auto vars:     Size  Location     Type
  5270 ;;		None
  5271 ;; Return value:  Size  Location     Type
  5272 ;;                  1    wreg      void 
  5273 ;; Registers used:
  5274 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5275 ;; Tracked objects:
  5276 ;;		On entry : 0/0
  5277 ;;		On exit  : 0/0
  5278 ;;		Unchanged: 0/0
  5279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5280 ;;      Params:         0       0       0       0       0       0       0       0
  5281 ;;      Locals:         0       0       0       0       0       0       0       0
  5282 ;;      Temps:          0       0       0       0       0       0       0       0
  5283 ;;      Totals:         0       0       0       0       0       0       0       0
  5284 ;;Total ram usage:        0 bytes
  5285 ;; Hardware stack levels used:    1
  5286 ;; Hardware stack levels required when called:   10
  5287 ;; This function calls:
  5288 ;;		_I2C_MasterFsm
  5289 ;;		_I2C_MasterWaitForEvent
  5290 ;; This function is called by:
  5291 ;;		_I2C_MasterOperation
  5292 ;; This function uses a non-reentrant model
  5293 ;;
  5294                           
  5295                           
  5296                           ;psect for function _I2C_Poller
  5297  0554                     _I2C_Poller:
  5298  0554                     l3564:	
  5299                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  5300                           
  5301                           ;incstack = 0
  5302                           ; Regs used in _I2C_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5303                           
  5304                           
  5305                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  5306  0554  0020               	movlb	0	; select bank0
  5307  0555  1CBC               	btfss	_I2C_Status+28,1
  5308  0556  0008               	return
  5309                           
  5310                           ;mcc_generated_files/i2c_master.c: 315:     {;mcc_generated_files/i2c_master.c: 316:    
      +                               I2C_MasterWaitForEvent();
  5311  0557  3185  25F1  3185   	fcall	_I2C_MasterWaitForEvent
  5312                           
  5313                           ;mcc_generated_files/i2c_master.c: 317:         I2C_MasterFsm();
  5314  055A  3183  2323  3185   	fcall	_I2C_MasterFsm
  5315  055D  2D54               	goto	l3564
  5316  055E                     __end_of_I2C_Poller:
  5317                           
  5318                           	psect	text25
  5319  05F1                     __ptext25:	
  5320 ;; *************** function _I2C_MasterWaitForEvent *****************
  5321 ;; Defined at:
  5322 ;;		line 650 in file "mcc_generated_files/i2c_master.c"
  5323 ;; Parameters:    Size  Location     Type
  5324 ;;		None
  5325 ;; Auto vars:     Size  Location     Type
  5326 ;;		None
  5327 ;; Return value:  Size  Location     Type
  5328 ;;                  1    wreg      void 
  5329 ;; Registers used:
  5330 ;;		None
  5331 ;; Tracked objects:
  5332 ;;		On entry : 0/0
  5333 ;;		On exit  : 0/0
  5334 ;;		Unchanged: 0/0
  5335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5336 ;;      Params:         0       0       0       0       0       0       0       0
  5337 ;;      Locals:         0       0       0       0       0       0       0       0
  5338 ;;      Temps:          0       0       0       0       0       0       0       0
  5339 ;;      Totals:         0       0       0       0       0       0       0       0
  5340 ;;Total ram usage:        0 bytes
  5341 ;; Hardware stack levels used:    1
  5342 ;; Hardware stack levels required when called:    5
  5343 ;; This function calls:
  5344 ;;		Nothing
  5345 ;; This function is called by:
  5346 ;;		_I2C_Poller
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350                           
  5351                           ;psect for function _I2C_MasterWaitForEvent
  5352  05F1                     _I2C_MasterWaitForEvent:
  5353  05F1                     l635:	
  5354                           ;incstack = 0
  5355                           ; Regs used in _I2C_MasterWaitForEvent: []
  5356                           ;mcc_generated_files/i2c_master.c: 652:     while(1)
  5357                           
  5358                           
  5359                           ;mcc_generated_files/i2c_master.c: 653:     {;mcc_generated_files/i2c_master.c: 654:    
      +                               if(PIR1bits.SSP1IF)
  5360  05F1  0020               	movlb	0	; select bank0
  5361  05F2  1991               	btfsc	17,3	;volatile
  5362  05F3  0008               	return
  5363  05F4  2DF1               	goto	l635
  5364  05F5                     __end_of_I2C_MasterWaitForEvent:
  5365                           
  5366                           	psect	text26
  5367  0323                     __ptext26:	
  5368 ;; *************** function _I2C_MasterFsm *****************
  5369 ;; Defined at:
  5370 ;;		line 321 in file "mcc_generated_files/i2c_master.c"
  5371 ;; Parameters:    Size  Location     Type
  5372 ;;		None
  5373 ;; Auto vars:     Size  Location     Type
  5374 ;;		None
  5375 ;; Return value:  Size  Location     Type
  5376 ;;                  1    wreg      void 
  5377 ;; Registers used:
  5378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5379 ;; Tracked objects:
  5380 ;;		On entry : 0/0
  5381 ;;		On exit  : 0/0
  5382 ;;		Unchanged: 0/0
  5383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5384 ;;      Params:         0       0       0       0       0       0       0       0
  5385 ;;      Locals:         0       0       0       0       0       0       0       0
  5386 ;;      Temps:          0       3       0       0       0       0       0       0
  5387 ;;      Totals:         0       3       0       0       0       0       0       0
  5388 ;;Total ram usage:        3 bytes
  5389 ;; Hardware stack levels used:    1
  5390 ;; Hardware stack levels required when called:    9
  5391 ;; This function calls:
  5392 ;;		_I2C_DO_ADDRESS_NACK
  5393 ;;		_I2C_DO_IDLE
  5394 ;;		_I2C_DO_RCEN
  5395 ;;		_I2C_DO_RESET
  5396 ;;		_I2C_DO_RX
  5397 ;;		_I2C_DO_RX_ACK
  5398 ;;		_I2C_DO_RX_NACK_RESTART
  5399 ;;		_I2C_DO_RX_NACK_STOP
  5400 ;;		_I2C_DO_SEND_ADR_READ
  5401 ;;		_I2C_DO_SEND_ADR_WRITE
  5402 ;;		_I2C_DO_SEND_RESTART
  5403 ;;		_I2C_DO_SEND_RESTART_READ
  5404 ;;		_I2C_DO_SEND_RESTART_WRITE
  5405 ;;		_I2C_DO_SEND_STOP
  5406 ;;		_I2C_DO_TX
  5407 ;;		_I2C_DO_TX_EMPTY
  5408 ;;		_I2C_MasterClearIrq
  5409 ;;		_I2C_MasterIsNack
  5410 ;; This function is called by:
  5411 ;;		_I2C_Poller
  5412 ;; This function uses a non-reentrant model
  5413 ;;
  5414                           
  5415                           
  5416                           ;psect for function _I2C_MasterFsm
  5417  0323                     _I2C_MasterFsm:
  5418                           
  5419                           ;mcc_generated_files/i2c_master.c: 323:     I2C_MasterClearIrq();
  5420                           
  5421                           ;incstack = 0
  5422                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5423  0323  3186  2631  3183   	fcall	_I2C_MasterClearIrq
  5424                           
  5425                           ;mcc_generated_files/i2c_master.c: 325:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  5426  0326  0020               	movlb	0	; select bank0
  5427  0327  1C3C               	btfss	_I2C_Status+28,0
  5428  0328  2B34               	goto	l3554
  5429  0329  3185  25CD  3183   	fcall	_I2C_MasterIsNack
  5430  032C  3A00               	xorlw	0
  5431  032D  1903               	skipnz
  5432  032E  2B34               	goto	l3554
  5433                           
  5434                           ;mcc_generated_files/i2c_master.c: 326:     {;mcc_generated_files/i2c_master.c: 327:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  5435  032F  300F               	movlw	15
  5436  0330  0020               	movlb	0	; select bank0
  5437  0331  00E2               	movwf	??_I2C_MasterFsm
  5438  0332  0862               	movf	??_I2C_MasterFsm,w
  5439  0333  00BA               	movwf	_I2C_Status+26
  5440  0334                     l3554:
  5441                           
  5442                           ;mcc_generated_files/i2c_master.c: 329:     I2C_Status.state = fsmStateTable[I2C_Status.
      +                          state]();
  5443  0334  0020               	movlb	0	; select bank0
  5444  0335  083A               	movf	_I2C_Status+26,w
  5445  0336  00E2               	movwf	??_I2C_MasterFsm
  5446  0337  01E3               	clrf	??_I2C_MasterFsm+1
  5447  0338  35E2               	lslf	??_I2C_MasterFsm,f
  5448  0339  0DE3               	rlf	??_I2C_MasterFsm+1,f
  5449  033A  3093               	movlw	low (_fsmStateTable| (0+32768))
  5450  033B  0762               	addwf	??_I2C_MasterFsm,w
  5451  033C  0084               	movwf	4
  5452  033D  3083               	movlw	high (_fsmStateTable| (0+32768))
  5453  033E  3D63               	addwfc	??_I2C_MasterFsm+1,w
  5454  033F  0085               	movwf	5
  5455  0340  3F01               	moviw [1]fsr0
  5456  0341  008A               	movwf	10
  5457  0342  3F00               	moviw [0]fsr0
  5458  0343  000A               	callw
  5459  0344  3183               	pagesel	$
  5460  0345  0020               	movlb	0	; select bank0
  5461  0346  00E4               	movwf	??_I2C_MasterFsm+2
  5462  0347  0864               	movf	??_I2C_MasterFsm+2,w
  5463  0348  00BA               	movwf	_I2C_Status+26
  5464  0349  0008               	return
  5465  034A                     __end_of_I2C_MasterFsm:
  5466                           
  5467                           	psect	text27
  5468  02F8                     __ptext27:	
  5469 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  5470 ;; Defined at:
  5471 ;;		line 500 in file "mcc_generated_files/i2c_master.c"
  5472 ;; Parameters:    Size  Location     Type
  5473 ;;		None
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;		None
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  1    wreg      enum E3874
  5478 ;; Registers used:
  5479 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5485 ;;      Params:         0       0       0       0       0       0       0       0
  5486 ;;      Locals:         0       0       0       0       0       0       0       0
  5487 ;;      Temps:          0       3       0       0       0       0       0       0
  5488 ;;      Totals:         0       3       0       0       0       0       0       0
  5489 ;;Total ram usage:        3 bytes
  5490 ;; Hardware stack levels used:    1
  5491 ;; Hardware stack levels required when called:    8
  5492 ;; This function calls:
  5493 ;;		Absolute function
  5494 ;;		_I2C_CallbackReturnReset
  5495 ;;		_I2C_CallbackReturnStop
  5496 ;;		_I2C_DO_SEND_RESTART
  5497 ;;		_I2C_DO_SEND_STOP
  5498 ;;		_rd1RegCompleteHandler
  5499 ;;		_rd2RegCompleteHandler
  5500 ;;		_rdBlkRegCompleteHandler
  5501 ;;		_wr1RegCompleteHandler
  5502 ;;		_wr2RegCompleteHandler
  5503 ;; This function is called by:
  5504 ;;		_I2C_MasterFsm
  5505 ;; This function uses a non-reentrant model
  5506 ;;
  5507                           
  5508                           
  5509                           ;psect for function _I2C_DO_ADDRESS_NACK
  5510  02F8                     _I2C_DO_ADDRESS_NACK:
  5511                           
  5512                           ;mcc_generated_files/i2c_master.c: 502:     I2C_Status.addressNackCheck = 0;
  5513                           
  5514                           ;incstack = 0
  5515                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5516  02F8  0020               	movlb	0	; select bank0
  5517  02F9  103C               	bcf	_I2C_Status+28,0
  5518                           
  5519                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.error = I2C_FAIL;
  5520  02FA  3002               	movlw	2
  5521  02FB  00DF               	movwf	??_I2C_DO_ADDRESS_NACK
  5522  02FC  085F               	movf	??_I2C_DO_ADDRESS_NACK,w
  5523  02FD  00BB               	movwf	_I2C_Status+27
  5524                           
  5525                           ;mcc_generated_files/i2c_master.c: 504:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  5526  02FE  2B05               	goto	l3538
  5527  02FF                     l3528:
  5528                           
  5529                           ;mcc_generated_files/i2c_master.c: 508:             return I2C_DO_SEND_RESTART();
  5530  02FF  3186  2605         	fcall	_I2C_DO_SEND_RESTART
  5531  0301  0008               	return
  5532  0302                     l3532:
  5533                           
  5534                           ;mcc_generated_files/i2c_master.c: 510:             return I2C_DO_SEND_STOP();
  5535  0302  3186  2601         	fcall	_I2C_DO_SEND_STOP
  5536  0304  0008               	return
  5537  0305                     l3538:
  5538  0305  082E               	movf	low ((_I2C_Status| 0+14)),w
  5539  0306  00DF               	movwf	??_I2C_DO_ADDRESS_NACK
  5540  0307  085F               	movf	??_I2C_DO_ADDRESS_NACK,w
  5541  0308  00DE               	movwf	I2C_CallbackReturnReset@funPtr
  5542  0309  3004               	movlw	4
  5543  030A  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  5544  030B  0086               	movwf	6
  5545  030C  0187               	clrf	7
  5546  030D  3F41               	moviw [1]fsr1
  5547  030E  008A               	movwf	10
  5548  030F  3F40               	moviw [0]fsr1
  5549  0310  000A               	callw
  5550  0311  3182               	pagesel	$
  5551  0312  0020               	movlb	0	; select bank0
  5552  0313  00E0               	movwf	??_I2C_DO_ADDRESS_NACK+1
  5553  0314  01E1               	clrf	??_I2C_DO_ADDRESS_NACK+2
  5554                           
  5555                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5556                           ; Switch size 1, requested type "simple"
  5557                           ; Number of cases is 1, Range of values is 0 to 0
  5558                           ; switch strategies available:
  5559                           ; Name         Instructions Cycles
  5560                           ; simple_byte            4     3 (average)
  5561                           ; direct_byte            8     6 (fixed)
  5562                           ; jumptable            260     6 (fixed)
  5563                           ;	Chosen strategy is simple_byte
  5564  0315  0861               	movf	??_I2C_DO_ADDRESS_NACK+2,w
  5565  0316  3A00               	xorlw	0	; case 0
  5566  0317  1903               	skipnz
  5567  0318  2B1A               	goto	l4130
  5568  0319  2B02               	goto	l3532
  5569  031A                     l4130:
  5570                           
  5571                           ; Switch size 1, requested type "simple"
  5572                           ; Number of cases is 2, Range of values is 2 to 3
  5573                           ; switch strategies available:
  5574                           ; Name         Instructions Cycles
  5575                           ; simple_byte            7     4 (average)
  5576                           ; direct_byte           13     9 (fixed)
  5577                           ; jumptable            263     9 (fixed)
  5578                           ;	Chosen strategy is simple_byte
  5579  031A  0860               	movf	??_I2C_DO_ADDRESS_NACK+1,w
  5580  031B  3A02               	xorlw	2	; case 2
  5581  031C  1903               	skipnz
  5582  031D  2AFF               	goto	l3528
  5583  031E  3A01               	xorlw	1	; case 3
  5584  031F  1903               	skipnz
  5585  0320  2AFF               	goto	l3528
  5586  0321  2B02               	goto	l3532
  5587  0322  0008               	return
  5588  0323                     __end_of_I2C_DO_ADDRESS_NACK:
  5589                           
  5590                           	psect	text28
  5591  05DF                     __ptext28:	
  5592 ;; *************** function _I2C_DO_RESET *****************
  5593 ;; Defined at:
  5594 ;;		line 494 in file "mcc_generated_files/i2c_master.c"
  5595 ;; Parameters:    Size  Location     Type
  5596 ;;		None
  5597 ;; Auto vars:     Size  Location     Type
  5598 ;;		None
  5599 ;; Return value:  Size  Location     Type
  5600 ;;                  1    wreg      enum E3874
  5601 ;; Registers used:
  5602 ;;		wreg, status,2
  5603 ;; Tracked objects:
  5604 ;;		On entry : 0/0
  5605 ;;		On exit  : 0/0
  5606 ;;		Unchanged: 0/0
  5607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5608 ;;      Params:         0       0       0       0       0       0       0       0
  5609 ;;      Locals:         0       0       0       0       0       0       0       0
  5610 ;;      Temps:          0       0       0       0       0       0       0       0
  5611 ;;      Totals:         0       0       0       0       0       0       0       0
  5612 ;;Total ram usage:        0 bytes
  5613 ;; Hardware stack levels used:    1
  5614 ;; Hardware stack levels required when called:    5
  5615 ;; This function calls:
  5616 ;;		Nothing
  5617 ;; This function is called by:
  5618 ;;		_I2C_MasterFsm
  5619 ;; This function uses a non-reentrant model
  5620 ;;
  5621                           
  5622                           
  5623                           ;psect for function _I2C_DO_RESET
  5624  05DF                     _I2C_DO_RESET:
  5625                           
  5626                           ;mcc_generated_files/i2c_master.c: 496:     I2C_Status.busy = 0;
  5627                           
  5628                           ;incstack = 0
  5629                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
  5630  05DF  0020               	movlb	0	; select bank0
  5631  05E0  10BC               	bcf	_I2C_Status+28,1
  5632                           
  5633                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.error = I2C_NOERR;
  5634  05E1  01BB               	clrf	_I2C_Status+27
  5635                           
  5636                           ;mcc_generated_files/i2c_master.c: 498:     return I2C_RESET;
  5637  05E2  300E               	movlw	14
  5638  05E3  0008               	return
  5639  05E4                     __end_of_I2C_DO_RESET:
  5640                           
  5641                           	psect	text29
  5642  05F5                     __ptext29:	
  5643 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  5644 ;; Defined at:
  5645 ;;		line 488 in file "mcc_generated_files/i2c_master.c"
  5646 ;; Parameters:    Size  Location     Type
  5647 ;;		None
  5648 ;; Auto vars:     Size  Location     Type
  5649 ;;		None
  5650 ;; Return value:  Size  Location     Type
  5651 ;;                  1    wreg      enum E3874
  5652 ;; Registers used:
  5653 ;;		wreg, status,2, status,0, pclath, cstack
  5654 ;; Tracked objects:
  5655 ;;		On entry : 0/0
  5656 ;;		On exit  : 0/0
  5657 ;;		Unchanged: 0/0
  5658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5659 ;;      Params:         0       0       0       0       0       0       0       0
  5660 ;;      Locals:         0       0       0       0       0       0       0       0
  5661 ;;      Temps:          0       0       0       0       0       0       0       0
  5662 ;;      Totals:         0       0       0       0       0       0       0       0
  5663 ;;Total ram usage:        0 bytes
  5664 ;; Hardware stack levels used:    1
  5665 ;; Hardware stack levels required when called:    6
  5666 ;; This function calls:
  5667 ;;		_I2C_MasterSendNack
  5668 ;; This function is called by:
  5669 ;;		_I2C_DO_RX
  5670 ;;		_I2C_MasterFsm
  5671 ;; This function uses a non-reentrant model
  5672 ;;
  5673                           
  5674                           
  5675                           ;psect for function _I2C_DO_RX_NACK_RESTART
  5676  05F5                     _I2C_DO_RX_NACK_RESTART:
  5677                           
  5678                           ;mcc_generated_files/i2c_master.c: 490:     I2C_MasterSendNack();
  5679                           
  5680                           ;incstack = 0
  5681                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  5682  05F5  3186  2615         	fcall	_I2C_MasterSendNack
  5683                           
  5684                           ;mcc_generated_files/i2c_master.c: 491:     return I2C_SEND_RESTART;
  5685  05F7  3009               	movlw	9
  5686  05F8  0008               	return
  5687  05F9                     __end_of_I2C_DO_RX_NACK_RESTART:
  5688                           
  5689                           	psect	text30
  5690  05F9                     __ptext30:	
  5691 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  5692 ;; Defined at:
  5693 ;;		line 482 in file "mcc_generated_files/i2c_master.c"
  5694 ;; Parameters:    Size  Location     Type
  5695 ;;		None
  5696 ;; Auto vars:     Size  Location     Type
  5697 ;;		None
  5698 ;; Return value:  Size  Location     Type
  5699 ;;                  1    wreg      enum E3874
  5700 ;; Registers used:
  5701 ;;		wreg, status,2, status,0, pclath, cstack
  5702 ;; Tracked objects:
  5703 ;;		On entry : 0/0
  5704 ;;		On exit  : 0/0
  5705 ;;		Unchanged: 0/0
  5706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5707 ;;      Params:         0       0       0       0       0       0       0       0
  5708 ;;      Locals:         0       0       0       0       0       0       0       0
  5709 ;;      Temps:          0       0       0       0       0       0       0       0
  5710 ;;      Totals:         0       0       0       0       0       0       0       0
  5711 ;;Total ram usage:        0 bytes
  5712 ;; Hardware stack levels used:    1
  5713 ;; Hardware stack levels required when called:    6
  5714 ;; This function calls:
  5715 ;;		_I2C_MasterSendNack
  5716 ;; This function is called by:
  5717 ;;		_I2C_DO_RX
  5718 ;;		_I2C_MasterFsm
  5719 ;; This function uses a non-reentrant model
  5720 ;;
  5721                           
  5722                           
  5723                           ;psect for function _I2C_DO_RX_NACK_STOP
  5724  05F9                     _I2C_DO_RX_NACK_STOP:
  5725                           
  5726                           ;mcc_generated_files/i2c_master.c: 484:     I2C_MasterSendNack();
  5727                           
  5728                           ;incstack = 0
  5729                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  5730  05F9  3186  2615         	fcall	_I2C_MasterSendNack
  5731                           
  5732                           ;mcc_generated_files/i2c_master.c: 485:     return I2C_SEND_STOP;
  5733  05FB  300A               	movlw	10
  5734  05FC  0008               	return
  5735  05FD                     __end_of_I2C_DO_RX_NACK_STOP:
  5736                           
  5737                           	psect	text31
  5738  05FD                     __ptext31:	
  5739 ;; *************** function _I2C_DO_RX_ACK *****************
  5740 ;; Defined at:
  5741 ;;		line 475 in file "mcc_generated_files/i2c_master.c"
  5742 ;; Parameters:    Size  Location     Type
  5743 ;;		None
  5744 ;; Auto vars:     Size  Location     Type
  5745 ;;		None
  5746 ;; Return value:  Size  Location     Type
  5747 ;;                  1    wreg      enum E3874
  5748 ;; Registers used:
  5749 ;;		wreg, status,2, status,0, pclath, cstack
  5750 ;; Tracked objects:
  5751 ;;		On entry : 0/0
  5752 ;;		On exit  : 0/0
  5753 ;;		Unchanged: 0/0
  5754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5755 ;;      Params:         0       0       0       0       0       0       0       0
  5756 ;;      Locals:         0       0       0       0       0       0       0       0
  5757 ;;      Temps:          0       0       0       0       0       0       0       0
  5758 ;;      Totals:         0       0       0       0       0       0       0       0
  5759 ;;Total ram usage:        0 bytes
  5760 ;; Hardware stack levels used:    1
  5761 ;; Hardware stack levels required when called:    6
  5762 ;; This function calls:
  5763 ;;		_I2C_MasterSendAck
  5764 ;; This function is called by:
  5765 ;;		_I2C_MasterFsm
  5766 ;; This function uses a non-reentrant model
  5767 ;;
  5768                           
  5769                           
  5770                           ;psect for function _I2C_DO_RX_ACK
  5771  05FD                     _I2C_DO_RX_ACK:
  5772                           
  5773                           ;mcc_generated_files/i2c_master.c: 477:     I2C_MasterSendAck();
  5774                           
  5775                           ;incstack = 0
  5776                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
  5777  05FD  3186  2611         	fcall	_I2C_MasterSendAck
  5778                           
  5779                           ;mcc_generated_files/i2c_master.c: 478:     return I2C_RCEN;
  5780  05FF  3005               	movlw	5
  5781  0600  0008               	return
  5782  0601                     __end_of_I2C_DO_RX_ACK:
  5783                           
  5784                           	psect	text32
  5785  0601                     __ptext32:	
  5786 ;; *************** function _I2C_DO_SEND_STOP *****************
  5787 ;; Defined at:
  5788 ;;		line 469 in file "mcc_generated_files/i2c_master.c"
  5789 ;; Parameters:    Size  Location     Type
  5790 ;;		None
  5791 ;; Auto vars:     Size  Location     Type
  5792 ;;		None
  5793 ;; Return value:  Size  Location     Type
  5794 ;;                  1    wreg      enum E3874
  5795 ;; Registers used:
  5796 ;;		wreg, status,2, status,0, pclath, cstack
  5797 ;; Tracked objects:
  5798 ;;		On entry : 0/0
  5799 ;;		On exit  : 0/0
  5800 ;;		Unchanged: 0/0
  5801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5802 ;;      Params:         0       0       0       0       0       0       0       0
  5803 ;;      Locals:         0       0       0       0       0       0       0       0
  5804 ;;      Temps:          0       0       0       0       0       0       0       0
  5805 ;;      Totals:         0       0       0       0       0       0       0       0
  5806 ;;Total ram usage:        0 bytes
  5807 ;; Hardware stack levels used:    1
  5808 ;; Hardware stack levels required when called:    6
  5809 ;; This function calls:
  5810 ;;		_I2C_MasterStop
  5811 ;; This function is called by:
  5812 ;;		_I2C_DO_TX
  5813 ;;		_I2C_DO_TX_EMPTY
  5814 ;;		_I2C_DO_ADDRESS_NACK
  5815 ;;		_I2C_MasterFsm
  5816 ;; This function uses a non-reentrant model
  5817 ;;
  5818                           
  5819                           
  5820                           ;psect for function _I2C_DO_SEND_STOP
  5821  0601                     _I2C_DO_SEND_STOP:
  5822                           
  5823                           ;mcc_generated_files/i2c_master.c: 471:     I2C_MasterStop();
  5824                           
  5825                           ;incstack = 0
  5826                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  5827  0601  3186  2622         	fcall	_I2C_MasterStop
  5828                           
  5829                           ;mcc_generated_files/i2c_master.c: 472:     return I2C_IDLE;
  5830  0603  3000               	movlw	0
  5831  0604  0008               	return
  5832  0605                     __end_of_I2C_DO_SEND_STOP:
  5833                           
  5834                           	psect	text33
  5835  0605                     __ptext33:	
  5836 ;; *************** function _I2C_DO_SEND_RESTART *****************
  5837 ;; Defined at:
  5838 ;;		line 463 in file "mcc_generated_files/i2c_master.c"
  5839 ;; Parameters:    Size  Location     Type
  5840 ;;		None
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;		None
  5843 ;; Return value:  Size  Location     Type
  5844 ;;                  1    wreg      enum E3874
  5845 ;; Registers used:
  5846 ;;		wreg, status,2, status,0, pclath, cstack
  5847 ;; Tracked objects:
  5848 ;;		On entry : 0/0
  5849 ;;		On exit  : 0/0
  5850 ;;		Unchanged: 0/0
  5851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5852 ;;      Params:         0       0       0       0       0       0       0       0
  5853 ;;      Locals:         0       0       0       0       0       0       0       0
  5854 ;;      Temps:          0       0       0       0       0       0       0       0
  5855 ;;      Totals:         0       0       0       0       0       0       0       0
  5856 ;;Total ram usage:        0 bytes
  5857 ;; Hardware stack levels used:    1
  5858 ;; Hardware stack levels required when called:    6
  5859 ;; This function calls:
  5860 ;;		_I2C_MasterEnableRestart
  5861 ;; This function is called by:
  5862 ;;		_I2C_DO_TX_EMPTY
  5863 ;;		_I2C_DO_ADDRESS_NACK
  5864 ;;		_I2C_MasterFsm
  5865 ;; This function uses a non-reentrant model
  5866 ;;
  5867                           
  5868                           
  5869                           ;psect for function _I2C_DO_SEND_RESTART
  5870  0605                     _I2C_DO_SEND_RESTART:
  5871                           
  5872                           ;mcc_generated_files/i2c_master.c: 465:     I2C_MasterEnableRestart();
  5873                           
  5874                           ;incstack = 0
  5875                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  5876  0605  3186  2625         	fcall	_I2C_MasterEnableRestart
  5877                           
  5878                           ;mcc_generated_files/i2c_master.c: 466:     return I2C_SEND_ADR_READ;
  5879  0607  3001               	movlw	1
  5880  0608  0008               	return
  5881  0609                     __end_of_I2C_DO_SEND_RESTART:
  5882                           
  5883                           	psect	text34
  5884  0609                     __ptext34:	
  5885 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  5886 ;; Defined at:
  5887 ;;		line 456 in file "mcc_generated_files/i2c_master.c"
  5888 ;; Parameters:    Size  Location     Type
  5889 ;;		None
  5890 ;; Auto vars:     Size  Location     Type
  5891 ;;		None
  5892 ;; Return value:  Size  Location     Type
  5893 ;;                  1    wreg      enum E3874
  5894 ;; Registers used:
  5895 ;;		wreg, status,2, status,0, pclath, cstack
  5896 ;; Tracked objects:
  5897 ;;		On entry : 0/0
  5898 ;;		On exit  : 0/0
  5899 ;;		Unchanged: 0/0
  5900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5901 ;;      Params:         0       0       0       0       0       0       0       0
  5902 ;;      Locals:         0       0       0       0       0       0       0       0
  5903 ;;      Temps:          0       0       0       0       0       0       0       0
  5904 ;;      Totals:         0       0       0       0       0       0       0       0
  5905 ;;Total ram usage:        0 bytes
  5906 ;; Hardware stack levels used:    1
  5907 ;; Hardware stack levels required when called:    6
  5908 ;; This function calls:
  5909 ;;		_I2C_MasterEnableRestart
  5910 ;; This function is called by:
  5911 ;;		_I2C_DO_TX
  5912 ;;		_I2C_MasterFsm
  5913 ;; This function uses a non-reentrant model
  5914 ;;
  5915                           
  5916                           
  5917                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
  5918  0609                     _I2C_DO_SEND_RESTART_WRITE:
  5919                           
  5920                           ;mcc_generated_files/i2c_master.c: 458:     I2C_MasterEnableRestart();
  5921                           
  5922                           ;incstack = 0
  5923                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  5924  0609  3186  2625         	fcall	_I2C_MasterEnableRestart
  5925                           
  5926                           ;mcc_generated_files/i2c_master.c: 459:     return I2C_SEND_ADR_WRITE;
  5927  060B  3002               	movlw	2
  5928  060C  0008               	return
  5929  060D                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  5930                           
  5931                           	psect	text35
  5932  060D                     __ptext35:	
  5933 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  5934 ;; Defined at:
  5935 ;;		line 450 in file "mcc_generated_files/i2c_master.c"
  5936 ;; Parameters:    Size  Location     Type
  5937 ;;		None
  5938 ;; Auto vars:     Size  Location     Type
  5939 ;;		None
  5940 ;; Return value:  Size  Location     Type
  5941 ;;                  1    wreg      enum E3874
  5942 ;; Registers used:
  5943 ;;		wreg, status,2, status,0, pclath, cstack
  5944 ;; Tracked objects:
  5945 ;;		On entry : 0/0
  5946 ;;		On exit  : 0/0
  5947 ;;		Unchanged: 0/0
  5948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5949 ;;      Params:         0       0       0       0       0       0       0       0
  5950 ;;      Locals:         0       0       0       0       0       0       0       0
  5951 ;;      Temps:          0       0       0       0       0       0       0       0
  5952 ;;      Totals:         0       0       0       0       0       0       0       0
  5953 ;;Total ram usage:        0 bytes
  5954 ;; Hardware stack levels used:    1
  5955 ;; Hardware stack levels required when called:    6
  5956 ;; This function calls:
  5957 ;;		_I2C_MasterEnableRestart
  5958 ;; This function is called by:
  5959 ;;		_I2C_DO_TX
  5960 ;;		_I2C_MasterFsm
  5961 ;; This function uses a non-reentrant model
  5962 ;;
  5963                           
  5964                           
  5965                           ;psect for function _I2C_DO_SEND_RESTART_READ
  5966  060D                     _I2C_DO_SEND_RESTART_READ:
  5967                           
  5968                           ;mcc_generated_files/i2c_master.c: 452:     I2C_MasterEnableRestart();
  5969                           
  5970                           ;incstack = 0
  5971                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
  5972  060D  3186  2625         	fcall	_I2C_MasterEnableRestart
  5973                           
  5974                           ;mcc_generated_files/i2c_master.c: 453:     return I2C_SEND_ADR_READ;
  5975  060F  3001               	movlw	1
  5976  0610  0008               	return
  5977  0611                     __end_of_I2C_DO_SEND_RESTART_READ:
  5978                           
  5979                           	psect	text36
  5980  05C7                     __ptext36:	
  5981 ;; *************** function _I2C_DO_RCEN *****************
  5982 ;; Defined at:
  5983 ;;		line 402 in file "mcc_generated_files/i2c_master.c"
  5984 ;; Parameters:    Size  Location     Type
  5985 ;;		None
  5986 ;; Auto vars:     Size  Location     Type
  5987 ;;		None
  5988 ;; Return value:  Size  Location     Type
  5989 ;;                  1    wreg      enum E3874
  5990 ;; Registers used:
  5991 ;;		wreg, status,2, status,0, pclath, cstack
  5992 ;; Tracked objects:
  5993 ;;		On entry : 0/0
  5994 ;;		On exit  : 0/0
  5995 ;;		Unchanged: 0/0
  5996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5997 ;;      Params:         0       0       0       0       0       0       0       0
  5998 ;;      Locals:         0       0       0       0       0       0       0       0
  5999 ;;      Temps:          0       0       0       0       0       0       0       0
  6000 ;;      Totals:         0       0       0       0       0       0       0       0
  6001 ;;Total ram usage:        0 bytes
  6002 ;; Hardware stack levels used:    1
  6003 ;; Hardware stack levels required when called:    6
  6004 ;; This function calls:
  6005 ;;		_I2C_MasterStartRx
  6006 ;; This function is called by:
  6007 ;;		_I2C_MasterFsm
  6008 ;; This function uses a non-reentrant model
  6009 ;;
  6010                           
  6011                           
  6012                           ;psect for function _I2C_DO_RCEN
  6013  05C7                     _I2C_DO_RCEN:
  6014                           
  6015                           ;mcc_generated_files/i2c_master.c: 404:     I2C_Status.addressNackCheck = 0;
  6016                           
  6017                           ;incstack = 0
  6018                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
  6019  05C7  0020               	movlb	0	; select bank0
  6020  05C8  103C               	bcf	_I2C_Status+28,0
  6021                           
  6022                           ;mcc_generated_files/i2c_master.c: 405:     I2C_MasterStartRx();
  6023  05C9  3186  261F         	fcall	_I2C_MasterStartRx
  6024                           
  6025                           ;mcc_generated_files/i2c_master.c: 406:     return I2C_RX;
  6026  05CB  3004               	movlw	4
  6027  05CC  0008               	return
  6028  05CD                     __end_of_I2C_DO_RCEN:
  6029                           
  6030                           	psect	text37
  6031  0214                     __ptext37:	
  6032 ;; *************** function _I2C_DO_RX *****************
  6033 ;; Defined at:
  6034 ;;		line 378 in file "mcc_generated_files/i2c_master.c"
  6035 ;; Parameters:    Size  Location     Type
  6036 ;;		None
  6037 ;; Auto vars:     Size  Location     Type
  6038 ;;		None
  6039 ;; Return value:  Size  Location     Type
  6040 ;;                  1    wreg      enum E3874
  6041 ;; Registers used:
  6042 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6043 ;; Tracked objects:
  6044 ;;		On entry : 0/0
  6045 ;;		On exit  : 0/0
  6046 ;;		Unchanged: 0/0
  6047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6048 ;;      Params:         0       0       0       0       0       0       0       0
  6049 ;;      Locals:         0       0       0       0       0       0       0       0
  6050 ;;      Temps:          0       3       0       0       0       0       0       0
  6051 ;;      Totals:         0       3       0       0       0       0       0       0
  6052 ;;Total ram usage:        3 bytes
  6053 ;; Hardware stack levels used:    1
  6054 ;; Hardware stack levels required when called:    8
  6055 ;; This function calls:
  6056 ;;		Absolute function
  6057 ;;		_I2C_CallbackReturnReset
  6058 ;;		_I2C_CallbackReturnStop
  6059 ;;		_I2C_DO_RX_NACK_RESTART
  6060 ;;		_I2C_DO_RX_NACK_STOP
  6061 ;;		_I2C_MasterGetRxData
  6062 ;;		_I2C_MasterSendAck
  6063 ;;		_rd1RegCompleteHandler
  6064 ;;		_rd2RegCompleteHandler
  6065 ;;		_rdBlkRegCompleteHandler
  6066 ;;		_wr1RegCompleteHandler
  6067 ;;		_wr2RegCompleteHandler
  6068 ;; This function is called by:
  6069 ;;		_I2C_MasterFsm
  6070 ;; This function uses a non-reentrant model
  6071 ;;
  6072                           
  6073                           
  6074                           ;psect for function _I2C_DO_RX
  6075  0214                     _I2C_DO_RX:
  6076                           
  6077                           ;mcc_generated_files/i2c_master.c: 380:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  6078                           
  6079                           ;incstack = 0
  6080                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6081  0214  3186  261C  3182   	fcall	_I2C_MasterGetRxData
  6082  0217  0020               	movlb	0	; select bank0
  6083  0218  00DF               	movwf	??_I2C_DO_RX
  6084  0219  0837               	movf	low ((_I2C_Status| 0+23)),w
  6085  021A  0086               	movwf	6
  6086  021B  0187               	clrf	7
  6087  021C  085F               	movf	??_I2C_DO_RX,w
  6088  021D  0081               	movwf	1
  6089  021E  3001               	movlw	1
  6090  021F  00DF               	movwf	??_I2C_DO_RX
  6091  0220  085F               	movf	??_I2C_DO_RX,w
  6092  0221  07B7               	addwf	low ((_I2C_Status| 0+23)),f
  6093                           
  6094                           ;mcc_generated_files/i2c_master.c: 381:     if(--I2C_Status.data_length)
  6095  0222  3001               	movlw	1
  6096  0223  02B8               	subwf	_I2C_Status+24,f
  6097  0224  3000               	movlw	0
  6098  0225  3BB9               	subwfb	_I2C_Status+25,f
  6099  0226  0838               	movf	_I2C_Status+24,w
  6100  0227  0439               	iorwf	_I2C_Status+25,w
  6101  0228  1903               	btfsc	3,2
  6102  0229  2A2E               	goto	l494
  6103                           
  6104                           ;mcc_generated_files/i2c_master.c: 382:     {;mcc_generated_files/i2c_master.c: 383:    
      +                               I2C_MasterSendAck();
  6105  022A  3186  2611         	fcall	_I2C_MasterSendAck
  6106                           
  6107                           ;mcc_generated_files/i2c_master.c: 384:         return I2C_RCEN;
  6108  022C  3005               	movlw	5
  6109  022D  0008               	return
  6110  022E                     l494:	
  6111                           ;mcc_generated_files/i2c_master.c: 386:     else
  6112                           
  6113                           
  6114                           ;mcc_generated_files/i2c_master.c: 387:     {;mcc_generated_files/i2c_master.c: 388:    
      +                               I2C_Status.bufferFree = 1;
  6115  022E  15BC               	bsf	_I2C_Status+28,3
  6116                           
  6117                           ;mcc_generated_files/i2c_master.c: 389:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  6118  022F  2A36               	goto	l3472
  6119  0230                     l3462:
  6120                           
  6121                           ;mcc_generated_files/i2c_master.c: 393:                 return I2C_DO_RX_NACK_RESTART();
  6122  0230  3185  25F5         	fcall	_I2C_DO_RX_NACK_RESTART
  6123  0232  0008               	return
  6124  0233                     l3466:
  6125                           
  6126                           ;mcc_generated_files/i2c_master.c: 397:                 return I2C_DO_RX_NACK_STOP();
  6127  0233  3185  25F9         	fcall	_I2C_DO_RX_NACK_STOP
  6128  0235  0008               	return
  6129  0236                     l3472:
  6130  0236  082C               	movf	low ((_I2C_Status| 0+12)),w
  6131  0237  00DF               	movwf	??_I2C_DO_RX
  6132  0238  085F               	movf	??_I2C_DO_RX,w
  6133  0239  00DE               	movwf	I2C_CallbackReturnReset@funPtr
  6134  023A  0821               	movf	_I2C_Status+1,w
  6135  023B  008A               	movwf	10
  6136  023C  0820               	movf	_I2C_Status,w
  6137  023D  000A               	callw
  6138  023E  3182               	pagesel	$
  6139  023F  0020               	movlb	0	; select bank0
  6140  0240  00E0               	movwf	??_I2C_DO_RX+1
  6141  0241  01E1               	clrf	??_I2C_DO_RX+2
  6142                           
  6143                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6144                           ; Switch size 1, requested type "simple"
  6145                           ; Number of cases is 1, Range of values is 0 to 0
  6146                           ; switch strategies available:
  6147                           ; Name         Instructions Cycles
  6148                           ; simple_byte            4     3 (average)
  6149                           ; direct_byte            8     6 (fixed)
  6150                           ; jumptable            260     6 (fixed)
  6151                           ;	Chosen strategy is simple_byte
  6152  0242  0861               	movf	??_I2C_DO_RX+2,w
  6153  0243  3A00               	xorlw	0	; case 0
  6154  0244  1903               	skipnz
  6155  0245  2A47               	goto	l4132
  6156  0246  2A33               	goto	l3466
  6157  0247                     l4132:
  6158                           
  6159                           ; Switch size 1, requested type "simple"
  6160                           ; Number of cases is 4, Range of values is 1 to 4
  6161                           ; switch strategies available:
  6162                           ; Name         Instructions Cycles
  6163                           ; simple_byte           13     7 (average)
  6164                           ; direct_byte           17     9 (fixed)
  6165                           ; jumptable            263     9 (fixed)
  6166                           ;	Chosen strategy is simple_byte
  6167  0247  0860               	movf	??_I2C_DO_RX+1,w
  6168  0248  3A01               	xorlw	1	; case 1
  6169  0249  1903               	skipnz
  6170  024A  2A33               	goto	l3466
  6171  024B  3A03               	xorlw	3	; case 2
  6172  024C  1903               	skipnz
  6173  024D  2A30               	goto	l3462
  6174  024E  3A01               	xorlw	1	; case 3
  6175  024F  1903               	skipnz
  6176  0250  2A30               	goto	l3462
  6177  0251  3A07               	xorlw	7	; case 4
  6178  0252  1903               	skipnz
  6179  0253  2A33               	goto	l3466
  6180  0254  2A33               	goto	l3466
  6181  0255  0008               	return
  6182  0256                     __end_of_I2C_DO_RX:
  6183                           
  6184                           	psect	text38
  6185  01C5                     __ptext38:	
  6186 ;; *************** function _I2C_DO_TX *****************
  6187 ;; Defined at:
  6188 ;;		line 354 in file "mcc_generated_files/i2c_master.c"
  6189 ;; Parameters:    Size  Location     Type
  6190 ;;		None
  6191 ;; Auto vars:     Size  Location     Type
  6192 ;;		None
  6193 ;; Return value:  Size  Location     Type
  6194 ;;                  1    wreg      enum E3874
  6195 ;; Registers used:
  6196 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6197 ;; Tracked objects:
  6198 ;;		On entry : 0/0
  6199 ;;		On exit  : 0/0
  6200 ;;		Unchanged: 0/0
  6201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6202 ;;      Params:         0       0       0       0       0       0       0       0
  6203 ;;      Locals:         0       0       0       0       0       0       0       0
  6204 ;;      Temps:          0       3       0       0       0       0       0       0
  6205 ;;      Totals:         0       3       0       0       0       0       0       0
  6206 ;;Total ram usage:        3 bytes
  6207 ;; Hardware stack levels used:    1
  6208 ;; Hardware stack levels required when called:    8
  6209 ;; This function calls:
  6210 ;;		Absolute function
  6211 ;;		_I2C_CallbackReturnReset
  6212 ;;		_I2C_CallbackReturnStop
  6213 ;;		_I2C_DO_SEND_RESTART_READ
  6214 ;;		_I2C_DO_SEND_RESTART_WRITE
  6215 ;;		_I2C_DO_SEND_STOP
  6216 ;;		_I2C_MasterIsNack
  6217 ;;		_I2C_MasterSendTxData
  6218 ;;		_rd1RegCompleteHandler
  6219 ;;		_rd2RegCompleteHandler
  6220 ;;		_rdBlkRegCompleteHandler
  6221 ;;		_wr1RegCompleteHandler
  6222 ;;		_wr2RegCompleteHandler
  6223 ;; This function is called by:
  6224 ;;		_I2C_MasterFsm
  6225 ;; This function uses a non-reentrant model
  6226 ;;
  6227                           
  6228                           
  6229                           ;psect for function _I2C_DO_TX
  6230  01C5                     _I2C_DO_TX:
  6231                           
  6232                           ;mcc_generated_files/i2c_master.c: 356:     if(I2C_MasterIsNack())
  6233                           
  6234                           ;incstack = 0
  6235                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6236  01C5  3185  25CD  3181   	fcall	_I2C_MasterIsNack
  6237  01C8  3A00               	xorlw	0
  6238  01C9  1D03               	btfss	3,2
  6239  01CA  29D5               	goto	l3432
  6240  01CB  29F9               	goto	l478
  6241  01CC                     l3418:
  6242                           
  6243                           ;mcc_generated_files/i2c_master.c: 361:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
  6244  01CC  3186  260D         	fcall	_I2C_DO_SEND_RESTART_READ
  6245  01CE  0008               	return
  6246  01CF                     l3422:
  6247                           
  6248                           ;mcc_generated_files/i2c_master.c: 363:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
  6249  01CF  3186  2609         	fcall	_I2C_DO_SEND_RESTART_WRITE
  6250  01D1  0008               	return
  6251  01D2                     l3426:
  6252                           
  6253                           ;mcc_generated_files/i2c_master.c: 367:                 return I2C_DO_SEND_STOP();
  6254  01D2  3186  2601         	fcall	_I2C_DO_SEND_STOP
  6255  01D4  0008               	return
  6256  01D5                     l3432:
  6257  01D5  0020               	movlb	0	; select bank0
  6258  01D6  082F               	movf	low ((_I2C_Status| 0+15)),w
  6259  01D7  00DF               	movwf	??_I2C_DO_TX
  6260  01D8  085F               	movf	??_I2C_DO_TX,w
  6261  01D9  00DE               	movwf	I2C_CallbackReturnReset@funPtr
  6262  01DA  3006               	movlw	6
  6263  01DB  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  6264  01DC  0086               	movwf	6
  6265  01DD  0187               	clrf	7
  6266  01DE  3F41               	moviw [1]fsr1
  6267  01DF  008A               	movwf	10
  6268  01E0  3F40               	moviw [0]fsr1
  6269  01E1  000A               	callw
  6270  01E2  3181               	pagesel	$
  6271  01E3  0020               	movlb	0	; select bank0
  6272  01E4  00E0               	movwf	??_I2C_DO_TX+1
  6273  01E5  01E1               	clrf	??_I2C_DO_TX+2
  6274                           
  6275                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6276                           ; Switch size 1, requested type "simple"
  6277                           ; Number of cases is 1, Range of values is 0 to 0
  6278                           ; switch strategies available:
  6279                           ; Name         Instructions Cycles
  6280                           ; simple_byte            4     3 (average)
  6281                           ; direct_byte            8     6 (fixed)
  6282                           ; jumptable            260     6 (fixed)
  6283                           ;	Chosen strategy is simple_byte
  6284  01E6  0861               	movf	??_I2C_DO_TX+2,w
  6285  01E7  3A00               	xorlw	0	; case 0
  6286  01E8  1903               	skipnz
  6287  01E9  29EB               	goto	l4134
  6288  01EA  29D2               	goto	l3426
  6289  01EB                     l4134:
  6290                           
  6291                           ; Switch size 1, requested type "simple"
  6292                           ; Number of cases is 4, Range of values is 1 to 4
  6293                           ; switch strategies available:
  6294                           ; Name         Instructions Cycles
  6295                           ; simple_byte           13     7 (average)
  6296                           ; direct_byte           17     9 (fixed)
  6297                           ; jumptable            263     9 (fixed)
  6298                           ;	Chosen strategy is simple_byte
  6299  01EB  0860               	movf	??_I2C_DO_TX+1,w
  6300  01EC  3A01               	xorlw	1	; case 1
  6301  01ED  1903               	skipnz
  6302  01EE  29D2               	goto	l3426
  6303  01EF  3A03               	xorlw	3	; case 2
  6304  01F0  1903               	skipnz
  6305  01F1  29CC               	goto	l3418
  6306  01F2  3A01               	xorlw	1	; case 3
  6307  01F3  1903               	skipnz
  6308  01F4  29CF               	goto	l3422
  6309  01F5  3A07               	xorlw	7	; case 4
  6310  01F6  1903               	skipnz
  6311  01F7  29D2               	goto	l3426
  6312  01F8  29D2               	goto	l3426
  6313  01F9                     l478:	
  6314                           ;mcc_generated_files/i2c_master.c: 370:     else
  6315                           
  6316                           
  6317                           ;mcc_generated_files/i2c_master.c: 371:     {;mcc_generated_files/i2c_master.c: 372:    
      +                               I2C_Status.addressNackCheck = 0;
  6318  01F9  0020               	movlb	0	; select bank0
  6319  01FA  103C               	bcf	_I2C_Status+28,0
  6320                           
  6321                           ;mcc_generated_files/i2c_master.c: 373:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
  6322  01FB  3017               	movlw	23
  6323  01FC  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  6324  01FD  0086               	movwf	6
  6325  01FE  0187               	clrf	7
  6326  01FF  3F40               	moviw [0]fsr1
  6327  0200  0084               	movwf	4
  6328  0201  0185               	clrf	5
  6329  0202  0A81               	incf	1,f
  6330  0203  0800               	movf	0,w
  6331  0204  3185  25D3  3181   	fcall	_I2C_MasterSendTxData
  6332                           
  6333                           ;mcc_generated_files/i2c_master.c: 374:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
  6334  0207  3001               	movlw	1
  6335  0208  0020               	movlb	0	; select bank0
  6336  0209  02B8               	subwf	_I2C_Status+24,f
  6337  020A  3000               	movlw	0
  6338  020B  3BB9               	subwfb	_I2C_Status+25,f
  6339  020C  0838               	movf	_I2C_Status+24,w
  6340  020D  0439               	iorwf	_I2C_Status+25,w
  6341  020E  1D03               	btfss	3,2
  6342  020F  2A12               	goto	l3440
  6343  0210  3006               	movlw	6
  6344  0211  0008               	return
  6345  0212                     l3440:
  6346  0212  3003               	movlw	3
  6347  0213  0008               	return
  6348  0214                     __end_of_I2C_DO_TX:
  6349                           
  6350                           	psect	text39
  6351  05B4                     __ptext39:	
  6352 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  6353 ;; Defined at:
  6354 ;;		line 347 in file "mcc_generated_files/i2c_master.c"
  6355 ;; Parameters:    Size  Location     Type
  6356 ;;		None
  6357 ;; Auto vars:     Size  Location     Type
  6358 ;;		None
  6359 ;; Return value:  Size  Location     Type
  6360 ;;                  1    wreg      enum E3874
  6361 ;; Registers used:
  6362 ;;		wreg, status,2, status,0, pclath, cstack
  6363 ;; Tracked objects:
  6364 ;;		On entry : 0/0
  6365 ;;		On exit  : 0/0
  6366 ;;		Unchanged: 0/0
  6367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6368 ;;      Params:         0       0       0       0       0       0       0       0
  6369 ;;      Locals:         0       0       0       0       0       0       0       0
  6370 ;;      Temps:          0       0       0       0       0       0       0       0
  6371 ;;      Totals:         0       0       0       0       0       0       0       0
  6372 ;;Total ram usage:        0 bytes
  6373 ;; Hardware stack levels used:    1
  6374 ;; Hardware stack levels required when called:    6
  6375 ;; This function calls:
  6376 ;;		_I2C_MasterSendTxData
  6377 ;; This function is called by:
  6378 ;;		_I2C_MasterFsm
  6379 ;; This function uses a non-reentrant model
  6380 ;;
  6381                           
  6382                           
  6383                           ;psect for function _I2C_DO_SEND_ADR_WRITE
  6384  05B4                     _I2C_DO_SEND_ADR_WRITE:
  6385                           
  6386                           ;mcc_generated_files/i2c_master.c: 349:     I2C_Status.addressNackCheck = 1;
  6387                           
  6388                           ;incstack = 0
  6389                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  6390  05B4  0020               	movlb	0	; select bank0
  6391  05B5  143C               	bsf	_I2C_Status+28,0
  6392                           
  6393                           ;mcc_generated_files/i2c_master.c: 350:     I2C_MasterSendTxData(I2C_Status.address << 1
      +                          );
  6394  05B6  3536               	lslf	_I2C_Status+22,w
  6395  05B7  3185  25D3         	fcall	_I2C_MasterSendTxData
  6396                           
  6397                           ;mcc_generated_files/i2c_master.c: 351:     return I2C_TX;
  6398  05B9  3003               	movlw	3
  6399  05BA  0008               	return
  6400  05BB                     __end_of_I2C_DO_SEND_ADR_WRITE:
  6401                           
  6402                           	psect	text40
  6403  05AC                     __ptext40:	
  6404 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  6405 ;; Defined at:
  6406 ;;		line 340 in file "mcc_generated_files/i2c_master.c"
  6407 ;; Parameters:    Size  Location     Type
  6408 ;;		None
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;		None
  6411 ;; Return value:  Size  Location     Type
  6412 ;;                  1    wreg      enum E3874
  6413 ;; Registers used:
  6414 ;;		wreg, status,2, status,0, pclath, cstack
  6415 ;; Tracked objects:
  6416 ;;		On entry : 0/0
  6417 ;;		On exit  : 0/0
  6418 ;;		Unchanged: 0/0
  6419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6420 ;;      Params:         0       0       0       0       0       0       0       0
  6421 ;;      Locals:         0       0       0       0       0       0       0       0
  6422 ;;      Temps:          0       0       0       0       0       0       0       0
  6423 ;;      Totals:         0       0       0       0       0       0       0       0
  6424 ;;Total ram usage:        0 bytes
  6425 ;; Hardware stack levels used:    1
  6426 ;; Hardware stack levels required when called:    6
  6427 ;; This function calls:
  6428 ;;		_I2C_MasterSendTxData
  6429 ;; This function is called by:
  6430 ;;		_I2C_MasterFsm
  6431 ;; This function uses a non-reentrant model
  6432 ;;
  6433                           
  6434                           
  6435                           ;psect for function _I2C_DO_SEND_ADR_READ
  6436  05AC                     _I2C_DO_SEND_ADR_READ:
  6437                           
  6438                           ;mcc_generated_files/i2c_master.c: 342:     I2C_Status.addressNackCheck = 1;
  6439                           
  6440                           ;incstack = 0
  6441                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  6442  05AC  0020               	movlb	0	; select bank0
  6443  05AD  143C               	bsf	_I2C_Status+28,0
  6444                           
  6445                           ;mcc_generated_files/i2c_master.c: 343:     I2C_MasterSendTxData(I2C_Status.address << 1
      +                           | 1);
  6446  05AE  1403               	setc
  6447  05AF  0D36               	rlf	_I2C_Status+22,w
  6448  05B0  3185  25D3         	fcall	_I2C_MasterSendTxData
  6449                           
  6450                           ;mcc_generated_files/i2c_master.c: 344:     return I2C_RCEN;
  6451  05B2  3005               	movlw	5
  6452  05B3  0008               	return
  6453  05B4                     __end_of_I2C_DO_SEND_ADR_READ:
  6454                           
  6455                           	psect	text41
  6456  05E4                     __ptext41:	
  6457 ;; *************** function _I2C_DO_IDLE *****************
  6458 ;; Defined at:
  6459 ;;		line 333 in file "mcc_generated_files/i2c_master.c"
  6460 ;; Parameters:    Size  Location     Type
  6461 ;;		None
  6462 ;; Auto vars:     Size  Location     Type
  6463 ;;		None
  6464 ;; Return value:  Size  Location     Type
  6465 ;;                  1    wreg      enum E3874
  6466 ;; Registers used:
  6467 ;;		wreg, status,2
  6468 ;; Tracked objects:
  6469 ;;		On entry : 0/0
  6470 ;;		On exit  : 0/0
  6471 ;;		Unchanged: 0/0
  6472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6473 ;;      Params:         0       0       0       0       0       0       0       0
  6474 ;;      Locals:         0       0       0       0       0       0       0       0
  6475 ;;      Temps:          0       0       0       0       0       0       0       0
  6476 ;;      Totals:         0       0       0       0       0       0       0       0
  6477 ;;Total ram usage:        0 bytes
  6478 ;; Hardware stack levels used:    1
  6479 ;; Hardware stack levels required when called:    5
  6480 ;; This function calls:
  6481 ;;		Nothing
  6482 ;; This function is called by:
  6483 ;;		_I2C_MasterFsm
  6484 ;; This function uses a non-reentrant model
  6485 ;;
  6486                           
  6487                           
  6488                           ;psect for function _I2C_DO_IDLE
  6489  05E4                     _I2C_DO_IDLE:
  6490                           
  6491                           ;mcc_generated_files/i2c_master.c: 335:     I2C_Status.busy = 0;
  6492                           
  6493                           ;incstack = 0
  6494                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
  6495  05E4  0020               	movlb	0	; select bank0
  6496  05E5  10BC               	bcf	_I2C_Status+28,1
  6497                           
  6498                           ;mcc_generated_files/i2c_master.c: 336:     I2C_Status.error = I2C_NOERR;
  6499  05E6  01BB               	clrf	_I2C_Status+27
  6500                           
  6501                           ;mcc_generated_files/i2c_master.c: 337:     return I2C_RESET;
  6502  05E7  300E               	movlw	14
  6503  05E8  0008               	return
  6504  05E9                     __end_of_I2C_DO_IDLE:
  6505                           
  6506                           	psect	text42
  6507  02CB                     __ptext42:	
  6508 ;; *************** function _I2C_DO_TX_EMPTY *****************
  6509 ;; Defined at:
  6510 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
  6511 ;; Parameters:    Size  Location     Type
  6512 ;;		None
  6513 ;; Auto vars:     Size  Location     Type
  6514 ;;		None
  6515 ;; Return value:  Size  Location     Type
  6516 ;;                  1    wreg      enum E3874
  6517 ;; Registers used:
  6518 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6519 ;; Tracked objects:
  6520 ;;		On entry : 0/0
  6521 ;;		On exit  : 0/0
  6522 ;;		Unchanged: 0/0
  6523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6524 ;;      Params:         0       0       0       0       0       0       0       0
  6525 ;;      Locals:         0       0       0       0       0       0       0       0
  6526 ;;      Temps:          0       3       0       0       0       0       0       0
  6527 ;;      Totals:         0       3       0       0       0       0       0       0
  6528 ;;Total ram usage:        3 bytes
  6529 ;; Hardware stack levels used:    1
  6530 ;; Hardware stack levels required when called:    8
  6531 ;; This function calls:
  6532 ;;		Absolute function
  6533 ;;		_I2C_CallbackReturnReset
  6534 ;;		_I2C_CallbackReturnStop
  6535 ;;		_I2C_DO_SEND_RESTART
  6536 ;;		_I2C_DO_SEND_STOP
  6537 ;;		_I2C_MasterSetIrq
  6538 ;;		_rd1RegCompleteHandler
  6539 ;;		_rd2RegCompleteHandler
  6540 ;;		_rdBlkRegCompleteHandler
  6541 ;;		_wr1RegCompleteHandler
  6542 ;;		_wr2RegCompleteHandler
  6543 ;; This function is called by:
  6544 ;;		_I2C_MasterFsm
  6545 ;; This function uses a non-reentrant model
  6546 ;;
  6547                           
  6548                           
  6549                           ;psect for function _I2C_DO_TX_EMPTY
  6550  02CB                     _I2C_DO_TX_EMPTY:
  6551                           
  6552                           ;mcc_generated_files/i2c_master.c: 411:     I2C_Status.bufferFree = 1;
  6553                           
  6554                           ;incstack = 0
  6555                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6556  02CB  0020               	movlb	0	; select bank0
  6557  02CC  15BC               	bsf	_I2C_Status+28,3
  6558                           
  6559                           ;mcc_generated_files/i2c_master.c: 412:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  6560  02CD  2AD8               	goto	l3504
  6561  02CE                     l3488:
  6562                           
  6563                           ;mcc_generated_files/i2c_master.c: 416:             return I2C_DO_SEND_RESTART();
  6564  02CE  3186  2605         	fcall	_I2C_DO_SEND_RESTART
  6565  02D0  0008               	return
  6566  02D1                     l3492:
  6567                           
  6568                           ;mcc_generated_files/i2c_master.c: 418:             I2C_MasterSetIrq();
  6569  02D1  3186  2619         	fcall	_I2C_MasterSetIrq
  6570                           
  6571                           ;mcc_generated_files/i2c_master.c: 419:             return I2C_TX;
  6572  02D3  3003               	movlw	3
  6573  02D4  0008               	return
  6574  02D5                     l3498:
  6575                           
  6576                           ;mcc_generated_files/i2c_master.c: 422:             return I2C_DO_SEND_STOP();
  6577  02D5  3186  2601         	fcall	_I2C_DO_SEND_STOP
  6578  02D7  0008               	return
  6579  02D8                     l3504:
  6580  02D8  082C               	movf	low ((_I2C_Status| 0+12)),w
  6581  02D9  00DF               	movwf	??_I2C_DO_TX_EMPTY
  6582  02DA  085F               	movf	??_I2C_DO_TX_EMPTY,w
  6583  02DB  00DE               	movwf	I2C_CallbackReturnReset@funPtr
  6584  02DC  0821               	movf	_I2C_Status+1,w
  6585  02DD  008A               	movwf	10
  6586  02DE  0820               	movf	_I2C_Status,w
  6587  02DF  000A               	callw
  6588  02E0  3182               	pagesel	$
  6589  02E1  0020               	movlb	0	; select bank0
  6590  02E2  00E0               	movwf	??_I2C_DO_TX_EMPTY+1
  6591  02E3  01E1               	clrf	??_I2C_DO_TX_EMPTY+2
  6592                           
  6593                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6594                           ; Switch size 1, requested type "simple"
  6595                           ; Number of cases is 1, Range of values is 0 to 0
  6596                           ; switch strategies available:
  6597                           ; Name         Instructions Cycles
  6598                           ; simple_byte            4     3 (average)
  6599                           ; direct_byte            8     6 (fixed)
  6600                           ; jumptable            260     6 (fixed)
  6601                           ;	Chosen strategy is simple_byte
  6602  02E4  0861               	movf	??_I2C_DO_TX_EMPTY+2,w
  6603  02E5  3A00               	xorlw	0	; case 0
  6604  02E6  1903               	skipnz
  6605  02E7  2AE9               	goto	l4136
  6606  02E8  2AD5               	goto	l3498
  6607  02E9                     l4136:
  6608                           
  6609                           ; Switch size 1, requested type "simple"
  6610                           ; Number of cases is 4, Range of values is 1 to 4
  6611                           ; switch strategies available:
  6612                           ; Name         Instructions Cycles
  6613                           ; simple_byte           13     7 (average)
  6614                           ; direct_byte           17     9 (fixed)
  6615                           ; jumptable            263     9 (fixed)
  6616                           ;	Chosen strategy is simple_byte
  6617  02E9  0860               	movf	??_I2C_DO_TX_EMPTY+1,w
  6618  02EA  3A01               	xorlw	1	; case 1
  6619  02EB  1903               	skipnz
  6620  02EC  2AD5               	goto	l3498
  6621  02ED  3A03               	xorlw	3	; case 2
  6622  02EE  1903               	skipnz
  6623  02EF  2ACE               	goto	l3488
  6624  02F0  3A01               	xorlw	1	; case 3
  6625  02F1  1903               	skipnz
  6626  02F2  2ACE               	goto	l3488
  6627  02F3  3A07               	xorlw	7	; case 4
  6628  02F4  1903               	skipnz
  6629  02F5  2AD1               	goto	l3492
  6630  02F6  2AD5               	goto	l3498
  6631  02F7  0008               	return
  6632  02F8                     __end_of_I2C_DO_TX_EMPTY:
  6633                           
  6634                           	psect	text43
  6635  0619                     __ptext43:	
  6636 ;; *************** function _I2C_MasterSetIrq *****************
  6637 ;; Defined at:
  6638 ;;		line 645 in file "mcc_generated_files/i2c_master.c"
  6639 ;; Parameters:    Size  Location     Type
  6640 ;;		None
  6641 ;; Auto vars:     Size  Location     Type
  6642 ;;		None
  6643 ;; Return value:  Size  Location     Type
  6644 ;;                  1    wreg      void 
  6645 ;; Registers used:
  6646 ;;		None
  6647 ;; Tracked objects:
  6648 ;;		On entry : 0/0
  6649 ;;		On exit  : 0/0
  6650 ;;		Unchanged: 0/0
  6651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6652 ;;      Params:         0       0       0       0       0       0       0       0
  6653 ;;      Locals:         0       0       0       0       0       0       0       0
  6654 ;;      Temps:          0       0       0       0       0       0       0       0
  6655 ;;      Totals:         0       0       0       0       0       0       0       0
  6656 ;;Total ram usage:        0 bytes
  6657 ;; Hardware stack levels used:    1
  6658 ;; Hardware stack levels required when called:    5
  6659 ;; This function calls:
  6660 ;;		Nothing
  6661 ;; This function is called by:
  6662 ;;		_I2C_DO_TX_EMPTY
  6663 ;; This function uses a non-reentrant model
  6664 ;;
  6665                           
  6666                           
  6667                           ;psect for function _I2C_MasterSetIrq
  6668  0619                     _I2C_MasterSetIrq:
  6669                           
  6670                           ;mcc_generated_files/i2c_master.c: 647:     PIR1bits.SSP1IF = 1;
  6671                           
  6672                           ;incstack = 0
  6673                           ; Regs used in _I2C_MasterSetIrq: []
  6674  0619  0020               	movlb	0	; select bank0
  6675  061A  1591               	bsf	17,3	;volatile
  6676  061B  0008               	return
  6677  061C                     __end_of_I2C_MasterSetIrq:
  6678                           
  6679                           	psect	text44
  6680  05CD                     __ptext44:	
  6681 ;; *************** function _I2C_MasterIsNack *****************
  6682 ;; Defined at:
  6683 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
  6684 ;; Parameters:    Size  Location     Type
  6685 ;;		None
  6686 ;; Auto vars:     Size  Location     Type
  6687 ;;		None
  6688 ;; Return value:  Size  Location     Type
  6689 ;;                  1    wreg      _Bool 
  6690 ;; Registers used:
  6691 ;;		wreg, status,2, status,0
  6692 ;; Tracked objects:
  6693 ;;		On entry : 0/0
  6694 ;;		On exit  : 0/0
  6695 ;;		Unchanged: 0/0
  6696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6697 ;;      Params:         0       0       0       0       0       0       0       0
  6698 ;;      Locals:         0       0       0       0       0       0       0       0
  6699 ;;      Temps:          0       0       0       0       0       0       0       0
  6700 ;;      Totals:         0       0       0       0       0       0       0       0
  6701 ;;Total ram usage:        0 bytes
  6702 ;; Hardware stack levels used:    1
  6703 ;; Hardware stack levels required when called:    5
  6704 ;; This function calls:
  6705 ;;		Nothing
  6706 ;; This function is called by:
  6707 ;;		_I2C_MasterFsm
  6708 ;;		_I2C_DO_TX
  6709 ;; This function uses a non-reentrant model
  6710 ;;
  6711                           
  6712                           
  6713                           ;psect for function _I2C_MasterIsNack
  6714  05CD                     _I2C_MasterIsNack:
  6715                           
  6716                           ;mcc_generated_files/i2c_master.c: 600:     return SSP1CON2bits.ACKSTAT;
  6717                           
  6718                           ;incstack = 0
  6719                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
  6720  05CD  0024               	movlb	4	; select bank4
  6721  05CE  0E16               	swapf	22,w	;volatile
  6722  05CF  0C89               	rrf	9,f
  6723  05D0  0C89               	rrf	9,f
  6724  05D1  3901               	andlw	1
  6725  05D2  0008               	return
  6726  05D3                     __end_of_I2C_MasterIsNack:
  6727                           
  6728                           	psect	text45
  6729  05D3                     __ptext45:	
  6730 ;; *************** function _I2C_MasterSendTxData *****************
  6731 ;; Defined at:
  6732 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
  6733 ;; Parameters:    Size  Location     Type
  6734 ;;  data            1    wreg     unsigned char 
  6735 ;; Auto vars:     Size  Location     Type
  6736 ;;  data            1    0[BANK0 ] unsigned char 
  6737 ;; Return value:  Size  Location     Type
  6738 ;;                  1    wreg      void 
  6739 ;; Registers used:
  6740 ;;		wreg
  6741 ;; Tracked objects:
  6742 ;;		On entry : 0/0
  6743 ;;		On exit  : 0/0
  6744 ;;		Unchanged: 0/0
  6745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6746 ;;      Params:         0       0       0       0       0       0       0       0
  6747 ;;      Locals:         0       1       0       0       0       0       0       0
  6748 ;;      Temps:          0       0       0       0       0       0       0       0
  6749 ;;      Totals:         0       1       0       0       0       0       0       0
  6750 ;;Total ram usage:        1 bytes
  6751 ;; Hardware stack levels used:    1
  6752 ;; Hardware stack levels required when called:    5
  6753 ;; This function calls:
  6754 ;;		Nothing
  6755 ;; This function is called by:
  6756 ;;		_I2C_DO_SEND_ADR_READ
  6757 ;;		_I2C_DO_SEND_ADR_WRITE
  6758 ;;		_I2C_DO_TX
  6759 ;; This function uses a non-reentrant model
  6760 ;;
  6761                           
  6762                           
  6763                           ;psect for function _I2C_MasterSendTxData
  6764  05D3                     _I2C_MasterSendTxData:
  6765                           
  6766                           ;incstack = 0
  6767                           ; Regs used in _I2C_MasterSendTxData: [wreg]
  6768                           ;I2C_MasterSendTxData@data stored from wreg
  6769  05D3  0020               	movlb	0	; select bank0
  6770  05D4  00D5               	movwf	I2C_MasterSendTxData@data
  6771                           
  6772                           ;mcc_generated_files/i2c_master.c: 568: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 569: {;mcc_generated_files/i2c_
      +                          master.c: 570:     SSP1BUF = data;
  6773  05D5  0855               	movf	I2C_MasterSendTxData@data,w
  6774  05D6  0024               	movlb	4	; select bank4
  6775  05D7  0091               	movwf	17	;volatile
  6776  05D8  0008               	return
  6777  05D9                     __end_of_I2C_MasterSendTxData:
  6778                           
  6779                           	psect	text46
  6780  0611                     __ptext46:	
  6781 ;; *************** function _I2C_MasterSendAck *****************
  6782 ;; Defined at:
  6783 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
  6784 ;; Parameters:    Size  Location     Type
  6785 ;;		None
  6786 ;; Auto vars:     Size  Location     Type
  6787 ;;		None
  6788 ;; Return value:  Size  Location     Type
  6789 ;;                  1    wreg      void 
  6790 ;; Registers used:
  6791 ;;		None
  6792 ;; Tracked objects:
  6793 ;;		On entry : 0/0
  6794 ;;		On exit  : 0/0
  6795 ;;		Unchanged: 0/0
  6796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6797 ;;      Params:         0       0       0       0       0       0       0       0
  6798 ;;      Locals:         0       0       0       0       0       0       0       0
  6799 ;;      Temps:          0       0       0       0       0       0       0       0
  6800 ;;      Totals:         0       0       0       0       0       0       0       0
  6801 ;;Total ram usage:        0 bytes
  6802 ;; Hardware stack levels used:    1
  6803 ;; Hardware stack levels required when called:    5
  6804 ;; This function calls:
  6805 ;;		Nothing
  6806 ;; This function is called by:
  6807 ;;		_I2C_DO_RX
  6808 ;;		_I2C_DO_RX_ACK
  6809 ;; This function uses a non-reentrant model
  6810 ;;
  6811                           
  6812                           
  6813                           ;psect for function _I2C_MasterSendAck
  6814  0611                     _I2C_MasterSendAck:
  6815                           
  6816                           ;mcc_generated_files/i2c_master.c: 605:     SSP1CON2bits.ACKDT = 0;
  6817                           
  6818                           ;incstack = 0
  6819                           ; Regs used in _I2C_MasterSendAck: []
  6820  0611  0024               	movlb	4	; select bank4
  6821  0612  1296               	bcf	22,5	;volatile
  6822                           
  6823                           ;mcc_generated_files/i2c_master.c: 606:     SSP1CON2bits.ACKEN = 1;
  6824  0613  1616               	bsf	22,4	;volatile
  6825  0614  0008               	return
  6826  0615                     __end_of_I2C_MasterSendAck:
  6827                           
  6828                           	psect	text47
  6829  061C                     __ptext47:	
  6830 ;; *************** function _I2C_MasterGetRxData *****************
  6831 ;; Defined at:
  6832 ;;		line 563 in file "mcc_generated_files/i2c_master.c"
  6833 ;; Parameters:    Size  Location     Type
  6834 ;;		None
  6835 ;; Auto vars:     Size  Location     Type
  6836 ;;		None
  6837 ;; Return value:  Size  Location     Type
  6838 ;;                  1    wreg      unsigned char 
  6839 ;; Registers used:
  6840 ;;		wreg
  6841 ;; Tracked objects:
  6842 ;;		On entry : 0/0
  6843 ;;		On exit  : 0/0
  6844 ;;		Unchanged: 0/0
  6845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6846 ;;      Params:         0       0       0       0       0       0       0       0
  6847 ;;      Locals:         0       0       0       0       0       0       0       0
  6848 ;;      Temps:          0       0       0       0       0       0       0       0
  6849 ;;      Totals:         0       0       0       0       0       0       0       0
  6850 ;;Total ram usage:        0 bytes
  6851 ;; Hardware stack levels used:    1
  6852 ;; Hardware stack levels required when called:    5
  6853 ;; This function calls:
  6854 ;;		Nothing
  6855 ;; This function is called by:
  6856 ;;		_I2C_DO_RX
  6857 ;; This function uses a non-reentrant model
  6858 ;;
  6859                           
  6860                           
  6861                           ;psect for function _I2C_MasterGetRxData
  6862  061C                     _I2C_MasterGetRxData:
  6863                           
  6864                           ;mcc_generated_files/i2c_master.c: 565:     return SSP1BUF;
  6865                           
  6866                           ;incstack = 0
  6867                           ; Regs used in _I2C_MasterGetRxData: [wreg]
  6868  061C  0024               	movlb	4	; select bank4
  6869  061D  0811               	movf	17,w	;volatile
  6870  061E  0008               	return
  6871  061F                     __end_of_I2C_MasterGetRxData:
  6872                           
  6873                           	psect	text48
  6874  0615                     __ptext48:	
  6875 ;; *************** function _I2C_MasterSendNack *****************
  6876 ;; Defined at:
  6877 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
  6878 ;; Parameters:    Size  Location     Type
  6879 ;;		None
  6880 ;; Auto vars:     Size  Location     Type
  6881 ;;		None
  6882 ;; Return value:  Size  Location     Type
  6883 ;;                  1    wreg      void 
  6884 ;; Registers used:
  6885 ;;		None
  6886 ;; Tracked objects:
  6887 ;;		On entry : 0/0
  6888 ;;		On exit  : 0/0
  6889 ;;		Unchanged: 0/0
  6890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6891 ;;      Params:         0       0       0       0       0       0       0       0
  6892 ;;      Locals:         0       0       0       0       0       0       0       0
  6893 ;;      Temps:          0       0       0       0       0       0       0       0
  6894 ;;      Totals:         0       0       0       0       0       0       0       0
  6895 ;;Total ram usage:        0 bytes
  6896 ;; Hardware stack levels used:    1
  6897 ;; Hardware stack levels required when called:    5
  6898 ;; This function calls:
  6899 ;;		Nothing
  6900 ;; This function is called by:
  6901 ;;		_I2C_DO_RX_NACK_STOP
  6902 ;;		_I2C_DO_RX_NACK_RESTART
  6903 ;; This function uses a non-reentrant model
  6904 ;;
  6905                           
  6906                           
  6907                           ;psect for function _I2C_MasterSendNack
  6908  0615                     _I2C_MasterSendNack:
  6909                           
  6910                           ;mcc_generated_files/i2c_master.c: 611:     SSP1CON2bits.ACKDT = 1;
  6911                           
  6912                           ;incstack = 0
  6913                           ; Regs used in _I2C_MasterSendNack: []
  6914  0615  0024               	movlb	4	; select bank4
  6915  0616  1696               	bsf	22,5	;volatile
  6916                           
  6917                           ;mcc_generated_files/i2c_master.c: 612:     SSP1CON2bits.ACKEN = 1;
  6918  0617  1616               	bsf	22,4	;volatile
  6919  0618  0008               	return
  6920  0619                     __end_of_I2C_MasterSendNack:
  6921                           
  6922                           	psect	text49
  6923  061F                     __ptext49:	
  6924 ;; *************** function _I2C_MasterStartRx *****************
  6925 ;; Defined at:
  6926 ;;		line 583 in file "mcc_generated_files/i2c_master.c"
  6927 ;; Parameters:    Size  Location     Type
  6928 ;;		None
  6929 ;; Auto vars:     Size  Location     Type
  6930 ;;		None
  6931 ;; Return value:  Size  Location     Type
  6932 ;;                  1    wreg      void 
  6933 ;; Registers used:
  6934 ;;		None
  6935 ;; Tracked objects:
  6936 ;;		On entry : 0/0
  6937 ;;		On exit  : 0/0
  6938 ;;		Unchanged: 0/0
  6939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6940 ;;      Params:         0       0       0       0       0       0       0       0
  6941 ;;      Locals:         0       0       0       0       0       0       0       0
  6942 ;;      Temps:          0       0       0       0       0       0       0       0
  6943 ;;      Totals:         0       0       0       0       0       0       0       0
  6944 ;;Total ram usage:        0 bytes
  6945 ;; Hardware stack levels used:    1
  6946 ;; Hardware stack levels required when called:    5
  6947 ;; This function calls:
  6948 ;;		Nothing
  6949 ;; This function is called by:
  6950 ;;		_I2C_DO_RCEN
  6951 ;; This function uses a non-reentrant model
  6952 ;;
  6953                           
  6954                           
  6955                           ;psect for function _I2C_MasterStartRx
  6956  061F                     _I2C_MasterStartRx:
  6957                           
  6958                           ;mcc_generated_files/i2c_master.c: 585:     SSP1CON2bits.RCEN = 1;
  6959                           
  6960                           ;incstack = 0
  6961                           ; Regs used in _I2C_MasterStartRx: []
  6962  061F  0024               	movlb	4	; select bank4
  6963  0620  1596               	bsf	22,3	;volatile
  6964  0621  0008               	return
  6965  0622                     __end_of_I2C_MasterStartRx:
  6966                           
  6967                           	psect	text50
  6968  0636                     __ptext50:	
  6969 ;; *************** function _I2C_CallbackReturnReset *****************
  6970 ;; Defined at:
  6971 ;;		line 525 in file "mcc_generated_files/i2c_master.c"
  6972 ;; Parameters:    Size  Location     Type
  6973 ;;  funPtr          1    9[BANK0 ] PTR void 
  6974 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6975 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6976 ;; Auto vars:     Size  Location     Type
  6977 ;;		None
  6978 ;; Return value:  Size  Location     Type
  6979 ;;                  1    wreg      enum E358
  6980 ;; Registers used:
  6981 ;;		wreg
  6982 ;; Tracked objects:
  6983 ;;		On entry : 0/0
  6984 ;;		On exit  : 0/0
  6985 ;;		Unchanged: 0/0
  6986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6987 ;;      Params:         0       1       0       0       0       0       0       0
  6988 ;;      Locals:         0       0       0       0       0       0       0       0
  6989 ;;      Temps:          0       0       0       0       0       0       0       0
  6990 ;;      Totals:         0       1       0       0       0       0       0       0
  6991 ;;Total ram usage:        1 bytes
  6992 ;; Hardware stack levels used:    1
  6993 ;; Hardware stack levels required when called:    5
  6994 ;; This function calls:
  6995 ;;		Nothing
  6996 ;; This function is called by:
  6997 ;;		_I2C_Open
  6998 ;;		_I2C_DO_TX
  6999 ;;		_I2C_DO_RX
  7000 ;;		_I2C_DO_TX_EMPTY
  7001 ;;		_I2C_DO_ADDRESS_NACK
  7002 ;;		_I2C_DO_RX_EMPTY
  7003 ;; This function uses a non-reentrant model
  7004 ;;
  7005                           
  7006                           
  7007                           ;psect for function _I2C_CallbackReturnReset
  7008  0636                     _I2C_CallbackReturnReset:
  7009                           
  7010                           ;mcc_generated_files/i2c_master.c: 525: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 526: {;mcc_generated_files/i2c_master.c: 527:  
      +                             return I2C_RESET_LINK;
  7011                           
  7012                           ;incstack = 0
  7013                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
  7014  0636  3005               	movlw	5
  7015  0637  0008               	return
  7016  0638                     __end_of_I2C_CallbackReturnReset:
  7017                           
  7018                           	psect	text51
  7019  0638                     __ptext51:	
  7020 ;; *************** function _I2C_CallbackReturnStop *****************
  7021 ;; Defined at:
  7022 ;;		line 520 in file "mcc_generated_files/i2c_master.c"
  7023 ;; Parameters:    Size  Location     Type
  7024 ;;  funPtr          1    9[BANK0 ] PTR void 
  7025 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7026 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7027 ;; Auto vars:     Size  Location     Type
  7028 ;;		None
  7029 ;; Return value:  Size  Location     Type
  7030 ;;                  1    wreg      enum E358
  7031 ;; Registers used:
  7032 ;;		wreg
  7033 ;; Tracked objects:
  7034 ;;		On entry : 0/0
  7035 ;;		On exit  : 0/0
  7036 ;;		Unchanged: 0/0
  7037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7038 ;;      Params:         0       1       0       0       0       0       0       0
  7039 ;;      Locals:         0       0       0       0       0       0       0       0
  7040 ;;      Temps:          0       0       0       0       0       0       0       0
  7041 ;;      Totals:         0       1       0       0       0       0       0       0
  7042 ;;Total ram usage:        1 bytes
  7043 ;; Hardware stack levels used:    1
  7044 ;; Hardware stack levels required when called:    5
  7045 ;; This function calls:
  7046 ;;		Nothing
  7047 ;; This function is called by:
  7048 ;;		_I2C_Open
  7049 ;;		_I2C_SetCallback
  7050 ;;		_I2C_DO_TX
  7051 ;;		_I2C_DO_RX
  7052 ;;		_I2C_DO_TX_EMPTY
  7053 ;;		_I2C_DO_ADDRESS_NACK
  7054 ;;		_I2C_DO_RX_EMPTY
  7055 ;; This function uses a non-reentrant model
  7056 ;;
  7057                           
  7058                           
  7059                           ;psect for function _I2C_CallbackReturnStop
  7060  0638                     _I2C_CallbackReturnStop:
  7061                           
  7062                           ;mcc_generated_files/i2c_master.c: 520: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 521: {;mcc_generated_files/i2c_master.c: 522:   
      +                            return I2C_STOP;
  7063                           
  7064                           ;incstack = 0
  7065                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
  7066  0638  3001               	movlw	1
  7067  0639  0008               	return
  7068  063A                     __end_of_I2C_CallbackReturnStop:
  7069                           
  7070                           	psect	text52
  7071  043A                     __ptext52:	
  7072 ;; *************** function _rdBlkRegCompleteHandler *****************
  7073 ;; Defined at:
  7074 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
  7075 ;; Parameters:    Size  Location     Type
  7076 ;;  ptr             1    9[BANK0 ] PTR void 
  7077 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7078 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7079 ;; Auto vars:     Size  Location     Type
  7080 ;;		None
  7081 ;; Return value:  Size  Location     Type
  7082 ;;                  1    wreg      enum E358
  7083 ;; Registers used:
  7084 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7085 ;; Tracked objects:
  7086 ;;		On entry : 0/0
  7087 ;;		On exit  : 0/0
  7088 ;;		Unchanged: 0/0
  7089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7090 ;;      Params:         0       1       0       0       0       0       0       0
  7091 ;;      Locals:         0       0       0       0       0       0       0       0
  7092 ;;      Temps:          0       0       0       0       0       0       0       0
  7093 ;;      Totals:         0       1       0       0       0       0       0       0
  7094 ;;Total ram usage:        1 bytes
  7095 ;; Hardware stack levels used:    1
  7096 ;; Hardware stack levels required when called:    7
  7097 ;; This function calls:
  7098 ;;		_I2C_SetBuffer
  7099 ;;		_I2C_SetDataCompleteCallback
  7100 ;; This function is called by:
  7101 ;;		_I2C_ReadDataBlock
  7102 ;;		_I2C_DO_TX
  7103 ;;		_I2C_DO_RX
  7104 ;;		_I2C_DO_TX_EMPTY
  7105 ;;		_I2C_DO_ADDRESS_NACK
  7106 ;;		_I2C_DO_RX_EMPTY
  7107 ;; This function uses a non-reentrant model
  7108 ;;
  7109                           
  7110                           
  7111                           ;psect for function _rdBlkRegCompleteHandler
  7112  043A                     _rdBlkRegCompleteHandler:
  7113                           
  7114                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
  7115                           
  7116                           ;incstack = 0
  7117                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  7118  043A  0020               	movlb	0	; select bank0
  7119  043B  085E               	movf	rdBlkRegCompleteHandler@ptr,w
  7120  043C  0086               	movwf	6
  7121  043D  0187               	clrf	7
  7122  043E  3F40               	moviw [0]fsr1
  7123  043F  00D5               	movwf	I2C_SetBuffer@bufferSize
  7124  0440  3F41               	moviw [1]fsr1
  7125  0441  00D6               	movwf	I2C_SetBuffer@bufferSize+1
  7126  0442  085E               	movf	rdBlkRegCompleteHandler@ptr,w
  7127  0443  3E02               	addlw	2
  7128  0444  0086               	movwf	6
  7129  0445  0187               	clrf	7
  7130  0446  0801               	movf	1,w
  7131  0447  3185  2523  3184   	fcall	_I2C_SetBuffer
  7132                           
  7133                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7134  044A  3000               	movlw	0
  7135  044B  0020               	movlb	0	; select bank0
  7136  044C  00DA               	movwf	I2C_SetDataCompleteCallback@cb
  7137  044D  00DB               	movwf	I2C_SetDataCompleteCallback@cb+1
  7138  044E  01DC               	clrf	I2C_SetDataCompleteCallback@ptr
  7139  044F  3185  2531         	fcall	_I2C_SetDataCompleteCallback
  7140                           
  7141                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
  7142  0451  3002               	movlw	2
  7143  0452  0008               	return
  7144  0453                     __end_of_rdBlkRegCompleteHandler:
  7145                           
  7146                           	psect	text53
  7147  04BC                     __ptext53:	
  7148 ;; *************** function _wr1RegCompleteHandler *****************
  7149 ;; Defined at:
  7150 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
  7151 ;; Parameters:    Size  Location     Type
  7152 ;;  ptr             1    9[BANK0 ] PTR void 
  7153 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7154 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7155 ;; Auto vars:     Size  Location     Type
  7156 ;;		None
  7157 ;; Return value:  Size  Location     Type
  7158 ;;                  1    wreg      enum E358
  7159 ;; Registers used:
  7160 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7161 ;; Tracked objects:
  7162 ;;		On entry : 0/0
  7163 ;;		On exit  : 0/0
  7164 ;;		Unchanged: 0/0
  7165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7166 ;;      Params:         0       1       0       0       0       0       0       0
  7167 ;;      Locals:         0       0       0       0       0       0       0       0
  7168 ;;      Temps:          0       0       0       0       0       0       0       0
  7169 ;;      Totals:         0       1       0       0       0       0       0       0
  7170 ;;Total ram usage:        1 bytes
  7171 ;; Hardware stack levels used:    1
  7172 ;; Hardware stack levels required when called:    7
  7173 ;; This function calls:
  7174 ;;		_I2C_SetBuffer
  7175 ;;		_I2C_SetDataCompleteCallback
  7176 ;; This function is called by:
  7177 ;;		_I2C_Write1ByteRegister
  7178 ;;		_I2C_DO_TX
  7179 ;;		_I2C_DO_RX
  7180 ;;		_I2C_DO_TX_EMPTY
  7181 ;;		_I2C_DO_ADDRESS_NACK
  7182 ;;		_I2C_DO_RX_EMPTY
  7183 ;; This function uses a non-reentrant model
  7184 ;;
  7185                           
  7186                           
  7187                           ;psect for function _wr1RegCompleteHandler
  7188  04BC                     _wr1RegCompleteHandler:
  7189                           
  7190                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
  7191                           
  7192                           ;incstack = 0
  7193                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7194  04BC  3001               	movlw	1
  7195  04BD  0020               	movlb	0	; select bank0
  7196  04BE  00D5               	movwf	I2C_SetBuffer@bufferSize
  7197  04BF  3000               	movlw	0
  7198  04C0  00D6               	movwf	I2C_SetBuffer@bufferSize+1
  7199  04C1  085E               	movf	wr1RegCompleteHandler@ptr,w
  7200  04C2  3185  2523  3184   	fcall	_I2C_SetBuffer
  7201                           
  7202                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7203  04C5  3000               	movlw	0
  7204  04C6  0020               	movlb	0	; select bank0
  7205  04C7  00DA               	movwf	I2C_SetDataCompleteCallback@cb
  7206  04C8  00DB               	movwf	I2C_SetDataCompleteCallback@cb+1
  7207  04C9  01DC               	clrf	I2C_SetDataCompleteCallback@ptr
  7208  04CA  3185  2531         	fcall	_I2C_SetDataCompleteCallback
  7209                           
  7210                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
  7211  04CC  3004               	movlw	4
  7212  04CD  0008               	return
  7213  04CE                     __end_of_wr1RegCompleteHandler:
  7214                           
  7215                           	psect	text54
  7216  04CE                     __ptext54:	
  7217 ;; *************** function _rd2RegCompleteHandler *****************
  7218 ;; Defined at:
  7219 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
  7220 ;; Parameters:    Size  Location     Type
  7221 ;;  ptr             1    9[BANK0 ] PTR void 
  7222 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7223 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7224 ;; Auto vars:     Size  Location     Type
  7225 ;;		None
  7226 ;; Return value:  Size  Location     Type
  7227 ;;                  1    wreg      enum E358
  7228 ;; Registers used:
  7229 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7230 ;; Tracked objects:
  7231 ;;		On entry : 0/0
  7232 ;;		On exit  : 0/0
  7233 ;;		Unchanged: 0/0
  7234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7235 ;;      Params:         0       1       0       0       0       0       0       0
  7236 ;;      Locals:         0       0       0       0       0       0       0       0
  7237 ;;      Temps:          0       0       0       0       0       0       0       0
  7238 ;;      Totals:         0       1       0       0       0       0       0       0
  7239 ;;Total ram usage:        1 bytes
  7240 ;; Hardware stack levels used:    1
  7241 ;; Hardware stack levels required when called:    7
  7242 ;; This function calls:
  7243 ;;		_I2C_SetBuffer
  7244 ;;		_I2C_SetDataCompleteCallback
  7245 ;; This function is called by:
  7246 ;;		_I2C_Read2ByteRegister
  7247 ;;		_I2C_DO_TX
  7248 ;;		_I2C_DO_RX
  7249 ;;		_I2C_DO_TX_EMPTY
  7250 ;;		_I2C_DO_ADDRESS_NACK
  7251 ;;		_I2C_DO_RX_EMPTY
  7252 ;; This function uses a non-reentrant model
  7253 ;;
  7254                           
  7255                           
  7256                           ;psect for function _rd2RegCompleteHandler
  7257  04CE                     _rd2RegCompleteHandler:
  7258                           
  7259                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
  7260                           
  7261                           ;incstack = 0
  7262                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7263  04CE  3002               	movlw	2
  7264  04CF  0020               	movlb	0	; select bank0
  7265  04D0  00D5               	movwf	I2C_SetBuffer@bufferSize
  7266  04D1  3000               	movlw	0
  7267  04D2  00D6               	movwf	I2C_SetBuffer@bufferSize+1
  7268  04D3  085E               	movf	rd2RegCompleteHandler@ptr,w
  7269  04D4  3185  2523  3184   	fcall	_I2C_SetBuffer
  7270                           
  7271                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7272  04D7  3000               	movlw	0
  7273  04D8  0020               	movlb	0	; select bank0
  7274  04D9  00DA               	movwf	I2C_SetDataCompleteCallback@cb
  7275  04DA  00DB               	movwf	I2C_SetDataCompleteCallback@cb+1
  7276  04DB  01DC               	clrf	I2C_SetDataCompleteCallback@ptr
  7277  04DC  3185  2531         	fcall	_I2C_SetDataCompleteCallback
  7278                           
  7279                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
  7280  04DE  3002               	movlw	2
  7281  04DF  0008               	return
  7282  04E0                     __end_of_rd2RegCompleteHandler:
  7283                           
  7284                           	psect	text55
  7285  04E0                     __ptext55:	
  7286 ;; *************** function _rd1RegCompleteHandler *****************
  7287 ;; Defined at:
  7288 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
  7289 ;; Parameters:    Size  Location     Type
  7290 ;;  ptr             1    9[BANK0 ] PTR void 
  7291 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7292 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7293 ;; Auto vars:     Size  Location     Type
  7294 ;;		None
  7295 ;; Return value:  Size  Location     Type
  7296 ;;                  1    wreg      enum E358
  7297 ;; Registers used:
  7298 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7299 ;; Tracked objects:
  7300 ;;		On entry : 0/0
  7301 ;;		On exit  : 0/0
  7302 ;;		Unchanged: 0/0
  7303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7304 ;;      Params:         0       1       0       0       0       0       0       0
  7305 ;;      Locals:         0       0       0       0       0       0       0       0
  7306 ;;      Temps:          0       0       0       0       0       0       0       0
  7307 ;;      Totals:         0       1       0       0       0       0       0       0
  7308 ;;Total ram usage:        1 bytes
  7309 ;; Hardware stack levels used:    1
  7310 ;; Hardware stack levels required when called:    7
  7311 ;; This function calls:
  7312 ;;		_I2C_SetBuffer
  7313 ;;		_I2C_SetDataCompleteCallback
  7314 ;; This function is called by:
  7315 ;;		_I2C_Read1ByteRegister
  7316 ;;		_I2C_DO_TX
  7317 ;;		_I2C_DO_RX
  7318 ;;		_I2C_DO_TX_EMPTY
  7319 ;;		_I2C_DO_ADDRESS_NACK
  7320 ;;		_I2C_DO_RX_EMPTY
  7321 ;; This function uses a non-reentrant model
  7322 ;;
  7323                           
  7324                           
  7325                           ;psect for function _rd1RegCompleteHandler
  7326  04E0                     _rd1RegCompleteHandler:
  7327                           
  7328                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
  7329                           
  7330                           ;incstack = 0
  7331                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7332  04E0  3001               	movlw	1
  7333  04E1  0020               	movlb	0	; select bank0
  7334  04E2  00D5               	movwf	I2C_SetBuffer@bufferSize
  7335  04E3  3000               	movlw	0
  7336  04E4  00D6               	movwf	I2C_SetBuffer@bufferSize+1
  7337  04E5  085E               	movf	rd1RegCompleteHandler@ptr,w
  7338  04E6  3185  2523  3184   	fcall	_I2C_SetBuffer
  7339                           
  7340                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7341  04E9  3000               	movlw	0
  7342  04EA  0020               	movlb	0	; select bank0
  7343  04EB  00DA               	movwf	I2C_SetDataCompleteCallback@cb
  7344  04EC  00DB               	movwf	I2C_SetDataCompleteCallback@cb+1
  7345  04ED  01DC               	clrf	I2C_SetDataCompleteCallback@ptr
  7346  04EE  3185  2531         	fcall	_I2C_SetDataCompleteCallback
  7347                           
  7348                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
  7349  04F0  3002               	movlw	2
  7350  04F1  0008               	return
  7351  04F2                     __end_of_rd1RegCompleteHandler:
  7352                           
  7353                           	psect	text56
  7354  04F2                     __ptext56:	
  7355 ;; *************** function _wr2RegCompleteHandler *****************
  7356 ;; Defined at:
  7357 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
  7358 ;; Parameters:    Size  Location     Type
  7359 ;;  ptr             1    9[BANK0 ] PTR void 
  7360 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7361 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7362 ;; Auto vars:     Size  Location     Type
  7363 ;;		None
  7364 ;; Return value:  Size  Location     Type
  7365 ;;                  1    wreg      enum E358
  7366 ;; Registers used:
  7367 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7368 ;; Tracked objects:
  7369 ;;		On entry : 0/0
  7370 ;;		On exit  : 0/0
  7371 ;;		Unchanged: 0/0
  7372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7373 ;;      Params:         0       1       0       0       0       0       0       0
  7374 ;;      Locals:         0       0       0       0       0       0       0       0
  7375 ;;      Temps:          0       0       0       0       0       0       0       0
  7376 ;;      Totals:         0       1       0       0       0       0       0       0
  7377 ;;Total ram usage:        1 bytes
  7378 ;; Hardware stack levels used:    1
  7379 ;; Hardware stack levels required when called:    7
  7380 ;; This function calls:
  7381 ;;		_I2C_SetBuffer
  7382 ;;		_I2C_SetDataCompleteCallback
  7383 ;; This function is called by:
  7384 ;;		_I2C_Write2ByteRegister
  7385 ;;		_I2C_DO_TX
  7386 ;;		_I2C_DO_RX
  7387 ;;		_I2C_DO_TX_EMPTY
  7388 ;;		_I2C_DO_ADDRESS_NACK
  7389 ;;		_I2C_DO_RX_EMPTY
  7390 ;; This function uses a non-reentrant model
  7391 ;;
  7392                           
  7393                           
  7394                           ;psect for function _wr2RegCompleteHandler
  7395  04F2                     _wr2RegCompleteHandler:
  7396                           
  7397                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
  7398                           
  7399                           ;incstack = 0
  7400                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7401  04F2  3002               	movlw	2
  7402  04F3  0020               	movlb	0	; select bank0
  7403  04F4  00D5               	movwf	I2C_SetBuffer@bufferSize
  7404  04F5  3000               	movlw	0
  7405  04F6  00D6               	movwf	I2C_SetBuffer@bufferSize+1
  7406  04F7  085E               	movf	wr2RegCompleteHandler@ptr,w
  7407  04F8  3185  2523  3184   	fcall	_I2C_SetBuffer
  7408                           
  7409                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7410  04FB  3000               	movlw	0
  7411  04FC  0020               	movlb	0	; select bank0
  7412  04FD  00DA               	movwf	I2C_SetDataCompleteCallback@cb
  7413  04FE  00DB               	movwf	I2C_SetDataCompleteCallback@cb+1
  7414  04FF  01DC               	clrf	I2C_SetDataCompleteCallback@ptr
  7415  0500  3185  2531         	fcall	_I2C_SetDataCompleteCallback
  7416                           
  7417                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
  7418  0502  3004               	movlw	4
  7419  0503  0008               	return
  7420  0504                     __end_of_wr2RegCompleteHandler:
  7421                           
  7422                           	psect	text57
  7423  0531                     __ptext57:	
  7424 ;; *************** function _I2C_SetDataCompleteCallback *****************
  7425 ;; Defined at:
  7426 ;;		line 273 in file "mcc_generated_files/i2c_master.c"
  7427 ;; Parameters:    Size  Location     Type
  7428 ;;  cb              2    5[BANK0 ] PTR FTN(PTR void ,)enum 
  7429 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  7430 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  7431 ;;  ptr             1    7[BANK0 ] PTR void 
  7432 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7433 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7434 ;; Auto vars:     Size  Location     Type
  7435 ;;		None
  7436 ;; Return value:  Size  Location     Type
  7437 ;;                  1    wreg      void 
  7438 ;; Registers used:
  7439 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7440 ;; Tracked objects:
  7441 ;;		On entry : 0/0
  7442 ;;		On exit  : 0/0
  7443 ;;		Unchanged: 0/0
  7444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7445 ;;      Params:         0       3       0       0       0       0       0       0
  7446 ;;      Locals:         0       0       0       0       0       0       0       0
  7447 ;;      Temps:          0       1       0       0       0       0       0       0
  7448 ;;      Totals:         0       4       0       0       0       0       0       0
  7449 ;;Total ram usage:        4 bytes
  7450 ;; Hardware stack levels used:    1
  7451 ;; Hardware stack levels required when called:    6
  7452 ;; This function calls:
  7453 ;;		_I2C_SetCallback
  7454 ;; This function is called by:
  7455 ;;		_rd1RegCompleteHandler
  7456 ;;		_rd2RegCompleteHandler
  7457 ;;		_wr1RegCompleteHandler
  7458 ;;		_wr2RegCompleteHandler
  7459 ;;		_rdBlkRegCompleteHandler
  7460 ;;		_I2C_Read1ByteRegister
  7461 ;;		_I2C_Read2ByteRegister
  7462 ;;		_I2C_Write1ByteRegister
  7463 ;;		_I2C_Write2ByteRegister
  7464 ;;		_I2C_ReadDataBlock
  7465 ;; This function uses a non-reentrant model
  7466 ;;
  7467                           
  7468                           
  7469                           ;psect for function _I2C_SetDataCompleteCallback
  7470  0531                     _I2C_SetDataCompleteCallback:
  7471                           
  7472                           ;mcc_generated_files/i2c_master.c: 273: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 274: {;mcc_generated_files/i2c_master.c
      +                          : 275:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  7473                           
  7474                           ;incstack = 0
  7475                           ; Regs used in _I2C_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  7476  0531  0020               	movlb	0	; select bank0
  7477  0532  085B               	movf	I2C_SetDataCompleteCallback@cb+1,w
  7478  0533  00D6               	movwf	I2C_SetCallback@cb+1
  7479  0534  085A               	movf	I2C_SetDataCompleteCallback@cb,w
  7480  0535  00D5               	movwf	I2C_SetCallback@cb
  7481  0536  085C               	movf	I2C_SetDataCompleteCallback@ptr,w
  7482  0537  00DD               	movwf	??_I2C_SetDataCompleteCallback
  7483  0538  085D               	movf	??_I2C_SetDataCompleteCallback,w
  7484  0539  00D7               	movwf	I2C_SetCallback@ptr
  7485  053A  3000               	movlw	0
  7486  053B  3183  234A         	fcall	_I2C_SetCallback
  7487  053D  0008               	return
  7488  053E                     __end_of_I2C_SetDataCompleteCallback:
  7489                           
  7490                           	psect	text58
  7491  034A                     __ptext58:	
  7492 ;; *************** function _I2C_SetCallback *****************
  7493 ;; Defined at:
  7494 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
  7495 ;; Parameters:    Size  Location     Type
  7496 ;;  idx             1    wreg     enum E3892
  7497 ;;  cb              2    0[BANK0 ] PTR FTN(PTR void ,)enum 
  7498 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  7499 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  7500 ;;  ptr             1    2[BANK0 ] PTR void 
  7501 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7502 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7503 ;; Auto vars:     Size  Location     Type
  7504 ;;  idx             1    4[BANK0 ] enum E3892
  7505 ;; Return value:  Size  Location     Type
  7506 ;;                  1    wreg      void 
  7507 ;; Registers used:
  7508 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7509 ;; Tracked objects:
  7510 ;;		On entry : 0/0
  7511 ;;		On exit  : 0/0
  7512 ;;		Unchanged: 0/0
  7513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7514 ;;      Params:         0       3       0       0       0       0       0       0
  7515 ;;      Locals:         0       1       0       0       0       0       0       0
  7516 ;;      Temps:          0       1       0       0       0       0       0       0
  7517 ;;      Totals:         0       5       0       0       0       0       0       0
  7518 ;;Total ram usage:        5 bytes
  7519 ;; Hardware stack levels used:    1
  7520 ;; Hardware stack levels required when called:    5
  7521 ;; This function calls:
  7522 ;;		Nothing
  7523 ;; This function is called by:
  7524 ;;		_I2C_SetDataCompleteCallback
  7525 ;;		_I2C_SetWriteCollisionCallback
  7526 ;;		_I2C_SetAddressNackCallback
  7527 ;;		_I2C_SetDataNackCallback
  7528 ;;		_I2C_SetTimeoutCallback
  7529 ;; This function uses a non-reentrant model
  7530 ;;
  7531                           
  7532                           
  7533                           ;psect for function _I2C_SetCallback
  7534  034A                     _I2C_SetCallback:
  7535                           
  7536                           ;incstack = 0
  7537                           ; Regs used in _I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
  7538                           ;I2C_SetCallback@idx stored from wreg
  7539  034A  0020               	movlb	0	; select bank0
  7540  034B  00D9               	movwf	I2C_SetCallback@idx
  7541                           
  7542                           ;mcc_generated_files/i2c_master.c: 298: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 299: {;mcc_generate
      +                          d_files/i2c_master.c: 300:     if(cb)
  7543  034C  0855               	movf	I2C_SetCallback@cb,w
  7544  034D  0456               	iorwf	I2C_SetCallback@cb+1,w
  7545  034E  1903               	btfsc	3,2
  7546  034F  2B61               	goto	l3274
  7547                           
  7548                           ;mcc_generated_files/i2c_master.c: 301:     {;mcc_generated_files/i2c_master.c: 302:    
      +                               I2C_Status.callbackTable[idx] = cb;
  7549  0350  3559               	lslf	I2C_SetCallback@idx,w
  7550  0351  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  7551  0352  0086               	movwf	6
  7552  0353  0187               	clrf	7
  7553  0354  0855               	movf	I2C_SetCallback@cb,w
  7554  0355  3FC0               	movwi [0]fsr1
  7555  0356  0856               	movf	I2C_SetCallback@cb+1,w
  7556  0357  3FC1               	movwi [1]fsr1
  7557                           
  7558                           ;mcc_generated_files/i2c_master.c: 303:         I2C_Status.callbackPayload[idx] = ptr;
  7559  0358  0857               	movf	I2C_SetCallback@ptr,w
  7560  0359  00D8               	movwf	??_I2C_SetCallback
  7561  035A  0859               	movf	I2C_SetCallback@idx,w
  7562  035B  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  7563  035C  0086               	movwf	6
  7564  035D  0187               	clrf	7
  7565  035E  0858               	movf	??_I2C_SetCallback,w
  7566  035F  0081               	movwf	1
  7567                           
  7568                           ;mcc_generated_files/i2c_master.c: 304:     }
  7569  0360  0008               	return
  7570  0361                     l3274:
  7571                           
  7572                           ;mcc_generated_files/i2c_master.c: 306:     {;mcc_generated_files/i2c_master.c: 307:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  7573  0361  3559               	lslf	I2C_SetCallback@idx,w
  7574  0362  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  7575  0363  0086               	movwf	6
  7576  0364  0187               	clrf	7
  7577  0365  3038               	movlw	low _I2C_CallbackReturnStop
  7578  0366  3FC0               	movwi [0]fsr1
  7579  0367  3006               	movlw	high _I2C_CallbackReturnStop
  7580  0368  3FC1               	movwi [1]fsr1
  7581                           
  7582                           ;mcc_generated_files/i2c_master.c: 308:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  7583  0369  0859               	movf	I2C_SetCallback@idx,w
  7584  036A  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  7585  036B  0086               	movwf	6
  7586  036C  0187               	clrf	7
  7587  036D  0181               	clrf	1
  7588  036E  0008               	return
  7589  036F                     __end_of_I2C_SetCallback:
  7590                           
  7591                           	psect	text59
  7592  0523                     __ptext59:	
  7593 ;; *************** function _I2C_SetBuffer *****************
  7594 ;; Defined at:
  7595 ;;		line 263 in file "mcc_generated_files/i2c_master.c"
  7596 ;; Parameters:    Size  Location     Type
  7597 ;;  buffer          1    wreg     PTR void 
  7598 ;;		 -> Temp(2), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@reg(1), 
  7599 ;;		 -> I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegi
      +ster@reg(1), 
  7600 ;;		 -> I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1
      +), 
  7601 ;;  bufferSize      2    0[BANK0 ] unsigned int 
  7602 ;; Auto vars:     Size  Location     Type
  7603 ;;  buffer          1    3[BANK0 ] PTR void 
  7604 ;;		 -> Temp(2), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@reg(1), 
  7605 ;;		 -> I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegi
      +ster@reg(1), 
  7606 ;;		 -> I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1
      +), 
  7607 ;; Return value:  Size  Location     Type
  7608 ;;                  1    wreg      void 
  7609 ;; Registers used:
  7610 ;;		wreg
  7611 ;; Tracked objects:
  7612 ;;		On entry : 0/0
  7613 ;;		On exit  : 0/0
  7614 ;;		Unchanged: 0/0
  7615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7616 ;;      Params:         0       2       0       0       0       0       0       0
  7617 ;;      Locals:         0       1       0       0       0       0       0       0
  7618 ;;      Temps:          0       1       0       0       0       0       0       0
  7619 ;;      Totals:         0       4       0       0       0       0       0       0
  7620 ;;Total ram usage:        4 bytes
  7621 ;; Hardware stack levels used:    1
  7622 ;; Hardware stack levels required when called:    5
  7623 ;; This function calls:
  7624 ;;		Nothing
  7625 ;; This function is called by:
  7626 ;;		_I2C_ReadNBytes
  7627 ;;		_rd1RegCompleteHandler
  7628 ;;		_rd2RegCompleteHandler
  7629 ;;		_wr1RegCompleteHandler
  7630 ;;		_wr2RegCompleteHandler
  7631 ;;		_rdBlkRegCompleteHandler
  7632 ;;		_I2C_Read1ByteRegister
  7633 ;;		_I2C_Read2ByteRegister
  7634 ;;		_I2C_Write1ByteRegister
  7635 ;;		_I2C_Write2ByteRegister
  7636 ;;		_I2C_WriteNBytes
  7637 ;;		_I2C_ReadDataBlock
  7638 ;; This function uses a non-reentrant model
  7639 ;;
  7640                           
  7641                           
  7642                           ;psect for function _I2C_SetBuffer
  7643  0523                     _I2C_SetBuffer:
  7644                           
  7645                           ;incstack = 0
  7646                           ; Regs used in _I2C_SetBuffer: [wreg]
  7647                           ;I2C_SetBuffer@buffer stored from wreg
  7648  0523  0020               	movlb	0	; select bank0
  7649  0524  00D8               	movwf	I2C_SetBuffer@buffer
  7650                           
  7651                           ;mcc_generated_files/i2c_master.c: 263: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 264: {;mcc_generated_files/i2c_master.c: 265:     
      +                          if(I2C_Status.bufferFree)
  7652  0525  1DBC               	btfss	_I2C_Status+28,3
  7653  0526  0008               	return
  7654                           
  7655                           ;mcc_generated_files/i2c_master.c: 266:     {;mcc_generated_files/i2c_master.c: 267:    
      +                               I2C_Status.data_ptr = buffer;
  7656  0527  0858               	movf	I2C_SetBuffer@buffer,w
  7657  0528  00D7               	movwf	??_I2C_SetBuffer
  7658  0529  0857               	movf	??_I2C_SetBuffer,w
  7659  052A  00B7               	movwf	low ((_I2C_Status| 0+23))
  7660                           
  7661                           ;mcc_generated_files/i2c_master.c: 268:         I2C_Status.data_length = bufferSize;
  7662  052B  0856               	movf	I2C_SetBuffer@bufferSize+1,w
  7663  052C  00B9               	movwf	_I2C_Status+25
  7664  052D  0855               	movf	I2C_SetBuffer@bufferSize,w
  7665  052E  00B8               	movwf	_I2C_Status+24
  7666                           
  7667                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.bufferFree = 0;
  7668  052F  11BC               	bcf	_I2C_Status+28,3
  7669  0530  0008               	return
  7670  0531                     __end_of_I2C_SetBuffer:
  7671                           
  7672                           	psect	text60
  7673  0622                     __ptext60:	
  7674 ;; *************** function _I2C_MasterStop *****************
  7675 ;; Defined at:
  7676 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
  7677 ;; Parameters:    Size  Location     Type
  7678 ;;		None
  7679 ;; Auto vars:     Size  Location     Type
  7680 ;;		None
  7681 ;; Return value:  Size  Location     Type
  7682 ;;                  1    wreg      void 
  7683 ;; Registers used:
  7684 ;;		None
  7685 ;; Tracked objects:
  7686 ;;		On entry : 0/0
  7687 ;;		On exit  : 0/0
  7688 ;;		Unchanged: 0/0
  7689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7690 ;;      Params:         0       0       0       0       0       0       0       0
  7691 ;;      Locals:         0       0       0       0       0       0       0       0
  7692 ;;      Temps:          0       0       0       0       0       0       0       0
  7693 ;;      Totals:         0       0       0       0       0       0       0       0
  7694 ;;Total ram usage:        0 bytes
  7695 ;; Hardware stack levels used:    1
  7696 ;; Hardware stack levels required when called:    5
  7697 ;; This function calls:
  7698 ;;		Nothing
  7699 ;; This function is called by:
  7700 ;;		_I2C_DO_SEND_STOP
  7701 ;; This function uses a non-reentrant model
  7702 ;;
  7703                           
  7704                           
  7705                           ;psect for function _I2C_MasterStop
  7706  0622                     _I2C_MasterStop:
  7707                           
  7708                           ;mcc_generated_files/i2c_master.c: 595:     SSP1CON2bits.PEN = 1;
  7709                           
  7710                           ;incstack = 0
  7711                           ; Regs used in _I2C_MasterStop: []
  7712  0622  0024               	movlb	4	; select bank4
  7713  0623  1516               	bsf	22,2	;volatile
  7714  0624  0008               	return
  7715  0625                     __end_of_I2C_MasterStop:
  7716                           
  7717                           	psect	text61
  7718  0625                     __ptext61:	
  7719 ;; *************** function _I2C_MasterEnableRestart *****************
  7720 ;; Defined at:
  7721 ;;		line 573 in file "mcc_generated_files/i2c_master.c"
  7722 ;; Parameters:    Size  Location     Type
  7723 ;;		None
  7724 ;; Auto vars:     Size  Location     Type
  7725 ;;		None
  7726 ;; Return value:  Size  Location     Type
  7727 ;;                  1    wreg      void 
  7728 ;; Registers used:
  7729 ;;		None
  7730 ;; Tracked objects:
  7731 ;;		On entry : 0/0
  7732 ;;		On exit  : 0/0
  7733 ;;		Unchanged: 0/0
  7734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7735 ;;      Params:         0       0       0       0       0       0       0       0
  7736 ;;      Locals:         0       0       0       0       0       0       0       0
  7737 ;;      Temps:          0       0       0       0       0       0       0       0
  7738 ;;      Totals:         0       0       0       0       0       0       0       0
  7739 ;;Total ram usage:        0 bytes
  7740 ;; Hardware stack levels used:    1
  7741 ;; Hardware stack levels required when called:    5
  7742 ;; This function calls:
  7743 ;;		Nothing
  7744 ;; This function is called by:
  7745 ;;		_I2C_DO_SEND_RESTART_READ
  7746 ;;		_I2C_DO_SEND_RESTART_WRITE
  7747 ;;		_I2C_DO_SEND_RESTART
  7748 ;;		_I2C_DO_RX_EMPTY
  7749 ;; This function uses a non-reentrant model
  7750 ;;
  7751                           
  7752                           
  7753                           ;psect for function _I2C_MasterEnableRestart
  7754  0625                     _I2C_MasterEnableRestart:
  7755                           
  7756                           ;mcc_generated_files/i2c_master.c: 575:     SSP1CON2bits.RSEN = 1;
  7757                           
  7758                           ;incstack = 0
  7759                           ; Regs used in _I2C_MasterEnableRestart: []
  7760  0625  0024               	movlb	4	; select bank4
  7761  0626  1496               	bsf	22,1	;volatile
  7762  0627  0008               	return
  7763  0628                     __end_of_I2C_MasterEnableRestart:
  7764                           
  7765                           	psect	text62
  7766  0628                     __ptext62:	
  7767 ;; *************** function _I2C_MasterStart *****************
  7768 ;; Defined at:
  7769 ;;		line 588 in file "mcc_generated_files/i2c_master.c"
  7770 ;; Parameters:    Size  Location     Type
  7771 ;;		None
  7772 ;; Auto vars:     Size  Location     Type
  7773 ;;		None
  7774 ;; Return value:  Size  Location     Type
  7775 ;;                  1    wreg      void 
  7776 ;; Registers used:
  7777 ;;		None
  7778 ;; Tracked objects:
  7779 ;;		On entry : 0/0
  7780 ;;		On exit  : 0/0
  7781 ;;		Unchanged: 0/0
  7782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7783 ;;      Params:         0       0       0       0       0       0       0       0
  7784 ;;      Locals:         0       0       0       0       0       0       0       0
  7785 ;;      Temps:          0       0       0       0       0       0       0       0
  7786 ;;      Totals:         0       0       0       0       0       0       0       0
  7787 ;;Total ram usage:        0 bytes
  7788 ;; Hardware stack levels used:    1
  7789 ;; Hardware stack levels required when called:    5
  7790 ;; This function calls:
  7791 ;;		Nothing
  7792 ;; This function is called by:
  7793 ;;		_I2C_MasterOperation
  7794 ;; This function uses a non-reentrant model
  7795 ;;
  7796                           
  7797                           
  7798                           ;psect for function _I2C_MasterStart
  7799  0628                     _I2C_MasterStart:
  7800                           
  7801                           ;mcc_generated_files/i2c_master.c: 590:     SSP1CON2bits.SEN = 1;
  7802                           
  7803                           ;incstack = 0
  7804                           ; Regs used in _I2C_MasterStart: []
  7805  0628  0024               	movlb	4	; select bank4
  7806  0629  1416               	bsf	22,0	;volatile
  7807  062A  0008               	return
  7808  062B                     __end_of_I2C_MasterStart:
  7809                           
  7810                           	psect	text63
  7811  0453                     __ptext63:	
  7812 ;; *************** function _I2C_Close *****************
  7813 ;; Defined at:
  7814 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
  7815 ;; Parameters:    Size  Location     Type
  7816 ;;		None
  7817 ;; Auto vars:     Size  Location     Type
  7818 ;;  returnValue     1    1[BANK0 ] enum E353
  7819 ;; Return value:  Size  Location     Type
  7820 ;;                  1    wreg      enum E353
  7821 ;; Registers used:
  7822 ;;		wreg, status,2, status,0, pclath, cstack
  7823 ;; Tracked objects:
  7824 ;;		On entry : 0/0
  7825 ;;		On exit  : 0/0
  7826 ;;		Unchanged: 0/0
  7827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7828 ;;      Params:         0       0       0       0       0       0       0       0
  7829 ;;      Locals:         0       1       0       0       0       0       0       0
  7830 ;;      Temps:          0       1       0       0       0       0       0       0
  7831 ;;      Totals:         0       2       0       0       0       0       0       0
  7832 ;;Total ram usage:        2 bytes
  7833 ;; Hardware stack levels used:    1
  7834 ;; Hardware stack levels required when called:    6
  7835 ;; This function calls:
  7836 ;;		_I2C_MasterClearIrq
  7837 ;;		_I2C_MasterClose
  7838 ;;		_I2C_MasterDisableIrq
  7839 ;; This function is called by:
  7840 ;;		_I2C_ReadNBytes
  7841 ;;		_I2C_Read1ByteRegister
  7842 ;;		_I2C_Read2ByteRegister
  7843 ;;		_I2C_Write1ByteRegister
  7844 ;;		_I2C_Write2ByteRegister
  7845 ;;		_I2C_WriteNBytes
  7846 ;;		_I2C_ReadDataBlock
  7847 ;; This function uses a non-reentrant model
  7848 ;;
  7849                           
  7850                           
  7851                           ;psect for function _I2C_Close
  7852  0453                     _I2C_Close:
  7853                           
  7854                           ;mcc_generated_files/i2c_master.c: 211:     i2c_error_t returnValue = I2C_BUSY;
  7855                           
  7856                           ;incstack = 0
  7857                           ; Regs used in _I2C_Close: [wreg+status,2+status,0+pclath+cstack]
  7858  0453  0020               	movlb	0	; select bank0
  7859  0454  01D6               	clrf	I2C_Close@returnValue
  7860  0455  0AD6               	incf	I2C_Close@returnValue,f
  7861                           
  7862                           ;mcc_generated_files/i2c_master.c: 212:     if(!I2C_Status.busy)
  7863  0456  18BC               	btfsc	_I2C_Status+28,1
  7864  0457  2C6A               	goto	l3648
  7865                           
  7866                           ;mcc_generated_files/i2c_master.c: 213:     {;mcc_generated_files/i2c_master.c: 214:    
      +                               I2C_Status.inUse = 0;
  7867  0458  113C               	bcf	_I2C_Status+28,2
  7868                           
  7869                           ;mcc_generated_files/i2c_master.c: 215:         I2C_Status.address = 0xff;
  7870  0459  30FF               	movlw	255
  7871  045A  00D5               	movwf	??_I2C_Close
  7872  045B  0855               	movf	??_I2C_Close,w
  7873  045C  00B6               	movwf	_I2C_Status+22
  7874                           
  7875                           ;mcc_generated_files/i2c_master.c: 216:         I2C_MasterClearIrq();
  7876  045D  3186  2631  3184   	fcall	_I2C_MasterClearIrq
  7877                           
  7878                           ;mcc_generated_files/i2c_master.c: 217:         I2C_MasterDisableIrq();
  7879  0460  3186  262B  3184   	fcall	_I2C_MasterDisableIrq
  7880                           
  7881                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClose();
  7882  0463  3186  262E         	fcall	_I2C_MasterClose
  7883                           
  7884                           ;mcc_generated_files/i2c_master.c: 219:         returnValue = I2C_Status.error;
  7885  0465  0020               	movlb	0	; select bank0
  7886  0466  083B               	movf	_I2C_Status+27,w
  7887  0467  00D5               	movwf	??_I2C_Close
  7888  0468  0855               	movf	??_I2C_Close,w
  7889  0469  00D6               	movwf	I2C_Close@returnValue
  7890  046A                     l3648:
  7891                           
  7892                           ;mcc_generated_files/i2c_master.c: 221:     return returnValue;
  7893  046A  0856               	movf	I2C_Close@returnValue,w
  7894  046B  0008               	return
  7895  046C                     __end_of_I2C_Close:
  7896                           
  7897                           	psect	text64
  7898  062B                     __ptext64:	
  7899 ;; *************** function _I2C_MasterDisableIrq *****************
  7900 ;; Defined at:
  7901 ;;		line 635 in file "mcc_generated_files/i2c_master.c"
  7902 ;; Parameters:    Size  Location     Type
  7903 ;;		None
  7904 ;; Auto vars:     Size  Location     Type
  7905 ;;		None
  7906 ;; Return value:  Size  Location     Type
  7907 ;;                  1    wreg      void 
  7908 ;; Registers used:
  7909 ;;		None
  7910 ;; Tracked objects:
  7911 ;;		On entry : 0/0
  7912 ;;		On exit  : 0/0
  7913 ;;		Unchanged: 0/0
  7914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7915 ;;      Params:         0       0       0       0       0       0       0       0
  7916 ;;      Locals:         0       0       0       0       0       0       0       0
  7917 ;;      Temps:          0       0       0       0       0       0       0       0
  7918 ;;      Totals:         0       0       0       0       0       0       0       0
  7919 ;;Total ram usage:        0 bytes
  7920 ;; Hardware stack levels used:    1
  7921 ;; Hardware stack levels required when called:    5
  7922 ;; This function calls:
  7923 ;;		Nothing
  7924 ;; This function is called by:
  7925 ;;		_I2C_Close
  7926 ;;		_I2C_SetTimeOut
  7927 ;; This function uses a non-reentrant model
  7928 ;;
  7929                           
  7930                           
  7931                           ;psect for function _I2C_MasterDisableIrq
  7932  062B                     _I2C_MasterDisableIrq:
  7933                           
  7934                           ;mcc_generated_files/i2c_master.c: 637:     PIE1bits.SSP1IE = 0;
  7935                           
  7936                           ;incstack = 0
  7937                           ; Regs used in _I2C_MasterDisableIrq: []
  7938  062B  0021               	movlb	1	; select bank1
  7939  062C  1191               	bcf	17,3	;volatile
  7940  062D  0008               	return
  7941  062E                     __end_of_I2C_MasterDisableIrq:
  7942                           
  7943                           	psect	text65
  7944  062E                     __ptext65:	
  7945 ;; *************** function _I2C_MasterClose *****************
  7946 ;; Defined at:
  7947 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
  7948 ;; Parameters:    Size  Location     Type
  7949 ;;		None
  7950 ;; Auto vars:     Size  Location     Type
  7951 ;;		None
  7952 ;; Return value:  Size  Location     Type
  7953 ;;                  1    wreg      void 
  7954 ;; Registers used:
  7955 ;;		None
  7956 ;; Tracked objects:
  7957 ;;		On entry : 0/0
  7958 ;;		On exit  : 0/0
  7959 ;;		Unchanged: 0/0
  7960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7961 ;;      Params:         0       0       0       0       0       0       0       0
  7962 ;;      Locals:         0       0       0       0       0       0       0       0
  7963 ;;      Temps:          0       0       0       0       0       0       0       0
  7964 ;;      Totals:         0       0       0       0       0       0       0       0
  7965 ;;Total ram usage:        0 bytes
  7966 ;; Hardware stack levels used:    1
  7967 ;; Hardware stack levels required when called:    5
  7968 ;; This function calls:
  7969 ;;		Nothing
  7970 ;; This function is called by:
  7971 ;;		_I2C_Close
  7972 ;; This function uses a non-reentrant model
  7973 ;;
  7974                           
  7975                           
  7976                           ;psect for function _I2C_MasterClose
  7977  062E                     _I2C_MasterClose:
  7978                           
  7979                           ;mcc_generated_files/i2c_master.c: 560:     SSP1CON1bits.SSPEN = 0;
  7980                           
  7981                           ;incstack = 0
  7982                           ; Regs used in _I2C_MasterClose: []
  7983  062E  0024               	movlb	4	; select bank4
  7984  062F  1295               	bcf	21,5	;volatile
  7985  0630  0008               	return
  7986  0631                     __end_of_I2C_MasterClose:
  7987                           
  7988                           	psect	text66
  7989  0631                     __ptext66:	
  7990 ;; *************** function _I2C_MasterClearIrq *****************
  7991 ;; Defined at:
  7992 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
  7993 ;; Parameters:    Size  Location     Type
  7994 ;;		None
  7995 ;; Auto vars:     Size  Location     Type
  7996 ;;		None
  7997 ;; Return value:  Size  Location     Type
  7998 ;;                  1    wreg      void 
  7999 ;; Registers used:
  8000 ;;		None
  8001 ;; Tracked objects:
  8002 ;;		On entry : 0/0
  8003 ;;		On exit  : 0/0
  8004 ;;		Unchanged: 0/0
  8005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8006 ;;      Params:         0       0       0       0       0       0       0       0
  8007 ;;      Locals:         0       0       0       0       0       0       0       0
  8008 ;;      Temps:          0       0       0       0       0       0       0       0
  8009 ;;      Totals:         0       0       0       0       0       0       0       0
  8010 ;;Total ram usage:        0 bytes
  8011 ;; Hardware stack levels used:    1
  8012 ;; Hardware stack levels required when called:    5
  8013 ;; This function calls:
  8014 ;;		Nothing
  8015 ;; This function is called by:
  8016 ;;		_I2C_Open
  8017 ;;		_I2C_Close
  8018 ;;		_I2C_MasterFsm
  8019 ;; This function uses a non-reentrant model
  8020 ;;
  8021                           
  8022                           
  8023                           ;psect for function _I2C_MasterClearIrq
  8024  0631                     _I2C_MasterClearIrq:
  8025                           
  8026                           ;mcc_generated_files/i2c_master.c: 642:     PIR1bits.SSP1IF = 0;
  8027                           
  8028                           ;incstack = 0
  8029                           ; Regs used in _I2C_MasterClearIrq: []
  8030  0631  0020               	movlb	0	; select bank0
  8031  0632  1191               	bcf	17,3	;volatile
  8032  0633  0008               	return
  8033  0634                     __end_of_I2C_MasterClearIrq:
  8034                           
  8035                           	psect	text67
  8036  0504                     __ptext67:	
  8037 ;; *************** function _Delay *****************
  8038 ;; Defined at:
  8039 ;;		line 28 in file "SourceFiles/SunSensor/SHT25.c"
  8040 ;; Parameters:    Size  Location     Type
  8041 ;;  Timecounter     2    0[BANK0 ] unsigned short 
  8042 ;; Auto vars:     Size  Location     Type
  8043 ;;  i               2    2[BANK0 ] unsigned short 
  8044 ;; Return value:  Size  Location     Type
  8045 ;;                  1    wreg      void 
  8046 ;; Registers used:
  8047 ;;		wreg, status,2
  8048 ;; Tracked objects:
  8049 ;;		On entry : 0/0
  8050 ;;		On exit  : 0/0
  8051 ;;		Unchanged: 0/0
  8052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8053 ;;      Params:         0       2       0       0       0       0       0       0
  8054 ;;      Locals:         0       2       0       0       0       0       0       0
  8055 ;;      Temps:          0       0       0       0       0       0       0       0
  8056 ;;      Totals:         0       4       0       0       0       0       0       0
  8057 ;;Total ram usage:        4 bytes
  8058 ;; Hardware stack levels used:    1
  8059 ;; Hardware stack levels required when called:    5
  8060 ;; This function calls:
  8061 ;;		Nothing
  8062 ;; This function is called by:
  8063 ;;		_GetTemp
  8064 ;; This function uses a non-reentrant model
  8065 ;;
  8066                           
  8067                           
  8068                           ;psect for function _Delay
  8069  0504                     _Delay:
  8070                           
  8071                           ;SourceFiles/SunSensor/SHT25.c: 28: void Delay(uint16_t Timecounter);SourceFiles/SunSens
      +                          or/SHT25.c: 29: {;SourceFiles/SunSensor/SHT25.c: 30:     for(uint16_t i = 0; i< Timecoun
      +                          ter; i++)
  8072                           
  8073                           ;incstack = 0
  8074                           ; Regs used in _Delay: [wreg+status,2]
  8075  0504  0020               	movlb	0	; select bank0
  8076  0505  01D7               	clrf	Delay@i
  8077  0506  01D8               	clrf	Delay@i+1
  8078  0507                     l799:
  8079  0507  0856               	movf	Delay@Timecounter+1,w
  8080  0508  0258               	subwf	Delay@i+1,w
  8081  0509  1D03               	skipz
  8082  050A  2D0D               	goto	u1585
  8083  050B  0855               	movf	Delay@Timecounter,w
  8084  050C  0257               	subwf	Delay@i,w
  8085  050D                     u1585:
  8086  050D  1803               	btfsc	3,0
  8087  050E  0008               	return
  8088                           
  8089                           ;SourceFiles/SunSensor/SHT25.c: 31:     {;SourceFiles/SunSensor/SHT25.c: 33:     }
  8090  050F  3001               	movlw	1
  8091  0510  07D7               	addwf	Delay@i,f
  8092  0511  3000               	movlw	0
  8093  0512  3DD8               	addwfc	Delay@i+1,f
  8094  0513  2D07               	goto	l799
  8095  0514                     __end_of_Delay:
  8096                           
  8097                           	psect	text68
  8098  0113                     __ptext68:	
  8099 ;; *************** function _COS_TmrHandler *****************
  8100 ;; Defined at:
  8101 ;;		line 92 in file "SourceFiles/COS/COS_Main.c"
  8102 ;; Parameters:    Size  Location     Type
  8103 ;;		None
  8104 ;; Auto vars:     Size  Location     Type
  8105 ;;  tempbyte2       1    4[BANK0 ] unsigned char 
  8106 ;;  tempbyte1       1    3[BANK0 ] unsigned char 
  8107 ;; Return value:  Size  Location     Type
  8108 ;;                  1    wreg      void 
  8109 ;; Registers used:
  8110 ;;		wreg, status,2, status,0
  8111 ;; Tracked objects:
  8112 ;;		On entry : 0/0
  8113 ;;		On exit  : 0/0
  8114 ;;		Unchanged: 0/0
  8115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8116 ;;      Params:         0       0       0       0       0       0       0       0
  8117 ;;      Locals:         0       2       0       0       0       0       0       0
  8118 ;;      Temps:          0       3       0       0       0       0       0       0
  8119 ;;      Totals:         0       5       0       0       0       0       0       0
  8120 ;;Total ram usage:        5 bytes
  8121 ;; Hardware stack levels used:    1
  8122 ;; Hardware stack levels required when called:    5
  8123 ;; This function calls:
  8124 ;;		Nothing
  8125 ;; This function is called by:
  8126 ;;		_main
  8127 ;; This function uses a non-reentrant model
  8128 ;;
  8129                           
  8130                           
  8131                           ;psect for function _COS_TmrHandler
  8132  0113                     _COS_TmrHandler:
  8133                           
  8134                           ;SourceFiles/COS/COS_Main.c: 94:  UINT_8 tempbyte1, tempbyte2;;SourceFiles/COS/COS_Main.
      +                          c: 95:  tempbyte2 = TMR1H;
  8135                           
  8136                           ;incstack = 0
  8137                           ; Regs used in _COS_TmrHandler: [wreg+status,2+status,0]
  8138  0113  0020               	movlb	0	; select bank0
  8139  0114  0817               	movf	23,w	;volatile
  8140  0115  00D5               	movwf	??_COS_TmrHandler
  8141  0116  0855               	movf	??_COS_TmrHandler,w
  8142  0117  00D9               	movwf	COS_TmrHandler@tempbyte2
  8143                           
  8144                           ;SourceFiles/COS/COS_Main.c: 96:  tempbyte1 = TMR1L;
  8145  0118  0816               	movf	22,w	;volatile
  8146  0119  00D5               	movwf	??_COS_TmrHandler
  8147  011A  0855               	movf	??_COS_TmrHandler,w
  8148  011B  00D8               	movwf	COS_TmrHandler@tempbyte1
  8149                           
  8150                           ;SourceFiles/COS/COS_Main.c: 97:  if (tempbyte2 != TMR1H)
  8151  011C  0859               	movf	COS_TmrHandler@tempbyte2,w
  8152  011D  0617               	xorwf	23,w	;volatile
  8153  011E  1903               	skipnz
  8154  011F  2928               	goto	l36
  8155                           
  8156                           ;SourceFiles/COS/COS_Main.c: 98:  {;SourceFiles/COS/COS_Main.c: 99:   tempbyte2 = TMR1H;
  8157  0120  0817               	movf	23,w	;volatile
  8158  0121  00D5               	movwf	??_COS_TmrHandler
  8159  0122  0855               	movf	??_COS_TmrHandler,w
  8160  0123  00D9               	movwf	COS_TmrHandler@tempbyte2
  8161                           
  8162                           ;SourceFiles/COS/COS_Main.c: 100:   tempbyte1 = TMR1L;
  8163  0124  0816               	movf	22,w	;volatile
  8164  0125  00D5               	movwf	??_COS_TmrHandler
  8165  0126  0855               	movf	??_COS_TmrHandler,w
  8166  0127  00D8               	movwf	COS_TmrHandler@tempbyte1
  8167  0128                     l36:	
  8168                           ;SourceFiles/COS/COS_Main.c: 101:  }
  8169                           
  8170                           
  8171                           ;SourceFiles/COS/COS_Main.c: 102:  COS_tcnt_val = (UINT_16) (tempbyte2 << 8)&0xff00;
  8172  0128  0859               	movf	COS_TmrHandler@tempbyte2,w
  8173  0129  00D5               	movwf	??_COS_TmrHandler
  8174  012A  01D6               	clrf	??_COS_TmrHandler+1
  8175  012B  0855               	movf	??_COS_TmrHandler,w
  8176  012C  00D6               	movwf	??_COS_TmrHandler+1
  8177  012D  01D5               	clrf	??_COS_TmrHandler
  8178  012E  3000               	movlw	0
  8179  012F  0555               	andwf	??_COS_TmrHandler,w
  8180  0130  00F6               	movwf	_COS_tcnt_val
  8181  0131  30FF               	movlw	255
  8182  0132  0556               	andwf	??_COS_TmrHandler+1,w
  8183  0133  00F7               	movwf	_COS_tcnt_val+1
  8184                           
  8185                           ;SourceFiles/COS/COS_Main.c: 103:  COS_tcnt_val = COS_tcnt_val | (UINT_16) (tempbyte1 & 
      +                          0x00ff);
  8186  0134  0876               	movf	_COS_tcnt_val,w
  8187  0135  0458               	iorwf	COS_TmrHandler@tempbyte1,w
  8188  0136  00F6               	movwf	_COS_tcnt_val
  8189  0137  0877               	movf	_COS_tcnt_val+1,w
  8190  0138  00F7               	movwf	_COS_tcnt_val+1
  8191                           
  8192                           ;SourceFiles/COS/COS_Main.c: 105:  if (((UINT_16) ((UINT_16) COS_tcnt_val - (UINT_16) CO
      +                          S_tcnt_lst) >= (UINT_16) 1000))
  8193  0139  0845               	movf	_COS_tcnt_lst,w
  8194  013A  0276               	subwf	_COS_tcnt_val,w
  8195  013B  00D5               	movwf	??_COS_TmrHandler
  8196  013C  0846               	movf	_COS_tcnt_lst+1,w
  8197  013D  3B77               	subwfb	_COS_tcnt_val+1,w
  8198  013E  00D6               	movwf	??_COS_TmrHandler+1
  8199  013F  3003               	movlw	3
  8200  0140  0256               	subwf	??_COS_TmrHandler+1,w
  8201  0141  30E8               	movlw	232
  8202  0142  1903               	skipnz
  8203  0143  0255               	subwf	??_COS_TmrHandler,w
  8204  0144  1C03               	skipc
  8205  0145  0008               	return
  8206                           
  8207                           ;SourceFiles/COS/COS_Main.c: 106:  {;SourceFiles/COS/COS_Main.c: 107:   COS_tcnt_lst = C
      +                          OS_tcnt_lst + 1000;
  8208  0146  0845               	movf	_COS_tcnt_lst,w
  8209  0147  3EE8               	addlw	232
  8210  0148  00C5               	movwf	_COS_tcnt_lst
  8211  0149  3003               	movlw	3
  8212  014A  3D46               	addwfc	_COS_tcnt_lst+1,w
  8213  014B  00C6               	movwf	_COS_tcnt_lst+1
  8214                           
  8215                           ;SourceFiles/COS/COS_Main.c: 108:   COS_ms_tmr++;
  8216  014C  3001               	movlw	1
  8217  014D  07CB               	addwf	_COS_ms_tmr,f
  8218  014E  3000               	movlw	0
  8219  014F  3DCC               	addwfc	_COS_ms_tmr+1,f
  8220                           
  8221                           ;SourceFiles/COS/COS_Main.c: 110:   if (COS_ms_tmr >= 1000)
  8222  0150  3003               	movlw	3
  8223  0151  024C               	subwf	_COS_ms_tmr+1,w
  8224  0152  30E8               	movlw	232
  8225  0153  1903               	skipnz
  8226  0154  024B               	subwf	_COS_ms_tmr,w
  8227  0155  1C03               	skipc
  8228  0156  295D               	goto	l3832
  8229                           
  8230                           ;SourceFiles/COS/COS_Main.c: 111:   {;SourceFiles/COS/COS_Main.c: 112:    COS_ms_tmr = 0
      +                          ;
  8231  0157  01CB               	clrf	_COS_ms_tmr
  8232  0158  01CC               	clrf	_COS_ms_tmr+1
  8233                           
  8234                           ;SourceFiles/COS/COS_Main.c: 113:    COS_sec_tmr++;
  8235  0159  3001               	movlw	1
  8236  015A  07C9               	addwf	_COS_sec_tmr,f	;volatile
  8237  015B  3000               	movlw	0
  8238  015C  3DCA               	addwfc	_COS_sec_tmr+1,f	;volatile
  8239  015D                     l3832:
  8240                           
  8241                           ;SourceFiles/COS/COS_Main.c: 115:   COS_tsk_tmr++;
  8242  015D  3001               	movlw	1
  8243  015E  07C7               	addwf	_COS_tsk_tmr,f
  8244  015F  3000               	movlw	0
  8245  0160  3DC8               	addwfc	_COS_tsk_tmr+1,f
  8246                           
  8247                           ;SourceFiles/COS/COS_Main.c: 116:   if ((COS_tsk_tmr >= 10) && (!COS_tsk_ena))
  8248  0161  3000               	movlw	0
  8249  0162  0248               	subwf	_COS_tsk_tmr+1,w
  8250  0163  300A               	movlw	10
  8251  0164  1903               	skipnz
  8252  0165  0247               	subwf	_COS_tsk_tmr,w
  8253  0166  1C03               	skipc
  8254  0167  0008               	return
  8255  0168  0021               	movlb	1	; select bank1
  8256  0169  0828               	movf	_COS_tsk_ena^(0+128),w
  8257  016A  1D03               	btfss	3,2
  8258  016B  0008               	return
  8259                           
  8260                           ;SourceFiles/COS/COS_Main.c: 117:   {;SourceFiles/COS/COS_Main.c: 118:    COS_tsk_tmr = 
      +                          0;
  8261  016C  0020               	movlb	0	; select bank0
  8262  016D  01C7               	clrf	_COS_tsk_tmr
  8263  016E  01C8               	clrf	_COS_tsk_tmr+1
  8264                           
  8265                           ;SourceFiles/COS/COS_Main.c: 119:    COS_tsk_ena = 1;
  8266  016F  0021               	movlb	1	; select bank1
  8267  0170  01A8               	clrf	_COS_tsk_ena^(0+128)
  8268  0171  0AA8               	incf	_COS_tsk_ena^(0+128),f
  8269  0172  0008               	return
  8270  0173                     __end_of_COS_TmrHandler:
  8271                           
  8272                           	psect	text69
  8273  0256                     __ptext69:	
  8274 ;; *************** function _COS_Init *****************
  8275 ;; Defined at:
  8276 ;;		line 32 in file "SourceFiles/COS/COS_Main.c"
  8277 ;; Parameters:    Size  Location     Type
  8278 ;;		None
  8279 ;; Auto vars:     Size  Location     Type
  8280 ;;  tempbyte2       1    4[BANK0 ] unsigned char 
  8281 ;;  tempbyte1       1    3[BANK0 ] unsigned char 
  8282 ;; Return value:  Size  Location     Type
  8283 ;;                  1    wreg      void 
  8284 ;; Registers used:
  8285 ;;		wreg, status,2, status,0, pclath, cstack
  8286 ;; Tracked objects:
  8287 ;;		On entry : 0/0
  8288 ;;		On exit  : 0/0
  8289 ;;		Unchanged: 0/0
  8290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8291 ;;      Params:         0       0       0       0       0       0       0       0
  8292 ;;      Locals:         0       2       0       0       0       0       0       0
  8293 ;;      Temps:          0       3       0       0       0       0       0       0
  8294 ;;      Totals:         0       5       0       0       0       0       0       0
  8295 ;;Total ram usage:        5 bytes
  8296 ;; Hardware stack levels used:    1
  8297 ;; Hardware stack levels required when called:    6
  8298 ;; This function calls:
  8299 ;;		_COS_TimerSetup
  8300 ;; This function is called by:
  8301 ;;		_main
  8302 ;; This function uses a non-reentrant model
  8303 ;;
  8304                           
  8305                           
  8306                           ;psect for function _COS_Init
  8307  0256                     _COS_Init:
  8308                           
  8309                           ;SourceFiles/COS/COS_Main.c: 34:  UINT_8 tempbyte1, tempbyte2;;SourceFiles/COS/COS_Main.
      +                          c: 36:  COS_TimerSetup();
  8310                           
  8311                           ;incstack = 0
  8312                           ; Regs used in _COS_Init: [wreg+status,2+status,0+pclath+cstack]
  8313  0256  3185  25D9  3182   	fcall	_COS_TimerSetup
  8314                           
  8315                           ;SourceFiles/COS/COS_Main.c: 41:  COS_tsk_ind = 0;
  8316  0259  0020               	movlb	0	; select bank0
  8317  025A  01D2               	clrf	_COS_tsk_ind
  8318                           
  8319                           ;SourceFiles/COS/COS_Main.c: 42:  COS_tsk_msk = 0x80;
  8320  025B  3080               	movlw	128
  8321  025C  00D5               	movwf	??_COS_Init
  8322  025D  0855               	movf	??_COS_Init,w
  8323  025E  00EE               	movwf	_COS_tsk_msk
  8324                           
  8325                           ;SourceFiles/COS/COS_Main.c: 43:  COS_tsk_ena = 1;
  8326  025F  0021               	movlb	1	; select bank1
  8327  0260  01A8               	clrf	_COS_tsk_ena^(0+128)
  8328  0261  0AA8               	incf	_COS_tsk_ena^(0+128),f
  8329                           
  8330                           ;SourceFiles/COS/COS_Main.c: 44:  COS_ms_tmr = 0;
  8331  0262  0020               	movlb	0	; select bank0
  8332  0263  01CB               	clrf	_COS_ms_tmr
  8333  0264  01CC               	clrf	_COS_ms_tmr+1
  8334                           
  8335                           ;SourceFiles/COS/COS_Main.c: 45:  COS_sec_tmr = 0;
  8336  0265  01C9               	clrf	_COS_sec_tmr	;volatile
  8337  0266  01CA               	clrf	_COS_sec_tmr+1	;volatile
  8338                           
  8339                           ;SourceFiles/COS/COS_Main.c: 46:  COS_tsk_tmr = 0;
  8340  0267  01C7               	clrf	_COS_tsk_tmr
  8341  0268  01C8               	clrf	_COS_tsk_tmr+1
  8342                           
  8343                           ;SourceFiles/COS/COS_Main.c: 48:  tempbyte2 = TMR1H;
  8344  0269  0817               	movf	23,w	;volatile
  8345  026A  00D5               	movwf	??_COS_Init
  8346  026B  0855               	movf	??_COS_Init,w
  8347  026C  00D9               	movwf	COS_Init@tempbyte2
  8348                           
  8349                           ;SourceFiles/COS/COS_Main.c: 49:  tempbyte1 = TMR1L;
  8350  026D  0816               	movf	22,w	;volatile
  8351  026E  00D5               	movwf	??_COS_Init
  8352  026F  0855               	movf	??_COS_Init,w
  8353  0270  00D8               	movwf	COS_Init@tempbyte1
  8354                           
  8355                           ;SourceFiles/COS/COS_Main.c: 50:  if (tempbyte2 != TMR1H)
  8356  0271  0859               	movf	COS_Init@tempbyte2,w
  8357  0272  0617               	xorwf	23,w	;volatile
  8358  0273  1903               	skipnz
  8359  0274  2A7D               	goto	l29
  8360                           
  8361                           ;SourceFiles/COS/COS_Main.c: 51:  {;SourceFiles/COS/COS_Main.c: 52:   tempbyte2 = TMR1H;
  8362  0275  0817               	movf	23,w	;volatile
  8363  0276  00D5               	movwf	??_COS_Init
  8364  0277  0855               	movf	??_COS_Init,w
  8365  0278  00D9               	movwf	COS_Init@tempbyte2
  8366                           
  8367                           ;SourceFiles/COS/COS_Main.c: 53:   tempbyte1 = TMR1L;
  8368  0279  0816               	movf	22,w	;volatile
  8369  027A  00D5               	movwf	??_COS_Init
  8370  027B  0855               	movf	??_COS_Init,w
  8371  027C  00D8               	movwf	COS_Init@tempbyte1
  8372  027D                     l29:	
  8373                           ;SourceFiles/COS/COS_Main.c: 54:  }
  8374                           
  8375                           
  8376                           ;SourceFiles/COS/COS_Main.c: 55:  COS_tcnt_val = ((UINT_16)tempbyte2 << 8)&0xff00;
  8377  027D  0859               	movf	COS_Init@tempbyte2,w
  8378  027E  00D5               	movwf	??_COS_Init
  8379  027F  01D6               	clrf	??_COS_Init+1
  8380  0280  0855               	movf	??_COS_Init,w
  8381  0281  00D6               	movwf	??_COS_Init+1
  8382  0282  01D5               	clrf	??_COS_Init
  8383  0283  3000               	movlw	0
  8384  0284  0555               	andwf	??_COS_Init,w
  8385  0285  00F6               	movwf	_COS_tcnt_val
  8386  0286  30FF               	movlw	255
  8387  0287  0556               	andwf	??_COS_Init+1,w
  8388  0288  00F7               	movwf	_COS_tcnt_val+1
  8389                           
  8390                           ;SourceFiles/COS/COS_Main.c: 56:  COS_tcnt_val = COS_tcnt_val | ((UINT_16)tempbyte1 & 0x
      +                          00ff);
  8391  0289  0876               	movf	_COS_tcnt_val,w
  8392  028A  0458               	iorwf	COS_Init@tempbyte1,w
  8393  028B  00F6               	movwf	_COS_tcnt_val
  8394  028C  0877               	movf	_COS_tcnt_val+1,w
  8395  028D  00F7               	movwf	_COS_tcnt_val+1
  8396                           
  8397                           ;SourceFiles/COS/COS_Main.c: 57:  COS_tcnt_lst = COS_tcnt_val;
  8398  028E  0877               	movf	_COS_tcnt_val+1,w
  8399  028F  00C6               	movwf	_COS_tcnt_lst+1
  8400  0290  0876               	movf	_COS_tcnt_val,w
  8401  0291  00C5               	movwf	_COS_tcnt_lst
  8402  0292  0008               	return
  8403  0293                     __end_of_COS_Init:
  8404                           
  8405                           	psect	text70
  8406  05D9                     __ptext70:	
  8407 ;; *************** function _COS_TimerSetup *****************
  8408 ;; Defined at:
  8409 ;;		line 68 in file "SourceFiles/COS/COS_Main.c"
  8410 ;; Parameters:    Size  Location     Type
  8411 ;;		None
  8412 ;; Auto vars:     Size  Location     Type
  8413 ;;		None
  8414 ;; Return value:  Size  Location     Type
  8415 ;;                  1    wreg      void 
  8416 ;; Registers used:
  8417 ;;		wreg, status,2
  8418 ;; Tracked objects:
  8419 ;;		On entry : 0/0
  8420 ;;		On exit  : 0/0
  8421 ;;		Unchanged: 0/0
  8422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8423 ;;      Params:         0       0       0       0       0       0       0       0
  8424 ;;      Locals:         0       0       0       0       0       0       0       0
  8425 ;;      Temps:          0       0       0       0       0       0       0       0
  8426 ;;      Totals:         0       0       0       0       0       0       0       0
  8427 ;;Total ram usage:        0 bytes
  8428 ;; Hardware stack levels used:    1
  8429 ;; Hardware stack levels required when called:    5
  8430 ;; This function calls:
  8431 ;;		Nothing
  8432 ;; This function is called by:
  8433 ;;		_COS_Init
  8434 ;; This function uses a non-reentrant model
  8435 ;;
  8436                           
  8437                           
  8438                           ;psect for function _COS_TimerSetup
  8439  05D9                     _COS_TimerSetup:
  8440                           
  8441                           ;SourceFiles/COS/COS_Main.c: 72:  TMR1H = 0;
  8442                           
  8443                           ;incstack = 0
  8444                           ; Regs used in _COS_TimerSetup: [wreg+status,2]
  8445  05D9  0020               	movlb	0	; select bank0
  8446  05DA  0197               	clrf	23	;volatile
  8447                           
  8448                           ;SourceFiles/COS/COS_Main.c: 73:  TMR1L = 0;
  8449  05DB  0196               	clrf	22	;volatile
  8450                           
  8451                           ;SourceFiles/COS/COS_Main.c: 78:  T1CON = 0b00100001;
  8452  05DC  3021               	movlw	33
  8453  05DD  0098               	movwf	24	;volatile
  8454  05DE  0008               	return
  8455  05DF                     __end_of_COS_TimerSetup:
  8456                           
  8457                           	psect	intentry
  8458  0004                     __pintentry:	
  8459 ;; *************** function _INTERRUPT_InterruptManager *****************
  8460 ;; Defined at:
  8461 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8462 ;; Parameters:    Size  Location     Type
  8463 ;;		None
  8464 ;; Auto vars:     Size  Location     Type
  8465 ;;		None
  8466 ;; Return value:  Size  Location     Type
  8467 ;;                  1    wreg      void 
  8468 ;; Registers used:
  8469 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8470 ;; Tracked objects:
  8471 ;;		On entry : 0/0
  8472 ;;		On exit  : 0/0
  8473 ;;		Unchanged: 0/0
  8474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8475 ;;      Params:         0       0       0       0       0       0       0       0
  8476 ;;      Locals:         0       0       0       0       0       0       0       0
  8477 ;;      Temps:          0       0       0       0       0       0       0       0
  8478 ;;      Totals:         0       0       0       0       0       0       0       0
  8479 ;;Total ram usage:        0 bytes
  8480 ;; Hardware stack levels used:    1
  8481 ;; Hardware stack levels required when called:    4
  8482 ;; This function calls:
  8483 ;;		_TMR2_ISR
  8484 ;; This function is called by:
  8485 ;;		Interrupt level 1
  8486 ;; This function uses a non-reentrant model
  8487 ;;
  8488                           
  8489  0004                     _INTERRUPT_InterruptManager:
  8490                           
  8491                           ;incstack = 0
  8492  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8493                           
  8494                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8495  0005  3180               	pagesel	$
  8496                           
  8497                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  8498  0006  1F0B               	btfss	11,6	;volatile
  8499  0007  2810               	goto	i1l229
  8500                           
  8501                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  8502  0008  0021               	movlb	1	; select bank1
  8503  0009  1C91               	btfss	17,1	;volatile
  8504  000A  2810               	goto	i1l229
  8505  000B  0020               	movlb	0	; select bank0
  8506  000C  1C91               	btfss	17,1	;volatile
  8507  000D  2810               	goto	i1l229
  8508                           
  8509                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR2_ISR();
  8510  000E  3184  2497         	fcall	_TMR2_ISR
  8511  0010                     i1l229:	
  8512                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  8513                           
  8514  0010  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8515  0011  0009               	retfie
  8516  0012                     __end_of_INTERRUPT_InterruptManager:
  8517                           
  8518                           	psect	text72
  8519  0497                     __ptext72:	
  8520 ;; *************** function _TMR2_ISR *****************
  8521 ;; Defined at:
  8522 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  8523 ;; Parameters:    Size  Location     Type
  8524 ;;		None
  8525 ;; Auto vars:     Size  Location     Type
  8526 ;;		None
  8527 ;; Return value:  Size  Location     Type
  8528 ;;                  1    wreg      void 
  8529 ;; Registers used:
  8530 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8531 ;; Tracked objects:
  8532 ;;		On entry : 0/0
  8533 ;;		On exit  : 0/0
  8534 ;;		Unchanged: 0/0
  8535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8536 ;;      Params:         0       0       0       0       0       0       0       0
  8537 ;;      Locals:         0       0       0       0       0       0       0       0
  8538 ;;      Temps:          0       0       0       0       0       0       0       0
  8539 ;;      Totals:         0       0       0       0       0       0       0       0
  8540 ;;Total ram usage:        0 bytes
  8541 ;; Hardware stack levels used:    1
  8542 ;; Hardware stack levels required when called:    3
  8543 ;; This function calls:
  8544 ;;		_TMR2_CallBack
  8545 ;; This function is called by:
  8546 ;;		_INTERRUPT_InterruptManager
  8547 ;; This function uses a non-reentrant model
  8548 ;;
  8549                           
  8550                           
  8551                           ;psect for function _TMR2_ISR
  8552  0497                     _TMR2_ISR:
  8553                           
  8554                           ;mcc_generated_files/tmr2.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr2.c: 124:     PIR1bits.TMR2IF = 0;
  8555                           
  8556                           ;incstack = 0
  8557                           ; Regs used in _TMR2_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8558  0497  0020               	movlb	0	; select bank0
  8559  0498  1091               	bcf	17,1	;volatile
  8560                           
  8561                           ;mcc_generated_files/tmr2.c: 127:     if (++CountCallBack >= 5)
  8562  0499  3001               	movlw	1
  8563  049A  07C3               	addwf	TMR2_ISR@CountCallBack,f	;volatile
  8564  049B  3000               	movlw	0
  8565  049C  3DC4               	addwfc	TMR2_ISR@CountCallBack+1,f	;volatile
  8566  049D  3000               	movlw	0
  8567  049E  0244               	subwf	TMR2_ISR@CountCallBack+1,w	;volatile
  8568  049F  3005               	movlw	5
  8569  04A0  1903               	skipnz
  8570  04A1  0243               	subwf	TMR2_ISR@CountCallBack,w	;volatile
  8571  04A2  1C03               	skipc
  8572  04A3  0008               	return
  8573                           
  8574                           ;mcc_generated_files/tmr2.c: 128:     {;mcc_generated_files/tmr2.c: 130:         TMR2_Ca
      +                          llBack();
  8575  04A4  3185  2549         	fcall	_TMR2_CallBack
  8576                           
  8577                           ;mcc_generated_files/tmr2.c: 133:         CountCallBack = 0;
  8578  04A6  0020               	movlb	0	; select bank0
  8579  04A7  01C3               	clrf	TMR2_ISR@CountCallBack	;volatile
  8580  04A8  01C4               	clrf	TMR2_ISR@CountCallBack+1	;volatile
  8581  04A9  0008               	return
  8582  04AA                     __end_of_TMR2_ISR:
  8583                           
  8584                           	psect	text73
  8585  0549                     __ptext73:	
  8586 ;; *************** function _TMR2_CallBack *****************
  8587 ;; Defined at:
  8588 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  8589 ;; Parameters:    Size  Location     Type
  8590 ;;		None
  8591 ;; Auto vars:     Size  Location     Type
  8592 ;;		None
  8593 ;; Return value:  Size  Location     Type
  8594 ;;                  1    wreg      void 
  8595 ;; Registers used:
  8596 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8597 ;; Tracked objects:
  8598 ;;		On entry : 0/0
  8599 ;;		On exit  : 0/0
  8600 ;;		Unchanged: 0/0
  8601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8602 ;;      Params:         0       0       0       0       0       0       0       0
  8603 ;;      Locals:         0       0       0       0       0       0       0       0
  8604 ;;      Temps:          0       0       0       0       0       0       0       0
  8605 ;;      Totals:         0       0       0       0       0       0       0       0
  8606 ;;Total ram usage:        0 bytes
  8607 ;; Hardware stack levels used:    1
  8608 ;; Hardware stack levels required when called:    2
  8609 ;; This function calls:
  8610 ;;		Absolute function
  8611 ;;		_Led2_PWM
  8612 ;;		_TMR2_DefaultInterruptHandler
  8613 ;; This function is called by:
  8614 ;;		_TMR2_ISR
  8615 ;; This function uses a non-reentrant model
  8616 ;;
  8617                           
  8618                           
  8619                           ;psect for function _TMR2_CallBack
  8620  0549                     _TMR2_CallBack:
  8621                           
  8622                           ;mcc_generated_files/tmr2.c: 141:     if(TMR2_InterruptHandler)
  8623                           
  8624                           ;incstack = 0
  8625                           ; Regs used in _TMR2_CallBack: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8626  0549  0021               	movlb	1	; select bank1
  8627  054A  0826               	movf	_TMR2_InterruptHandler^(0+128),w
  8628  054B  0427               	iorwf	(_TMR2_InterruptHandler+1)^(0+128),w
  8629  054C  1903               	btfsc	3,2
  8630  054D  0008               	return
  8631                           
  8632                           ;mcc_generated_files/tmr2.c: 142:     {;mcc_generated_files/tmr2.c: 143:         TMR2_In
      +                          terruptHandler();
  8633  054E  0827               	movf	(_TMR2_InterruptHandler+1)^(0+128),w
  8634  054F  008A               	movwf	10
  8635  0550  0826               	movf	_TMR2_InterruptHandler^(0+128),w
  8636  0551  000A               	callw
  8637  0552  3185               	pagesel	$
  8638  0553  0008               	return
  8639  0554                     __end_of_TMR2_CallBack:
  8640                           
  8641                           	psect	text74
  8642  00AD                     __ptext74:	
  8643 ;; *************** function _Led2_PWM *****************
  8644 ;; Defined at:
  8645 ;;		line 30 in file "SourceFiles/SunSensor/Led.c"
  8646 ;; Parameters:    Size  Location     Type
  8647 ;;		None
  8648 ;; Auto vars:     Size  Location     Type
  8649 ;;		None
  8650 ;; Return value:  Size  Location     Type
  8651 ;;                  1    wreg      void 
  8652 ;; Registers used:
  8653 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8654 ;; Tracked objects:
  8655 ;;		On entry : 0/0
  8656 ;;		On exit  : 0/0
  8657 ;;		Unchanged: 0/0
  8658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8659 ;;      Params:         0       0       0       0       0       0       0       0
  8660 ;;      Locals:         0       0       0       0       0       0       0       0
  8661 ;;      Temps:          2       0       0       0       0       0       0       0
  8662 ;;      Totals:         2       0       0       0       0       0       0       0
  8663 ;;Total ram usage:        2 bytes
  8664 ;; Hardware stack levels used:    1
  8665 ;; Hardware stack levels required when called:    1
  8666 ;; This function calls:
  8667 ;;		_PWM1_LoadDutyValue
  8668 ;; This function is called by:
  8669 ;;		_main
  8670 ;;		_TMR2_CallBack
  8671 ;; This function uses a non-reentrant model
  8672 ;;
  8673                           
  8674                           
  8675                           ;psect for function _Led2_PWM
  8676  00AD                     _Led2_PWM:
  8677                           
  8678                           ;SourceFiles/SunSensor/Led.c: 32:     switch (BreathState)
  8679                           
  8680                           ;incstack = 0
  8681                           ; Regs used in _Led2_PWM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8682  00AD  28F8               	goto	i1l2792
  8683  00AE                     i1l2764:
  8684                           
  8685                           ;SourceFiles/SunSensor/Led.c: 35:             counter++;
  8686  00AE  3001               	movlw	1
  8687  00AF  0020               	movlb	0	; select bank0
  8688  00B0  07C1               	addwf	_counter,f
  8689  00B1  3000               	movlw	0
  8690  00B2  3DC2               	addwfc	_counter+1,f
  8691                           
  8692                           ;SourceFiles/SunSensor/Led.c: 36:             if(counter > 100)
  8693  00B3  3000               	movlw	0
  8694  00B4  0242               	subwf	_counter+1,w
  8695  00B5  3065               	movlw	101
  8696  00B6  1903               	skipnz
  8697  00B7  0241               	subwf	_counter,w
  8698  00B8  1C03               	skipc
  8699  00B9  28BF               	goto	i1l2768
  8700                           
  8701                           ;SourceFiles/SunSensor/Led.c: 37:             {;SourceFiles/SunSensor/Led.c: 38:        
      +                                   BreathState = 2;
  8702  00BA  3002               	movlw	2
  8703  00BB  00F4               	movwf	??_Led2_PWM
  8704  00BC  0874               	movf	??_Led2_PWM,w
  8705  00BD  00FB               	movwf	_BreathState
  8706                           
  8707                           ;SourceFiles/SunSensor/Led.c: 39:             }
  8708  00BE  290B               	goto	i1l2794
  8709  00BF                     i1l2768:
  8710                           
  8711                           ;SourceFiles/SunSensor/Led.c: 41:             {;SourceFiles/SunSensor/Led.c: 42:        
      +                                   dutyValue += 8;
  8712  00BF  3008               	movlw	8
  8713  00C0  07BF               	addwf	_dutyValue,f
  8714  00C1  3000               	movlw	0
  8715  00C2  3DC0               	addwfc	_dutyValue+1,f
  8716  00C3  290B               	goto	i1l2794
  8717  00C4                     i1l2770:
  8718                           
  8719                           ;SourceFiles/SunSensor/Led.c: 46:             counter++;
  8720  00C4  3001               	movlw	1
  8721  00C5  0020               	movlb	0	; select bank0
  8722  00C6  07C1               	addwf	_counter,f
  8723  00C7  3000               	movlw	0
  8724  00C8  3DC2               	addwfc	_counter+1,f
  8725                           
  8726                           ;SourceFiles/SunSensor/Led.c: 47:             if (counter >= (100 + 200))
  8727  00C9  3001               	movlw	1
  8728  00CA  0242               	subwf	_counter+1,w
  8729  00CB  302C               	movlw	44
  8730  00CC  1903               	skipnz
  8731  00CD  0241               	subwf	_counter,w
  8732  00CE  1C03               	skipc
  8733  00CF  28D7               	goto	i1l2776
  8734                           
  8735                           ;SourceFiles/SunSensor/Led.c: 48:             {;SourceFiles/SunSensor/Led.c: 49:        
      +                                   BreathState = 3;
  8736  00D0  3003               	movlw	3
  8737  00D1  00F4               	movwf	??_Led2_PWM
  8738  00D2  0874               	movf	??_Led2_PWM,w
  8739  00D3  00FB               	movwf	_BreathState
  8740  00D4                     i1l2774:
  8741                           
  8742                           ;SourceFiles/SunSensor/Led.c: 51:                 dutyValue = 0;
  8743  00D4  01BF               	clrf	_dutyValue
  8744  00D5  01C0               	clrf	_dutyValue+1
  8745                           
  8746                           ;SourceFiles/SunSensor/Led.c: 53:             }
  8747  00D6  290B               	goto	i1l2794
  8748  00D7                     i1l2776:
  8749                           
  8750                           ;SourceFiles/SunSensor/Led.c: 55:             {;SourceFiles/SunSensor/Led.c: 56:        
      +                                   if (dutyValue > 0)
  8751  00D7  083F               	movf	_dutyValue,w
  8752  00D8  0440               	iorwf	_dutyValue+1,w
  8753  00D9  1903               	btfsc	3,2
  8754  00DA  290B               	goto	i1l2794
  8755                           
  8756                           ;SourceFiles/SunSensor/Led.c: 57:                 {;SourceFiles/SunSensor/Led.c: 58:    
      +                                           if (dutyValue > 4)
  8757  00DB  3000               	movlw	0
  8758  00DC  0240               	subwf	_dutyValue+1,w
  8759  00DD  3005               	movlw	5
  8760  00DE  1903               	skipnz
  8761  00DF  023F               	subwf	_dutyValue,w
  8762  00E0  1C03               	skipc
  8763  00E1  28D4               	goto	i1l2774
  8764                           
  8765                           ;SourceFiles/SunSensor/Led.c: 59:                     {;SourceFiles/SunSensor/Led.c: 60:
      +                                                   dutyValue-=4;
  8766  00E2  3004               	movlw	4
  8767  00E3  02BF               	subwf	_dutyValue,f
  8768  00E4  3000               	movlw	0
  8769  00E5  3BC0               	subwfb	_dutyValue+1,f
  8770                           
  8771                           ;SourceFiles/SunSensor/Led.c: 61:                     }
  8772  00E6  290B               	goto	i1l2794
  8773  00E7                     i1l2784:
  8774                           
  8775                           ;SourceFiles/SunSensor/Led.c: 71:             counter++;
  8776  00E7  3001               	movlw	1
  8777  00E8  0020               	movlb	0	; select bank0
  8778  00E9  07C1               	addwf	_counter,f
  8779  00EA  3000               	movlw	0
  8780  00EB  3DC2               	addwfc	_counter+1,f
  8781                           
  8782                           ;SourceFiles/SunSensor/Led.c: 72:             if (counter > (100 + 200 + 100))
  8783  00EC  3001               	movlw	1
  8784  00ED  0242               	subwf	_counter+1,w
  8785  00EE  3091               	movlw	145
  8786  00EF  1903               	skipnz
  8787  00F0  0241               	subwf	_counter,w
  8788  00F1  1C03               	skipc
  8789  00F2  290B               	goto	i1l2794
  8790                           
  8791                           ;SourceFiles/SunSensor/Led.c: 73:             {;SourceFiles/SunSensor/Led.c: 74:        
      +                                   counter = 0;
  8792  00F3  01C1               	clrf	_counter
  8793  00F4  01C2               	clrf	_counter+1
  8794                           
  8795                           ;SourceFiles/SunSensor/Led.c: 75:                 BreathState = 1;
  8796  00F5  01FB               	clrf	_BreathState
  8797  00F6  0AFB               	incf	_BreathState,f
  8798  00F7  290B               	goto	i1l2794
  8799  00F8                     i1l2792:
  8800  00F8  087B               	movf	_BreathState,w
  8801  00F9  00F4               	movwf	??_Led2_PWM
  8802  00FA  01F5               	clrf	??_Led2_PWM+1
  8803                           
  8804                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8805                           ; Switch size 1, requested type "simple"
  8806                           ; Number of cases is 1, Range of values is 0 to 0
  8807                           ; switch strategies available:
  8808                           ; Name         Instructions Cycles
  8809                           ; simple_byte            4     3 (average)
  8810                           ; direct_byte            8     6 (fixed)
  8811                           ; jumptable            260     6 (fixed)
  8812                           ;	Chosen strategy is simple_byte
  8813  00FB  0875               	movf	??_Led2_PWM+1,w
  8814  00FC  3A00               	xorlw	0	; case 0
  8815  00FD  1903               	skipnz
  8816  00FE  2900               	goto	i1l4138
  8817  00FF  290B               	goto	i1l2794
  8818  0100                     i1l4138:
  8819                           
  8820                           ; Switch size 1, requested type "simple"
  8821                           ; Number of cases is 3, Range of values is 1 to 3
  8822                           ; switch strategies available:
  8823                           ; Name         Instructions Cycles
  8824                           ; simple_byte           10     6 (average)
  8825                           ; direct_byte           15     9 (fixed)
  8826                           ; jumptable            263     9 (fixed)
  8827                           ;	Chosen strategy is simple_byte
  8828  0100  0874               	movf	??_Led2_PWM,w
  8829  0101  3A01               	xorlw	1	; case 1
  8830  0102  1903               	skipnz
  8831  0103  28AE               	goto	i1l2764
  8832  0104  3A03               	xorlw	3	; case 2
  8833  0105  1903               	skipnz
  8834  0106  28C4               	goto	i1l2770
  8835  0107  3A01               	xorlw	1	; case 3
  8836  0108  1903               	skipnz
  8837  0109  28E7               	goto	i1l2784
  8838  010A  290B               	goto	i1l2794
  8839  010B                     i1l2794:
  8840                           
  8841                           ;SourceFiles/SunSensor/Led.c: 82:     PWM1_LoadDutyValue(dutyValue);
  8842  010B  0020               	movlb	0	; select bank0
  8843  010C  0840               	movf	_dutyValue+1,w
  8844  010D  00F1               	movwf	PWM1_LoadDutyValue@dutyValue+1
  8845  010E  083F               	movf	_dutyValue,w
  8846  010F  00F0               	movwf	PWM1_LoadDutyValue@dutyValue
  8847  0110  3184  246C         	fcall	_PWM1_LoadDutyValue
  8848  0112  0008               	return
  8849  0113                     __end_of_Led2_PWM:
  8850                           
  8851                           	psect	text75
  8852  063B                     __ptext75:	
  8853 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  8854 ;; Defined at:
  8855 ;;		line 151 in file "mcc_generated_files/tmr2.c"
  8856 ;; Parameters:    Size  Location     Type
  8857 ;;		None
  8858 ;; Auto vars:     Size  Location     Type
  8859 ;;		None
  8860 ;; Return value:  Size  Location     Type
  8861 ;;                  1    wreg      void 
  8862 ;; Registers used:
  8863 ;;		None
  8864 ;; Tracked objects:
  8865 ;;		On entry : 0/0
  8866 ;;		On exit  : 0/0
  8867 ;;		Unchanged: 0/0
  8868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8869 ;;      Params:         0       0       0       0       0       0       0       0
  8870 ;;      Locals:         0       0       0       0       0       0       0       0
  8871 ;;      Temps:          0       0       0       0       0       0       0       0
  8872 ;;      Totals:         0       0       0       0       0       0       0       0
  8873 ;;Total ram usage:        0 bytes
  8874 ;; Hardware stack levels used:    1
  8875 ;; This function calls:
  8876 ;;		Nothing
  8877 ;; This function is called by:
  8878 ;;		_TMR2_Initialize
  8879 ;;		_TMR2_CallBack
  8880 ;; This function uses a non-reentrant model
  8881 ;;
  8882                           
  8883                           
  8884                           ;psect for function _TMR2_DefaultInterruptHandler
  8885  063B                     _TMR2_DefaultInterruptHandler:
  8886                           
  8887                           ;incstack = 0
  8888                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  8889  063B  0008               	return
  8890  063C                     __end_of_TMR2_DefaultInterruptHandler:
  8891                           
  8892                           	psect	text76
  8893  046C                     __ptext76:	
  8894 ;; *************** function _PWM1_LoadDutyValue *****************
  8895 ;; Defined at:
  8896 ;;		line 72 in file "mcc_generated_files/pwm1.c"
  8897 ;; Parameters:    Size  Location     Type
  8898 ;;  dutyValue       2    0[COMMON] unsigned short 
  8899 ;; Auto vars:     Size  Location     Type
  8900 ;;		None
  8901 ;; Return value:  Size  Location     Type
  8902 ;;                  1    wreg      void 
  8903 ;; Registers used:
  8904 ;;		wreg, status,2, status,0
  8905 ;; Tracked objects:
  8906 ;;		On entry : 0/0
  8907 ;;		On exit  : 0/0
  8908 ;;		Unchanged: 0/0
  8909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8910 ;;      Params:         2       0       0       0       0       0       0       0
  8911 ;;      Locals:         0       0       0       0       0       0       0       0
  8912 ;;      Temps:          2       0       0       0       0       0       0       0
  8913 ;;      Totals:         4       0       0       0       0       0       0       0
  8914 ;;Total ram usage:        4 bytes
  8915 ;; Hardware stack levels used:    1
  8916 ;; This function calls:
  8917 ;;		Nothing
  8918 ;; This function is called by:
  8919 ;;		_Led2_PWM
  8920 ;; This function uses a non-reentrant model
  8921 ;;
  8922                           
  8923                           
  8924                           ;psect for function _PWM1_LoadDutyValue
  8925  046C                     _PWM1_LoadDutyValue:
  8926                           
  8927                           ;mcc_generated_files/pwm1.c: 72:  void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm1.c: 73:  {;mcc_generated_files/pwm1.c: 75:      PWM1DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  8928                           
  8929                           ;incstack = 0
  8930                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2+status,0]
  8931  046C  0871               	movf	PWM1_LoadDutyValue@dutyValue+1,w
  8932  046D  00F3               	movwf	??_PWM1_LoadDutyValue+1
  8933  046E  0870               	movf	PWM1_LoadDutyValue@dutyValue,w
  8934  046F  00F2               	movwf	??_PWM1_LoadDutyValue
  8935  0470  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
  8936  0471  0CF2               	rrf	??_PWM1_LoadDutyValue,f
  8937  0472  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
  8938  0473  0CF2               	rrf	??_PWM1_LoadDutyValue,f
  8939  0474  0872               	movf	??_PWM1_LoadDutyValue,w
  8940  0475  002C               	movlb	12	; select bank12
  8941  0476  0092               	movwf	18	;volatile
  8942                           
  8943                           ;mcc_generated_files/pwm1.c: 78:      PWM1DCL = (dutyValue & 0x0003)<<6;
  8944  0477  0870               	movf	PWM1_LoadDutyValue@dutyValue,w
  8945  0478  3903               	andlw	3
  8946  0479  00F2               	movwf	??_PWM1_LoadDutyValue
  8947  047A  3005               	movlw	5
  8948  047B                     u88_25:
  8949  047B  35F2               	lslf	??_PWM1_LoadDutyValue,f
  8950  047C  3EFF               	addlw	-1
  8951  047D  1D03               	skipz
  8952  047E  2C7B               	goto	u88_25
  8953  047F  3572               	lslf	??_PWM1_LoadDutyValue,w
  8954  0480  0091               	movwf	17	;volatile
  8955  0481  0008               	return
  8956  0482                     __end_of_PWM1_LoadDutyValue:
  8957  007E                     btemp	set	126	;btemp
  8958  007E                     int$flags	set	126
  8959  007E                     wtemp0	set	126
  8960                           
  8961                           	psect	config
  8962                           
  8963                           ;Config register CONFIG1 @ 0x8007
  8964                           ;	Oscillator Selection Bits
  8965                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  8966                           ;	Watchdog Timer Enable
  8967                           ;	WDTE = OFF, WDT disabled
  8968                           ;	Power-up Timer Enable
  8969                           ;	PWRTE = OFF, PWRT disabled
  8970                           ;	MCLR Pin Function Select
  8971                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  8972                           ;	Flash Program Memory Code Protection
  8973                           ;	CP = OFF, Program memory code protection is disabled
  8974                           ;	Brown-out Reset Enable
  8975                           ;	BOREN = ON, Brown-out Reset enabled
  8976                           ;	Clock Out Enable
  8977                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  8978                           ;	Internal/External Switchover Mode
  8979                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  8980                           ;	Fail-Safe Clock Monitor Enable
  8981                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  8982  8007                     	org	32775
  8983  8007  3FE4               	dw	16356
  8984                           
  8985                           ;Config register CONFIG2 @ 0x8008
  8986                           ;	Flash Memory Self-Write Protection
  8987                           ;	WRT = OFF, Write protection off
  8988                           ;	Stack Overflow/Underflow Reset Enable
  8989                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  8990                           ;	Brown-out Reset Voltage Selection
  8991                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  8992                           ;	Low-Power Brown Out Reset
  8993                           ;	LPBOR = OFF, Low-Power BOR is disabled
  8994                           ;	Low-Voltage Programming Enable
  8995                           ;	LVP = ON, Low-voltage programming enabled
  8996  8008                     	org	32776
  8997  8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    47
    Data        3
    BSS         57
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     25      80
    BANK1            80      2      11
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_DO_TX$1837$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$1842	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$1837	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$1836	const PTR FTN()enum E3874 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    COS_TskMan$1835	const PTR FTN()void  size(2) Largest target is 1
		 -> GetTemp(), UartDisplay(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S582$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    I2C_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> Temp(BANK0[2]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), 
		 -> I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), 
		 -> I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S582$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> Temp(BANK0[2]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), 
		 -> I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), 
		 -> I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> Temp(BANK0[2]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), 
		 -> I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), 
		 -> I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S582$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S582$callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    fsmStateTable	const PTR FTN()enum E3874[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Led2_PWM(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Led2_PWM(), Absolute function(), TMR2_DefaultInterruptHandler(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S138$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0

    I2C_ReadNBytes@data	PTR unsigned char  size(1) Largest target is 2
		 -> Temp(BANK0[2]), 

    S30$tptr	PTR FTN()void  size(2) Largest target is 1
		 -> GetTemp(), UartDisplay(), 

    COS_tsk.tptr	PTR FTN()void  size(2) Largest target is 1
		 -> GetTemp(), UartDisplay(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR2_CallBack->_Led2_PWM
    _Led2_PWM->_PWM1_LoadDutyValue

Critical Paths under _main in BANK0

    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _COS_TskMan->_GetTemp
    _UartDisplay->_EUSART_Write
    _GetTemp->_I2C_ReadNBytes
    _I2C_MasterRead->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_COS_TskMan

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   97918
                           _COS_Init
                     _COS_TmrHandler
                         _COS_TskMan
                  _SYSTEM_Initialize
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     574
                  _EUSART_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _COS_TskMan                                           2     2      0   96923
                                              0 BANK1      2     2      0
                            _GetTemp *
                        _UartDisplay *
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1486
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _UartDisplay                                          0     0      0      31
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _GetTemp                                              2     2      0   95406
                                             23 BANK0      2     2      0
                              _Delay
                     _I2C_ReadNBytes
                         _SendByUart
 ---------------------------------------------------------------------------------
 (3) _SendByUart                                           2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _I2C_ReadNBytes                                       4     1      3   95217
                                             19 BANK0      4     1      3
                          _I2C_Close
                     _I2C_MasterRead
                           _I2C_Open
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (4) _I2C_Open                                             3     3      0      68
                                              0 BANK0      3     3      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterRead                                       0     0      0   93265
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterOperation                                  3     3      0   93265
                                             16 BANK0      3     3      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (6) _I2C_Poller                                           0     0      0   93197
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterFsm                                        3     3      0   93197
                                             13 BANK0      3     3      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_TX_EMPTY                                      3     3      0   23276
                                             10 BANK0      3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_TX                                            3     3      0   23307
                                             10 BANK0      3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_ADR_WRITE                                0     0      0      31
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_ADR_READ                                 0     0      0      31
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendTxData                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX                                            3     3      0   23276
                                             10 BANK0      3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_ADDRESS_NACK                                  3     3      0   23276
                                             10 BANK0      3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _wr2RegCompleteHandler                                1     0      1    4584
                                              9 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _wr1RegCompleteHandler                                1     0      1    4584
                                              9 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rdBlkRegCompleteHandler                              1     0      1    4615
                                              9 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd2RegCompleteHandler                                1     0      1    4584
                                              9 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd1RegCompleteHandler                                1     0      1    4584
                                              9 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _I2C_SetDataCompleteCallback                         4     1      3    2979
                                              5 BANK0      4     1      3
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (11) _I2C_SetCallback                                     5     2      3    1117
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (4) _I2C_SetBuffer                                        4     2      2    1574
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_CallbackReturnStop                               1     0      1       0
                                              9 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (9) _I2C_CallbackReturnReset                              1     0      1     325
                                              9 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Close                                            2     2      0      37
                                              0 BANK0      2     2      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Delay                                                4     2      2     158
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _COS_TmrHandler                                       5     5      0     105
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _COS_Init                                             5     5      0     105
                                              0 BANK0      5     5      0
                     _COS_TimerSetup
 ---------------------------------------------------------------------------------
 (2) _COS_TimerSetup                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          0     0      0     120
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR2_ISR                                            0     0      0     120
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (14) _TMR2_CallBack                                       0     0      0     120
                   Absolute function *
                           _Led2_PWM *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _Led2_PWM                                            2     2      0     120
                                              4 COMMON     2     2      0
                 _PWM1_LoadDutyValue
 ---------------------------------------------------------------------------------
 (16) _PWM1_LoadDutyValue                                  4     2      2     120
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _COS_Init
     _COS_TimerSetup
   _COS_TmrHandler
   _COS_TskMan
     _GetTemp *
       _Delay
       _I2C_ReadNBytes
         _I2C_Close
           _I2C_MasterClearIrq
           _I2C_MasterClose
           _I2C_MasterDisableIrq
         _I2C_MasterRead
           _I2C_MasterOperation
             _I2C_MasterStart
             _I2C_Poller
               _I2C_MasterFsm
                 _I2C_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_IDLE *
                 _I2C_DO_RCEN *
                   _I2C_MasterStartRx
                 _I2C_DO_RESET *
                 _I2C_DO_RX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_RX_NACK_RESTART *
                     _I2C_MasterSendNack
                   _I2C_DO_RX_NACK_STOP *
                     _I2C_MasterSendNack
                   _I2C_MasterGetRxData *
                   _I2C_MasterSendAck *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_RX_ACK *
                   _I2C_MasterSendAck
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_DO_SEND_ADR_READ *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_ADR_WRITE *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_DO_TX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART_READ *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_RESTART_WRITE *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterIsNack *
                   _I2C_MasterSendTxData *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterSetIrq *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_MasterClearIrq *
                 _I2C_MasterIsNack *
               _I2C_MasterWaitForEvent
         _I2C_Open
           _I2C_MasterClearIrq
           _I2C_MasterOpen
         _I2C_SetBuffer
       _SendByUart
     _UartDisplay *
       _EUSART_Write
     ___wmul *
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize
   _TMR2_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _Led2_PWM *
         _PWM1_LoadDutyValue
       _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      67       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     19      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      2       B       8       13.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      67      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Jun 22 15:47:10 2020

                       ??_I2C_DO_SEND_ADR_READ 0055                    __size_of_I2C_MasterSendNack 0004  
                           __size_of_I2C_Close 0019               __end_of_TMR2_SetInterruptHandler 0567  
                      ??_I2C_DO_SEND_ADR_WRITE 0056                                             l36 0128  
                                           l29 027D                                             l47 009C  
                          ___wmul@multiplicand 0057                            __size_of_I2C_Poller 000A  
                        ??_I2C_DO_SEND_RESTART 0055                                    ?_COS_TskMan 0070  
                 __size_of_I2C_MasterOperation 001A                  __size_of_I2C_MasterSendTxData 0006  
                                          l412 02C9                                            l706 05A6  
                                          l810 0181                                            l635 05F1  
                                          l813 01A2                                            l478 01F9  
                                          l494 022E                                            l806 0174  
                                          l808 017A                                            l908 03D9  
                                          l836 03FC                                            l799 0507  
                                          _PR2 001B                         _I2C_MasterWaitForEvent 05F1  
               ?_EUSART_SetFramingErrorHandler 0055                                _TMR2_Initialize 04AA  
                                          wreg 0009                       ??_I2C_CallbackReturnStop 005F  
                                 _I2C_DO_RESET 05DF                        ??_rd2RegCompleteHandler 005F  
                                         l4130 031A                                           l4132 0247  
                                         l4134 01EB                                           l3422 01CF  
                                         l4136 02E9                                           l3504 02D8  
                                         l3440 0212                                           l3432 01D5  
                                         l4128 01AE                                           l3274 0361  
                                         l3426 01D2                                           l3418 01CC  
                                         l3532 0302                                           l3462 0230  
                                         l3472 0236                                           l3528 02FF  
                                         l3466 0233                                           l3538 0305  
                                         l3554 0334                                           l3492 02D1  
                                         l3564 0554                                           l3832 015D  
                                         l3648 046A                                           l3488 02CE  
                                         l3592 0415                                           l3664 03C9  
                                         l3498 02D5                                           l3594 0419  
                                         l3658 03B5                                           l3772 01A5  
                              __end_of_COS_tsk 0523                                           l3598 041E  
                                         l3766 0190                                           l3774 01BF  
                                         l3782 03D3                                           l3846 006F  
                                         l3868 009D                        __end_of_PWM1_Initialize 059C  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           u1635 03DA  
                                         u1645 03DF                                           u1585 050D  
                                         _TMR2 001A                                           _WPUA 020C  
                                         _WPUB 020D                        ??_wr2RegCompleteHandler 005F  
                                         _Humi 003D                                           _Temp 0053  
                                         _main 03EC                       ?_I2C_CallbackReturnReset 005E  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                             __end_of_I2C_Open 02CB                                           btemp 007E  
                                         start 0012                                __end_of_GetTemp 01C5  
             __size_of_rdBlkRegCompleteHandler 0019                               ?_I2C_MasterClose 0070  
                             __end_of_COS_Init 0293                                  ?_EUSART_Write 0070  
               __size_of_OSCILLATOR_Initialize 0006                               ?_I2C_MasterStart 0070  
                                _I2C_DO_RX_ACK 05FD                  __end_of_OSCILLATOR_Initialize 05C7  
                                        ?_main 0070                                          _T1CON 0018  
                                        _T2CON 001C                                          i1l229 0010  
                                        _RCREG 0199                   __size_of_I2C_DO_RX_NACK_STOP 0004  
                                        _RCSTA 019D                                          _TMR1H 0017  
                                        _TMR1L 0016                              ??_I2C_DO_TX_EMPTY 005F  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          u88_25 047B  
                                        _TXREG 019A                                          _TXSTA 019E  
                                        _Delay 0504                                          _TempH 004E  
                            __end_of_I2C_DO_RX 0256                              __end_of_I2C_DO_TX 0214  
                             __end_of_TMR2_ISR 04AA                                 _WDT_Initialize 05E9  
                            __end_of_I2C_Close 046C                         __size_of_I2C_MasterFsm 0027  
               I2C_MasterOperation@returnValue 0067                        _I2C_MasterEnableRestart 0625  
                                        pclath 000A                               ?_I2C_SetCallback 0055  
                                        status 0003                               __end_of_Led2_PWM 0113  
                                        wtemp0 007E                              ?_I2C_DO_SEND_STOP 0070  
                       __size_of_I2C_SetBuffer 000E                            __size_of_COS_TskMan 007E  
                           ??_I2C_DO_SEND_STOP 0055                                  _fsmStateTable 0393  
                              __initialization 0014                                   __end_of_main 0407  
            __size_of_I2C_DO_SEND_RESTART_READ 0004                      ?_I2C_DO_SEND_RESTART_READ 0070  
                               ??_EUSART_Write 0055                                 ?_I2C_DO_RX_ACK 0070  
                      __end_of_TMR2_Initialize 04BC                    ?_INTERRUPT_InterruptManager 0070  
                     _TMR2_SetInterruptHandler 055E                                         ??_main 006E  
                            ?_I2C_MasterIsNack 0070                                    _BreathState 007B  
                            ?_I2C_MasterSetIrq 0070                             ??_I2C_MasterIsNack 0055  
                                       ?_Delay 0055                         __end_of_WDT_Initialize 05ED  
                               _COS_TmrHandler 0113                             ??_I2C_MasterSetIrq 0055  
                                   _SendByUart 058B              _EUSART_DefaultFramingErrorHandler 0000  
                   _EUSART_OverrunErrorHandler 00A2                __end_of_I2C_CallbackReturnReset 0638  
                               _COS_TimerSetup 05D9                __size_of_I2C_CallbackReturnStop 0002  
                                       _APFCON 011D                  I2C_SetDataCompleteCallback@cb 005A  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _ANSELC 018E                                         _BORCON 0116  
                                 ??_I2C_Poller 0065                               ?_PWM1_Initialize 0070  
                                       i1l4138 0100                                         i1l2770 00C4  
                                       i1l2764 00AE                                         i1l2774 00D4  
                                       i1l2784 00E7                                         i1l2776 00D7  
                                       i1l2768 00BF                                         i1l2792 00F8  
                                       i1l2794 010B                                         Delay@i 0057  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                    ??_GetTemp 006C                                         _SPBRGL 019B  
                                       _WDTCON 0097                                  ??_UartDisplay 0056  
                          _I2C_MasterGetRxData 061C                                     _Timer2Flag 0050  
                      __size_of_I2C_ReadNBytes 001D                                         ___wmul 03D0  
                                _I2C_MasterFsm 0323                              I2C_SetCallback@cb 0055  
                      __size_of_I2C_MasterRead 0004                        __size_of_I2C_MasterOpen 000B  
                      __size_of_I2C_MasterStop 0003                        __size_of_I2C_Initialize 0009  
                                _I2C_SetBuffer 0523                             __end_of_I2C_Poller 055E  
                 __end_of_I2C_MasterDisableIrq 062E                         __end_of_COS_TmrHandler 0173  
                          _I2C_DO_ADDRESS_NACK 02F8                                   __pdataCOMMON 007A  
                         ?_I2C_MasterGetRxData 0070                                      ?_I2C_Open 0070  
                              ?_WDT_Initialize 0070                         __end_of_COS_TimerSetup 05DF  
                    ??_I2C_MasterEnableRestart 0055       TMR2_SetInterruptHandler@InterruptHandler 0055  
                            _SYSTEM_Initialize 0482                        __end_of__initialization 002B  
                                    ?_COS_Init 0070                          __end_of_TMR2_CallBack 0554  
                          _I2C_MasterOperation 0407                                 _NewMessageFlag 0078  
                           ?_SYSTEM_Initialize 0070                           ?_I2C_DO_ADDRESS_NACK 0070  
                  PWM1_LoadDutyValue@dutyValue 0070                                  __end_of_Delay 0514  
                      _rdBlkRegCompleteHandler 043A                                 __pcstackCOMMON 0070  
                               ?_I2C_MasterFsm 0070                                ??_I2C_DO_RX_ACK 0055  
                                 __pidataBANK0 063A                         _I2C_CallbackReturnStop 0638  
                          ??_SYSTEM_Initialize 0057                            __end_of_UartDisplay 05A4  
                                    ?_TMR2_ISR 0070                             _PWM1_LoadDutyValue 046C  
                             ?_TMR2_Initialize 0070                                 ?_I2C_SetBuffer 0055  
                      ?_I2C_MasterWaitForEvent 0070                 __size_of_I2C_DO_SEND_ADR_WRITE 0007  
           __size_of_I2C_DO_SEND_RESTART_WRITE 0004                  __end_of_I2C_DO_SEND_ADR_WRITE 05BB  
                                 ??_COS_TskMan 00A9                     ?_I2C_DO_SEND_RESTART_WRITE 0070  
                         ?_I2C_MasterOperation 0070                          ??_I2C_MasterGetRxData 0055  
                                    ?_Led2_PWM 0070                                ?_COS_TmrHandler 0070  
                               _OPTION_REGbits 0095                          I2C_ReadNBytes@address 006B  
                                   ??_I2C_Open 0055                                        ??_Delay 0057  
                          ?_PWM1_LoadDutyValue 0070                                ?_COS_TimerSetup 0070  
                   __end_of_I2C_MasterClearIrq 0634                                    ?_SendByUart 0070  
              ??_EUSART_SetOverrunErrorHandler 0057                      __end_of_SYSTEM_Initialize 0497  
                            _I2C_MasterSendAck 0611                                     __pbssBANK0 0020  
                         __end_of_EUSART_Write 05AC                                  ??_I2C_DO_IDLE 0055  
               __size_of_rd2RegCompleteHandler 0012                                  ??_I2C_DO_RCEN 0055  
                __end_of_rd2RegCompleteHandler 04E0                   __end_of_I2C_MasterSendTxData 05D9  
                           ?_I2C_MasterSendAck 0070                              _I2C_MasterStartRx 061F  
                                   ??_COS_Init 0055                 __size_of_wr2RegCompleteHandler 0012  
                        ??_I2C_DO_ADDRESS_NACK 005F                  __end_of_wr2RegCompleteHandler 0504  
                          _I2C_DO_RX_NACK_STOP 05F9                          _rd1RegCompleteHandler 04E0  
                           ?_I2C_MasterStartRx 0070                             __end_of_COS_TskMan 00AD  
                         ??_PWM1_LoadDutyValue 0072                     __end_of_I2C_MasterSendNack 0619  
                        _wr1RegCompleteHandler 04BC                                     __pmaintext 03EC  
                          ??_I2C_MasterSendAck 0055                       rd1RegCompleteHandler@ptr 005E  
                             Delay@Timecounter 0055                    __end_of_I2C_DO_SEND_RESTART 0609  
                              _I2C_DO_TX_EMPTY 02CB                            I2C_SetBuffer@buffer 0058  
                                      ?___wmul 0055                                     ??_TMR2_ISR 0076  
                                   __pintentry 0004                 __end_of_I2C_MasterWaitForEvent 05F5  
                          ??_I2C_MasterStartRx 0055                  __size_of_I2C_DO_SEND_ADR_READ 0008  
                                      _BAUDCON 019F               __size_of_I2C_CallbackReturnReset 0002  
                        ??_I2C_MasterOperation 0065                 I2C_SetDataCompleteCallback@ptr 005C  
                     ??_I2C_DO_RX_NACK_RESTART 0055              __end_of_I2C_DO_SEND_RESTART_WRITE 060D  
                         ?_I2C_DO_RX_NACK_STOP 0070                                     ??_Led2_PWM 0074  
                                      _COS_tsk 0514                                        _PWM1DCH 0612  
                                      _PWM1DCL 0611                      __end_of_I2C_MasterSendAck 0615  
                                      _PWM1CON 0613                                        _SSP1ADD 0212  
                                      _SSP1BUF 0211                       ??_EUSART_SetErrorHandler 0057  
                    __end_of_I2C_MasterStartRx 0622                           I2C_Close@returnValue 0056  
                 ?_I2C_SetDataCompleteCallback 005A                                      _I2C_DO_RX 0214  
                                    _I2C_DO_TX 01C5               __end_of_I2C_DO_SEND_RESTART_READ 0611  
                                      _GetTemp 0173                                      _I2C_Close 0453  
                                      _Command 004D                      ??_rdBlkRegCompleteHandler 005F  
                                  _UartDisplay 059C                           _I2C_MasterDisableIrq 062B  
                              ??_I2C_MasterFsm 0062                     ??_TMR2_SetInterruptHandler 0057  
                               _I2C_ReadNBytes 03B3                            __end_of_I2C_DO_IDLE 05E9  
                          __end_of_I2C_DO_RCEN 05CD                            __size_of_SendByUart 0009  
                              ??_I2C_SetBuffer 0057                                __size_of___wmul 001C  
                      I2C_SetBuffer@bufferSize 0055                             I2C_ReadNBytes@data 0068  
                               _I2C_MasterRead 05ED                                 _I2C_MasterOpen 053E  
                               _I2C_MasterStop 0622                                 _I2C_Initialize 0567  
                    __size_of_I2C_DO_SEND_STOP 0004                                        __ptext1 0482  
                                      __ptext2 05E9                                        __ptext3 04AA  
                                      __ptext4 055E                                        __ptext5 0594  
                                      __ptext6 0421                                        __ptext7 05C1  
                                      __ptext8 0567                                        __ptext9 036F  
                        ??_I2C_DO_RX_NACK_STOP 0055                                        _counter 0041  
                        _OSCILLATOR_Initialize 05C1                                      _T2CONbits 001C  
                           I2C_SetCallback@idx 0059                       __size_of_I2C_MasterClose 0003  
                     ??_PIN_MANAGER_Initialize 0055                  I2C_CallbackReturnReset@funPtr 005E  
                           I2C_SetCallback@ptr 0057                       wr1RegCompleteHandler@ptr 005E  
                     __size_of_I2C_MasterStart 0003                     __size_of_SYSTEM_Initialize 0015  
                                      clrloop0 05BC                           end_of_initialization 002B  
                                   ?_I2C_DO_RX 0070                                     ?_I2C_DO_TX 0070  
                   _counter@UART_Display$F1229 004F          __end_of_EUSART_SetOverrunErrorHandler 0579  
       __size_of_EUSART_SetOverrunErrorHandler 0009                  _EUSART_SetOverrunErrorHandler 0570  
                    __size_of_I2C_MasterIsNack 0006                                     ?_I2C_Close 0070  
                              _TimeSlotCounter 0051                         ?_rd1RegCompleteHandler 005E  
                      __end_of_I2C_DO_TX_EMPTY 02F8                      __size_of_I2C_MasterSetIrq 0003  
                        ?_I2C_MasterDisableIrq 0070                         __end_of_I2C_ReadNBytes 03D0  
                            _EUSART_Initialize 036F                         ?_wr1RegCompleteHandler 005E  
                           ?_EUSART_Initialize 0070                       __size_of_I2C_SetCallback 0025  
                                    _RCSTAbits 019D                         __end_of_I2C_MasterRead 05F1  
                       __end_of_I2C_MasterOpen 0549                         __end_of_I2C_MasterStop 0625  
                       __end_of_I2C_Initialize 0570                                      _U8Message 007A  
                          ??_EUSART_Initialize 0057                               ??_WDT_Initialize 0055  
              __end_of_rdBlkRegCompleteHandler 0453                           _I2C_MasterSendTxData 05D3  
              __size_of_I2C_DO_RX_NACK_RESTART 0004                          __size_of_EUSART_Write 0008  
                   __size_of_I2C_MasterSendAck 0004                              __size_of_I2C_Open 0038  
              __size_of_EUSART_SetErrorHandler 0009                     __size_of_I2C_MasterStartRx 0003  
                    __end_of_EUSART_Initialize 0393                                    _I2C_DO_IDLE 05E4  
                                  _I2C_DO_RCEN 05C7                     rdBlkRegCompleteHandler@ptr 005E  
                                    _TXSTAbits 019E                                ?_I2C_ReadNBytes 0068  
                      ?_I2C_CallbackReturnStop 005E                       _I2C_DO_SEND_RESTART_READ 060D  
                            __size_of_COS_Init 003D                       __size_of_PWM1_Initialize 0008  
                 I2C_CallbackReturnStop@funPtr 005E                                ?_I2C_MasterRead 0070  
                              ?_I2C_MasterOpen 0070                                ?_I2C_MasterStop 0070  
                              ?_I2C_Initialize 0070           __end_of_TMR2_DefaultInterruptHandler 063C  
        __size_of_TMR2_DefaultInterruptHandler 0001                   _TMR2_DefaultInterruptHandler 063B  
                      _I2C_CallbackReturnReset 0636                     _EUSART_DefaultErrorHandler 0000  
                             ??_COS_TmrHandler 0055                                 __end_of___wmul 03EC  
         __size_of_I2C_SetDataCompleteCallback 000D                                  __pidataCOMMON 0634  
                                 _EUSART_Write 05A4                              __size_of_TMR2_ISR 0013  
                             ??_COS_TimerSetup 0055                          ?_I2C_MasterSendTxData 0070  
                       ?_OSCILLATOR_Initialize 0070                    ??_I2C_DO_SEND_RESTART_WRITE 0055  
                          start_initialization 0014                                   ??_SendByUart 0055  
              __size_of_PIN_MANAGER_Initialize 0019                              __size_of_Led2_PWM 0066  
                                ?_I2C_DO_RESET 0070                                    ??_I2C_DO_RX 005F  
                                  ??_I2C_DO_TX 005F                              ??_I2C_MasterClose 0055  
                       ??_I2C_MasterDisableIrq 0055                                    ??_I2C_Close 0055  
                            ??_I2C_MasterStart 0055                 __end_of_I2C_CallbackReturnStop 063A  
                       _I2C_DO_RX_NACK_RESTART 05F5                               ?_I2C_DO_TX_EMPTY 0070  
                           _I2C_MasterClearIrq 0631                 ?_EUSART_SetOverrunErrorHandler 0055  
                   _EUSART_FramingErrorHandler 00A4                                       ??___wmul 0059  
                       _EUSART_SetErrorHandler 0582                                   _COS_tcnt_val 0076  
                          ?_I2C_MasterClearIrq 0070                                   _COS_tcnt_lst 0045  
                           __end_of_SendByUart 0594                    __end_of_I2C_MasterGetRxData 061F  
                                  __pdataBANK0 006F                          __end_of_I2C_DO_RX_ACK 0601  
                ?_TMR2_DefaultInterruptHandler 0070                               _I2C_DO_SEND_STOP 0601  
                            ??_I2C_SetCallback 0058                            I2C_Open@returnValue 0057  
                           _I2C_MasterSendNack 0615                       ?_I2C_MasterEnableRestart 0070  
                       __size_of_TMR2_CallBack 000B                          _I2C_DO_SEND_ADR_WRITE 05B4  
                                  __pbssCOMMON 0076                                      ___latbits 0002  
                                __pcstackBANK0 0055                                  __pcstackBANK1 00A9  
                               ??_I2C_DO_RESET 0055                       __size_of_TMR2_Initialize 0012  
                          ?_I2C_MasterSendNack 0070                   __end_of_I2C_DO_SEND_ADR_READ 05B4  
                         ??_I2C_MasterClearIrq 0055                    __end_of_I2C_DO_ADDRESS_NACK 0323  
                             _I2C_MasterIsNack 05CD                     __size_of_EUSART_Initialize 0024  
                                     ?_GetTemp 0070                      _I2C_DO_SEND_RESTART_WRITE 0609  
                             _I2C_MasterSetIrq 0619                                   ?_UartDisplay 0070  
                                    __pnvBANK0 006E                                      __pnvBANK1 00A0  
                        _rd2RegCompleteHandler 04CE                          __end_of_fsmStateTable 03B3  
                  __size_of_PWM1_LoadDutyValue 0016                         _PIN_MANAGER_Initialize 0421  
                        _wr2RegCompleteHandler 04F2                      ??_I2C_CallbackReturnReset 005F  
                  __end_of_I2C_MasterOperation 0421                           ??_I2C_MasterSendNack 0055  
                     rd2RegCompleteHandler@ptr 005E                         ??_I2C_MasterSendTxData 0055  
                            ??_PWM1_Initialize 0055                   ??_INTERRUPT_InterruptManager 0076  
                 __size_of_I2C_DO_SEND_RESTART 0004                        I2C_MasterOperation@read 0066  
                                     _I2C_Open 0293                                 __size_of_Delay 0010  
                            I2C_ReadNBytes@len 0069                        ??_rd1RegCompleteHandler 005F  
                                    _dutyValue 003F                                       _I2cState 006F  
                      ??_wr1RegCompleteHandler 005F                                 ___wmul@product 0059  
                                     _COS_Init 0256         EUSART_SetErrorHandler@interruptHandler 0055  
                                     _LATCbits 010E                                      clear_ram0 05BB  
                                _TMR2_CallBack 0549                                       _PIE1bits 0091  
                            _eusartRxLastError 0079            __size_of_INTERRUPT_InterruptManager 000E  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0057  
                                     _PIR2bits 0012                          __end_of_I2C_MasterFsm 034A  
                  __end_of_I2C_DO_RX_NACK_STOP 05FD                                       _SSP1CON1 0215  
                                     _SSP1CON2 0216              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _TMR2_ISR 0497                __end_of_I2C_MasterEnableRestart 0628  
                                     _SSP1STAT 0214                          __end_of_I2C_SetBuffer 0531  
                            ___wmul@multiplier 0055                         ?_I2C_DO_SEND_ADR_WRITE 0070  
                     I2C_MasterSendTxData@data 0055                                       _Led2_PWM 00AD  
               ??_TMR2_DefaultInterruptHandler 0070              __size_of_TMR2_SetInterruptHandler 0009  
                    ?_TMR2_SetInterruptHandler 0055                       wr2RegCompleteHandler@ptr 005E  
                            COS_Init@tempbyte1 0058                              COS_Init@tempbyte2 0059  
                   ??_I2C_DO_SEND_RESTART_READ 0055                       ?_rdBlkRegCompleteHandler 005E  
                             ??_I2C_ReadNBytes 006B                                     _I2C_Poller 0554  
                                   _I2C_Status 0020                                   ?_I2C_DO_IDLE 0070  
                                 ?_I2C_DO_RCEN 0070                              ??_TMR2_Initialize 0057  
                       ?_rd2RegCompleteHandler 005E                                 ?_TMR2_CallBack 0070  
                             __size_of_GetTemp 0052                               ??_I2C_MasterRead 0068  
                             ??_I2C_MasterOpen 0055                         ?_wr2RegCompleteHandler 005E  
                             ??_I2C_MasterStop 0055                       ??_I2C_MasterWaitForEvent 0055  
                             ??_I2C_Initialize 0055                                    _COS_sec_tmr 0049  
                         __end_of_I2C_DO_RESET 05E4                        ??_OSCILLATOR_Initialize 0055  
                          _EUSART_ErrorHandler 00A0                                    _COS_tsk_ena 00A8  
                                  _COS_tsk_ind 0052                                    _COS_tsk_msk 006E  
                                  _COS_tsk_tmr 0047                           _I2C_DO_SEND_ADR_READ 05AC  
                              _I2C_MasterClose 062E                                I2C_Open@address 0056  
                              _I2C_MasterStart 0628                                       __ptext10 0570  
                                     __ptext11 0579                                       __ptext20 0293  
                                     __ptext12 0582                                       __ptext21 053E  
                                     __ptext13 002F                                       __ptext30 05F9  
                                     __ptext22 05ED                                       __ptext14 03D0  
                                     __ptext31 05FD                                       __ptext23 0407  
                                     __ptext15 0173                                       __ptext40 05AC  
                                     __ptext32 0601                                       __ptext24 0554  
                                     __ptext16 059C                                       __ptext41 05E4  
                                     __ptext33 0605                                       __ptext25 05F1  
                                     __ptext17 05A4                                       __ptext50 0636  
                                     __ptext42 02CB                                       __ptext34 0609  
                                     __ptext26 0323                                       __ptext18 058B  
                                     __ptext51 0638                                       __ptext43 0619  
                                     __ptext35 060D                                       __ptext27 02F8  
                                     __ptext19 03B3                                       __ptext60 0622  
                                     __ptext52 043A                                       __ptext44 05CD  
                                     __ptext36 05C7                                       __ptext28 05DF  
                                     __ptext61 0625                                       __ptext53 04BC  
                                     __ptext45 05D3                                       __ptext37 0214  
                                     __ptext29 05F5                                       __ptext70 05D9  
                                     __ptext62 0628                                       __ptext54 04CE  
                                     __ptext46 0611                                       __ptext38 01C5  
                                     __ptext63 0453                                       __ptext55 04E0  
                                     __ptext47 061C                                       __ptext39 05B4  
                                     __ptext72 0497                                       __ptext64 062B  
                                     __ptext56 04F2                                       __ptext48 0615  
                                     __ptext73 0549                                       __ptext65 062E  
                                     __ptext57 0531                                       __ptext49 061F  
                                     __ptext74 00AD                                       __ptext66 0631  
                                     __ptext58 034A                                       __ptext75 063B  
                                     __ptext67 0504                                       __ptext59 0523  
                                     __ptext76 046C                                       __ptext68 0113  
                                     __ptext69 0256                                   _SSP1CON1bits 0215  
                                 _SSP1CON2bits 0216            __end_of_I2C_SetDataCompleteCallback 053E  
                  _I2C_SetDataCompleteCallback 0531                        ?_I2C_DO_RX_NACK_RESTART 0070  
                     __end_of_I2C_DO_SEND_STOP 0605                                  __size_of_main 001B  
                      ?_EUSART_SetErrorHandler 0055                                _I2C_SetCallback 034A  
                ??_I2C_SetDataCompleteCallback 005D                           __size_of_UartDisplay 0008  
EUSART_SetOverrunErrorHandler@interruptHandler 0055                                       int$flags 007E  
                        ?_I2C_DO_SEND_ADR_READ 0070             __end_of_INTERRUPT_InterruptManager 0012  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 0582  
       __size_of_EUSART_SetFramingErrorHandler 0009                  _EUSART_SetFramingErrorHandler 0579  
                                 _SSP1STATbits 0214                       __end_of_I2C_MasterIsNack 05D3  
                                   _COS_TskMan 002F                       __end_of_I2C_MasterSetIrq 061C  
                                   _INTCONbits 000B                                     _COS_ms_tmr 004B  
               __end_of_I2C_DO_RX_NACK_RESTART 05F9                        __size_of_WDT_Initialize 0004  
                                     intlevel1 0000                                    ?_I2C_Poller 0070  
                              ??_TMR2_CallBack 0076               __size_of_I2C_MasterEnableRestart 0003  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 058B  
                          _I2C_DO_SEND_RESTART 0605                  __size_of_I2C_MasterDisableIrq 0003  
                              _PWM1_Initialize 0594                __size_of_I2C_MasterWaitForEvent 0004  
EUSART_SetFramingErrorHandler@interruptHandler 0055                        __end_of_I2C_MasterClose 0631  
                     __size_of_I2C_DO_TX_EMPTY 002D                        __end_of_I2C_MasterStart 062B  
                                __pstringtext1 0393                                  __pstringtext2 0514  
                         ?_I2C_DO_SEND_RESTART 0070                        COS_TmrHandler@tempbyte1 0058  
                      COS_TmrHandler@tempbyte2 0059                          TMR2_ISR@CountCallBack 0043  
                                SendByUart@Txt 0056                   __size_of_I2C_MasterGetRxData 0003  
                      __size_of_COS_TmrHandler 0060                    __size_of_I2C_MasterClearIrq 0003  
                      __size_of_COS_TimerSetup 0006                             EUSART_Write@txData 0055  
                      __end_of_I2C_SetCallback 036F                 __end_of_PIN_MANAGER_Initialize 043A  
               __size_of_rd1RegCompleteHandler 0012                  __end_of_rd1RegCompleteHandler 04F2  
                       __size_of_I2C_DO_RX_ACK 0004                     __end_of_PWM1_LoadDutyValue 0482  
               __size_of_wr1RegCompleteHandler 0012                          __size_of_I2C_DO_RESET 0005  
                __end_of_wr1RegCompleteHandler 04CE                          _TMR2_InterruptHandler 00A6  
                 __size_of_I2C_DO_ADDRESS_NACK 002B                           __size_of_I2C_DO_IDLE 0005  
                         __size_of_I2C_DO_RCEN 0006                             __size_of_I2C_DO_RX 0042  
                           __size_of_I2C_DO_TX 004F  
