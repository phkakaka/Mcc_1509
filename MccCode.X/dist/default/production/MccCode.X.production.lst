

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jun 23 14:23:42 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1509
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,inline,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,inline,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,delta=2
    61                           	psect	text49,local,class=CODE,merge=1,delta=2
    62                           	psect	text50,local,class=CODE,merge=1,delta=2
    63                           	psect	text51,local,class=CODE,merge=1,delta=2
    64                           	psect	text52,local,class=CODE,merge=1,delta=2
    65                           	psect	text53,local,class=CODE,merge=1,delta=2
    66                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    67                           	psect	text55,local,class=CODE,merge=1,inline,delta=2
    68                           	dabs	1,0x7E,2
    69  0000                     
    70                           ; Version 1.45
    71                           ; Generated 16/11/2017 GMT
    72                           ; 
    73                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC16F1509 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104  0000                     	;# 
   105  0001                     	;# 
   106  0002                     	;# 
   107  0003                     	;# 
   108  0004                     	;# 
   109  0005                     	;# 
   110  0006                     	;# 
   111  0007                     	;# 
   112  0008                     	;# 
   113  0009                     	;# 
   114  000A                     	;# 
   115  000B                     	;# 
   116  000C                     	;# 
   117  000D                     	;# 
   118  000E                     	;# 
   119  0011                     	;# 
   120  0012                     	;# 
   121  0013                     	;# 
   122  0015                     	;# 
   123  0016                     	;# 
   124  0016                     	;# 
   125  0017                     	;# 
   126  0018                     	;# 
   127  0019                     	;# 
   128  001A                     	;# 
   129  001B                     	;# 
   130  001C                     	;# 
   131  008C                     	;# 
   132  008D                     	;# 
   133  008E                     	;# 
   134  0091                     	;# 
   135  0092                     	;# 
   136  0093                     	;# 
   137  0095                     	;# 
   138  0096                     	;# 
   139  0097                     	;# 
   140  0099                     	;# 
   141  009A                     	;# 
   142  009B                     	;# 
   143  009B                     	;# 
   144  009C                     	;# 
   145  009D                     	;# 
   146  009E                     	;# 
   147  009F                     	;# 
   148  010C                     	;# 
   149  010D                     	;# 
   150  010E                     	;# 
   151  0111                     	;# 
   152  0112                     	;# 
   153  0113                     	;# 
   154  0114                     	;# 
   155  0115                     	;# 
   156  0116                     	;# 
   157  0117                     	;# 
   158  0118                     	;# 
   159  0119                     	;# 
   160  011D                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  018E                     	;# 
   164  0191                     	;# 
   165  0191                     	;# 
   166  0192                     	;# 
   167  0193                     	;# 
   168  0193                     	;# 
   169  0194                     	;# 
   170  0195                     	;# 
   171  0196                     	;# 
   172  0197                     	;# 
   173  0199                     	;# 
   174  019A                     	;# 
   175  019B                     	;# 
   176  019B                     	;# 
   177  019C                     	;# 
   178  019D                     	;# 
   179  019E                     	;# 
   180  019F                     	;# 
   181  020C                     	;# 
   182  020D                     	;# 
   183  0211                     	;# 
   184  0211                     	;# 
   185  0212                     	;# 
   186  0212                     	;# 
   187  0213                     	;# 
   188  0213                     	;# 
   189  0214                     	;# 
   190  0214                     	;# 
   191  0215                     	;# 
   192  0215                     	;# 
   193  0215                     	;# 
   194  0216                     	;# 
   195  0216                     	;# 
   196  0217                     	;# 
   197  0217                     	;# 
   198  0391                     	;# 
   199  0392                     	;# 
   200  0393                     	;# 
   201  0394                     	;# 
   202  0395                     	;# 
   203  0396                     	;# 
   204  0498                     	;# 
   205  0498                     	;# 
   206  0499                     	;# 
   207  049A                     	;# 
   208  049B                     	;# 
   209  049B                     	;# 
   210  049C                     	;# 
   211  049D                     	;# 
   212  049E                     	;# 
   213  049F                     	;# 
   214  0611                     	;# 
   215  0612                     	;# 
   216  0613                     	;# 
   217  0613                     	;# 
   218  0614                     	;# 
   219  0615                     	;# 
   220  0616                     	;# 
   221  0616                     	;# 
   222  0617                     	;# 
   223  0618                     	;# 
   224  0619                     	;# 
   225  0619                     	;# 
   226  061A                     	;# 
   227  061B                     	;# 
   228  061C                     	;# 
   229  061C                     	;# 
   230  0691                     	;# 
   231  0692                     	;# 
   232  0693                     	;# 
   233  0694                     	;# 
   234  0695                     	;# 
   235  0F0F                     	;# 
   236  0F10                     	;# 
   237  0F11                     	;# 
   238  0F12                     	;# 
   239  0F13                     	;# 
   240  0F14                     	;# 
   241  0F15                     	;# 
   242  0F16                     	;# 
   243  0F17                     	;# 
   244  0F18                     	;# 
   245  0F19                     	;# 
   246  0F1A                     	;# 
   247  0F1B                     	;# 
   248  0F1C                     	;# 
   249  0F1D                     	;# 
   250  0F1E                     	;# 
   251  0F1F                     	;# 
   252  0F20                     	;# 
   253  0F21                     	;# 
   254  0F22                     	;# 
   255  0F23                     	;# 
   256  0F24                     	;# 
   257  0F25                     	;# 
   258  0F26                     	;# 
   259  0F27                     	;# 
   260  0F28                     	;# 
   261  0F29                     	;# 
   262  0F2A                     	;# 
   263  0F2B                     	;# 
   264  0F2C                     	;# 
   265  0F2D                     	;# 
   266  0F2E                     	;# 
   267  0F2F                     	;# 
   268  0F8C                     	;# 
   269  0F8D                     	;# 
   270  0F91                     	;# 
   271  0F95                     	;# 
   272  0F96                     	;# 
   273  0F97                     	;# 
   274  0F9C                     	;# 
   275  0F9D                     	;# 
   276  0F9E                     	;# 
   277  0FE3                     	;# 
   278  0FE4                     	;# 
   279  0FE5                     	;# 
   280  0FE6                     	;# 
   281  0FE7                     	;# 
   282  0FE8                     	;# 
   283  0FE9                     	;# 
   284  0FEA                     	;# 
   285  0FEB                     	;# 
   286  0FED                     	;# 
   287  0FEE                     	;# 
   288  0FEF                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  0011                     	;# 
   305  0012                     	;# 
   306  0013                     	;# 
   307  0015                     	;# 
   308  0016                     	;# 
   309  0016                     	;# 
   310  0017                     	;# 
   311  0018                     	;# 
   312  0019                     	;# 
   313  001A                     	;# 
   314  001B                     	;# 
   315  001C                     	;# 
   316  008C                     	;# 
   317  008D                     	;# 
   318  008E                     	;# 
   319  0091                     	;# 
   320  0092                     	;# 
   321  0093                     	;# 
   322  0095                     	;# 
   323  0096                     	;# 
   324  0097                     	;# 
   325  0099                     	;# 
   326  009A                     	;# 
   327  009B                     	;# 
   328  009B                     	;# 
   329  009C                     	;# 
   330  009D                     	;# 
   331  009E                     	;# 
   332  009F                     	;# 
   333  010C                     	;# 
   334  010D                     	;# 
   335  010E                     	;# 
   336  0111                     	;# 
   337  0112                     	;# 
   338  0113                     	;# 
   339  0114                     	;# 
   340  0115                     	;# 
   341  0116                     	;# 
   342  0117                     	;# 
   343  0118                     	;# 
   344  0119                     	;# 
   345  011D                     	;# 
   346  018C                     	;# 
   347  018D                     	;# 
   348  018E                     	;# 
   349  0191                     	;# 
   350  0191                     	;# 
   351  0192                     	;# 
   352  0193                     	;# 
   353  0193                     	;# 
   354  0194                     	;# 
   355  0195                     	;# 
   356  0196                     	;# 
   357  0197                     	;# 
   358  0199                     	;# 
   359  019A                     	;# 
   360  019B                     	;# 
   361  019B                     	;# 
   362  019C                     	;# 
   363  019D                     	;# 
   364  019E                     	;# 
   365  019F                     	;# 
   366  020C                     	;# 
   367  020D                     	;# 
   368  0211                     	;# 
   369  0211                     	;# 
   370  0212                     	;# 
   371  0212                     	;# 
   372  0213                     	;# 
   373  0213                     	;# 
   374  0214                     	;# 
   375  0214                     	;# 
   376  0215                     	;# 
   377  0215                     	;# 
   378  0215                     	;# 
   379  0216                     	;# 
   380  0216                     	;# 
   381  0217                     	;# 
   382  0217                     	;# 
   383  0391                     	;# 
   384  0392                     	;# 
   385  0393                     	;# 
   386  0394                     	;# 
   387  0395                     	;# 
   388  0396                     	;# 
   389  0498                     	;# 
   390  0498                     	;# 
   391  0499                     	;# 
   392  049A                     	;# 
   393  049B                     	;# 
   394  049B                     	;# 
   395  049C                     	;# 
   396  049D                     	;# 
   397  049E                     	;# 
   398  049F                     	;# 
   399  0611                     	;# 
   400  0612                     	;# 
   401  0613                     	;# 
   402  0613                     	;# 
   403  0614                     	;# 
   404  0615                     	;# 
   405  0616                     	;# 
   406  0616                     	;# 
   407  0617                     	;# 
   408  0618                     	;# 
   409  0619                     	;# 
   410  0619                     	;# 
   411  061A                     	;# 
   412  061B                     	;# 
   413  061C                     	;# 
   414  061C                     	;# 
   415  0691                     	;# 
   416  0692                     	;# 
   417  0693                     	;# 
   418  0694                     	;# 
   419  0695                     	;# 
   420  0F0F                     	;# 
   421  0F10                     	;# 
   422  0F11                     	;# 
   423  0F12                     	;# 
   424  0F13                     	;# 
   425  0F14                     	;# 
   426  0F15                     	;# 
   427  0F16                     	;# 
   428  0F17                     	;# 
   429  0F18                     	;# 
   430  0F19                     	;# 
   431  0F1A                     	;# 
   432  0F1B                     	;# 
   433  0F1C                     	;# 
   434  0F1D                     	;# 
   435  0F1E                     	;# 
   436  0F1F                     	;# 
   437  0F20                     	;# 
   438  0F21                     	;# 
   439  0F22                     	;# 
   440  0F23                     	;# 
   441  0F24                     	;# 
   442  0F25                     	;# 
   443  0F26                     	;# 
   444  0F27                     	;# 
   445  0F28                     	;# 
   446  0F29                     	;# 
   447  0F2A                     	;# 
   448  0F2B                     	;# 
   449  0F2C                     	;# 
   450  0F2D                     	;# 
   451  0F2E                     	;# 
   452  0F2F                     	;# 
   453  0F8C                     	;# 
   454  0F8D                     	;# 
   455  0F91                     	;# 
   456  0F95                     	;# 
   457  0F96                     	;# 
   458  0F97                     	;# 
   459  0F9C                     	;# 
   460  0F9D                     	;# 
   461  0F9E                     	;# 
   462  0FE3                     	;# 
   463  0FE4                     	;# 
   464  0FE5                     	;# 
   465  0FE6                     	;# 
   466  0FE7                     	;# 
   467  0FE8                     	;# 
   468  0FE9                     	;# 
   469  0FEA                     	;# 
   470  0FEB                     	;# 
   471  0FED                     	;# 
   472  0FEE                     	;# 
   473  0FEF                     	;# 
   474  0000                     	;# 
   475  0001                     	;# 
   476  0002                     	;# 
   477  0003                     	;# 
   478  0004                     	;# 
   479  0005                     	;# 
   480  0006                     	;# 
   481  0007                     	;# 
   482  0008                     	;# 
   483  0009                     	;# 
   484  000A                     	;# 
   485  000B                     	;# 
   486  000C                     	;# 
   487  000D                     	;# 
   488  000E                     	;# 
   489  0011                     	;# 
   490  0012                     	;# 
   491  0013                     	;# 
   492  0015                     	;# 
   493  0016                     	;# 
   494  0016                     	;# 
   495  0017                     	;# 
   496  0018                     	;# 
   497  0019                     	;# 
   498  001A                     	;# 
   499  001B                     	;# 
   500  001C                     	;# 
   501  008C                     	;# 
   502  008D                     	;# 
   503  008E                     	;# 
   504  0091                     	;# 
   505  0092                     	;# 
   506  0093                     	;# 
   507  0095                     	;# 
   508  0096                     	;# 
   509  0097                     	;# 
   510  0099                     	;# 
   511  009A                     	;# 
   512  009B                     	;# 
   513  009B                     	;# 
   514  009C                     	;# 
   515  009D                     	;# 
   516  009E                     	;# 
   517  009F                     	;# 
   518  010C                     	;# 
   519  010D                     	;# 
   520  010E                     	;# 
   521  0111                     	;# 
   522  0112                     	;# 
   523  0113                     	;# 
   524  0114                     	;# 
   525  0115                     	;# 
   526  0116                     	;# 
   527  0117                     	;# 
   528  0118                     	;# 
   529  0119                     	;# 
   530  011D                     	;# 
   531  018C                     	;# 
   532  018D                     	;# 
   533  018E                     	;# 
   534  0191                     	;# 
   535  0191                     	;# 
   536  0192                     	;# 
   537  0193                     	;# 
   538  0193                     	;# 
   539  0194                     	;# 
   540  0195                     	;# 
   541  0196                     	;# 
   542  0197                     	;# 
   543  0199                     	;# 
   544  019A                     	;# 
   545  019B                     	;# 
   546  019B                     	;# 
   547  019C                     	;# 
   548  019D                     	;# 
   549  019E                     	;# 
   550  019F                     	;# 
   551  020C                     	;# 
   552  020D                     	;# 
   553  0211                     	;# 
   554  0211                     	;# 
   555  0212                     	;# 
   556  0212                     	;# 
   557  0213                     	;# 
   558  0213                     	;# 
   559  0214                     	;# 
   560  0214                     	;# 
   561  0215                     	;# 
   562  0215                     	;# 
   563  0215                     	;# 
   564  0216                     	;# 
   565  0216                     	;# 
   566  0217                     	;# 
   567  0217                     	;# 
   568  0391                     	;# 
   569  0392                     	;# 
   570  0393                     	;# 
   571  0394                     	;# 
   572  0395                     	;# 
   573  0396                     	;# 
   574  0498                     	;# 
   575  0498                     	;# 
   576  0499                     	;# 
   577  049A                     	;# 
   578  049B                     	;# 
   579  049B                     	;# 
   580  049C                     	;# 
   581  049D                     	;# 
   582  049E                     	;# 
   583  049F                     	;# 
   584  0611                     	;# 
   585  0612                     	;# 
   586  0613                     	;# 
   587  0613                     	;# 
   588  0614                     	;# 
   589  0615                     	;# 
   590  0616                     	;# 
   591  0616                     	;# 
   592  0617                     	;# 
   593  0618                     	;# 
   594  0619                     	;# 
   595  0619                     	;# 
   596  061A                     	;# 
   597  061B                     	;# 
   598  061C                     	;# 
   599  061C                     	;# 
   600  0691                     	;# 
   601  0692                     	;# 
   602  0693                     	;# 
   603  0694                     	;# 
   604  0695                     	;# 
   605  0F0F                     	;# 
   606  0F10                     	;# 
   607  0F11                     	;# 
   608  0F12                     	;# 
   609  0F13                     	;# 
   610  0F14                     	;# 
   611  0F15                     	;# 
   612  0F16                     	;# 
   613  0F17                     	;# 
   614  0F18                     	;# 
   615  0F19                     	;# 
   616  0F1A                     	;# 
   617  0F1B                     	;# 
   618  0F1C                     	;# 
   619  0F1D                     	;# 
   620  0F1E                     	;# 
   621  0F1F                     	;# 
   622  0F20                     	;# 
   623  0F21                     	;# 
   624  0F22                     	;# 
   625  0F23                     	;# 
   626  0F24                     	;# 
   627  0F25                     	;# 
   628  0F26                     	;# 
   629  0F27                     	;# 
   630  0F28                     	;# 
   631  0F29                     	;# 
   632  0F2A                     	;# 
   633  0F2B                     	;# 
   634  0F2C                     	;# 
   635  0F2D                     	;# 
   636  0F2E                     	;# 
   637  0F2F                     	;# 
   638  0F8C                     	;# 
   639  0F8D                     	;# 
   640  0F91                     	;# 
   641  0F95                     	;# 
   642  0F96                     	;# 
   643  0F97                     	;# 
   644  0F9C                     	;# 
   645  0F9D                     	;# 
   646  0F9E                     	;# 
   647  0FE3                     	;# 
   648  0FE4                     	;# 
   649  0FE5                     	;# 
   650  0FE6                     	;# 
   651  0FE7                     	;# 
   652  0FE8                     	;# 
   653  0FE9                     	;# 
   654  0FEA                     	;# 
   655  0FEB                     	;# 
   656  0FED                     	;# 
   657  0FEE                     	;# 
   658  0FEF                     	;# 
   659  0000                     	;# 
   660  0001                     	;# 
   661  0002                     	;# 
   662  0003                     	;# 
   663  0004                     	;# 
   664  0005                     	;# 
   665  0006                     	;# 
   666  0007                     	;# 
   667  0008                     	;# 
   668  0009                     	;# 
   669  000A                     	;# 
   670  000B                     	;# 
   671  000C                     	;# 
   672  000D                     	;# 
   673  000E                     	;# 
   674  0011                     	;# 
   675  0012                     	;# 
   676  0013                     	;# 
   677  0015                     	;# 
   678  0016                     	;# 
   679  0016                     	;# 
   680  0017                     	;# 
   681  0018                     	;# 
   682  0019                     	;# 
   683  001A                     	;# 
   684  001B                     	;# 
   685  001C                     	;# 
   686  008C                     	;# 
   687  008D                     	;# 
   688  008E                     	;# 
   689  0091                     	;# 
   690  0092                     	;# 
   691  0093                     	;# 
   692  0095                     	;# 
   693  0096                     	;# 
   694  0097                     	;# 
   695  0099                     	;# 
   696  009A                     	;# 
   697  009B                     	;# 
   698  009B                     	;# 
   699  009C                     	;# 
   700  009D                     	;# 
   701  009E                     	;# 
   702  009F                     	;# 
   703  010C                     	;# 
   704  010D                     	;# 
   705  010E                     	;# 
   706  0111                     	;# 
   707  0112                     	;# 
   708  0113                     	;# 
   709  0114                     	;# 
   710  0115                     	;# 
   711  0116                     	;# 
   712  0117                     	;# 
   713  0118                     	;# 
   714  0119                     	;# 
   715  011D                     	;# 
   716  018C                     	;# 
   717  018D                     	;# 
   718  018E                     	;# 
   719  0191                     	;# 
   720  0191                     	;# 
   721  0192                     	;# 
   722  0193                     	;# 
   723  0193                     	;# 
   724  0194                     	;# 
   725  0195                     	;# 
   726  0196                     	;# 
   727  0197                     	;# 
   728  0199                     	;# 
   729  019A                     	;# 
   730  019B                     	;# 
   731  019B                     	;# 
   732  019C                     	;# 
   733  019D                     	;# 
   734  019E                     	;# 
   735  019F                     	;# 
   736  020C                     	;# 
   737  020D                     	;# 
   738  0211                     	;# 
   739  0211                     	;# 
   740  0212                     	;# 
   741  0212                     	;# 
   742  0213                     	;# 
   743  0213                     	;# 
   744  0214                     	;# 
   745  0214                     	;# 
   746  0215                     	;# 
   747  0215                     	;# 
   748  0215                     	;# 
   749  0216                     	;# 
   750  0216                     	;# 
   751  0217                     	;# 
   752  0217                     	;# 
   753  0391                     	;# 
   754  0392                     	;# 
   755  0393                     	;# 
   756  0394                     	;# 
   757  0395                     	;# 
   758  0396                     	;# 
   759  0498                     	;# 
   760  0498                     	;# 
   761  0499                     	;# 
   762  049A                     	;# 
   763  049B                     	;# 
   764  049B                     	;# 
   765  049C                     	;# 
   766  049D                     	;# 
   767  049E                     	;# 
   768  049F                     	;# 
   769  0611                     	;# 
   770  0612                     	;# 
   771  0613                     	;# 
   772  0613                     	;# 
   773  0614                     	;# 
   774  0615                     	;# 
   775  0616                     	;# 
   776  0616                     	;# 
   777  0617                     	;# 
   778  0618                     	;# 
   779  0619                     	;# 
   780  0619                     	;# 
   781  061A                     	;# 
   782  061B                     	;# 
   783  061C                     	;# 
   784  061C                     	;# 
   785  0691                     	;# 
   786  0692                     	;# 
   787  0693                     	;# 
   788  0694                     	;# 
   789  0695                     	;# 
   790  0F0F                     	;# 
   791  0F10                     	;# 
   792  0F11                     	;# 
   793  0F12                     	;# 
   794  0F13                     	;# 
   795  0F14                     	;# 
   796  0F15                     	;# 
   797  0F16                     	;# 
   798  0F17                     	;# 
   799  0F18                     	;# 
   800  0F19                     	;# 
   801  0F1A                     	;# 
   802  0F1B                     	;# 
   803  0F1C                     	;# 
   804  0F1D                     	;# 
   805  0F1E                     	;# 
   806  0F1F                     	;# 
   807  0F20                     	;# 
   808  0F21                     	;# 
   809  0F22                     	;# 
   810  0F23                     	;# 
   811  0F24                     	;# 
   812  0F25                     	;# 
   813  0F26                     	;# 
   814  0F27                     	;# 
   815  0F28                     	;# 
   816  0F29                     	;# 
   817  0F2A                     	;# 
   818  0F2B                     	;# 
   819  0F2C                     	;# 
   820  0F2D                     	;# 
   821  0F2E                     	;# 
   822  0F2F                     	;# 
   823  0F8C                     	;# 
   824  0F8D                     	;# 
   825  0F91                     	;# 
   826  0F95                     	;# 
   827  0F96                     	;# 
   828  0F97                     	;# 
   829  0F9C                     	;# 
   830  0F9D                     	;# 
   831  0F9E                     	;# 
   832  0FE3                     	;# 
   833  0FE4                     	;# 
   834  0FE5                     	;# 
   835  0FE6                     	;# 
   836  0FE7                     	;# 
   837  0FE8                     	;# 
   838  0FE9                     	;# 
   839  0FEA                     	;# 
   840  0FEB                     	;# 
   841  0FED                     	;# 
   842  0FEE                     	;# 
   843  0FEF                     	;# 
   844  0000                     	;# 
   845  0001                     	;# 
   846  0002                     	;# 
   847  0003                     	;# 
   848  0004                     	;# 
   849  0005                     	;# 
   850  0006                     	;# 
   851  0007                     	;# 
   852  0008                     	;# 
   853  0009                     	;# 
   854  000A                     	;# 
   855  000B                     	;# 
   856  000C                     	;# 
   857  000D                     	;# 
   858  000E                     	;# 
   859  0011                     	;# 
   860  0012                     	;# 
   861  0013                     	;# 
   862  0015                     	;# 
   863  0016                     	;# 
   864  0016                     	;# 
   865  0017                     	;# 
   866  0018                     	;# 
   867  0019                     	;# 
   868  001A                     	;# 
   869  001B                     	;# 
   870  001C                     	;# 
   871  008C                     	;# 
   872  008D                     	;# 
   873  008E                     	;# 
   874  0091                     	;# 
   875  0092                     	;# 
   876  0093                     	;# 
   877  0095                     	;# 
   878  0096                     	;# 
   879  0097                     	;# 
   880  0099                     	;# 
   881  009A                     	;# 
   882  009B                     	;# 
   883  009B                     	;# 
   884  009C                     	;# 
   885  009D                     	;# 
   886  009E                     	;# 
   887  009F                     	;# 
   888  010C                     	;# 
   889  010D                     	;# 
   890  010E                     	;# 
   891  0111                     	;# 
   892  0112                     	;# 
   893  0113                     	;# 
   894  0114                     	;# 
   895  0115                     	;# 
   896  0116                     	;# 
   897  0117                     	;# 
   898  0118                     	;# 
   899  0119                     	;# 
   900  011D                     	;# 
   901  018C                     	;# 
   902  018D                     	;# 
   903  018E                     	;# 
   904  0191                     	;# 
   905  0191                     	;# 
   906  0192                     	;# 
   907  0193                     	;# 
   908  0193                     	;# 
   909  0194                     	;# 
   910  0195                     	;# 
   911  0196                     	;# 
   912  0197                     	;# 
   913  0199                     	;# 
   914  019A                     	;# 
   915  019B                     	;# 
   916  019B                     	;# 
   917  019C                     	;# 
   918  019D                     	;# 
   919  019E                     	;# 
   920  019F                     	;# 
   921  020C                     	;# 
   922  020D                     	;# 
   923  0211                     	;# 
   924  0211                     	;# 
   925  0212                     	;# 
   926  0212                     	;# 
   927  0213                     	;# 
   928  0213                     	;# 
   929  0214                     	;# 
   930  0214                     	;# 
   931  0215                     	;# 
   932  0215                     	;# 
   933  0215                     	;# 
   934  0216                     	;# 
   935  0216                     	;# 
   936  0217                     	;# 
   937  0217                     	;# 
   938  0391                     	;# 
   939  0392                     	;# 
   940  0393                     	;# 
   941  0394                     	;# 
   942  0395                     	;# 
   943  0396                     	;# 
   944  0498                     	;# 
   945  0498                     	;# 
   946  0499                     	;# 
   947  049A                     	;# 
   948  049B                     	;# 
   949  049B                     	;# 
   950  049C                     	;# 
   951  049D                     	;# 
   952  049E                     	;# 
   953  049F                     	;# 
   954  0611                     	;# 
   955  0612                     	;# 
   956  0613                     	;# 
   957  0613                     	;# 
   958  0614                     	;# 
   959  0615                     	;# 
   960  0616                     	;# 
   961  0616                     	;# 
   962  0617                     	;# 
   963  0618                     	;# 
   964  0619                     	;# 
   965  0619                     	;# 
   966  061A                     	;# 
   967  061B                     	;# 
   968  061C                     	;# 
   969  061C                     	;# 
   970  0691                     	;# 
   971  0692                     	;# 
   972  0693                     	;# 
   973  0694                     	;# 
   974  0695                     	;# 
   975  0F0F                     	;# 
   976  0F10                     	;# 
   977  0F11                     	;# 
   978  0F12                     	;# 
   979  0F13                     	;# 
   980  0F14                     	;# 
   981  0F15                     	;# 
   982  0F16                     	;# 
   983  0F17                     	;# 
   984  0F18                     	;# 
   985  0F19                     	;# 
   986  0F1A                     	;# 
   987  0F1B                     	;# 
   988  0F1C                     	;# 
   989  0F1D                     	;# 
   990  0F1E                     	;# 
   991  0F1F                     	;# 
   992  0F20                     	;# 
   993  0F21                     	;# 
   994  0F22                     	;# 
   995  0F23                     	;# 
   996  0F24                     	;# 
   997  0F25                     	;# 
   998  0F26                     	;# 
   999  0F27                     	;# 
  1000  0F28                     	;# 
  1001  0F29                     	;# 
  1002  0F2A                     	;# 
  1003  0F2B                     	;# 
  1004  0F2C                     	;# 
  1005  0F2D                     	;# 
  1006  0F2E                     	;# 
  1007  0F2F                     	;# 
  1008  0F8C                     	;# 
  1009  0F8D                     	;# 
  1010  0F91                     	;# 
  1011  0F95                     	;# 
  1012  0F96                     	;# 
  1013  0F97                     	;# 
  1014  0F9C                     	;# 
  1015  0F9D                     	;# 
  1016  0F9E                     	;# 
  1017  0FE3                     	;# 
  1018  0FE4                     	;# 
  1019  0FE5                     	;# 
  1020  0FE6                     	;# 
  1021  0FE7                     	;# 
  1022  0FE8                     	;# 
  1023  0FE9                     	;# 
  1024  0FEA                     	;# 
  1025  0FEB                     	;# 
  1026  0FED                     	;# 
  1027  0FEE                     	;# 
  1028  0FEF                     	;# 
  1029  0000                     	;# 
  1030  0001                     	;# 
  1031  0002                     	;# 
  1032  0003                     	;# 
  1033  0004                     	;# 
  1034  0005                     	;# 
  1035  0006                     	;# 
  1036  0007                     	;# 
  1037  0008                     	;# 
  1038  0009                     	;# 
  1039  000A                     	;# 
  1040  000B                     	;# 
  1041  000C                     	;# 
  1042  000D                     	;# 
  1043  000E                     	;# 
  1044  0011                     	;# 
  1045  0012                     	;# 
  1046  0013                     	;# 
  1047  0015                     	;# 
  1048  0016                     	;# 
  1049  0016                     	;# 
  1050  0017                     	;# 
  1051  0018                     	;# 
  1052  0019                     	;# 
  1053  001A                     	;# 
  1054  001B                     	;# 
  1055  001C                     	;# 
  1056  008C                     	;# 
  1057  008D                     	;# 
  1058  008E                     	;# 
  1059  0091                     	;# 
  1060  0092                     	;# 
  1061  0093                     	;# 
  1062  0095                     	;# 
  1063  0096                     	;# 
  1064  0097                     	;# 
  1065  0099                     	;# 
  1066  009A                     	;# 
  1067  009B                     	;# 
  1068  009B                     	;# 
  1069  009C                     	;# 
  1070  009D                     	;# 
  1071  009E                     	;# 
  1072  009F                     	;# 
  1073  010C                     	;# 
  1074  010D                     	;# 
  1075  010E                     	;# 
  1076  0111                     	;# 
  1077  0112                     	;# 
  1078  0113                     	;# 
  1079  0114                     	;# 
  1080  0115                     	;# 
  1081  0116                     	;# 
  1082  0117                     	;# 
  1083  0118                     	;# 
  1084  0119                     	;# 
  1085  011D                     	;# 
  1086  018C                     	;# 
  1087  018D                     	;# 
  1088  018E                     	;# 
  1089  0191                     	;# 
  1090  0191                     	;# 
  1091  0192                     	;# 
  1092  0193                     	;# 
  1093  0193                     	;# 
  1094  0194                     	;# 
  1095  0195                     	;# 
  1096  0196                     	;# 
  1097  0197                     	;# 
  1098  0199                     	;# 
  1099  019A                     	;# 
  1100  019B                     	;# 
  1101  019B                     	;# 
  1102  019C                     	;# 
  1103  019D                     	;# 
  1104  019E                     	;# 
  1105  019F                     	;# 
  1106  020C                     	;# 
  1107  020D                     	;# 
  1108  0211                     	;# 
  1109  0211                     	;# 
  1110  0212                     	;# 
  1111  0212                     	;# 
  1112  0213                     	;# 
  1113  0213                     	;# 
  1114  0214                     	;# 
  1115  0214                     	;# 
  1116  0215                     	;# 
  1117  0215                     	;# 
  1118  0215                     	;# 
  1119  0216                     	;# 
  1120  0216                     	;# 
  1121  0217                     	;# 
  1122  0217                     	;# 
  1123  0391                     	;# 
  1124  0392                     	;# 
  1125  0393                     	;# 
  1126  0394                     	;# 
  1127  0395                     	;# 
  1128  0396                     	;# 
  1129  0498                     	;# 
  1130  0498                     	;# 
  1131  0499                     	;# 
  1132  049A                     	;# 
  1133  049B                     	;# 
  1134  049B                     	;# 
  1135  049C                     	;# 
  1136  049D                     	;# 
  1137  049E                     	;# 
  1138  049F                     	;# 
  1139  0611                     	;# 
  1140  0612                     	;# 
  1141  0613                     	;# 
  1142  0613                     	;# 
  1143  0614                     	;# 
  1144  0615                     	;# 
  1145  0616                     	;# 
  1146  0616                     	;# 
  1147  0617                     	;# 
  1148  0618                     	;# 
  1149  0619                     	;# 
  1150  0619                     	;# 
  1151  061A                     	;# 
  1152  061B                     	;# 
  1153  061C                     	;# 
  1154  061C                     	;# 
  1155  0691                     	;# 
  1156  0692                     	;# 
  1157  0693                     	;# 
  1158  0694                     	;# 
  1159  0695                     	;# 
  1160  0F0F                     	;# 
  1161  0F10                     	;# 
  1162  0F11                     	;# 
  1163  0F12                     	;# 
  1164  0F13                     	;# 
  1165  0F14                     	;# 
  1166  0F15                     	;# 
  1167  0F16                     	;# 
  1168  0F17                     	;# 
  1169  0F18                     	;# 
  1170  0F19                     	;# 
  1171  0F1A                     	;# 
  1172  0F1B                     	;# 
  1173  0F1C                     	;# 
  1174  0F1D                     	;# 
  1175  0F1E                     	;# 
  1176  0F1F                     	;# 
  1177  0F20                     	;# 
  1178  0F21                     	;# 
  1179  0F22                     	;# 
  1180  0F23                     	;# 
  1181  0F24                     	;# 
  1182  0F25                     	;# 
  1183  0F26                     	;# 
  1184  0F27                     	;# 
  1185  0F28                     	;# 
  1186  0F29                     	;# 
  1187  0F2A                     	;# 
  1188  0F2B                     	;# 
  1189  0F2C                     	;# 
  1190  0F2D                     	;# 
  1191  0F2E                     	;# 
  1192  0F2F                     	;# 
  1193  0F8C                     	;# 
  1194  0F8D                     	;# 
  1195  0F91                     	;# 
  1196  0F95                     	;# 
  1197  0F96                     	;# 
  1198  0F97                     	;# 
  1199  0F9C                     	;# 
  1200  0F9D                     	;# 
  1201  0F9E                     	;# 
  1202  0FE3                     	;# 
  1203  0FE4                     	;# 
  1204  0FE5                     	;# 
  1205  0FE6                     	;# 
  1206  0FE7                     	;# 
  1207  0FE8                     	;# 
  1208  0FE9                     	;# 
  1209  0FEA                     	;# 
  1210  0FEB                     	;# 
  1211  0FED                     	;# 
  1212  0FEE                     	;# 
  1213  0FEF                     	;# 
  1214  0000                     	;# 
  1215  0001                     	;# 
  1216  0002                     	;# 
  1217  0003                     	;# 
  1218  0004                     	;# 
  1219  0005                     	;# 
  1220  0006                     	;# 
  1221  0007                     	;# 
  1222  0008                     	;# 
  1223  0009                     	;# 
  1224  000A                     	;# 
  1225  000B                     	;# 
  1226  000C                     	;# 
  1227  000D                     	;# 
  1228  000E                     	;# 
  1229  0011                     	;# 
  1230  0012                     	;# 
  1231  0013                     	;# 
  1232  0015                     	;# 
  1233  0016                     	;# 
  1234  0016                     	;# 
  1235  0017                     	;# 
  1236  0018                     	;# 
  1237  0019                     	;# 
  1238  001A                     	;# 
  1239  001B                     	;# 
  1240  001C                     	;# 
  1241  008C                     	;# 
  1242  008D                     	;# 
  1243  008E                     	;# 
  1244  0091                     	;# 
  1245  0092                     	;# 
  1246  0093                     	;# 
  1247  0095                     	;# 
  1248  0096                     	;# 
  1249  0097                     	;# 
  1250  0099                     	;# 
  1251  009A                     	;# 
  1252  009B                     	;# 
  1253  009B                     	;# 
  1254  009C                     	;# 
  1255  009D                     	;# 
  1256  009E                     	;# 
  1257  009F                     	;# 
  1258  010C                     	;# 
  1259  010D                     	;# 
  1260  010E                     	;# 
  1261  0111                     	;# 
  1262  0112                     	;# 
  1263  0113                     	;# 
  1264  0114                     	;# 
  1265  0115                     	;# 
  1266  0116                     	;# 
  1267  0117                     	;# 
  1268  0118                     	;# 
  1269  0119                     	;# 
  1270  011D                     	;# 
  1271  018C                     	;# 
  1272  018D                     	;# 
  1273  018E                     	;# 
  1274  0191                     	;# 
  1275  0191                     	;# 
  1276  0192                     	;# 
  1277  0193                     	;# 
  1278  0193                     	;# 
  1279  0194                     	;# 
  1280  0195                     	;# 
  1281  0196                     	;# 
  1282  0197                     	;# 
  1283  0199                     	;# 
  1284  019A                     	;# 
  1285  019B                     	;# 
  1286  019B                     	;# 
  1287  019C                     	;# 
  1288  019D                     	;# 
  1289  019E                     	;# 
  1290  019F                     	;# 
  1291  020C                     	;# 
  1292  020D                     	;# 
  1293  0211                     	;# 
  1294  0211                     	;# 
  1295  0212                     	;# 
  1296  0212                     	;# 
  1297  0213                     	;# 
  1298  0213                     	;# 
  1299  0214                     	;# 
  1300  0214                     	;# 
  1301  0215                     	;# 
  1302  0215                     	;# 
  1303  0215                     	;# 
  1304  0216                     	;# 
  1305  0216                     	;# 
  1306  0217                     	;# 
  1307  0217                     	;# 
  1308  0391                     	;# 
  1309  0392                     	;# 
  1310  0393                     	;# 
  1311  0394                     	;# 
  1312  0395                     	;# 
  1313  0396                     	;# 
  1314  0498                     	;# 
  1315  0498                     	;# 
  1316  0499                     	;# 
  1317  049A                     	;# 
  1318  049B                     	;# 
  1319  049B                     	;# 
  1320  049C                     	;# 
  1321  049D                     	;# 
  1322  049E                     	;# 
  1323  049F                     	;# 
  1324  0611                     	;# 
  1325  0612                     	;# 
  1326  0613                     	;# 
  1327  0613                     	;# 
  1328  0614                     	;# 
  1329  0615                     	;# 
  1330  0616                     	;# 
  1331  0616                     	;# 
  1332  0617                     	;# 
  1333  0618                     	;# 
  1334  0619                     	;# 
  1335  0619                     	;# 
  1336  061A                     	;# 
  1337  061B                     	;# 
  1338  061C                     	;# 
  1339  061C                     	;# 
  1340  0691                     	;# 
  1341  0692                     	;# 
  1342  0693                     	;# 
  1343  0694                     	;# 
  1344  0695                     	;# 
  1345  0F0F                     	;# 
  1346  0F10                     	;# 
  1347  0F11                     	;# 
  1348  0F12                     	;# 
  1349  0F13                     	;# 
  1350  0F14                     	;# 
  1351  0F15                     	;# 
  1352  0F16                     	;# 
  1353  0F17                     	;# 
  1354  0F18                     	;# 
  1355  0F19                     	;# 
  1356  0F1A                     	;# 
  1357  0F1B                     	;# 
  1358  0F1C                     	;# 
  1359  0F1D                     	;# 
  1360  0F1E                     	;# 
  1361  0F1F                     	;# 
  1362  0F20                     	;# 
  1363  0F21                     	;# 
  1364  0F22                     	;# 
  1365  0F23                     	;# 
  1366  0F24                     	;# 
  1367  0F25                     	;# 
  1368  0F26                     	;# 
  1369  0F27                     	;# 
  1370  0F28                     	;# 
  1371  0F29                     	;# 
  1372  0F2A                     	;# 
  1373  0F2B                     	;# 
  1374  0F2C                     	;# 
  1375  0F2D                     	;# 
  1376  0F2E                     	;# 
  1377  0F2F                     	;# 
  1378  0F8C                     	;# 
  1379  0F8D                     	;# 
  1380  0F91                     	;# 
  1381  0F95                     	;# 
  1382  0F96                     	;# 
  1383  0F97                     	;# 
  1384  0F9C                     	;# 
  1385  0F9D                     	;# 
  1386  0F9E                     	;# 
  1387  0FE3                     	;# 
  1388  0FE4                     	;# 
  1389  0FE5                     	;# 
  1390  0FE6                     	;# 
  1391  0FE7                     	;# 
  1392  0FE8                     	;# 
  1393  0FE9                     	;# 
  1394  0FEA                     	;# 
  1395  0FEB                     	;# 
  1396  0FED                     	;# 
  1397  0FEE                     	;# 
  1398  0FEF                     	;# 
  1399  0000                     	;# 
  1400  0001                     	;# 
  1401  0002                     	;# 
  1402  0003                     	;# 
  1403  0004                     	;# 
  1404  0005                     	;# 
  1405  0006                     	;# 
  1406  0007                     	;# 
  1407  0008                     	;# 
  1408  0009                     	;# 
  1409  000A                     	;# 
  1410  000B                     	;# 
  1411  000C                     	;# 
  1412  000D                     	;# 
  1413  000E                     	;# 
  1414  0011                     	;# 
  1415  0012                     	;# 
  1416  0013                     	;# 
  1417  0015                     	;# 
  1418  0016                     	;# 
  1419  0016                     	;# 
  1420  0017                     	;# 
  1421  0018                     	;# 
  1422  0019                     	;# 
  1423  001A                     	;# 
  1424  001B                     	;# 
  1425  001C                     	;# 
  1426  008C                     	;# 
  1427  008D                     	;# 
  1428  008E                     	;# 
  1429  0091                     	;# 
  1430  0092                     	;# 
  1431  0093                     	;# 
  1432  0095                     	;# 
  1433  0096                     	;# 
  1434  0097                     	;# 
  1435  0099                     	;# 
  1436  009A                     	;# 
  1437  009B                     	;# 
  1438  009B                     	;# 
  1439  009C                     	;# 
  1440  009D                     	;# 
  1441  009E                     	;# 
  1442  009F                     	;# 
  1443  010C                     	;# 
  1444  010D                     	;# 
  1445  010E                     	;# 
  1446  0111                     	;# 
  1447  0112                     	;# 
  1448  0113                     	;# 
  1449  0114                     	;# 
  1450  0115                     	;# 
  1451  0116                     	;# 
  1452  0117                     	;# 
  1453  0118                     	;# 
  1454  0119                     	;# 
  1455  011D                     	;# 
  1456  018C                     	;# 
  1457  018D                     	;# 
  1458  018E                     	;# 
  1459  0191                     	;# 
  1460  0191                     	;# 
  1461  0192                     	;# 
  1462  0193                     	;# 
  1463  0193                     	;# 
  1464  0194                     	;# 
  1465  0195                     	;# 
  1466  0196                     	;# 
  1467  0197                     	;# 
  1468  0199                     	;# 
  1469  019A                     	;# 
  1470  019B                     	;# 
  1471  019B                     	;# 
  1472  019C                     	;# 
  1473  019D                     	;# 
  1474  019E                     	;# 
  1475  019F                     	;# 
  1476  020C                     	;# 
  1477  020D                     	;# 
  1478  0211                     	;# 
  1479  0211                     	;# 
  1480  0212                     	;# 
  1481  0212                     	;# 
  1482  0213                     	;# 
  1483  0213                     	;# 
  1484  0214                     	;# 
  1485  0214                     	;# 
  1486  0215                     	;# 
  1487  0215                     	;# 
  1488  0215                     	;# 
  1489  0216                     	;# 
  1490  0216                     	;# 
  1491  0217                     	;# 
  1492  0217                     	;# 
  1493  0391                     	;# 
  1494  0392                     	;# 
  1495  0393                     	;# 
  1496  0394                     	;# 
  1497  0395                     	;# 
  1498  0396                     	;# 
  1499  0498                     	;# 
  1500  0498                     	;# 
  1501  0499                     	;# 
  1502  049A                     	;# 
  1503  049B                     	;# 
  1504  049B                     	;# 
  1505  049C                     	;# 
  1506  049D                     	;# 
  1507  049E                     	;# 
  1508  049F                     	;# 
  1509  0611                     	;# 
  1510  0612                     	;# 
  1511  0613                     	;# 
  1512  0613                     	;# 
  1513  0614                     	;# 
  1514  0615                     	;# 
  1515  0616                     	;# 
  1516  0616                     	;# 
  1517  0617                     	;# 
  1518  0618                     	;# 
  1519  0619                     	;# 
  1520  0619                     	;# 
  1521  061A                     	;# 
  1522  061B                     	;# 
  1523  061C                     	;# 
  1524  061C                     	;# 
  1525  0691                     	;# 
  1526  0692                     	;# 
  1527  0693                     	;# 
  1528  0694                     	;# 
  1529  0695                     	;# 
  1530  0F0F                     	;# 
  1531  0F10                     	;# 
  1532  0F11                     	;# 
  1533  0F12                     	;# 
  1534  0F13                     	;# 
  1535  0F14                     	;# 
  1536  0F15                     	;# 
  1537  0F16                     	;# 
  1538  0F17                     	;# 
  1539  0F18                     	;# 
  1540  0F19                     	;# 
  1541  0F1A                     	;# 
  1542  0F1B                     	;# 
  1543  0F1C                     	;# 
  1544  0F1D                     	;# 
  1545  0F1E                     	;# 
  1546  0F1F                     	;# 
  1547  0F20                     	;# 
  1548  0F21                     	;# 
  1549  0F22                     	;# 
  1550  0F23                     	;# 
  1551  0F24                     	;# 
  1552  0F25                     	;# 
  1553  0F26                     	;# 
  1554  0F27                     	;# 
  1555  0F28                     	;# 
  1556  0F29                     	;# 
  1557  0F2A                     	;# 
  1558  0F2B                     	;# 
  1559  0F2C                     	;# 
  1560  0F2D                     	;# 
  1561  0F2E                     	;# 
  1562  0F2F                     	;# 
  1563  0F8C                     	;# 
  1564  0F8D                     	;# 
  1565  0F91                     	;# 
  1566  0F95                     	;# 
  1567  0F96                     	;# 
  1568  0F97                     	;# 
  1569  0F9C                     	;# 
  1570  0F9D                     	;# 
  1571  0F9E                     	;# 
  1572  0FE3                     	;# 
  1573  0FE4                     	;# 
  1574  0FE5                     	;# 
  1575  0FE6                     	;# 
  1576  0FE7                     	;# 
  1577  0FE8                     	;# 
  1578  0FE9                     	;# 
  1579  0FEA                     	;# 
  1580  0FEB                     	;# 
  1581  0FED                     	;# 
  1582  0FEE                     	;# 
  1583  0FEF                     	;# 
  1584  0000                     	;# 
  1585  0001                     	;# 
  1586  0002                     	;# 
  1587  0003                     	;# 
  1588  0004                     	;# 
  1589  0005                     	;# 
  1590  0006                     	;# 
  1591  0007                     	;# 
  1592  0008                     	;# 
  1593  0009                     	;# 
  1594  000A                     	;# 
  1595  000B                     	;# 
  1596  000C                     	;# 
  1597  000D                     	;# 
  1598  000E                     	;# 
  1599  0011                     	;# 
  1600  0012                     	;# 
  1601  0013                     	;# 
  1602  0015                     	;# 
  1603  0016                     	;# 
  1604  0016                     	;# 
  1605  0017                     	;# 
  1606  0018                     	;# 
  1607  0019                     	;# 
  1608  001A                     	;# 
  1609  001B                     	;# 
  1610  001C                     	;# 
  1611  008C                     	;# 
  1612  008D                     	;# 
  1613  008E                     	;# 
  1614  0091                     	;# 
  1615  0092                     	;# 
  1616  0093                     	;# 
  1617  0095                     	;# 
  1618  0096                     	;# 
  1619  0097                     	;# 
  1620  0099                     	;# 
  1621  009A                     	;# 
  1622  009B                     	;# 
  1623  009B                     	;# 
  1624  009C                     	;# 
  1625  009D                     	;# 
  1626  009E                     	;# 
  1627  009F                     	;# 
  1628  010C                     	;# 
  1629  010D                     	;# 
  1630  010E                     	;# 
  1631  0111                     	;# 
  1632  0112                     	;# 
  1633  0113                     	;# 
  1634  0114                     	;# 
  1635  0115                     	;# 
  1636  0116                     	;# 
  1637  0117                     	;# 
  1638  0118                     	;# 
  1639  0119                     	;# 
  1640  011D                     	;# 
  1641  018C                     	;# 
  1642  018D                     	;# 
  1643  018E                     	;# 
  1644  0191                     	;# 
  1645  0191                     	;# 
  1646  0192                     	;# 
  1647  0193                     	;# 
  1648  0193                     	;# 
  1649  0194                     	;# 
  1650  0195                     	;# 
  1651  0196                     	;# 
  1652  0197                     	;# 
  1653  0199                     	;# 
  1654  019A                     	;# 
  1655  019B                     	;# 
  1656  019B                     	;# 
  1657  019C                     	;# 
  1658  019D                     	;# 
  1659  019E                     	;# 
  1660  019F                     	;# 
  1661  020C                     	;# 
  1662  020D                     	;# 
  1663  0211                     	;# 
  1664  0211                     	;# 
  1665  0212                     	;# 
  1666  0212                     	;# 
  1667  0213                     	;# 
  1668  0213                     	;# 
  1669  0214                     	;# 
  1670  0214                     	;# 
  1671  0215                     	;# 
  1672  0215                     	;# 
  1673  0215                     	;# 
  1674  0216                     	;# 
  1675  0216                     	;# 
  1676  0217                     	;# 
  1677  0217                     	;# 
  1678  0391                     	;# 
  1679  0392                     	;# 
  1680  0393                     	;# 
  1681  0394                     	;# 
  1682  0395                     	;# 
  1683  0396                     	;# 
  1684  0498                     	;# 
  1685  0498                     	;# 
  1686  0499                     	;# 
  1687  049A                     	;# 
  1688  049B                     	;# 
  1689  049B                     	;# 
  1690  049C                     	;# 
  1691  049D                     	;# 
  1692  049E                     	;# 
  1693  049F                     	;# 
  1694  0611                     	;# 
  1695  0612                     	;# 
  1696  0613                     	;# 
  1697  0613                     	;# 
  1698  0614                     	;# 
  1699  0615                     	;# 
  1700  0616                     	;# 
  1701  0616                     	;# 
  1702  0617                     	;# 
  1703  0618                     	;# 
  1704  0619                     	;# 
  1705  0619                     	;# 
  1706  061A                     	;# 
  1707  061B                     	;# 
  1708  061C                     	;# 
  1709  061C                     	;# 
  1710  0691                     	;# 
  1711  0692                     	;# 
  1712  0693                     	;# 
  1713  0694                     	;# 
  1714  0695                     	;# 
  1715  0F0F                     	;# 
  1716  0F10                     	;# 
  1717  0F11                     	;# 
  1718  0F12                     	;# 
  1719  0F13                     	;# 
  1720  0F14                     	;# 
  1721  0F15                     	;# 
  1722  0F16                     	;# 
  1723  0F17                     	;# 
  1724  0F18                     	;# 
  1725  0F19                     	;# 
  1726  0F1A                     	;# 
  1727  0F1B                     	;# 
  1728  0F1C                     	;# 
  1729  0F1D                     	;# 
  1730  0F1E                     	;# 
  1731  0F1F                     	;# 
  1732  0F20                     	;# 
  1733  0F21                     	;# 
  1734  0F22                     	;# 
  1735  0F23                     	;# 
  1736  0F24                     	;# 
  1737  0F25                     	;# 
  1738  0F26                     	;# 
  1739  0F27                     	;# 
  1740  0F28                     	;# 
  1741  0F29                     	;# 
  1742  0F2A                     	;# 
  1743  0F2B                     	;# 
  1744  0F2C                     	;# 
  1745  0F2D                     	;# 
  1746  0F2E                     	;# 
  1747  0F2F                     	;# 
  1748  0F8C                     	;# 
  1749  0F8D                     	;# 
  1750  0F91                     	;# 
  1751  0F95                     	;# 
  1752  0F96                     	;# 
  1753  0F97                     	;# 
  1754  0F9C                     	;# 
  1755  0F9D                     	;# 
  1756  0F9E                     	;# 
  1757  0FE3                     	;# 
  1758  0FE4                     	;# 
  1759  0FE5                     	;# 
  1760  0FE6                     	;# 
  1761  0FE7                     	;# 
  1762  0FE8                     	;# 
  1763  0FE9                     	;# 
  1764  0FEA                     	;# 
  1765  0FEB                     	;# 
  1766  0FED                     	;# 
  1767  0FEE                     	;# 
  1768  0FEF                     	;# 
  1769  0000                     	;# 
  1770  0001                     	;# 
  1771  0002                     	;# 
  1772  0003                     	;# 
  1773  0004                     	;# 
  1774  0005                     	;# 
  1775  0006                     	;# 
  1776  0007                     	;# 
  1777  0008                     	;# 
  1778  0009                     	;# 
  1779  000A                     	;# 
  1780  000B                     	;# 
  1781  000C                     	;# 
  1782  000D                     	;# 
  1783  000E                     	;# 
  1784  0011                     	;# 
  1785  0012                     	;# 
  1786  0013                     	;# 
  1787  0015                     	;# 
  1788  0016                     	;# 
  1789  0016                     	;# 
  1790  0017                     	;# 
  1791  0018                     	;# 
  1792  0019                     	;# 
  1793  001A                     	;# 
  1794  001B                     	;# 
  1795  001C                     	;# 
  1796  008C                     	;# 
  1797  008D                     	;# 
  1798  008E                     	;# 
  1799  0091                     	;# 
  1800  0092                     	;# 
  1801  0093                     	;# 
  1802  0095                     	;# 
  1803  0096                     	;# 
  1804  0097                     	;# 
  1805  0099                     	;# 
  1806  009A                     	;# 
  1807  009B                     	;# 
  1808  009B                     	;# 
  1809  009C                     	;# 
  1810  009D                     	;# 
  1811  009E                     	;# 
  1812  009F                     	;# 
  1813  010C                     	;# 
  1814  010D                     	;# 
  1815  010E                     	;# 
  1816  0111                     	;# 
  1817  0112                     	;# 
  1818  0113                     	;# 
  1819  0114                     	;# 
  1820  0115                     	;# 
  1821  0116                     	;# 
  1822  0117                     	;# 
  1823  0118                     	;# 
  1824  0119                     	;# 
  1825  011D                     	;# 
  1826  018C                     	;# 
  1827  018D                     	;# 
  1828  018E                     	;# 
  1829  0191                     	;# 
  1830  0191                     	;# 
  1831  0192                     	;# 
  1832  0193                     	;# 
  1833  0193                     	;# 
  1834  0194                     	;# 
  1835  0195                     	;# 
  1836  0196                     	;# 
  1837  0197                     	;# 
  1838  0199                     	;# 
  1839  019A                     	;# 
  1840  019B                     	;# 
  1841  019B                     	;# 
  1842  019C                     	;# 
  1843  019D                     	;# 
  1844  019E                     	;# 
  1845  019F                     	;# 
  1846  020C                     	;# 
  1847  020D                     	;# 
  1848  0211                     	;# 
  1849  0211                     	;# 
  1850  0212                     	;# 
  1851  0212                     	;# 
  1852  0213                     	;# 
  1853  0213                     	;# 
  1854  0214                     	;# 
  1855  0214                     	;# 
  1856  0215                     	;# 
  1857  0215                     	;# 
  1858  0215                     	;# 
  1859  0216                     	;# 
  1860  0216                     	;# 
  1861  0217                     	;# 
  1862  0217                     	;# 
  1863  0391                     	;# 
  1864  0392                     	;# 
  1865  0393                     	;# 
  1866  0394                     	;# 
  1867  0395                     	;# 
  1868  0396                     	;# 
  1869  0498                     	;# 
  1870  0498                     	;# 
  1871  0499                     	;# 
  1872  049A                     	;# 
  1873  049B                     	;# 
  1874  049B                     	;# 
  1875  049C                     	;# 
  1876  049D                     	;# 
  1877  049E                     	;# 
  1878  049F                     	;# 
  1879  0611                     	;# 
  1880  0612                     	;# 
  1881  0613                     	;# 
  1882  0613                     	;# 
  1883  0614                     	;# 
  1884  0615                     	;# 
  1885  0616                     	;# 
  1886  0616                     	;# 
  1887  0617                     	;# 
  1888  0618                     	;# 
  1889  0619                     	;# 
  1890  0619                     	;# 
  1891  061A                     	;# 
  1892  061B                     	;# 
  1893  061C                     	;# 
  1894  061C                     	;# 
  1895  0691                     	;# 
  1896  0692                     	;# 
  1897  0693                     	;# 
  1898  0694                     	;# 
  1899  0695                     	;# 
  1900  0F0F                     	;# 
  1901  0F10                     	;# 
  1902  0F11                     	;# 
  1903  0F12                     	;# 
  1904  0F13                     	;# 
  1905  0F14                     	;# 
  1906  0F15                     	;# 
  1907  0F16                     	;# 
  1908  0F17                     	;# 
  1909  0F18                     	;# 
  1910  0F19                     	;# 
  1911  0F1A                     	;# 
  1912  0F1B                     	;# 
  1913  0F1C                     	;# 
  1914  0F1D                     	;# 
  1915  0F1E                     	;# 
  1916  0F1F                     	;# 
  1917  0F20                     	;# 
  1918  0F21                     	;# 
  1919  0F22                     	;# 
  1920  0F23                     	;# 
  1921  0F24                     	;# 
  1922  0F25                     	;# 
  1923  0F26                     	;# 
  1924  0F27                     	;# 
  1925  0F28                     	;# 
  1926  0F29                     	;# 
  1927  0F2A                     	;# 
  1928  0F2B                     	;# 
  1929  0F2C                     	;# 
  1930  0F2D                     	;# 
  1931  0F2E                     	;# 
  1932  0F2F                     	;# 
  1933  0F8C                     	;# 
  1934  0F8D                     	;# 
  1935  0F91                     	;# 
  1936  0F95                     	;# 
  1937  0F96                     	;# 
  1938  0F97                     	;# 
  1939  0F9C                     	;# 
  1940  0F9D                     	;# 
  1941  0F9E                     	;# 
  1942  0FE3                     	;# 
  1943  0FE4                     	;# 
  1944  0FE5                     	;# 
  1945  0FE6                     	;# 
  1946  0FE7                     	;# 
  1947  0FE8                     	;# 
  1948  0FE9                     	;# 
  1949  0FEA                     	;# 
  1950  0FEB                     	;# 
  1951  0FED                     	;# 
  1952  0FEE                     	;# 
  1953  0FEF                     	;# 
  1954                           
  1955 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1956  0000                     
  1957 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1958  0000                     
  1959 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1960  0000                     
  1961                           	psect	stringtext1
  1962  0180                     __pstringtext1:	
  1963  0180                     _fsmStateTable:	
  1964  0180  34D5               	retlw	low _I2C_DO_IDLE
  1965  0181  3402               	retlw	high _I2C_DO_IDLE
  1966  0182  3491               	retlw	low _I2C_DO_SEND_ADR_READ
  1967  0183  3402               	retlw	high _I2C_DO_SEND_ADR_READ
  1968  0184  3499               	retlw	low _I2C_DO_SEND_ADR_WRITE
  1969  0185  3402               	retlw	high _I2C_DO_SEND_ADR_WRITE
  1970  0186  3443               	retlw	low _I2C_DO_TX
  1971  0187  3400               	retlw	high _I2C_DO_TX
  1972  0188  348E               	retlw	low _I2C_DO_RX
  1973  0189  3400               	retlw	high _I2C_DO_RX
  1974  018A  34C4               	retlw	low _I2C_DO_RCEN
  1975  018B  3402               	retlw	high _I2C_DO_RCEN
  1976  018C  3414               	retlw	low _I2C_DO_TX_EMPTY
  1977  018D  3401               	retlw	high _I2C_DO_TX_EMPTY
  1978  018E  34FF               	retlw	low _I2C_DO_SEND_RESTART_READ
  1979  018F  3402               	retlw	high _I2C_DO_SEND_RESTART_READ
  1980  0190  34FB               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  1981  0191  3402               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  1982  0192  34F7               	retlw	low _I2C_DO_SEND_RESTART
  1983  0193  3402               	retlw	high _I2C_DO_SEND_RESTART
  1984  0194  34F3               	retlw	low _I2C_DO_SEND_STOP
  1985  0195  3402               	retlw	high _I2C_DO_SEND_STOP
  1986  0196  34EF               	retlw	low _I2C_DO_RX_ACK
  1987  0197  3402               	retlw	high _I2C_DO_RX_ACK
  1988  0198  34EB               	retlw	low _I2C_DO_RX_NACK_STOP
  1989  0199  3402               	retlw	high _I2C_DO_RX_NACK_STOP
  1990  019A  34E7               	retlw	low _I2C_DO_RX_NACK_RESTART
  1991  019B  3402               	retlw	high _I2C_DO_RX_NACK_RESTART
  1992  019C  34D0               	retlw	low _I2C_DO_RESET
  1993  019D  3402               	retlw	high _I2C_DO_RESET
  1994  019E  345D               	retlw	low _I2C_DO_ADDRESS_NACK
  1995  019F  3401               	retlw	high _I2C_DO_ADDRESS_NACK
  1996  01A0                     __end_of_fsmStateTable:	
  1997                           
  1998                           	psect	nvBANK0
  1999  003E                     __pnvBANK0:	
  2000  003E                     _TMR2_InterruptHandler:	
  2001  003E                     	ds	2
  2002  0040                     _EUSART_ErrorHandler:	
  2003  0040                     	ds	2
  2004  0042                     _EUSART_OverrunErrorHandler:	
  2005  0042                     	ds	2
  2006  0044                     _EUSART_FramingErrorHandler:	
  2007  0044                     	ds	2
  2008  0012                     _PIR2bits	set	18
  2009  001C                     _T2CONbits	set	28
  2010  001C                     _T2CON	set	28
  2011  001A                     _TMR2	set	26
  2012  001B                     _PR2	set	27
  2013  000B                     _INTCONbits	set	11
  2014  0011                     _PIR1bits	set	17
  2015  0095                     _OPTION_REGbits	set	149
  2016  008E                     _TRISC	set	142
  2017  008D                     _TRISB	set	141
  2018  008C                     _TRISA	set	140
  2019  0097                     _WDTCON	set	151
  2020  0099                     _OSCCON	set	153
  2021  0092                     _PIE2bits	set	146
  2022  009D                     _ADCON0bits	set	157
  2023  009C                     _ADRESH	set	156
  2024  009B                     _ADRESL	set	155
  2025  009F                     _ADCON2	set	159
  2026  009E                     _ADCON1	set	158
  2027  009D                     _ADCON0	set	157
  2028  0091                     _PIE1bits	set	145
  2029  011D                     _APFCON	set	285
  2030  010E                     _LATC	set	270
  2031  010D                     _LATB	set	269
  2032  010C                     _LATA	set	268
  2033  0116                     _BORCON	set	278
  2034  018C                     _ANSELA	set	396
  2035  018D                     _ANSELB	set	397
  2036  018E                     _ANSELC	set	398
  2037  0196                     _PMCON2	set	406
  2038  0193                     _PMDATL	set	403
  2039  0194                     _PMDATH	set	404
  2040  0195                     _PMCON1bits	set	405
  2041  0192                     _PMADRH	set	402
  2042  0191                     _PMADRL	set	401
  2043  019A                     _TXREG	set	410
  2044  0199                     _RCREG	set	409
  2045  019D                     _RCSTAbits	set	413
  2046  019E                     _TXSTAbits	set	414
  2047  019C                     _SPBRGH	set	412
  2048  019B                     _SPBRGL	set	411
  2049  019E                     _TXSTA	set	414
  2050  019D                     _RCSTA	set	413
  2051  019F                     _BAUDCON	set	415
  2052  020C                     _WPUA	set	524
  2053  020D                     _WPUB	set	525
  2054  0214                     _SSP1STATbits	set	532
  2055  0216                     _SSP1CON2bits	set	534
  2056  0211                     _SSP1BUF	set	529
  2057  0215                     _SSP1CON1bits	set	533
  2058  0212                     _SSP1ADD	set	530
  2059  0216                     _SSP1CON2	set	534
  2060  0215                     _SSP1CON1	set	533
  2061  0214                     _SSP1STAT	set	532
  2062  0611                     _PWM1DCL	set	1553
  2063  0612                     _PWM1DCH	set	1554
  2064  0613                     _PWM1CON	set	1555
  2065                           
  2066                           ; #config settings
  2067  0000                     
  2068                           	psect	cinit
  2069  0032                     start_initialization:	
  2070  0032                     __initialization:	
  2071                           
  2072                           ; Clear objects allocated to COMMON
  2073  0032  01F8               	clrf	__pbssCOMMON& (0+127)
  2074  0033  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  2075  0034  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  2076  0035  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  2077  0036  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  2078  0037  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  2079                           
  2080                           ; Clear objects allocated to BANK0
  2081  0038  3020               	movlw	low __pbssBANK0
  2082  0039  0084               	movwf	4
  2083  003A  3000               	movlw	high __pbssBANK0
  2084  003B  0085               	movwf	5
  2085  003C  301E               	movlw	30
  2086  003D  3182  22A0         	fcall	clear_ram0
  2087  003F                     end_of_initialization:	
  2088                           ;End of C runtime variable initialization code
  2089                           
  2090  003F                     __end_of__initialization:	
  2091  003F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2092  0040  0020               	movlb	0
  2093  0041  3182  2ADF         	ljmp	_main	;jump to C main() function
  2094                           
  2095                           	psect	bssCOMMON
  2096  0078                     __pbssCOMMON:	
  2097  0078                     _ADC_InterruptHandler:	
  2098  0078                     	ds	2
  2099  007A                     TMR2_ISR@CountCallBack:	
  2100  007A                     	ds	2
  2101  007C                     _MSSP_InterruptHandler:	
  2102  007C                     	ds	2
  2103                           
  2104                           	psect	bssBANK0
  2105  0020                     __pbssBANK0:	
  2106  0020                     _I2C_Status:	
  2107  0020                     	ds	29
  2108  003D                     _eusartRxLastError:	
  2109  003D                     	ds	1
  2110                           
  2111                           	psect	clrtext
  2112  02A0                     clear_ram0:	
  2113                           ;	Called with FSR0 containing the base address, and
  2114                           ;	WREG with the size to clear
  2115                           
  2116  02A0  0064               	clrwdt	;clear the watchdog before getting into this loop
  2117  02A1                     clrloop0:	
  2118  02A1  0180               	clrf	0	;clear RAM location pointed to by FSR
  2119  02A2  3101               	addfsr 0,1
  2120  02A3  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2121  02A4  2AA1               	goto	clrloop0	;have we reached the end yet?
  2122  02A5  3400               	retlw	0	;all done for this memory range, return
  2123                           
  2124                           	psect	cstackCOMMON
  2125  0070                     __pcstackCOMMON:	
  2126  0070                     ?_SYSTEM_Initialize:	
  2127  0070                     ?_TMR2_DefaultInterruptHandler:	
  2128                           ; 1 bytes @ 0x0
  2129                           
  2130  0070                     ??_TMR2_DefaultInterruptHandler:	
  2131                           ; 1 bytes @ 0x0
  2132                           
  2133  0070                     ?_TMR2_CallBack:	
  2134                           ; 1 bytes @ 0x0
  2135                           
  2136  0070                     ??_TMR2_CallBack:	
  2137                           ; 1 bytes @ 0x0
  2138                           
  2139  0070                     ?_I2C_DO_IDLE:	
  2140                           ; 1 bytes @ 0x0
  2141                           
  2142  0070                     ??_I2C_DO_IDLE:	
  2143                           ; 1 bytes @ 0x0
  2144                           
  2145  0070                     ?_I2C_DO_SEND_ADR_READ:	
  2146                           ; 1 bytes @ 0x0
  2147                           
  2148  0070                     ??_I2C_DO_SEND_ADR_READ:	
  2149                           ; 1 bytes @ 0x0
  2150                           
  2151  0070                     ?_I2C_DO_SEND_ADR_WRITE:	
  2152                           ; 1 bytes @ 0x0
  2153                           
  2154  0070                     ?_I2C_DO_TX:	
  2155                           ; 1 bytes @ 0x0
  2156                           
  2157  0070                     ?_I2C_DO_RX:	
  2158                           ; 1 bytes @ 0x0
  2159                           
  2160  0070                     ??_I2C_DO_RX:	
  2161                           ; 1 bytes @ 0x0
  2162                           
  2163  0070                     ?_I2C_DO_RCEN:	
  2164                           ; 1 bytes @ 0x0
  2165                           
  2166  0070                     ??_I2C_DO_RCEN:	
  2167                           ; 1 bytes @ 0x0
  2168                           
  2169  0070                     ?_I2C_DO_TX_EMPTY:	
  2170                           ; 1 bytes @ 0x0
  2171                           
  2172  0070                     ??_I2C_DO_TX_EMPTY:	
  2173                           ; 1 bytes @ 0x0
  2174                           
  2175  0070                     ?_I2C_DO_SEND_RESTART_READ:	
  2176                           ; 1 bytes @ 0x0
  2177                           
  2178  0070                     ??_I2C_DO_SEND_RESTART_READ:	
  2179                           ; 1 bytes @ 0x0
  2180                           
  2181  0070                     ?_I2C_DO_SEND_RESTART_WRITE:	
  2182                           ; 1 bytes @ 0x0
  2183                           
  2184  0070                     ??_I2C_DO_SEND_RESTART_WRITE:	
  2185                           ; 1 bytes @ 0x0
  2186                           
  2187  0070                     ?_I2C_DO_SEND_RESTART:	
  2188                           ; 1 bytes @ 0x0
  2189                           
  2190  0070                     ??_I2C_DO_SEND_RESTART:	
  2191                           ; 1 bytes @ 0x0
  2192                           
  2193  0070                     ?_I2C_DO_SEND_STOP:	
  2194                           ; 1 bytes @ 0x0
  2195                           
  2196  0070                     ??_I2C_DO_SEND_STOP:	
  2197                           ; 1 bytes @ 0x0
  2198                           
  2199  0070                     ?_I2C_DO_RX_ACK:	
  2200                           ; 1 bytes @ 0x0
  2201                           
  2202  0070                     ??_I2C_DO_RX_ACK:	
  2203                           ; 1 bytes @ 0x0
  2204                           
  2205  0070                     ?_I2C_DO_RX_NACK_STOP:	
  2206                           ; 1 bytes @ 0x0
  2207                           
  2208  0070                     ??_I2C_DO_RX_NACK_STOP:	
  2209                           ; 1 bytes @ 0x0
  2210                           
  2211  0070                     ?_I2C_DO_RX_NACK_RESTART:	
  2212                           ; 1 bytes @ 0x0
  2213                           
  2214  0070                     ??_I2C_DO_RX_NACK_RESTART:	
  2215                           ; 1 bytes @ 0x0
  2216                           
  2217  0070                     ?_I2C_DO_RESET:	
  2218                           ; 1 bytes @ 0x0
  2219                           
  2220  0070                     ??_I2C_DO_RESET:	
  2221                           ; 1 bytes @ 0x0
  2222                           
  2223  0070                     ?_I2C_DO_ADDRESS_NACK:	
  2224                           ; 1 bytes @ 0x0
  2225                           
  2226  0070                     ??_I2C_DO_ADDRESS_NACK:	
  2227                           ; 1 bytes @ 0x0
  2228                           
  2229  0070                     ?_I2C_MasterIsr:	
  2230                           ; 1 bytes @ 0x0
  2231                           
  2232  0070                     ?_I2C_MasterClearIrq:	
  2233                           ; 1 bytes @ 0x0
  2234                           
  2235  0070                     ??_I2C_MasterClearIrq:	
  2236                           ; 1 bytes @ 0x0
  2237                           
  2238  0070                     ?_I2C_SetCallback:	
  2239                           ; 1 bytes @ 0x0
  2240                           
  2241  0070                     ?_I2C_MasterFsm:	
  2242                           ; 1 bytes @ 0x0
  2243                           
  2244  0070                     ?_I2C_MasterIsNack:	
  2245                           ; 1 bytes @ 0x0
  2246                           
  2247  0070                     ??_I2C_MasterIsNack:	
  2248                           ; 1 bytes @ 0x0
  2249                           
  2250  0070                     ?_I2C_MasterSendTxData:	
  2251                           ; 1 bytes @ 0x0
  2252                           
  2253  0070                     ??_I2C_MasterSendTxData:	
  2254                           ; 1 bytes @ 0x0
  2255                           
  2256  0070                     ?_I2C_MasterGetRxData:	
  2257                           ; 1 bytes @ 0x0
  2258                           
  2259  0070                     ??_I2C_MasterGetRxData:	
  2260                           ; 1 bytes @ 0x0
  2261                           
  2262  0070                     ?_I2C_MasterSendAck:	
  2263                           ; 1 bytes @ 0x0
  2264                           
  2265  0070                     ??_I2C_MasterSendAck:	
  2266                           ; 1 bytes @ 0x0
  2267                           
  2268  0070                     ?_I2C_MasterStartRx:	
  2269                           ; 1 bytes @ 0x0
  2270                           
  2271  0070                     ??_I2C_MasterStartRx:	
  2272                           ; 1 bytes @ 0x0
  2273                           
  2274  0070                     ?_I2C_MasterSetIrq:	
  2275                           ; 1 bytes @ 0x0
  2276                           
  2277  0070                     ??_I2C_MasterSetIrq:	
  2278                           ; 1 bytes @ 0x0
  2279                           
  2280  0070                     ?_I2C_MasterEnableRestart:	
  2281                           ; 1 bytes @ 0x0
  2282                           
  2283  0070                     ??_I2C_MasterEnableRestart:	
  2284                           ; 1 bytes @ 0x0
  2285                           
  2286  0070                     ?_I2C_MasterStop:	
  2287                           ; 1 bytes @ 0x0
  2288                           
  2289  0070                     ??_I2C_MasterStop:	
  2290                           ; 1 bytes @ 0x0
  2291                           
  2292  0070                     ?_I2C_MasterSendNack:	
  2293                           ; 1 bytes @ 0x0
  2294                           
  2295  0070                     ??_I2C_MasterSendNack:	
  2296                           ; 1 bytes @ 0x0
  2297                           
  2298  0070                     ?_PIN_MANAGER_Initialize:	
  2299                           ; 1 bytes @ 0x0
  2300                           
  2301  0070                     ?_OSCILLATOR_Initialize:	
  2302                           ; 1 bytes @ 0x0
  2303                           
  2304  0070                     ?_WDT_Initialize:	
  2305                           ; 1 bytes @ 0x0
  2306                           
  2307  0070                     ?_EUSART_Initialize:	
  2308                           ; 1 bytes @ 0x0
  2309                           
  2310  0070                     ?_main:	
  2311                           ; 1 bytes @ 0x0
  2312                           
  2313  0070                     ?_PWM1_Initialize:	
  2314                           ; 1 bytes @ 0x0
  2315                           
  2316  0070                     ?_TMR2_Initialize:	
  2317                           ; 1 bytes @ 0x0
  2318                           
  2319  0070                     ?_TMR2_ISR:	
  2320                           ; 1 bytes @ 0x0
  2321                           
  2322  0070                     ??_TMR2_ISR:	
  2323                           ; 1 bytes @ 0x0
  2324                           
  2325  0070                     ?_I2C_Initialize:	
  2326                           ; 1 bytes @ 0x0
  2327                           
  2328  0070                     ?_I2C_SetBuffer:	
  2329                           ; 1 bytes @ 0x0
  2330                           
  2331  0070                     ?_ADC_Initialize:	
  2332                           ; 1 bytes @ 0x0
  2333                           
  2334  0070                     ?_INTERRUPT_InterruptManager:	
  2335                           ; 1 bytes @ 0x0
  2336                           
  2337  0070                     I2C_MasterSendTxData@data:	
  2338                           ; 1 bytes @ 0x0
  2339                           
  2340  0070                     I2C_SetBuffer@bufferSize:	
  2341                           ; 1 bytes @ 0x0
  2342                           
  2343  0070                     I2C_SetCallback@cb:	
  2344                           ; 2 bytes @ 0x0
  2345                           
  2346                           
  2347                           ; 2 bytes @ 0x0
  2348  0070                     	ds	1
  2349  0071                     ??_I2C_DO_SEND_ADR_WRITE:	
  2350  0071                     ??_I2C_DO_TX:	
  2351                           ; 1 bytes @ 0x1
  2352                           
  2353                           
  2354                           ; 1 bytes @ 0x1
  2355  0071                     	ds	1
  2356  0072                     ??_I2C_SetBuffer:	
  2357  0072                     I2C_SetCallback@ptr:	
  2358                           ; 1 bytes @ 0x2
  2359                           
  2360  0072                     _I2C_DO_TX$872:	
  2361                           ; 1 bytes @ 0x2
  2362                           
  2363                           
  2364                           ; 2 bytes @ 0x2
  2365  0072                     	ds	1
  2366  0073                     ??_I2C_SetCallback:	
  2367  0073                     I2C_SetBuffer@buffer:	
  2368                           ; 1 bytes @ 0x3
  2369                           
  2370                           
  2371                           ; 1 bytes @ 0x3
  2372  0073                     	ds	1
  2373  0074                     ??_I2C_MasterFsm:	
  2374  0074                     I2C_SetCallback@idx:	
  2375                           ; 1 bytes @ 0x4
  2376                           
  2377                           
  2378                           ; 1 bytes @ 0x4
  2379  0074                     	ds	1
  2380  0075                     ?_I2C_SetDataCompleteCallback:	
  2381  0075                     I2C_SetDataCompleteCallback@cb:	
  2382                           ; 1 bytes @ 0x5
  2383                           
  2384                           
  2385                           ; 2 bytes @ 0x5
  2386  0075                     	ds	2
  2387  0077                     ??_I2C_MasterIsr:	
  2388  0077                     ??_INTERRUPT_InterruptManager:	
  2389                           ; 1 bytes @ 0x7
  2390                           
  2391  0077                     I2C_SetDataCompleteCallback@ptr:	
  2392                           ; 1 bytes @ 0x7
  2393                           
  2394                           
  2395                           ; 1 bytes @ 0x7
  2396  0077                     	ds	1
  2397  0078                     ??_I2C_CallbackReturnStop:	
  2398  0078                     ??_I2C_CallbackReturnReset:	
  2399                           ; 1 bytes @ 0x8
  2400                           
  2401  0078                     ??_rd1RegCompleteHandler:	
  2402                           ; 1 bytes @ 0x8
  2403                           
  2404  0078                     ??_rd2RegCompleteHandler:	
  2405                           ; 1 bytes @ 0x8
  2406                           
  2407  0078                     ??_wr1RegCompleteHandler:	
  2408                           ; 1 bytes @ 0x8
  2409                           
  2410  0078                     ??_wr2RegCompleteHandler:	
  2411                           ; 1 bytes @ 0x8
  2412                           
  2413  0078                     ??_rdBlkRegCompleteHandler:	
  2414                           ; 1 bytes @ 0x8
  2415                           
  2416                           
  2417                           	psect	cstackBANK0
  2418  0046                     __pcstackBANK0:	
  2419                           ; 1 bytes @ 0x8
  2420                           
  2421  0046                     ?_EUSART_SetFramingErrorHandler:	
  2422  0046                     ?_EUSART_SetOverrunErrorHandler:	
  2423                           ; 1 bytes @ 0x0
  2424                           
  2425  0046                     ?_EUSART_SetErrorHandler:	
  2426                           ; 1 bytes @ 0x0
  2427                           
  2428  0046                     ?_TMR2_SetInterruptHandler:	
  2429                           ; 1 bytes @ 0x0
  2430                           
  2431  0046                     ??_PIN_MANAGER_Initialize:	
  2432                           ; 1 bytes @ 0x0
  2433                           
  2434  0046                     ??_OSCILLATOR_Initialize:	
  2435                           ; 1 bytes @ 0x0
  2436                           
  2437  0046                     ??_WDT_Initialize:	
  2438                           ; 1 bytes @ 0x0
  2439                           
  2440  0046                     ??_PWM1_Initialize:	
  2441                           ; 1 bytes @ 0x0
  2442                           
  2443  0046                     ??_I2C_Initialize:	
  2444                           ; 1 bytes @ 0x0
  2445                           
  2446  0046                     ??_I2C_SetDataCompleteCallback:	
  2447                           ; 1 bytes @ 0x0
  2448                           
  2449  0046                     ??_ADC_Initialize:	
  2450                           ; 1 bytes @ 0x0
  2451                           
  2452  0046                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2453                           ; 1 bytes @ 0x0
  2454                           
  2455  0046                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2456                           ; 2 bytes @ 0x0
  2457                           
  2458  0046                     EUSART_SetErrorHandler@interruptHandler:	
  2459                           ; 2 bytes @ 0x0
  2460                           
  2461  0046                     TMR2_SetInterruptHandler@InterruptHandler:	
  2462                           ; 2 bytes @ 0x0
  2463                           
  2464                           
  2465                           ; 2 bytes @ 0x0
  2466  0046                     	ds	1
  2467  0047                     ?_I2C_CallbackReturnStop:	
  2468  0047                     ?_I2C_CallbackReturnReset:	
  2469                           ; 1 bytes @ 0x1
  2470                           
  2471  0047                     ?_rd1RegCompleteHandler:	
  2472                           ; 1 bytes @ 0x1
  2473                           
  2474  0047                     ?_rd2RegCompleteHandler:	
  2475                           ; 1 bytes @ 0x1
  2476                           
  2477  0047                     ?_wr1RegCompleteHandler:	
  2478                           ; 1 bytes @ 0x1
  2479                           
  2480  0047                     ?_wr2RegCompleteHandler:	
  2481                           ; 1 bytes @ 0x1
  2482                           
  2483  0047                     ?_rdBlkRegCompleteHandler:	
  2484                           ; 1 bytes @ 0x1
  2485                           
  2486  0047                     I2C_CallbackReturnStop@funPtr:	
  2487                           ; 1 bytes @ 0x1
  2488                           
  2489  0047                     I2C_CallbackReturnReset@funPtr:	
  2490                           ; 1 bytes @ 0x1
  2491                           
  2492  0047                     rd1RegCompleteHandler@ptr:	
  2493                           ; 1 bytes @ 0x1
  2494                           
  2495  0047                     rd2RegCompleteHandler@ptr:	
  2496                           ; 1 bytes @ 0x1
  2497                           
  2498  0047                     wr1RegCompleteHandler@ptr:	
  2499                           ; 1 bytes @ 0x1
  2500                           
  2501  0047                     wr2RegCompleteHandler@ptr:	
  2502                           ; 1 bytes @ 0x1
  2503                           
  2504  0047                     rdBlkRegCompleteHandler@ptr:	
  2505                           ; 1 bytes @ 0x1
  2506                           
  2507                           
  2508                           ; 1 bytes @ 0x1
  2509  0047                     	ds	1
  2510  0048                     ??_EUSART_SetFramingErrorHandler:	
  2511  0048                     ??_EUSART_SetOverrunErrorHandler:	
  2512                           ; 1 bytes @ 0x2
  2513                           
  2514  0048                     ??_EUSART_SetErrorHandler:	
  2515                           ; 1 bytes @ 0x2
  2516                           
  2517  0048                     ??_SYSTEM_Initialize:	
  2518                           ; 1 bytes @ 0x2
  2519                           
  2520  0048                     ??_TMR2_SetInterruptHandler:	
  2521                           ; 1 bytes @ 0x2
  2522                           
  2523  0048                     ??_EUSART_Initialize:	
  2524                           ; 1 bytes @ 0x2
  2525                           
  2526  0048                     ??_main:	
  2527                           ; 1 bytes @ 0x2
  2528                           
  2529  0048                     ??_TMR2_Initialize:	
  2530                           ; 1 bytes @ 0x2
  2531                           
  2532                           
  2533                           	psect	maintext
  2534  02DF                     __pmaintext:	
  2535                           ; 1 bytes @ 0x2
  2536 ;;
  2537 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2538 ;;
  2539 ;; *************** function _main *****************
  2540 ;; Defined at:
  2541 ;;		line 49 in file "main.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;		None
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;		None
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  1    wreg      void 
  2548 ;; Registers used:
  2549 ;;		wreg, status,2, status,0, pclath, cstack
  2550 ;; Tracked objects:
  2551 ;;		On entry : B1F/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2555 ;;      Params:         0       0       0       0       0       0       0       0
  2556 ;;      Locals:         0       0       0       0       0       0       0       0
  2557 ;;      Temps:          0       0       0       0       0       0       0       0
  2558 ;;      Totals:         0       0       0       0       0       0       0       0
  2559 ;;Total ram usage:        0 bytes
  2560 ;; Hardware stack levels required when called:   10
  2561 ;; This function calls:
  2562 ;;		_SYSTEM_Initialize
  2563 ;; This function is called by:
  2564 ;;		Startup code after reset
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           
  2569                           ;psect for function _main
  2570  02DF                     _main:	
  2571                           
  2572                           ;main.c: 52: SYSTEM_Initialize();
  2573                           
  2574                           ;incstack = 0
  2575                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  2576  02DF  3181  21B9  3182   	fcall	_SYSTEM_Initialize
  2577  02E2                     l135:	
  2578                           ;main.c: 69: while (1)
  2579                           
  2580                           
  2581                           ;main.c: 70: {
  2582  02E2  2AE2               	goto	l135
  2583  02E3                     __end_of_main:	
  2584                           
  2585                           	psect	text1
  2586  01B9                     __ptext1:	
  2587 ;; *************** function _SYSTEM_Initialize *****************
  2588 ;; Defined at:
  2589 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;		None
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;		None
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  1    wreg      void 
  2596 ;; Registers used:
  2597 ;;		wreg, status,2, status,0, pclath, cstack
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2603 ;;      Params:         0       0       0       0       0       0       0       0
  2604 ;;      Locals:         0       0       0       0       0       0       0       0
  2605 ;;      Temps:          0       0       0       0       0       0       0       0
  2606 ;;      Totals:         0       0       0       0       0       0       0       0
  2607 ;;Total ram usage:        0 bytes
  2608 ;; Hardware stack levels used:    1
  2609 ;; Hardware stack levels required when called:    9
  2610 ;; This function calls:
  2611 ;;		_ADC_Initialize
  2612 ;;		_EUSART_Initialize
  2613 ;;		_I2C_Initialize
  2614 ;;		_OSCILLATOR_Initialize
  2615 ;;		_PIN_MANAGER_Initialize
  2616 ;;		_PWM1_Initialize
  2617 ;;		_TMR2_Initialize
  2618 ;;		_WDT_Initialize
  2619 ;; This function is called by:
  2620 ;;		_main
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           
  2625                           ;psect for function _SYSTEM_Initialize
  2626  01B9                     _SYSTEM_Initialize:	
  2627                           
  2628                           ;mcc.c: 53: I2C_Initialize();
  2629                           
  2630                           ;incstack = 0
  2631                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2632  01B9  3182  2277  3181   	fcall	_I2C_Initialize
  2633                           
  2634                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  2635  01BC  3181  21A0  3181   	fcall	_PIN_MANAGER_Initialize
  2636                           
  2637                           ;mcc.c: 55: OSCILLATOR_Initialize();
  2638  01BF  3182  22AC  3181   	fcall	_OSCILLATOR_Initialize
  2639                           
  2640                           ;mcc.c: 56: WDT_Initialize();
  2641  01C2  3182  22E3  3181   	fcall	_WDT_Initialize
  2642                           
  2643                           ;mcc.c: 57: PWM1_Initialize();
  2644  01C5  3182  2289  3181   	fcall	_PWM1_Initialize
  2645                           
  2646                           ;mcc.c: 58: ADC_Initialize();
  2647  01C8  3182  2280  3181   	fcall	_ADC_Initialize
  2648                           
  2649                           ;mcc.c: 59: TMR2_Initialize();
  2650  01CB  3181  21E9  3181   	fcall	_TMR2_Initialize
  2651                           
  2652                           ;mcc.c: 60: EUSART_Initialize();
  2653  01CE  3180  20EF         	fcall	_EUSART_Initialize
  2654  01D0  0008               	return
  2655  01D1                     __end_of_SYSTEM_Initialize:	
  2656                           
  2657                           	psect	text2
  2658  02E3                     __ptext2:	
  2659 ;; *************** function _WDT_Initialize *****************
  2660 ;; Defined at:
  2661 ;;		line 71 in file "mcc_generated_files/mcc.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;		None
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;		None
  2666 ;; Return value:  Size  Location     Type
  2667 ;;                  1    wreg      void 
  2668 ;; Registers used:
  2669 ;;		wreg
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2675 ;;      Params:         0       0       0       0       0       0       0       0
  2676 ;;      Locals:         0       0       0       0       0       0       0       0
  2677 ;;      Temps:          0       0       0       0       0       0       0       0
  2678 ;;      Totals:         0       0       0       0       0       0       0       0
  2679 ;;Total ram usage:        0 bytes
  2680 ;; Hardware stack levels used:    1
  2681 ;; Hardware stack levels required when called:    7
  2682 ;; This function calls:
  2683 ;;		Nothing
  2684 ;; This function is called by:
  2685 ;;		_SYSTEM_Initialize
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689                           
  2690                           ;psect for function _WDT_Initialize
  2691  02E3                     _WDT_Initialize:	
  2692                           
  2693                           ;mcc.c: 74: WDTCON = 0x16;
  2694                           
  2695                           ;incstack = 0
  2696                           ; Regs used in _WDT_Initialize: [wreg]
  2697  02E3  3016               	movlw	22
  2698  02E4  0021               	movlb	1	; select bank1
  2699  02E5  0097               	movwf	23	;volatile
  2700  02E6  0008               	return
  2701  02E7                     __end_of_WDT_Initialize:	
  2702                           
  2703                           	psect	text3
  2704  01E9                     __ptext3:	
  2705 ;; *************** function _TMR2_Initialize *****************
  2706 ;; Defined at:
  2707 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;		None
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;		None
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  1    wreg      void 
  2714 ;; Registers used:
  2715 ;;		wreg, status,2, status,0, pclath, cstack
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2721 ;;      Params:         0       0       0       0       0       0       0       0
  2722 ;;      Locals:         0       0       0       0       0       0       0       0
  2723 ;;      Temps:          0       0       0       0       0       0       0       0
  2724 ;;      Totals:         0       0       0       0       0       0       0       0
  2725 ;;Total ram usage:        0 bytes
  2726 ;; Hardware stack levels used:    1
  2727 ;; Hardware stack levels required when called:    8
  2728 ;; This function calls:
  2729 ;;		_TMR2_SetInterruptHandler
  2730 ;; This function is called by:
  2731 ;;		_SYSTEM_Initialize
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           
  2736                           ;psect for function _TMR2_Initialize
  2737  01E9                     _TMR2_Initialize:	
  2738                           
  2739                           ;tmr2.c: 69: PR2 = 0xF9;
  2740                           
  2741                           ;incstack = 0
  2742                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2743  01E9  30F9               	movlw	249
  2744  01EA  0020               	movlb	0	; select bank0
  2745  01EB  009B               	movwf	27	;volatile
  2746                           
  2747                           ;tmr2.c: 72: TMR2 = 0x00;
  2748  01EC  019A               	clrf	26	;volatile
  2749                           
  2750                           ;tmr2.c: 75: PIR1bits.TMR2IF = 0;
  2751  01ED  1091               	bcf	17,1	;volatile
  2752                           
  2753                           ;tmr2.c: 78: PIE1bits.TMR2IE = 1;
  2754  01EE  0021               	movlb	1	; select bank1
  2755  01EF  1491               	bsf	17,1	;volatile
  2756                           
  2757                           ;tmr2.c: 81: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  2758  01F0  3024               	movlw	low _TMR2_DefaultInterruptHandler
  2759  01F1  0020               	movlb	0	; select bank0
  2760  01F2  00C6               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2761  01F3  3003               	movlw	high _TMR2_DefaultInterruptHandler
  2762  01F4  00C7               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2763  01F5  3182  22A6         	fcall	_TMR2_SetInterruptHandler
  2764                           
  2765                           ;tmr2.c: 84: T2CON = 0x06;
  2766  01F7  3006               	movlw	6
  2767  01F8  0020               	movlb	0	; select bank0
  2768  01F9  009C               	movwf	28	;volatile
  2769  01FA  0008               	return
  2770  01FB                     __end_of_TMR2_Initialize:	
  2771                           
  2772                           	psect	text4
  2773  02A6                     __ptext4:	
  2774 ;; *************** function _TMR2_SetInterruptHandler *****************
  2775 ;; Defined at:
  2776 ;;		line 147 in file "mcc_generated_files/tmr2.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2779 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;		None
  2782 ;; Return value:  Size  Location     Type
  2783 ;;                  1    wreg      void 
  2784 ;; Registers used:
  2785 ;;		wreg
  2786 ;; Tracked objects:
  2787 ;;		On entry : 0/0
  2788 ;;		On exit  : 0/0
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2791 ;;      Params:         0       2       0       0       0       0       0       0
  2792 ;;      Locals:         0       0       0       0       0       0       0       0
  2793 ;;      Temps:          0       0       0       0       0       0       0       0
  2794 ;;      Totals:         0       2       0       0       0       0       0       0
  2795 ;;Total ram usage:        2 bytes
  2796 ;; Hardware stack levels used:    1
  2797 ;; Hardware stack levels required when called:    7
  2798 ;; This function calls:
  2799 ;;		Nothing
  2800 ;; This function is called by:
  2801 ;;		_TMR2_Initialize
  2802 ;; This function uses a non-reentrant model
  2803 ;;
  2804                           
  2805                           
  2806                           ;psect for function _TMR2_SetInterruptHandler
  2807  02A6                     _TMR2_SetInterruptHandler:	
  2808                           
  2809                           ;tmr2.c: 148: TMR2_InterruptHandler = InterruptHandler;
  2810                           
  2811                           ;incstack = 0
  2812                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  2813  02A6  0020               	movlb	0	; select bank0
  2814  02A7  0847               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  2815  02A8  00BF               	movwf	_TMR2_InterruptHandler+1
  2816  02A9  0846               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  2817  02AA  00BE               	movwf	_TMR2_InterruptHandler
  2818  02AB  0008               	return
  2819  02AC                     __end_of_TMR2_SetInterruptHandler:	
  2820                           
  2821                           	psect	text5
  2822  0289                     __ptext5:	
  2823 ;; *************** function _PWM1_Initialize *****************
  2824 ;; Defined at:
  2825 ;;		line 58 in file "mcc_generated_files/pwm1.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;		None
  2828 ;; Auto vars:     Size  Location     Type
  2829 ;;		None
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  1    wreg      void 
  2832 ;; Registers used:
  2833 ;;		wreg
  2834 ;; Tracked objects:
  2835 ;;		On entry : 0/0
  2836 ;;		On exit  : 0/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2839 ;;      Params:         0       0       0       0       0       0       0       0
  2840 ;;      Locals:         0       0       0       0       0       0       0       0
  2841 ;;      Temps:          0       0       0       0       0       0       0       0
  2842 ;;      Totals:         0       0       0       0       0       0       0       0
  2843 ;;Total ram usage:        0 bytes
  2844 ;; Hardware stack levels used:    1
  2845 ;; Hardware stack levels required when called:    7
  2846 ;; This function calls:
  2847 ;;		Nothing
  2848 ;; This function is called by:
  2849 ;;		_SYSTEM_Initialize
  2850 ;; This function uses a non-reentrant model
  2851 ;;
  2852                           
  2853                           
  2854                           ;psect for function _PWM1_Initialize
  2855  0289                     _PWM1_Initialize:	
  2856                           
  2857                           ;pwm1.c: 62: PWM1CON = 0x80;
  2858                           
  2859                           ;incstack = 0
  2860                           ; Regs used in _PWM1_Initialize: [wreg]
  2861  0289  3080               	movlw	128
  2862  028A  002C               	movlb	12	; select bank12
  2863  028B  0093               	movwf	19	;volatile
  2864                           
  2865                           ;pwm1.c: 65: PWM1DCH = 0x7C;
  2866  028C  307C               	movlw	124
  2867  028D  0092               	movwf	18	;volatile
  2868                           
  2869                           ;pwm1.c: 68: PWM1DCL = 0xC0;
  2870  028E  30C0               	movlw	192
  2871  028F  0091               	movwf	17	;volatile
  2872  0290  0008               	return
  2873  0291                     __end_of_PWM1_Initialize:	
  2874                           
  2875                           	psect	text6
  2876  01A0                     __ptext6:	
  2877 ;; *************** function _PIN_MANAGER_Initialize *****************
  2878 ;; Defined at:
  2879 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;		None
  2882 ;; Auto vars:     Size  Location     Type
  2883 ;;		None
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  1    wreg      void 
  2886 ;; Registers used:
  2887 ;;		wreg, status,2
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2893 ;;      Params:         0       0       0       0       0       0       0       0
  2894 ;;      Locals:         0       0       0       0       0       0       0       0
  2895 ;;      Temps:          0       0       0       0       0       0       0       0
  2896 ;;      Totals:         0       0       0       0       0       0       0       0
  2897 ;;Total ram usage:        0 bytes
  2898 ;; Hardware stack levels used:    1
  2899 ;; Hardware stack levels required when called:    7
  2900 ;; This function calls:
  2901 ;;		Nothing
  2902 ;; This function is called by:
  2903 ;;		_SYSTEM_Initialize
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           
  2908                           ;psect for function _PIN_MANAGER_Initialize
  2909  01A0                     _PIN_MANAGER_Initialize:	
  2910                           
  2911                           ;pin_manager.c: 60: LATA = 0x00;
  2912                           
  2913                           ;incstack = 0
  2914                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2915  01A0  0022               	movlb	2	; select bank2
  2916  01A1  018C               	clrf	12	;volatile
  2917                           
  2918                           ;pin_manager.c: 61: LATB = 0x00;
  2919  01A2  018D               	clrf	13	;volatile
  2920                           
  2921                           ;pin_manager.c: 62: LATC = 0x00;
  2922  01A3  018E               	clrf	14	;volatile
  2923                           
  2924                           ;pin_manager.c: 67: TRISA = 0x3F;
  2925  01A4  303F               	movlw	63
  2926  01A5  0021               	movlb	1	; select bank1
  2927  01A6  008C               	movwf	12	;volatile
  2928                           
  2929                           ;pin_manager.c: 68: TRISB = 0x70;
  2930  01A7  3070               	movlw	112
  2931  01A8  008D               	movwf	13	;volatile
  2932                           
  2933                           ;pin_manager.c: 69: TRISC = 0xFF;
  2934  01A9  30FF               	movlw	255
  2935  01AA  008E               	movwf	14	;volatile
  2936                           
  2937                           ;pin_manager.c: 74: ANSELC = 0xCF;
  2938  01AB  30CF               	movlw	207
  2939  01AC  0023               	movlb	3	; select bank3
  2940  01AD  008E               	movwf	14	;volatile
  2941                           
  2942                           ;pin_manager.c: 75: ANSELB = 0x00;
  2943  01AE  018D               	clrf	13	;volatile
  2944                           
  2945                           ;pin_manager.c: 76: ANSELA = 0x17;
  2946  01AF  3017               	movlw	23
  2947  01B0  008C               	movwf	12	;volatile
  2948                           
  2949                           ;pin_manager.c: 81: WPUB = 0x00;
  2950  01B1  0024               	movlb	4	; select bank4
  2951  01B2  018D               	clrf	13	;volatile
  2952                           
  2953                           ;pin_manager.c: 82: WPUA = 0x00;
  2954  01B3  018C               	clrf	12	;volatile
  2955                           
  2956                           ;pin_manager.c: 83: OPTION_REGbits.nWPUEN = 1;
  2957  01B4  0021               	movlb	1	; select bank1
  2958  01B5  1795               	bsf	21,7	;volatile
  2959                           
  2960                           ;pin_manager.c: 89: APFCON = 0x00;
  2961  01B6  0022               	movlb	2	; select bank2
  2962  01B7  019D               	clrf	29	;volatile
  2963  01B8  0008               	return
  2964  01B9                     __end_of_PIN_MANAGER_Initialize:	
  2965                           
  2966                           	psect	text7
  2967  02AC                     __ptext7:	
  2968 ;; *************** function _OSCILLATOR_Initialize *****************
  2969 ;; Defined at:
  2970 ;;		line 63 in file "mcc_generated_files/mcc.c"
  2971 ;; Parameters:    Size  Location     Type
  2972 ;;		None
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;		None
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  1    wreg      void 
  2977 ;; Registers used:
  2978 ;;		wreg, status,2
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2984 ;;      Params:         0       0       0       0       0       0       0       0
  2985 ;;      Locals:         0       0       0       0       0       0       0       0
  2986 ;;      Temps:          0       0       0       0       0       0       0       0
  2987 ;;      Totals:         0       0       0       0       0       0       0       0
  2988 ;;Total ram usage:        0 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; Hardware stack levels required when called:    7
  2991 ;; This function calls:
  2992 ;;		Nothing
  2993 ;; This function is called by:
  2994 ;;		_SYSTEM_Initialize
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           
  2999                           ;psect for function _OSCILLATOR_Initialize
  3000  02AC                     _OSCILLATOR_Initialize:	
  3001                           
  3002                           ;mcc.c: 66: OSCCON = 0x78;
  3003                           
  3004                           ;incstack = 0
  3005                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3006  02AC  3078               	movlw	120
  3007  02AD  0021               	movlb	1	; select bank1
  3008  02AE  0099               	movwf	25	;volatile
  3009                           
  3010                           ;mcc.c: 68: BORCON = 0x00;
  3011  02AF  0022               	movlb	2	; select bank2
  3012  02B0  0196               	clrf	22	;volatile
  3013  02B1  0008               	return
  3014  02B2                     __end_of_OSCILLATOR_Initialize:	
  3015                           
  3016                           	psect	text8
  3017  0277                     __ptext8:	
  3018 ;; *************** function _I2C_Initialize *****************
  3019 ;; Defined at:
  3020 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;		None
  3023 ;; Auto vars:     Size  Location     Type
  3024 ;;		None
  3025 ;; Return value:  Size  Location     Type
  3026 ;;                  1    wreg      void 
  3027 ;; Registers used:
  3028 ;;		wreg, status,2
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3034 ;;      Params:         0       0       0       0       0       0       0       0
  3035 ;;      Locals:         0       0       0       0       0       0       0       0
  3036 ;;      Temps:          0       0       0       0       0       0       0       0
  3037 ;;      Totals:         0       0       0       0       0       0       0       0
  3038 ;;Total ram usage:        0 bytes
  3039 ;; Hardware stack levels used:    1
  3040 ;; Hardware stack levels required when called:    7
  3041 ;; This function calls:
  3042 ;;		Nothing
  3043 ;; This function is called by:
  3044 ;;		_SYSTEM_Initialize
  3045 ;; This function uses a non-reentrant model
  3046 ;;
  3047                           
  3048                           
  3049                           ;psect for function _I2C_Initialize
  3050  0277                     _I2C_Initialize:	
  3051                           
  3052                           ;i2c_master.c: 169: SSP1STAT = 0x00;
  3053                           
  3054                           ;incstack = 0
  3055                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  3056  0277  0024               	movlb	4	; select bank4
  3057  0278  0194               	clrf	20	;volatile
  3058                           
  3059                           ;i2c_master.c: 170: SSP1CON1 = 0x08;
  3060  0279  3008               	movlw	8
  3061  027A  0095               	movwf	21	;volatile
  3062                           
  3063                           ;i2c_master.c: 171: SSP1CON2 = 0x00;
  3064  027B  0196               	clrf	22	;volatile
  3065                           
  3066                           ;i2c_master.c: 172: SSP1ADD = 0x27;
  3067  027C  3027               	movlw	39
  3068  027D  0092               	movwf	18	;volatile
  3069                           
  3070                           ;i2c_master.c: 173: SSP1CON1bits.SSPEN = 0;
  3071  027E  1295               	bcf	21,5	;volatile
  3072  027F  0008               	return
  3073  0280                     __end_of_I2C_Initialize:	
  3074                           
  3075                           	psect	text9
  3076  00EF                     __ptext9:	
  3077 ;; *************** function _EUSART_Initialize *****************
  3078 ;; Defined at:
  3079 ;;		line 66 in file "mcc_generated_files/eusart.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;		None
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;		None
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  1    wreg      void 
  3086 ;; Registers used:
  3087 ;;		wreg, status,2, status,0, pclath, cstack
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3093 ;;      Params:         0       0       0       0       0       0       0       0
  3094 ;;      Locals:         0       0       0       0       0       0       0       0
  3095 ;;      Temps:          0       0       0       0       0       0       0       0
  3096 ;;      Totals:         0       0       0       0       0       0       0       0
  3097 ;;Total ram usage:        0 bytes
  3098 ;; Hardware stack levels used:    1
  3099 ;; Hardware stack levels required when called:    8
  3100 ;; This function calls:
  3101 ;;		_EUSART_SetErrorHandler
  3102 ;;		_EUSART_SetFramingErrorHandler
  3103 ;;		_EUSART_SetOverrunErrorHandler
  3104 ;; This function is called by:
  3105 ;;		_SYSTEM_Initialize
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108                           
  3109                           
  3110                           ;psect for function _EUSART_Initialize
  3111  00EF                     _EUSART_Initialize:	
  3112                           
  3113                           ;eusart.c: 71: BAUDCON = 0x08;
  3114                           
  3115                           ;incstack = 0
  3116                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3117  00EF  3008               	movlw	8
  3118  00F0  0023               	movlb	3	; select bank3
  3119  00F1  009F               	movwf	31	;volatile
  3120                           
  3121                           ;eusart.c: 74: RCSTA = 0x90;
  3122  00F2  3090               	movlw	144
  3123  00F3  009D               	movwf	29	;volatile
  3124                           
  3125                           ;eusart.c: 77: TXSTA = 0x24;
  3126  00F4  3024               	movlw	36
  3127  00F5  009E               	movwf	30	;volatile
  3128                           
  3129                           ;eusart.c: 80: SPBRGL = 0xA0;
  3130  00F6  30A0               	movlw	160
  3131  00F7  009B               	movwf	27	;volatile
  3132                           
  3133                           ;eusart.c: 83: SPBRGH = 0x01;
  3134  00F8  3001               	movlw	1
  3135  00F9  009C               	movwf	28	;volatile
  3136                           
  3137                           ;eusart.c: 86: EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  3138  00FA  3000               	movlw	0
  3139  00FB  0020               	movlb	0	; select bank0
  3140  00FC  00C6               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  3141  00FD  3000               	movlw	0
  3142  00FE  00C7               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  3143  00FF  3182  22B8  3180   	fcall	_EUSART_SetFramingErrorHandler
  3144                           
  3145                           ;eusart.c: 87: EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  3146  0102  3000               	movlw	0
  3147  0103  0020               	movlb	0	; select bank0
  3148  0104  00C6               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  3149  0105  3000               	movlw	0
  3150  0106  00C7               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  3151  0107  3182  22B2  3180   	fcall	_EUSART_SetOverrunErrorHandler
  3152                           
  3153                           ;eusart.c: 88: EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  3154  010A  3000               	movlw	0
  3155  010B  0020               	movlb	0	; select bank0
  3156  010C  00C6               	movwf	EUSART_SetErrorHandler@interruptHandler
  3157  010D  3000               	movlw	0
  3158  010E  00C7               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  3159  010F  3182  22BE         	fcall	_EUSART_SetErrorHandler
  3160                           
  3161                           ;eusart.c: 90: eusartRxLastError.status = 0;
  3162  0111  0020               	movlb	0	; select bank0
  3163  0112  01BD               	clrf	_eusartRxLastError	;volatile
  3164  0113  0008               	return
  3165  0114                     __end_of_EUSART_Initialize:	
  3166                           
  3167                           	psect	text10
  3168  02B2                     __ptext10:	
  3169 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3170 ;; Defined at:
  3171 ;;		line 161 in file "mcc_generated_files/eusart.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3174 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;		None
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  1    wreg      void 
  3179 ;; Registers used:
  3180 ;;		wreg
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3186 ;;      Params:         0       2       0       0       0       0       0       0
  3187 ;;      Locals:         0       0       0       0       0       0       0       0
  3188 ;;      Temps:          0       0       0       0       0       0       0       0
  3189 ;;      Totals:         0       2       0       0       0       0       0       0
  3190 ;;Total ram usage:        2 bytes
  3191 ;; Hardware stack levels used:    1
  3192 ;; Hardware stack levels required when called:    7
  3193 ;; This function calls:
  3194 ;;		Nothing
  3195 ;; This function is called by:
  3196 ;;		_EUSART_Initialize
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           
  3201                           ;psect for function _EUSART_SetOverrunErrorHandler
  3202  02B2                     _EUSART_SetOverrunErrorHandler:	
  3203                           
  3204                           ;eusart.c: 162: EUSART_OverrunErrorHandler = interruptHandler;
  3205                           
  3206                           ;incstack = 0
  3207                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  3208  02B2  0020               	movlb	0	; select bank0
  3209  02B3  0847               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  3210  02B4  00C3               	movwf	_EUSART_OverrunErrorHandler+1
  3211  02B5  0846               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  3212  02B6  00C2               	movwf	_EUSART_OverrunErrorHandler
  3213  02B7  0008               	return
  3214  02B8                     __end_of_EUSART_SetOverrunErrorHandler:	
  3215                           
  3216                           	psect	text11
  3217  02B8                     __ptext11:	
  3218 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3219 ;; Defined at:
  3220 ;;		line 157 in file "mcc_generated_files/eusart.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3223 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;		None
  3226 ;; Return value:  Size  Location     Type
  3227 ;;                  1    wreg      void 
  3228 ;; Registers used:
  3229 ;;		wreg
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3235 ;;      Params:         0       2       0       0       0       0       0       0
  3236 ;;      Locals:         0       0       0       0       0       0       0       0
  3237 ;;      Temps:          0       0       0       0       0       0       0       0
  3238 ;;      Totals:         0       2       0       0       0       0       0       0
  3239 ;;Total ram usage:        2 bytes
  3240 ;; Hardware stack levels used:    1
  3241 ;; Hardware stack levels required when called:    7
  3242 ;; This function calls:
  3243 ;;		Nothing
  3244 ;; This function is called by:
  3245 ;;		_EUSART_Initialize
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249                           
  3250                           ;psect for function _EUSART_SetFramingErrorHandler
  3251  02B8                     _EUSART_SetFramingErrorHandler:	
  3252                           
  3253                           ;eusart.c: 158: EUSART_FramingErrorHandler = interruptHandler;
  3254                           
  3255                           ;incstack = 0
  3256                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  3257  02B8  0020               	movlb	0	; select bank0
  3258  02B9  0847               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  3259  02BA  00C5               	movwf	_EUSART_FramingErrorHandler+1
  3260  02BB  0846               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  3261  02BC  00C4               	movwf	_EUSART_FramingErrorHandler
  3262  02BD  0008               	return
  3263  02BE                     __end_of_EUSART_SetFramingErrorHandler:	
  3264                           
  3265                           	psect	text12
  3266  02BE                     __ptext12:	
  3267 ;; *************** function _EUSART_SetErrorHandler *****************
  3268 ;; Defined at:
  3269 ;;		line 165 in file "mcc_generated_files/eusart.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3272 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;		None
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  1    wreg      void 
  3277 ;; Registers used:
  3278 ;;		wreg
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3284 ;;      Params:         0       2       0       0       0       0       0       0
  3285 ;;      Locals:         0       0       0       0       0       0       0       0
  3286 ;;      Temps:          0       0       0       0       0       0       0       0
  3287 ;;      Totals:         0       2       0       0       0       0       0       0
  3288 ;;Total ram usage:        2 bytes
  3289 ;; Hardware stack levels used:    1
  3290 ;; Hardware stack levels required when called:    7
  3291 ;; This function calls:
  3292 ;;		Nothing
  3293 ;; This function is called by:
  3294 ;;		_EUSART_Initialize
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           
  3299                           ;psect for function _EUSART_SetErrorHandler
  3300  02BE                     _EUSART_SetErrorHandler:	
  3301                           
  3302                           ;eusart.c: 166: EUSART_ErrorHandler = interruptHandler;
  3303                           
  3304                           ;incstack = 0
  3305                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  3306  02BE  0020               	movlb	0	; select bank0
  3307  02BF  0847               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  3308  02C0  00C1               	movwf	_EUSART_ErrorHandler+1
  3309  02C1  0846               	movf	EUSART_SetErrorHandler@interruptHandler,w
  3310  02C2  00C0               	movwf	_EUSART_ErrorHandler
  3311  02C3  0008               	return
  3312  02C4                     __end_of_EUSART_SetErrorHandler:	
  3313                           
  3314                           	psect	text13
  3315  0280                     __ptext13:	
  3316 ;; *************** function _ADC_Initialize *****************
  3317 ;; Defined at:
  3318 ;;		line 67 in file "mcc_generated_files/adc.c"
  3319 ;; Parameters:    Size  Location     Type
  3320 ;;		None
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;		None
  3323 ;; Return value:  Size  Location     Type
  3324 ;;                  1    wreg      void 
  3325 ;; Registers used:
  3326 ;;		wreg, status,2
  3327 ;; Tracked objects:
  3328 ;;		On entry : 0/0
  3329 ;;		On exit  : 0/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3332 ;;      Params:         0       0       0       0       0       0       0       0
  3333 ;;      Locals:         0       0       0       0       0       0       0       0
  3334 ;;      Temps:          0       0       0       0       0       0       0       0
  3335 ;;      Totals:         0       0       0       0       0       0       0       0
  3336 ;;Total ram usage:        0 bytes
  3337 ;; Hardware stack levels used:    1
  3338 ;; Hardware stack levels required when called:    7
  3339 ;; This function calls:
  3340 ;;		Nothing
  3341 ;; This function is called by:
  3342 ;;		_SYSTEM_Initialize
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           
  3346                           
  3347                           ;psect for function _ADC_Initialize
  3348  0280                     _ADC_Initialize:	
  3349                           
  3350                           ;adc.c: 72: ADCON0 = 0x01;
  3351                           
  3352                           ;incstack = 0
  3353                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3354  0280  3001               	movlw	1
  3355  0281  0021               	movlb	1	; select bank1
  3356  0282  009D               	movwf	29	;volatile
  3357                           
  3358                           ;adc.c: 75: ADCON1 = 0x40;
  3359  0283  3040               	movlw	64
  3360  0284  009E               	movwf	30	;volatile
  3361                           
  3362                           ;adc.c: 78: ADCON2 = 0x00;
  3363  0285  019F               	clrf	31	;volatile
  3364                           
  3365                           ;adc.c: 81: ADRESL = 0x00;
  3366  0286  019B               	clrf	27	;volatile
  3367                           
  3368                           ;adc.c: 84: ADRESH = 0x00;
  3369  0287  019C               	clrf	28	;volatile
  3370  0288  0008               	return
  3371  0289                     __end_of_ADC_Initialize:	
  3372                           
  3373                           	psect	intentry
  3374  0004                     __pintentry:	
  3375 ;; *************** function _INTERRUPT_InterruptManager *****************
  3376 ;; Defined at:
  3377 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3378 ;; Parameters:    Size  Location     Type
  3379 ;;		None
  3380 ;; Auto vars:     Size  Location     Type
  3381 ;;		None
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  1    wreg      void 
  3384 ;; Registers used:
  3385 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3391 ;;      Params:         0       0       0       0       0       0       0       0
  3392 ;;      Locals:         0       0       0       0       0       0       0       0
  3393 ;;      Temps:          1       0       0       0       0       0       0       0
  3394 ;;      Totals:         1       0       0       0       0       0       0       0
  3395 ;;Total ram usage:        1 bytes
  3396 ;; Hardware stack levels used:    1
  3397 ;; Hardware stack levels required when called:    6
  3398 ;; This function calls:
  3399 ;;		Absolute function
  3400 ;;		_I2C_MasterIsr
  3401 ;;		_TMR2_ISR
  3402 ;; This function is called by:
  3403 ;;		Interrupt level 1
  3404 ;; This function uses a non-reentrant model
  3405 ;;
  3406                           
  3407  0004                     _INTERRUPT_InterruptManager:	
  3408                           
  3409                           ;incstack = 0
  3410  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3411                           
  3412                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3413  0005  3180               	pagesel	$
  3414  0006  0020               	movlb	0	; select bank0
  3415  0007  087F               	movf	127,w
  3416  0008  00F7               	movwf	??_INTERRUPT_InterruptManager
  3417                           
  3418                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
  3419  0009  1F0B               	btfss	11,6	;volatile
  3420  000A  282B               	goto	i1l610
  3421                           
  3422                           ;interrupt_manager.c: 56: {
  3423                           ;interrupt_manager.c: 57: if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
  3424  000B  0021               	movlb	1	; select bank1
  3425  000C  1D92               	btfss	18,3	;volatile
  3426  000D  2817               	goto	i1l603
  3427  000E  0020               	movlb	0	; select bank0
  3428  000F  1D92               	btfss	18,3	;volatile
  3429  0010  2817               	goto	i1l603
  3430                           
  3431                           ;interrupt_manager.c: 58: {
  3432                           ;interrupt_manager.c: 59: MSSP_InterruptHandler();
  3433  0011  087D               	movf	_MSSP_InterruptHandler+1,w
  3434  0012  008A               	movwf	10
  3435  0013  087C               	movf	_MSSP_InterruptHandler,w
  3436  0014  000A               	callw
  3437  0015  3180               	pagesel	$
  3438                           
  3439                           ;interrupt_manager.c: 60: }
  3440  0016  282B               	goto	i1l610
  3441  0017                     i1l603:	
  3442                           
  3443                           ;interrupt_manager.c: 61: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
  3444  0017  0021               	movlb	1	; select bank1
  3445  0018  1D91               	btfss	17,3	;volatile
  3446  0019  2823               	goto	i1l605
  3447  001A  0020               	movlb	0	; select bank0
  3448  001B  1D91               	btfss	17,3	;volatile
  3449  001C  2823               	goto	i1l605
  3450                           
  3451                           ;interrupt_manager.c: 62: {
  3452                           ;interrupt_manager.c: 63: MSSP_InterruptHandler();
  3453  001D  087D               	movf	_MSSP_InterruptHandler+1,w
  3454  001E  008A               	movwf	10
  3455  001F  087C               	movf	_MSSP_InterruptHandler,w
  3456  0020  000A               	callw
  3457  0021  3180               	pagesel	$
  3458                           
  3459                           ;interrupt_manager.c: 64: }
  3460  0022  282B               	goto	i1l610
  3461  0023                     i1l605:	
  3462                           
  3463                           ;interrupt_manager.c: 65: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  3464  0023  0021               	movlb	1	; select bank1
  3465  0024  1C91               	btfss	17,1	;volatile
  3466  0025  282B               	goto	i1l610
  3467  0026  0020               	movlb	0	; select bank0
  3468  0027  1C91               	btfss	17,1	;volatile
  3469  0028  282B               	goto	i1l610
  3470                           
  3471                           ;interrupt_manager.c: 66: {
  3472                           ;interrupt_manager.c: 67: TMR2_ISR();
  3473  0029  3181  21FB         	fcall	_TMR2_ISR
  3474  002B                     i1l610:	
  3475                           ;interrupt_manager.c: 74: else
  3476                           ;interrupt_manager.c: 75: {
  3477                           
  3478                           ;interrupt_manager.c: 72: }
  3479                           ;interrupt_manager.c: 73: }
  3480                           
  3481                           ;interrupt_manager.c: 69: else
  3482                           ;interrupt_manager.c: 70: {
  3483                           
  3484                           ;interrupt_manager.c: 68: }
  3485                           
  3486  002B  0877               	movf	??_INTERRUPT_InterruptManager,w
  3487  002C  0020               	movlb	0	; select bank0
  3488  002D  00FF               	movwf	127
  3489  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3490  002F  0009               	retfie
  3491  0030                     __end_of_INTERRUPT_InterruptManager:	
  3492                           
  3493                           	psect	text15
  3494  01FB                     __ptext15:	
  3495 ;; *************** function _TMR2_ISR *****************
  3496 ;; Defined at:
  3497 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;		None
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;		None
  3502 ;; Return value:  Size  Location     Type
  3503 ;;                  1    wreg      void 
  3504 ;; Registers used:
  3505 ;;		wreg, status,2, status,0, pclath, cstack
  3506 ;; Tracked objects:
  3507 ;;		On entry : 0/0
  3508 ;;		On exit  : 0/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3511 ;;      Params:         0       0       0       0       0       0       0       0
  3512 ;;      Locals:         0       0       0       0       0       0       0       0
  3513 ;;      Temps:          0       0       0       0       0       0       0       0
  3514 ;;      Totals:         0       0       0       0       0       0       0       0
  3515 ;;Total ram usage:        0 bytes
  3516 ;; Hardware stack levels used:    1
  3517 ;; Hardware stack levels required when called:    2
  3518 ;; This function calls:
  3519 ;;		_TMR2_CallBack
  3520 ;; This function is called by:
  3521 ;;		_INTERRUPT_InterruptManager
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           
  3525                           
  3526                           ;psect for function _TMR2_ISR
  3527  01FB                     _TMR2_ISR:	
  3528                           
  3529                           ;tmr2.c: 121: static volatile unsigned int CountCallBack = 0;
  3530                           ;tmr2.c: 124: PIR1bits.TMR2IF = 0;
  3531                           
  3532                           ;incstack = 0
  3533                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  3534  01FB  0020               	movlb	0	; select bank0
  3535  01FC  1091               	bcf	17,1	;volatile
  3536                           
  3537                           ;tmr2.c: 127: if (++CountCallBack >= 5)
  3538  01FD  3001               	movlw	1
  3539  01FE  07FA               	addwf	TMR2_ISR@CountCallBack,f	;volatile
  3540  01FF  3000               	movlw	0
  3541  0200  3DFB               	addwfc	TMR2_ISR@CountCallBack+1,f	;volatile
  3542  0201  3000               	movlw	0
  3543  0202  027B               	subwf	TMR2_ISR@CountCallBack+1,w	;volatile
  3544  0203  3005               	movlw	5
  3545  0204  1903               	skipnz
  3546  0205  027A               	subwf	TMR2_ISR@CountCallBack,w	;volatile
  3547  0206  1C03               	skipc
  3548  0207  0008               	return
  3549                           
  3550                           ;tmr2.c: 128: {
  3551                           ;tmr2.c: 130: TMR2_CallBack();
  3552  0208  3182  226C         	fcall	_TMR2_CallBack
  3553                           
  3554                           ;tmr2.c: 133: CountCallBack = 0;
  3555  020A  01FA               	clrf	TMR2_ISR@CountCallBack	;volatile
  3556  020B  01FB               	clrf	TMR2_ISR@CountCallBack+1	;volatile
  3557  020C  0008               	return
  3558  020D                     __end_of_TMR2_ISR:	
  3559                           
  3560                           	psect	text16
  3561  026C                     __ptext16:	
  3562 ;; *************** function _TMR2_CallBack *****************
  3563 ;; Defined at:
  3564 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;		None
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;		None
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  1    wreg      void 
  3571 ;; Registers used:
  3572 ;;		wreg, status,2, status,0, pclath, cstack
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3578 ;;      Params:         0       0       0       0       0       0       0       0
  3579 ;;      Locals:         0       0       0       0       0       0       0       0
  3580 ;;      Temps:          0       0       0       0       0       0       0       0
  3581 ;;      Totals:         0       0       0       0       0       0       0       0
  3582 ;;Total ram usage:        0 bytes
  3583 ;; Hardware stack levels used:    1
  3584 ;; Hardware stack levels required when called:    1
  3585 ;; This function calls:
  3586 ;;		Absolute function
  3587 ;;		_TMR2_DefaultInterruptHandler
  3588 ;; This function is called by:
  3589 ;;		_TMR2_ISR
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           
  3594                           ;psect for function _TMR2_CallBack
  3595  026C                     _TMR2_CallBack:	
  3596                           
  3597                           ;tmr2.c: 141: if(TMR2_InterruptHandler)
  3598                           
  3599                           ;incstack = 0
  3600                           ; Regs used in _TMR2_CallBack: [wreg+status,2+status,0+pclath+cstack]
  3601  026C  0020               	movlb	0	; select bank0
  3602  026D  083E               	movf	_TMR2_InterruptHandler,w
  3603  026E  043F               	iorwf	_TMR2_InterruptHandler+1,w
  3604  026F  1903               	btfsc	3,2
  3605  0270  0008               	return
  3606                           
  3607                           ;tmr2.c: 142: {
  3608                           ;tmr2.c: 143: TMR2_InterruptHandler();
  3609  0271  083F               	movf	_TMR2_InterruptHandler+1,w
  3610  0272  008A               	movwf	10
  3611  0273  083E               	movf	_TMR2_InterruptHandler,w
  3612  0274  000A               	callw
  3613  0275  3182               	pagesel	$
  3614  0276  0008               	return
  3615  0277                     __end_of_TMR2_CallBack:	
  3616                           
  3617                           	psect	text17
  3618  0324                     __ptext17:	
  3619 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  3620 ;; Defined at:
  3621 ;;		line 151 in file "mcc_generated_files/tmr2.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;		None
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;		None
  3626 ;; Return value:  Size  Location     Type
  3627 ;;                  1    wreg      void 
  3628 ;; Registers used:
  3629 ;;		None
  3630 ;; Tracked objects:
  3631 ;;		On entry : 0/0
  3632 ;;		On exit  : 0/0
  3633 ;;		Unchanged: 0/0
  3634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3635 ;;      Params:         0       0       0       0       0       0       0       0
  3636 ;;      Locals:         0       0       0       0       0       0       0       0
  3637 ;;      Temps:          0       0       0       0       0       0       0       0
  3638 ;;      Totals:         0       0       0       0       0       0       0       0
  3639 ;;Total ram usage:        0 bytes
  3640 ;; Hardware stack levels used:    1
  3641 ;; This function calls:
  3642 ;;		Nothing
  3643 ;; This function is called by:
  3644 ;;		_TMR2_Initialize
  3645 ;;		_TMR2_CallBack
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           
  3650                           ;psect for function _TMR2_DefaultInterruptHandler
  3651  0324                     _TMR2_DefaultInterruptHandler:	
  3652                           
  3653                           ;incstack = 0
  3654                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  3655  0324  0008               	return
  3656  0325                     __end_of_TMR2_DefaultInterruptHandler:	
  3657                           
  3658                           	psect	text18
  3659  030B                     __ptext18:	
  3660 ;; *************** function _I2C_MasterIsr *****************
  3661 ;; Defined at:
  3662 ;;		line 318 in file "mcc_generated_files/i2c_master.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;		None
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;		None
  3667 ;; Return value:  Size  Location     Type
  3668 ;;                  1    wreg      void 
  3669 ;; Registers used:
  3670 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3671 ;; Tracked objects:
  3672 ;;		On entry : 0/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3676 ;;      Params:         0       0       0       0       0       0       0       0
  3677 ;;      Locals:         0       0       0       0       0       0       0       0
  3678 ;;      Temps:          0       0       0       0       0       0       0       0
  3679 ;;      Totals:         0       0       0       0       0       0       0       0
  3680 ;;Total ram usage:        0 bytes
  3681 ;; Hardware stack levels used:    1
  3682 ;; Hardware stack levels required when called:    5
  3683 ;; This function calls:
  3684 ;;		_I2C_MasterFsm
  3685 ;; This function is called by:
  3686 ;;		_I2C_Open
  3687 ;;		_INTERRUPT_InterruptManager
  3688 ;; This function uses a non-reentrant model
  3689 ;;
  3690                           
  3691                           
  3692                           ;psect for function _I2C_MasterIsr
  3693  030B                     _I2C_MasterIsr:	
  3694                           
  3695                           ;i2c_master.c: 320: I2C_MasterFsm();
  3696                           
  3697                           ;incstack = 0
  3698                           ; Regs used in _I2C_MasterIsr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3699  030B  3180  20C8         	fcall	_I2C_MasterFsm
  3700  030D  0008               	return
  3701  030E                     __end_of_I2C_MasterIsr:	
  3702                           
  3703                           	psect	text19
  3704  00C8                     __ptext19:	
  3705 ;; *************** function _I2C_MasterFsm *****************
  3706 ;; Defined at:
  3707 ;;		line 323 in file "mcc_generated_files/i2c_master.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;		None
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;		None
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  1    wreg      void 
  3714 ;; Registers used:
  3715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3721 ;;      Params:         0       0       0       0       0       0       0       0
  3722 ;;      Locals:         0       0       0       0       0       0       0       0
  3723 ;;      Temps:          3       0       0       0       0       0       0       0
  3724 ;;      Totals:         3       0       0       0       0       0       0       0
  3725 ;;Total ram usage:        3 bytes
  3726 ;; Hardware stack levels used:    1
  3727 ;; Hardware stack levels required when called:    4
  3728 ;; This function calls:
  3729 ;;		_I2C_DO_ADDRESS_NACK
  3730 ;;		_I2C_DO_IDLE
  3731 ;;		_I2C_DO_RCEN
  3732 ;;		_I2C_DO_RESET
  3733 ;;		_I2C_DO_RX
  3734 ;;		_I2C_DO_RX_ACK
  3735 ;;		_I2C_DO_RX_NACK_RESTART
  3736 ;;		_I2C_DO_RX_NACK_STOP
  3737 ;;		_I2C_DO_SEND_ADR_READ
  3738 ;;		_I2C_DO_SEND_ADR_WRITE
  3739 ;;		_I2C_DO_SEND_RESTART
  3740 ;;		_I2C_DO_SEND_RESTART_READ
  3741 ;;		_I2C_DO_SEND_RESTART_WRITE
  3742 ;;		_I2C_DO_SEND_STOP
  3743 ;;		_I2C_DO_TX
  3744 ;;		_I2C_DO_TX_EMPTY
  3745 ;;		_I2C_MasterClearIrq
  3746 ;;		_I2C_MasterIsNack
  3747 ;; This function is called by:
  3748 ;;		_I2C_MasterIsr
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751                           
  3752                           
  3753                           ;psect for function _I2C_MasterFsm
  3754  00C8                     _I2C_MasterFsm:	
  3755                           
  3756                           ;i2c_master.c: 325: I2C_MasterClearIrq();
  3757                           
  3758                           ;incstack = 0
  3759                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3760  00C8  3183  230E  3180   	fcall	_I2C_MasterClearIrq
  3761                           
  3762                           ;i2c_master.c: 327: if(I2C_Status.addressNackCheck && I2C_MasterIsNack())
  3763  00CB  0020               	movlb	0	; select bank0
  3764  00CC  1C3C               	btfss	_I2C_Status+28,0
  3765  00CD  28D9               	goto	i1l2601
  3766  00CE  3182  22CA  3180   	fcall	_I2C_MasterIsNack
  3767  00D1  3A00               	xorlw	0
  3768  00D2  1903               	skipnz
  3769  00D3  28D9               	goto	i1l2601
  3770                           
  3771                           ;i2c_master.c: 328: {
  3772                           ;i2c_master.c: 329: I2C_Status.state = I2C_ADDRESS_NACK;
  3773  00D4  300F               	movlw	15
  3774  00D5  00F4               	movwf	??_I2C_MasterFsm
  3775  00D6  0874               	movf	??_I2C_MasterFsm,w
  3776  00D7  0020               	movlb	0	; select bank0
  3777  00D8  00BA               	movwf	_I2C_Status+26
  3778  00D9                     i1l2601:	
  3779                           
  3780                           ;i2c_master.c: 330: }
  3781                           ;i2c_master.c: 331: I2C_Status.state = fsmStateTable[I2C_Status.state]();
  3782  00D9  0020               	movlb	0	; select bank0
  3783  00DA  083A               	movf	_I2C_Status+26,w
  3784  00DB  00F4               	movwf	??_I2C_MasterFsm
  3785  00DC  01F5               	clrf	??_I2C_MasterFsm+1
  3786  00DD  35F4               	lslf	??_I2C_MasterFsm,f
  3787  00DE  0DF5               	rlf	??_I2C_MasterFsm+1,f
  3788  00DF  3080               	movlw	low (_fsmStateTable| (0+32768))
  3789  00E0  0774               	addwf	??_I2C_MasterFsm,w
  3790  00E1  0084               	movwf	4
  3791  00E2  3081               	movlw	high (_fsmStateTable| (0+32768))
  3792  00E3  3D75               	addwfc	??_I2C_MasterFsm+1,w
  3793  00E4  0085               	movwf	5
  3794  00E5  3F01               	moviw [1]fsr0
  3795  00E6  008A               	movwf	10
  3796  00E7  3F00               	moviw [0]fsr0
  3797  00E8  000A               	callw
  3798  00E9  3180               	pagesel	$
  3799  00EA  00F6               	movwf	??_I2C_MasterFsm+2
  3800  00EB  0876               	movf	??_I2C_MasterFsm+2,w
  3801  00EC  0020               	movlb	0	; select bank0
  3802  00ED  00BA               	movwf	_I2C_Status+26
  3803  00EE  0008               	return
  3804  00EF                     __end_of_I2C_MasterFsm:	
  3805                           
  3806                           	psect	text20
  3807  030E                     __ptext20:	
  3808 ;; *************** function _I2C_MasterClearIrq *****************
  3809 ;; Defined at:
  3810 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
  3811 ;; Parameters:    Size  Location     Type
  3812 ;;		None
  3813 ;; Auto vars:     Size  Location     Type
  3814 ;;		None
  3815 ;; Return value:  Size  Location     Type
  3816 ;;                  1    wreg      void 
  3817 ;; Registers used:
  3818 ;;		None
  3819 ;; Tracked objects:
  3820 ;;		On entry : 0/0
  3821 ;;		On exit  : 0/0
  3822 ;;		Unchanged: 0/0
  3823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3824 ;;      Params:         0       0       0       0       0       0       0       0
  3825 ;;      Locals:         0       0       0       0       0       0       0       0
  3826 ;;      Temps:          0       0       0       0       0       0       0       0
  3827 ;;      Totals:         0       0       0       0       0       0       0       0
  3828 ;;Total ram usage:        0 bytes
  3829 ;; Hardware stack levels used:    1
  3830 ;; This function calls:
  3831 ;;		Nothing
  3832 ;; This function is called by:
  3833 ;;		_I2C_MasterFsm
  3834 ;;		_I2C_Open
  3835 ;;		_I2C_Close
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839                           
  3840                           ;psect for function _I2C_MasterClearIrq
  3841  030E                     _I2C_MasterClearIrq:	
  3842                           
  3843                           ;i2c_master.c: 644: PIR1bits.SSP1IF = 0;
  3844                           
  3845                           ;incstack = 0
  3846                           ; Regs used in _I2C_MasterClearIrq: []
  3847  030E  0020               	movlb	0	; select bank0
  3848  030F  1191               	bcf	17,3	;volatile
  3849  0310  0008               	return
  3850  0311                     __end_of_I2C_MasterClearIrq:	
  3851                           
  3852                           	psect	text21
  3853  015D                     __ptext21:	
  3854 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  3855 ;; Defined at:
  3856 ;;		line 501 in file "mcc_generated_files/i2c_master.c"
  3857 ;; Parameters:    Size  Location     Type
  3858 ;;		None
  3859 ;; Auto vars:     Size  Location     Type
  3860 ;;		None
  3861 ;; Return value:  Size  Location     Type
  3862 ;;                  1    wreg      enum E4221
  3863 ;; Registers used:
  3864 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3865 ;; Tracked objects:
  3866 ;;		On entry : 0/0
  3867 ;;		On exit  : 0/0
  3868 ;;		Unchanged: 0/0
  3869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3870 ;;      Params:         0       0       0       0       0       0       0       0
  3871 ;;      Locals:         0       0       0       0       0       0       0       0
  3872 ;;      Temps:          1       0       0       0       0       0       0       0
  3873 ;;      Totals:         1       0       0       0       0       0       0       0
  3874 ;;Total ram usage:        1 bytes
  3875 ;; Hardware stack levels used:    1
  3876 ;; Hardware stack levels required when called:    3
  3877 ;; This function calls:
  3878 ;;		Absolute function
  3879 ;;		_I2C_CallbackReturnReset
  3880 ;;		_I2C_CallbackReturnStop
  3881 ;;		_I2C_DO_SEND_RESTART
  3882 ;;		_I2C_DO_SEND_STOP
  3883 ;;		_rd1RegCompleteHandler
  3884 ;;		_rd2RegCompleteHandler
  3885 ;;		_rdBlkRegCompleteHandler
  3886 ;;		_wr1RegCompleteHandler
  3887 ;;		_wr2RegCompleteHandler
  3888 ;; This function is called by:
  3889 ;;		_I2C_MasterFsm
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893                           
  3894                           ;psect for function _I2C_DO_ADDRESS_NACK
  3895  015D                     _I2C_DO_ADDRESS_NACK:	
  3896                           
  3897                           ;i2c_master.c: 503: I2C_Status.addressNackCheck = 0;
  3898                           
  3899                           ;incstack = 0
  3900                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3901  015D  0020               	movlb	0	; select bank0
  3902  015E  103C               	bcf	_I2C_Status+28,0
  3903                           
  3904                           ;i2c_master.c: 504: I2C_Status.error = I2C_FAIL;
  3905  015F  3002               	movlw	2
  3906  0160  00F0               	movwf	??_I2C_DO_ADDRESS_NACK
  3907  0161  0870               	movf	??_I2C_DO_ADDRESS_NACK,w
  3908  0162  00BB               	movwf	_I2C_Status+27
  3909                           
  3910                           ;i2c_master.c: 505: switch(I2C_Status.callbackTable[I2C_ADDR_NACK](I2C_Status.callbackPa
      +                          yload[I2C_ADDR_NACK]))
  3911  0163  296A               	goto	i1l2591
  3912  0164                     i1l2581:	
  3913                           ;i2c_master.c: 506: {
  3914                           ;i2c_master.c: 507: case I2C_RESTART_READ:
  3915                           
  3916                           
  3917                           ;i2c_master.c: 508: case I2C_RESTART_WRITE:
  3918                           ;i2c_master.c: 509: return I2C_DO_SEND_RESTART();
  3919  0164  3182  22F7         	fcall	_I2C_DO_SEND_RESTART
  3920  0166  0008               	return
  3921  0167                     i1l2585:	
  3922                           ;i2c_master.c: 510: default:
  3923                           
  3924                           
  3925                           ;i2c_master.c: 511: return I2C_DO_SEND_STOP();
  3926  0167  3182  22F3         	fcall	_I2C_DO_SEND_STOP
  3927                           
  3928                           ;i2c_master.c: 512: }
  3929  0169  0008               	return
  3930  016A                     i1l2591:	
  3931  016A  0020               	movlb	0	; select bank0
  3932  016B  082E               	movf	low ((_I2C_Status| 0+14)),w
  3933  016C  00F0               	movwf	??_I2C_DO_ADDRESS_NACK
  3934  016D  0870               	movf	??_I2C_DO_ADDRESS_NACK,w
  3935  016E  00C7               	movwf	rdBlkRegCompleteHandler@ptr
  3936  016F  3004               	movlw	4
  3937  0170  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  3938  0171  0086               	movwf	6
  3939  0172  0187               	clrf	7
  3940  0173  3F41               	moviw [1]fsr1
  3941  0174  008A               	movwf	10
  3942  0175  3F40               	moviw [0]fsr1
  3943  0176  000A               	callw
  3944  0177  3181               	pagesel	$
  3945                           
  3946                           ; Switch size 1, requested type "space"
  3947                           ; Number of cases is 2, Range of values is 2 to 3
  3948                           ; switch strategies available:
  3949                           ; Name         Instructions Cycles
  3950                           ; simple_byte            7     4 (average)
  3951                           ; direct_byte           13     9 (fixed)
  3952                           ; jumptable            263     9 (fixed)
  3953                           ;	Chosen strategy is simple_byte
  3954  0178  3A02               	xorlw	2	; case 2
  3955  0179  1903               	skipnz
  3956  017A  2964               	goto	i1l2581
  3957  017B  3A01               	xorlw	1	; case 3
  3958  017C  1903               	skipnz
  3959  017D  2964               	goto	i1l2581
  3960  017E  2967               	goto	i1l2585
  3961  017F  0008               	return
  3962  0180                     __end_of_I2C_DO_ADDRESS_NACK:	
  3963                           
  3964                           	psect	text22
  3965  02D0                     __ptext22:	
  3966 ;; *************** function _I2C_DO_RESET *****************
  3967 ;; Defined at:
  3968 ;;		line 495 in file "mcc_generated_files/i2c_master.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;		None
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;		None
  3973 ;; Return value:  Size  Location     Type
  3974 ;;                  1    wreg      enum E4221
  3975 ;; Registers used:
  3976 ;;		wreg, status,2
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3982 ;;      Params:         0       0       0       0       0       0       0       0
  3983 ;;      Locals:         0       0       0       0       0       0       0       0
  3984 ;;      Temps:          0       0       0       0       0       0       0       0
  3985 ;;      Totals:         0       0       0       0       0       0       0       0
  3986 ;;Total ram usage:        0 bytes
  3987 ;; Hardware stack levels used:    1
  3988 ;; This function calls:
  3989 ;;		Nothing
  3990 ;; This function is called by:
  3991 ;;		_I2C_MasterFsm
  3992 ;; This function uses a non-reentrant model
  3993 ;;
  3994                           
  3995                           
  3996                           ;psect for function _I2C_DO_RESET
  3997  02D0                     _I2C_DO_RESET:	
  3998                           
  3999                           ;i2c_master.c: 497: I2C_Status.busy = 0;
  4000                           
  4001                           ;incstack = 0
  4002                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
  4003  02D0  0020               	movlb	0	; select bank0
  4004  02D1  10BC               	bcf	_I2C_Status+28,1
  4005                           
  4006                           ;i2c_master.c: 498: I2C_Status.error = I2C_NOERR;
  4007  02D2  01BB               	clrf	_I2C_Status+27
  4008                           
  4009                           ;i2c_master.c: 499: return I2C_RESET;
  4010  02D3  300E               	movlw	14
  4011  02D4  0008               	return
  4012  02D5                     __end_of_I2C_DO_RESET:	
  4013                           
  4014                           	psect	text23
  4015  02E7                     __ptext23:	
  4016 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  4017 ;; Defined at:
  4018 ;;		line 489 in file "mcc_generated_files/i2c_master.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;		None
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;		None
  4023 ;; Return value:  Size  Location     Type
  4024 ;;                  1    wreg      enum E4221
  4025 ;; Registers used:
  4026 ;;		wreg, status,2, status,0, pclath, cstack
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4032 ;;      Params:         0       0       0       0       0       0       0       0
  4033 ;;      Locals:         0       0       0       0       0       0       0       0
  4034 ;;      Temps:          0       0       0       0       0       0       0       0
  4035 ;;      Totals:         0       0       0       0       0       0       0       0
  4036 ;;Total ram usage:        0 bytes
  4037 ;; Hardware stack levels used:    1
  4038 ;; Hardware stack levels required when called:    1
  4039 ;; This function calls:
  4040 ;;		_I2C_MasterSendNack
  4041 ;; This function is called by:
  4042 ;;		_I2C_DO_RX
  4043 ;;		_I2C_MasterFsm
  4044 ;; This function uses a non-reentrant model
  4045 ;;
  4046                           
  4047                           
  4048                           ;psect for function _I2C_DO_RX_NACK_RESTART
  4049  02E7                     _I2C_DO_RX_NACK_RESTART:	
  4050                           
  4051                           ;i2c_master.c: 491: I2C_MasterSendNack();
  4052                           
  4053                           ;incstack = 0
  4054                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  4055  02E7  3183  2307         	fcall	_I2C_MasterSendNack
  4056                           
  4057                           ;i2c_master.c: 492: return I2C_SEND_RESTART;
  4058  02E9  3009               	movlw	9
  4059  02EA  0008               	return
  4060  02EB                     __end_of_I2C_DO_RX_NACK_RESTART:	
  4061                           
  4062                           	psect	text24
  4063  02EB                     __ptext24:	
  4064 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  4065 ;; Defined at:
  4066 ;;		line 483 in file "mcc_generated_files/i2c_master.c"
  4067 ;; Parameters:    Size  Location     Type
  4068 ;;		None
  4069 ;; Auto vars:     Size  Location     Type
  4070 ;;		None
  4071 ;; Return value:  Size  Location     Type
  4072 ;;                  1    wreg      enum E4221
  4073 ;; Registers used:
  4074 ;;		wreg, status,2, status,0, pclath, cstack
  4075 ;; Tracked objects:
  4076 ;;		On entry : 0/0
  4077 ;;		On exit  : 0/0
  4078 ;;		Unchanged: 0/0
  4079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4080 ;;      Params:         0       0       0       0       0       0       0       0
  4081 ;;      Locals:         0       0       0       0       0       0       0       0
  4082 ;;      Temps:          0       0       0       0       0       0       0       0
  4083 ;;      Totals:         0       0       0       0       0       0       0       0
  4084 ;;Total ram usage:        0 bytes
  4085 ;; Hardware stack levels used:    1
  4086 ;; Hardware stack levels required when called:    1
  4087 ;; This function calls:
  4088 ;;		_I2C_MasterSendNack
  4089 ;; This function is called by:
  4090 ;;		_I2C_DO_RX
  4091 ;;		_I2C_MasterFsm
  4092 ;; This function uses a non-reentrant model
  4093 ;;
  4094                           
  4095                           
  4096                           ;psect for function _I2C_DO_RX_NACK_STOP
  4097  02EB                     _I2C_DO_RX_NACK_STOP:	
  4098                           
  4099                           ;i2c_master.c: 485: I2C_MasterSendNack();
  4100                           
  4101                           ;incstack = 0
  4102                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  4103  02EB  3183  2307         	fcall	_I2C_MasterSendNack
  4104                           
  4105                           ;i2c_master.c: 486: return I2C_SEND_STOP;
  4106  02ED  300A               	movlw	10
  4107  02EE  0008               	return
  4108  02EF                     __end_of_I2C_DO_RX_NACK_STOP:	
  4109                           
  4110                           	psect	text25
  4111  02EF                     __ptext25:	
  4112 ;; *************** function _I2C_DO_RX_ACK *****************
  4113 ;; Defined at:
  4114 ;;		line 476 in file "mcc_generated_files/i2c_master.c"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;		None
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;		None
  4119 ;; Return value:  Size  Location     Type
  4120 ;;                  1    wreg      enum E4221
  4121 ;; Registers used:
  4122 ;;		wreg, status,2, status,0, pclath, cstack
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4128 ;;      Params:         0       0       0       0       0       0       0       0
  4129 ;;      Locals:         0       0       0       0       0       0       0       0
  4130 ;;      Temps:          0       0       0       0       0       0       0       0
  4131 ;;      Totals:         0       0       0       0       0       0       0       0
  4132 ;;Total ram usage:        0 bytes
  4133 ;; Hardware stack levels used:    1
  4134 ;; Hardware stack levels required when called:    1
  4135 ;; This function calls:
  4136 ;;		_I2C_MasterSendAck
  4137 ;; This function is called by:
  4138 ;;		_I2C_MasterFsm
  4139 ;; This function uses a non-reentrant model
  4140 ;;
  4141                           
  4142                           
  4143                           ;psect for function _I2C_DO_RX_ACK
  4144  02EF                     _I2C_DO_RX_ACK:	
  4145                           
  4146                           ;i2c_master.c: 478: I2C_MasterSendAck();
  4147                           
  4148                           ;incstack = 0
  4149                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
  4150  02EF  3183  2303         	fcall	_I2C_MasterSendAck
  4151                           
  4152                           ;i2c_master.c: 479: return I2C_RCEN;
  4153  02F1  3005               	movlw	5
  4154  02F2  0008               	return
  4155  02F3                     __end_of_I2C_DO_RX_ACK:	
  4156                           
  4157                           	psect	text26
  4158  02F3                     __ptext26:	
  4159 ;; *************** function _I2C_DO_SEND_STOP *****************
  4160 ;; Defined at:
  4161 ;;		line 470 in file "mcc_generated_files/i2c_master.c"
  4162 ;; Parameters:    Size  Location     Type
  4163 ;;		None
  4164 ;; Auto vars:     Size  Location     Type
  4165 ;;		None
  4166 ;; Return value:  Size  Location     Type
  4167 ;;                  1    wreg      enum E4221
  4168 ;; Registers used:
  4169 ;;		wreg, status,2, status,0, pclath, cstack
  4170 ;; Tracked objects:
  4171 ;;		On entry : 0/0
  4172 ;;		On exit  : 0/0
  4173 ;;		Unchanged: 0/0
  4174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4175 ;;      Params:         0       0       0       0       0       0       0       0
  4176 ;;      Locals:         0       0       0       0       0       0       0       0
  4177 ;;      Temps:          0       0       0       0       0       0       0       0
  4178 ;;      Totals:         0       0       0       0       0       0       0       0
  4179 ;;Total ram usage:        0 bytes
  4180 ;; Hardware stack levels used:    1
  4181 ;; Hardware stack levels required when called:    1
  4182 ;; This function calls:
  4183 ;;		_I2C_MasterStop
  4184 ;; This function is called by:
  4185 ;;		_I2C_DO_TX
  4186 ;;		_I2C_DO_TX_EMPTY
  4187 ;;		_I2C_DO_ADDRESS_NACK
  4188 ;;		_I2C_MasterFsm
  4189 ;; This function uses a non-reentrant model
  4190 ;;
  4191                           
  4192                           
  4193                           ;psect for function _I2C_DO_SEND_STOP
  4194  02F3                     _I2C_DO_SEND_STOP:	
  4195                           
  4196                           ;i2c_master.c: 472: I2C_MasterStop();
  4197                           
  4198                           ;incstack = 0
  4199                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  4200  02F3  3183  231A         	fcall	_I2C_MasterStop
  4201                           
  4202                           ;i2c_master.c: 473: return I2C_IDLE;
  4203  02F5  3000               	movlw	0
  4204  02F6  0008               	return
  4205  02F7                     __end_of_I2C_DO_SEND_STOP:	
  4206                           
  4207                           	psect	text27
  4208  02F7                     __ptext27:	
  4209 ;; *************** function _I2C_DO_SEND_RESTART *****************
  4210 ;; Defined at:
  4211 ;;		line 464 in file "mcc_generated_files/i2c_master.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;		None
  4214 ;; Auto vars:     Size  Location     Type
  4215 ;;		None
  4216 ;; Return value:  Size  Location     Type
  4217 ;;                  1    wreg      enum E4221
  4218 ;; Registers used:
  4219 ;;		wreg, status,2, status,0, pclath, cstack
  4220 ;; Tracked objects:
  4221 ;;		On entry : 0/0
  4222 ;;		On exit  : 0/0
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4225 ;;      Params:         0       0       0       0       0       0       0       0
  4226 ;;      Locals:         0       0       0       0       0       0       0       0
  4227 ;;      Temps:          0       0       0       0       0       0       0       0
  4228 ;;      Totals:         0       0       0       0       0       0       0       0
  4229 ;;Total ram usage:        0 bytes
  4230 ;; Hardware stack levels used:    1
  4231 ;; Hardware stack levels required when called:    1
  4232 ;; This function calls:
  4233 ;;		_I2C_MasterEnableRestart
  4234 ;; This function is called by:
  4235 ;;		_I2C_DO_TX_EMPTY
  4236 ;;		_I2C_DO_ADDRESS_NACK
  4237 ;;		_I2C_MasterFsm
  4238 ;; This function uses a non-reentrant model
  4239 ;;
  4240                           
  4241                           
  4242                           ;psect for function _I2C_DO_SEND_RESTART
  4243  02F7                     _I2C_DO_SEND_RESTART:	
  4244                           
  4245                           ;i2c_master.c: 466: I2C_MasterEnableRestart();
  4246                           
  4247                           ;incstack = 0
  4248                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  4249  02F7  3183  231D         	fcall	_I2C_MasterEnableRestart
  4250                           
  4251                           ;i2c_master.c: 467: return I2C_SEND_ADR_READ;
  4252  02F9  3001               	movlw	1
  4253  02FA  0008               	return
  4254  02FB                     __end_of_I2C_DO_SEND_RESTART:	
  4255                           
  4256                           	psect	text28
  4257  02FB                     __ptext28:	
  4258 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  4259 ;; Defined at:
  4260 ;;		line 457 in file "mcc_generated_files/i2c_master.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;		None
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;		None
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  1    wreg      enum E4221
  4267 ;; Registers used:
  4268 ;;		wreg, status,2, status,0, pclath, cstack
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4274 ;;      Params:         0       0       0       0       0       0       0       0
  4275 ;;      Locals:         0       0       0       0       0       0       0       0
  4276 ;;      Temps:          0       0       0       0       0       0       0       0
  4277 ;;      Totals:         0       0       0       0       0       0       0       0
  4278 ;;Total ram usage:        0 bytes
  4279 ;; Hardware stack levels used:    1
  4280 ;; Hardware stack levels required when called:    1
  4281 ;; This function calls:
  4282 ;;		_I2C_MasterEnableRestart
  4283 ;; This function is called by:
  4284 ;;		_I2C_DO_TX
  4285 ;;		_I2C_MasterFsm
  4286 ;; This function uses a non-reentrant model
  4287 ;;
  4288                           
  4289                           
  4290                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
  4291  02FB                     _I2C_DO_SEND_RESTART_WRITE:	
  4292                           
  4293                           ;i2c_master.c: 459: I2C_MasterEnableRestart();
  4294                           
  4295                           ;incstack = 0
  4296                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  4297  02FB  3183  231D         	fcall	_I2C_MasterEnableRestart
  4298                           
  4299                           ;i2c_master.c: 460: return I2C_SEND_ADR_WRITE;
  4300  02FD  3002               	movlw	2
  4301  02FE  0008               	return
  4302  02FF                     __end_of_I2C_DO_SEND_RESTART_WRITE:	
  4303                           
  4304                           	psect	text29
  4305  02FF                     __ptext29:	
  4306 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  4307 ;; Defined at:
  4308 ;;		line 451 in file "mcc_generated_files/i2c_master.c"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;		None
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;		None
  4313 ;; Return value:  Size  Location     Type
  4314 ;;                  1    wreg      enum E4221
  4315 ;; Registers used:
  4316 ;;		wreg, status,2, status,0, pclath, cstack
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4322 ;;      Params:         0       0       0       0       0       0       0       0
  4323 ;;      Locals:         0       0       0       0       0       0       0       0
  4324 ;;      Temps:          0       0       0       0       0       0       0       0
  4325 ;;      Totals:         0       0       0       0       0       0       0       0
  4326 ;;Total ram usage:        0 bytes
  4327 ;; Hardware stack levels used:    1
  4328 ;; Hardware stack levels required when called:    1
  4329 ;; This function calls:
  4330 ;;		_I2C_MasterEnableRestart
  4331 ;; This function is called by:
  4332 ;;		_I2C_DO_TX
  4333 ;;		_I2C_MasterFsm
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336                           
  4337                           
  4338                           ;psect for function _I2C_DO_SEND_RESTART_READ
  4339  02FF                     _I2C_DO_SEND_RESTART_READ:	
  4340                           
  4341                           ;i2c_master.c: 453: I2C_MasterEnableRestart();
  4342                           
  4343                           ;incstack = 0
  4344                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
  4345  02FF  3183  231D         	fcall	_I2C_MasterEnableRestart
  4346                           
  4347                           ;i2c_master.c: 454: return I2C_SEND_ADR_READ;
  4348  0301  3001               	movlw	1
  4349  0302  0008               	return
  4350  0303                     __end_of_I2C_DO_SEND_RESTART_READ:	
  4351                           
  4352                           	psect	text30
  4353  02C4                     __ptext30:	
  4354 ;; *************** function _I2C_DO_RCEN *****************
  4355 ;; Defined at:
  4356 ;;		line 404 in file "mcc_generated_files/i2c_master.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;		None
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;		None
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  1    wreg      enum E4221
  4363 ;; Registers used:
  4364 ;;		wreg, status,2, status,0, pclath, cstack
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4370 ;;      Params:         0       0       0       0       0       0       0       0
  4371 ;;      Locals:         0       0       0       0       0       0       0       0
  4372 ;;      Temps:          0       0       0       0       0       0       0       0
  4373 ;;      Totals:         0       0       0       0       0       0       0       0
  4374 ;;Total ram usage:        0 bytes
  4375 ;; Hardware stack levels used:    1
  4376 ;; Hardware stack levels required when called:    1
  4377 ;; This function calls:
  4378 ;;		_I2C_MasterStartRx
  4379 ;; This function is called by:
  4380 ;;		_I2C_MasterFsm
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           
  4385                           ;psect for function _I2C_DO_RCEN
  4386  02C4                     _I2C_DO_RCEN:	
  4387                           
  4388                           ;i2c_master.c: 406: I2C_Status.addressNackCheck = 0;
  4389                           
  4390                           ;incstack = 0
  4391                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
  4392  02C4  0020               	movlb	0	; select bank0
  4393  02C5  103C               	bcf	_I2C_Status+28,0
  4394                           
  4395                           ;i2c_master.c: 407: I2C_MasterStartRx();
  4396  02C6  3183  2317         	fcall	_I2C_MasterStartRx
  4397                           
  4398                           ;i2c_master.c: 408: return I2C_RX;
  4399  02C8  3004               	movlw	4
  4400  02C9  0008               	return
  4401  02CA                     __end_of_I2C_DO_RCEN:	
  4402                           
  4403                           	psect	text31
  4404  008E                     __ptext31:	
  4405 ;; *************** function _I2C_DO_RX *****************
  4406 ;; Defined at:
  4407 ;;		line 380 in file "mcc_generated_files/i2c_master.c"
  4408 ;; Parameters:    Size  Location     Type
  4409 ;;		None
  4410 ;; Auto vars:     Size  Location     Type
  4411 ;;		None
  4412 ;; Return value:  Size  Location     Type
  4413 ;;                  1    wreg      enum E4221
  4414 ;; Registers used:
  4415 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4416 ;; Tracked objects:
  4417 ;;		On entry : 0/0
  4418 ;;		On exit  : 0/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4421 ;;      Params:         0       0       0       0       0       0       0       0
  4422 ;;      Locals:         0       0       0       0       0       0       0       0
  4423 ;;      Temps:          1       0       0       0       0       0       0       0
  4424 ;;      Totals:         1       0       0       0       0       0       0       0
  4425 ;;Total ram usage:        1 bytes
  4426 ;; Hardware stack levels used:    1
  4427 ;; Hardware stack levels required when called:    3
  4428 ;; This function calls:
  4429 ;;		Absolute function
  4430 ;;		_I2C_CallbackReturnReset
  4431 ;;		_I2C_CallbackReturnStop
  4432 ;;		_I2C_DO_RX_NACK_RESTART
  4433 ;;		_I2C_DO_RX_NACK_STOP
  4434 ;;		_I2C_MasterGetRxData
  4435 ;;		_I2C_MasterSendAck
  4436 ;;		_rd1RegCompleteHandler
  4437 ;;		_rd2RegCompleteHandler
  4438 ;;		_rdBlkRegCompleteHandler
  4439 ;;		_wr1RegCompleteHandler
  4440 ;;		_wr2RegCompleteHandler
  4441 ;; This function is called by:
  4442 ;;		_I2C_MasterFsm
  4443 ;; This function uses a non-reentrant model
  4444 ;;
  4445                           
  4446                           
  4447                           ;psect for function _I2C_DO_RX
  4448  008E                     _I2C_DO_RX:	
  4449                           
  4450                           ;i2c_master.c: 382: *I2C_Status.data_ptr++ = I2C_MasterGetRxData();
  4451                           
  4452                           ;incstack = 0
  4453                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4454  008E  3183  2314  3180   	fcall	_I2C_MasterGetRxData
  4455  0091  00F0               	movwf	??_I2C_DO_RX
  4456  0092  0020               	movlb	0	; select bank0
  4457  0093  0837               	movf	low ((_I2C_Status| 0+23)),w
  4458  0094  0086               	movwf	6
  4459  0095  0187               	clrf	7
  4460  0096  0870               	movf	??_I2C_DO_RX,w
  4461  0097  0081               	movwf	1
  4462  0098  3001               	movlw	1
  4463  0099  00F0               	movwf	??_I2C_DO_RX
  4464  009A  0870               	movf	??_I2C_DO_RX,w
  4465  009B  07B7               	addwf	low ((_I2C_Status| 0+23)),f
  4466                           
  4467                           ;i2c_master.c: 383: if(--I2C_Status.data_length)
  4468  009C  3001               	movlw	1
  4469  009D  02B8               	subwf	_I2C_Status+24,f
  4470  009E  3000               	movlw	0
  4471  009F  3BB9               	subwfb	_I2C_Status+25,f
  4472  00A0  0838               	movf	_I2C_Status+24,w
  4473  00A1  0439               	iorwf	_I2C_Status+25,w
  4474  00A2  1903               	btfsc	3,2
  4475  00A3  28A8               	goto	i1l398
  4476                           
  4477                           ;i2c_master.c: 384: {
  4478                           ;i2c_master.c: 385: I2C_MasterSendAck();
  4479  00A4  3183  2303         	fcall	_I2C_MasterSendAck
  4480                           
  4481                           ;i2c_master.c: 386: return I2C_RCEN;
  4482  00A6  3005               	movlw	5
  4483                           
  4484                           ;i2c_master.c: 387: }
  4485  00A7  0008               	return
  4486  00A8                     i1l398:	
  4487                           
  4488                           ;i2c_master.c: 388: else
  4489                           ;i2c_master.c: 389: {
  4490                           ;i2c_master.c: 390: I2C_Status.bufferFree = 1;
  4491  00A8  15BC               	bsf	_I2C_Status+28,3
  4492                           
  4493                           ;i2c_master.c: 391: switch(I2C_Status.callbackTable[I2C_DATA_COMPLETE](I2C_Status.callba
      +                          ckPayload[I2C_DATA_COMPLETE]))
  4494  00A9  28B0               	goto	i1l2555
  4495  00AA                     i1l2545:	
  4496                           ;i2c_master.c: 392: {
  4497                           ;i2c_master.c: 393: case I2C_RESTART_WRITE:
  4498                           
  4499                           
  4500                           ;i2c_master.c: 394: case I2C_RESTART_READ:
  4501                           ;i2c_master.c: 395: return I2C_DO_RX_NACK_RESTART();
  4502  00AA  3182  22E7         	fcall	_I2C_DO_RX_NACK_RESTART
  4503  00AC  0008               	return
  4504  00AD                     i1l2549:	
  4505                           ;i2c_master.c: 397: case I2C_CONTINUE:
  4506                           
  4507                           ;i2c_master.c: 396: default:
  4508                           
  4509                           
  4510                           ;i2c_master.c: 398: case I2C_STOP:
  4511                           ;i2c_master.c: 399: return I2C_DO_RX_NACK_STOP();
  4512  00AD  3182  22EB         	fcall	_I2C_DO_RX_NACK_STOP
  4513                           
  4514                           ;i2c_master.c: 400: }
  4515  00AF  0008               	return
  4516  00B0                     i1l2555:	
  4517  00B0  0020               	movlb	0	; select bank0
  4518  00B1  082C               	movf	low ((_I2C_Status| 0+12)),w
  4519  00B2  00F0               	movwf	??_I2C_DO_RX
  4520  00B3  0870               	movf	??_I2C_DO_RX,w
  4521  00B4  00C7               	movwf	rdBlkRegCompleteHandler@ptr
  4522  00B5  0821               	movf	_I2C_Status+1,w
  4523  00B6  008A               	movwf	10
  4524  00B7  0820               	movf	_I2C_Status,w
  4525  00B8  000A               	callw
  4526  00B9  3180               	pagesel	$
  4527                           
  4528                           ; Switch size 1, requested type "space"
  4529                           ; Number of cases is 4, Range of values is 1 to 4
  4530                           ; switch strategies available:
  4531                           ; Name         Instructions Cycles
  4532                           ; simple_byte           13     7 (average)
  4533                           ; direct_byte           17     9 (fixed)
  4534                           ; jumptable            263     9 (fixed)
  4535                           ;	Chosen strategy is simple_byte
  4536  00BA  3A01               	xorlw	1	; case 1
  4537  00BB  1903               	skipnz
  4538  00BC  28AD               	goto	i1l2549
  4539  00BD  3A03               	xorlw	3	; case 2
  4540  00BE  1903               	skipnz
  4541  00BF  28AA               	goto	i1l2545
  4542  00C0  3A01               	xorlw	1	; case 3
  4543  00C1  1903               	skipnz
  4544  00C2  28AA               	goto	i1l2545
  4545  00C3  3A07               	xorlw	7	; case 4
  4546  00C4  1903               	skipnz
  4547  00C5  28AD               	goto	i1l2549
  4548  00C6  28AD               	goto	i1l2549
  4549  00C7  0008               	return
  4550  00C8                     __end_of_I2C_DO_RX:	
  4551                           
  4552                           	psect	text32
  4553  0043                     __ptext32:	
  4554 ;; *************** function _I2C_DO_TX *****************
  4555 ;; Defined at:
  4556 ;;		line 356 in file "mcc_generated_files/i2c_master.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;		None
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;		None
  4561 ;; Return value:  Size  Location     Type
  4562 ;;                  1    wreg      enum E4221
  4563 ;; Registers used:
  4564 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4565 ;; Tracked objects:
  4566 ;;		On entry : 0/0
  4567 ;;		On exit  : 0/0
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4570 ;;      Params:         0       0       0       0       0       0       0       0
  4571 ;;      Locals:         2       0       0       0       0       0       0       0
  4572 ;;      Temps:          1       0       0       0       0       0       0       0
  4573 ;;      Totals:         3       0       0       0       0       0       0       0
  4574 ;;Total ram usage:        3 bytes
  4575 ;; Hardware stack levels used:    1
  4576 ;; Hardware stack levels required when called:    3
  4577 ;; This function calls:
  4578 ;;		Absolute function
  4579 ;;		_I2C_CallbackReturnReset
  4580 ;;		_I2C_CallbackReturnStop
  4581 ;;		_I2C_DO_SEND_RESTART_READ
  4582 ;;		_I2C_DO_SEND_RESTART_WRITE
  4583 ;;		_I2C_DO_SEND_STOP
  4584 ;;		_I2C_MasterIsNack
  4585 ;;		_I2C_MasterSendTxData
  4586 ;;		_rd1RegCompleteHandler
  4587 ;;		_rd2RegCompleteHandler
  4588 ;;		_rdBlkRegCompleteHandler
  4589 ;;		_wr1RegCompleteHandler
  4590 ;;		_wr2RegCompleteHandler
  4591 ;; This function is called by:
  4592 ;;		_I2C_MasterFsm
  4593 ;; This function uses a non-reentrant model
  4594 ;;
  4595                           
  4596                           
  4597                           ;psect for function _I2C_DO_TX
  4598  0043                     _I2C_DO_TX:	
  4599                           
  4600                           ;i2c_master.c: 358: if(I2C_MasterIsNack())
  4601                           
  4602                           ;incstack = 0
  4603                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4604  0043  3182  22CA  3180   	fcall	_I2C_MasterIsNack
  4605  0046  3A00               	xorlw	0
  4606  0047  1D03               	btfss	3,2
  4607  0048  2853               	goto	i1l2519
  4608  0049  286F               	goto	i1l382
  4609  004A                     i1l2505:	
  4610                           ;i2c_master.c: 361: {
  4611                           ;i2c_master.c: 362: case I2C_RESTART_READ:
  4612                           
  4613                           ;i2c_master.c: 359: {
  4614                           ;i2c_master.c: 360: switch(I2C_Status.callbackTable[I2C_DATA_NACK](I2C_Status.callbackPa
      +                          yload[I2C_DATA_NACK]))
  4615                           
  4616                           
  4617                           ;i2c_master.c: 363: return I2C_DO_SEND_RESTART_READ();
  4618  004A  3182  22FF         	fcall	_I2C_DO_SEND_RESTART_READ
  4619  004C  0008               	return
  4620  004D                     i1l2509:	
  4621                           ;i2c_master.c: 364: case I2C_RESTART_WRITE:
  4622                           
  4623                           
  4624                           ;i2c_master.c: 365: return I2C_DO_SEND_RESTART_WRITE();
  4625  004D  3182  22FB         	fcall	_I2C_DO_SEND_RESTART_WRITE
  4626  004F  0008               	return
  4627  0050                     i1l2513:	
  4628                           ;i2c_master.c: 367: case I2C_CONTINUE:
  4629                           
  4630                           ;i2c_master.c: 366: default:
  4631                           
  4632                           
  4633                           ;i2c_master.c: 368: case I2C_STOP:
  4634                           ;i2c_master.c: 369: return I2C_DO_SEND_STOP();
  4635  0050  3182  22F3         	fcall	_I2C_DO_SEND_STOP
  4636                           
  4637                           ;i2c_master.c: 370: }
  4638  0052  0008               	return
  4639  0053                     i1l2519:	
  4640  0053  0020               	movlb	0	; select bank0
  4641  0054  082F               	movf	low ((_I2C_Status| 0+15)),w
  4642  0055  00F1               	movwf	??_I2C_DO_TX
  4643  0056  0871               	movf	??_I2C_DO_TX,w
  4644  0057  00C7               	movwf	rdBlkRegCompleteHandler@ptr
  4645  0058  3006               	movlw	6
  4646  0059  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  4647  005A  0086               	movwf	6
  4648  005B  0187               	clrf	7
  4649  005C  3F41               	moviw [1]fsr1
  4650  005D  008A               	movwf	10
  4651  005E  3F40               	moviw [0]fsr1
  4652  005F  000A               	callw
  4653  0060  3180               	pagesel	$
  4654                           
  4655                           ; Switch size 1, requested type "space"
  4656                           ; Number of cases is 4, Range of values is 1 to 4
  4657                           ; switch strategies available:
  4658                           ; Name         Instructions Cycles
  4659                           ; simple_byte           13     7 (average)
  4660                           ; direct_byte           17     9 (fixed)
  4661                           ; jumptable            263     9 (fixed)
  4662                           ;	Chosen strategy is simple_byte
  4663  0061  3A01               	xorlw	1	; case 1
  4664  0062  1903               	skipnz
  4665  0063  2850               	goto	i1l2513
  4666  0064  3A03               	xorlw	3	; case 2
  4667  0065  1903               	skipnz
  4668  0066  284A               	goto	i1l2505
  4669  0067  3A01               	xorlw	1	; case 3
  4670  0068  1903               	skipnz
  4671  0069  284D               	goto	i1l2509
  4672  006A  3A07               	xorlw	7	; case 4
  4673  006B  1903               	skipnz
  4674  006C  2850               	goto	i1l2513
  4675  006D  2850               	goto	i1l2513
  4676                           
  4677                           ;i2c_master.c: 371: }
  4678  006E  0008               	return
  4679  006F                     i1l382:	
  4680                           
  4681                           ;i2c_master.c: 372: else
  4682                           ;i2c_master.c: 373: {
  4683                           ;i2c_master.c: 374: I2C_Status.addressNackCheck = 0;
  4684  006F  0020               	movlb	0	; select bank0
  4685  0070  103C               	bcf	_I2C_Status+28,0
  4686                           
  4687                           ;i2c_master.c: 375: I2C_MasterSendTxData(*I2C_Status.data_ptr++);
  4688  0071  3017               	movlw	23
  4689  0072  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  4690  0073  0086               	movwf	6
  4691  0074  0187               	clrf	7
  4692  0075  3F40               	moviw [0]fsr1
  4693  0076  0084               	movwf	4
  4694  0077  0185               	clrf	5
  4695  0078  0A81               	incf	1,f
  4696  0079  0800               	movf	0,w
  4697  007A  3182  22DA  3180   	fcall	_I2C_MasterSendTxData
  4698                           
  4699                           ;i2c_master.c: 376: return (--I2C_Status.data_length)?I2C_TX:I2C_TX_EMPTY;
  4700  007D  3001               	movlw	1
  4701  007E  0020               	movlb	0	; select bank0
  4702  007F  02B8               	subwf	_I2C_Status+24,f
  4703  0080  3000               	movlw	0
  4704  0081  3BB9               	subwfb	_I2C_Status+25,f
  4705  0082  0838               	movf	_I2C_Status+24,w
  4706  0083  0439               	iorwf	_I2C_Status+25,w
  4707  0084  1D03               	btfss	3,2
  4708  0085  2888               	goto	i1l2527
  4709  0086  3006               	movlw	6
  4710  0087  2889               	goto	L1
  4711  0088                     i1l2527:	
  4712  0088  3003               	movlw	3
  4713  0089                     L1:	
  4714  0089  00F2               	movwf	_I2C_DO_TX$872
  4715  008A  3000               	movlw	0
  4716  008B  00F3               	movwf	_I2C_DO_TX$872+1
  4717  008C  0872               	movf	_I2C_DO_TX$872,w
  4718  008D  0008               	return
  4719  008E                     __end_of_I2C_DO_TX:	
  4720                           
  4721                           	psect	text33
  4722  0299                     __ptext33:	
  4723 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  4724 ;; Defined at:
  4725 ;;		line 349 in file "mcc_generated_files/i2c_master.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;		None
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;		None
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  1    wreg      enum E4221
  4732 ;; Registers used:
  4733 ;;		wreg, status,2, status,0, pclath, cstack
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4739 ;;      Params:         0       0       0       0       0       0       0       0
  4740 ;;      Locals:         0       0       0       0       0       0       0       0
  4741 ;;      Temps:          0       0       0       0       0       0       0       0
  4742 ;;      Totals:         0       0       0       0       0       0       0       0
  4743 ;;Total ram usage:        0 bytes
  4744 ;; Hardware stack levels used:    1
  4745 ;; Hardware stack levels required when called:    1
  4746 ;; This function calls:
  4747 ;;		_I2C_MasterSendTxData
  4748 ;; This function is called by:
  4749 ;;		_I2C_MasterFsm
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753                           
  4754                           ;psect for function _I2C_DO_SEND_ADR_WRITE
  4755  0299                     _I2C_DO_SEND_ADR_WRITE:	
  4756                           
  4757                           ;i2c_master.c: 351: I2C_Status.addressNackCheck = 1;
  4758                           
  4759                           ;incstack = 0
  4760                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  4761  0299  0020               	movlb	0	; select bank0
  4762  029A  143C               	bsf	_I2C_Status+28,0
  4763                           
  4764                           ;i2c_master.c: 352: I2C_MasterSendTxData(I2C_Status.address << 1);
  4765  029B  3536               	lslf	_I2C_Status+22,w
  4766  029C  3182  22DA         	fcall	_I2C_MasterSendTxData
  4767                           
  4768                           ;i2c_master.c: 353: return I2C_TX;
  4769  029E  3003               	movlw	3
  4770  029F  0008               	return
  4771  02A0                     __end_of_I2C_DO_SEND_ADR_WRITE:	
  4772                           
  4773                           	psect	text34
  4774  0291                     __ptext34:	
  4775 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  4776 ;; Defined at:
  4777 ;;		line 342 in file "mcc_generated_files/i2c_master.c"
  4778 ;; Parameters:    Size  Location     Type
  4779 ;;		None
  4780 ;; Auto vars:     Size  Location     Type
  4781 ;;		None
  4782 ;; Return value:  Size  Location     Type
  4783 ;;                  1    wreg      enum E4221
  4784 ;; Registers used:
  4785 ;;		wreg, status,2, status,0, pclath, cstack
  4786 ;; Tracked objects:
  4787 ;;		On entry : 0/0
  4788 ;;		On exit  : 0/0
  4789 ;;		Unchanged: 0/0
  4790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4791 ;;      Params:         0       0       0       0       0       0       0       0
  4792 ;;      Locals:         0       0       0       0       0       0       0       0
  4793 ;;      Temps:          0       0       0       0       0       0       0       0
  4794 ;;      Totals:         0       0       0       0       0       0       0       0
  4795 ;;Total ram usage:        0 bytes
  4796 ;; Hardware stack levels used:    1
  4797 ;; Hardware stack levels required when called:    1
  4798 ;; This function calls:
  4799 ;;		_I2C_MasterSendTxData
  4800 ;; This function is called by:
  4801 ;;		_I2C_MasterFsm
  4802 ;; This function uses a non-reentrant model
  4803 ;;
  4804                           
  4805                           
  4806                           ;psect for function _I2C_DO_SEND_ADR_READ
  4807  0291                     _I2C_DO_SEND_ADR_READ:	
  4808                           
  4809                           ;i2c_master.c: 344: I2C_Status.addressNackCheck = 1;
  4810                           
  4811                           ;incstack = 0
  4812                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  4813  0291  0020               	movlb	0	; select bank0
  4814  0292  143C               	bsf	_I2C_Status+28,0
  4815                           
  4816                           ;i2c_master.c: 345: I2C_MasterSendTxData(I2C_Status.address << 1 | 1);
  4817  0293  1403               	setc
  4818  0294  0D36               	rlf	_I2C_Status+22,w
  4819  0295  3182  22DA         	fcall	_I2C_MasterSendTxData
  4820                           
  4821                           ;i2c_master.c: 346: return I2C_RCEN;
  4822  0297  3005               	movlw	5
  4823  0298  0008               	return
  4824  0299                     __end_of_I2C_DO_SEND_ADR_READ:	
  4825                           
  4826                           	psect	text35
  4827  02D5                     __ptext35:	
  4828 ;; *************** function _I2C_DO_IDLE *****************
  4829 ;; Defined at:
  4830 ;;		line 335 in file "mcc_generated_files/i2c_master.c"
  4831 ;; Parameters:    Size  Location     Type
  4832 ;;		None
  4833 ;; Auto vars:     Size  Location     Type
  4834 ;;		None
  4835 ;; Return value:  Size  Location     Type
  4836 ;;                  1    wreg      enum E4221
  4837 ;; Registers used:
  4838 ;;		wreg, status,2
  4839 ;; Tracked objects:
  4840 ;;		On entry : 0/0
  4841 ;;		On exit  : 0/0
  4842 ;;		Unchanged: 0/0
  4843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4844 ;;      Params:         0       0       0       0       0       0       0       0
  4845 ;;      Locals:         0       0       0       0       0       0       0       0
  4846 ;;      Temps:          0       0       0       0       0       0       0       0
  4847 ;;      Totals:         0       0       0       0       0       0       0       0
  4848 ;;Total ram usage:        0 bytes
  4849 ;; Hardware stack levels used:    1
  4850 ;; This function calls:
  4851 ;;		Nothing
  4852 ;; This function is called by:
  4853 ;;		_I2C_MasterFsm
  4854 ;; This function uses a non-reentrant model
  4855 ;;
  4856                           
  4857                           
  4858                           ;psect for function _I2C_DO_IDLE
  4859  02D5                     _I2C_DO_IDLE:	
  4860                           
  4861                           ;i2c_master.c: 337: I2C_Status.busy = 0;
  4862                           
  4863                           ;incstack = 0
  4864                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
  4865  02D5  0020               	movlb	0	; select bank0
  4866  02D6  10BC               	bcf	_I2C_Status+28,1
  4867                           
  4868                           ;i2c_master.c: 338: I2C_Status.error = I2C_NOERR;
  4869  02D7  01BB               	clrf	_I2C_Status+27
  4870                           
  4871                           ;i2c_master.c: 339: return I2C_RESET;
  4872  02D8  300E               	movlw	14
  4873  02D9  0008               	return
  4874  02DA                     __end_of_I2C_DO_IDLE:	
  4875                           
  4876                           	psect	text36
  4877  0114                     __ptext36:	
  4878 ;; *************** function _I2C_DO_TX_EMPTY *****************
  4879 ;; Defined at:
  4880 ;;		line 411 in file "mcc_generated_files/i2c_master.c"
  4881 ;; Parameters:    Size  Location     Type
  4882 ;;		None
  4883 ;; Auto vars:     Size  Location     Type
  4884 ;;		None
  4885 ;; Return value:  Size  Location     Type
  4886 ;;                  1    wreg      enum E4221
  4887 ;; Registers used:
  4888 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4889 ;; Tracked objects:
  4890 ;;		On entry : 0/0
  4891 ;;		On exit  : 0/0
  4892 ;;		Unchanged: 0/0
  4893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4894 ;;      Params:         0       0       0       0       0       0       0       0
  4895 ;;      Locals:         0       0       0       0       0       0       0       0
  4896 ;;      Temps:          1       0       0       0       0       0       0       0
  4897 ;;      Totals:         1       0       0       0       0       0       0       0
  4898 ;;Total ram usage:        1 bytes
  4899 ;; Hardware stack levels used:    1
  4900 ;; Hardware stack levels required when called:    3
  4901 ;; This function calls:
  4902 ;;		Absolute function
  4903 ;;		_I2C_CallbackReturnReset
  4904 ;;		_I2C_CallbackReturnStop
  4905 ;;		_I2C_DO_SEND_RESTART
  4906 ;;		_I2C_DO_SEND_STOP
  4907 ;;		_I2C_MasterSetIrq
  4908 ;;		_rd1RegCompleteHandler
  4909 ;;		_rd2RegCompleteHandler
  4910 ;;		_rdBlkRegCompleteHandler
  4911 ;;		_wr1RegCompleteHandler
  4912 ;;		_wr2RegCompleteHandler
  4913 ;; This function is called by:
  4914 ;;		_I2C_MasterFsm
  4915 ;; This function uses a non-reentrant model
  4916 ;;
  4917                           
  4918                           
  4919                           ;psect for function _I2C_DO_TX_EMPTY
  4920  0114                     _I2C_DO_TX_EMPTY:	
  4921                           
  4922                           ;i2c_master.c: 413: I2C_Status.bufferFree = 1;
  4923                           
  4924                           ;incstack = 0
  4925                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4926  0114  0020               	movlb	0	; select bank0
  4927  0115  15BC               	bsf	_I2C_Status+28,3
  4928                           
  4929                           ;i2c_master.c: 414: switch(I2C_Status.callbackTable[I2C_DATA_COMPLETE](I2C_Status.callba
      +                          ckPayload[I2C_DATA_COMPLETE]))
  4930  0116  2921               	goto	i1l2575
  4931  0117                     i1l2559:	
  4932                           ;i2c_master.c: 415: {
  4933                           ;i2c_master.c: 416: case I2C_RESTART_READ:
  4934                           
  4935                           
  4936                           ;i2c_master.c: 417: case I2C_RESTART_WRITE:
  4937                           ;i2c_master.c: 418: return I2C_DO_SEND_RESTART();
  4938  0117  3182  22F7         	fcall	_I2C_DO_SEND_RESTART
  4939  0119  0008               	return
  4940  011A                     i1l2563:	
  4941                           ;i2c_master.c: 419: case I2C_CONTINUE:
  4942                           
  4943                           
  4944                           ;i2c_master.c: 420: I2C_MasterSetIrq();
  4945  011A  3183  2311         	fcall	_I2C_MasterSetIrq
  4946                           
  4947                           ;i2c_master.c: 421: return I2C_TX;
  4948  011C  3003               	movlw	3
  4949  011D  0008               	return
  4950  011E                     i1l2569:	
  4951                           ;i2c_master.c: 423: case I2C_STOP:
  4952                           
  4953                           ;i2c_master.c: 422: default:
  4954                           
  4955                           
  4956                           ;i2c_master.c: 424: return I2C_DO_SEND_STOP();
  4957  011E  3182  22F3         	fcall	_I2C_DO_SEND_STOP
  4958                           
  4959                           ;i2c_master.c: 425: }
  4960  0120  0008               	return
  4961  0121                     i1l2575:	
  4962  0121  0020               	movlb	0	; select bank0
  4963  0122  082C               	movf	low ((_I2C_Status| 0+12)),w
  4964  0123  00F0               	movwf	??_I2C_DO_TX_EMPTY
  4965  0124  0870               	movf	??_I2C_DO_TX_EMPTY,w
  4966  0125  00C7               	movwf	rdBlkRegCompleteHandler@ptr
  4967  0126  0821               	movf	_I2C_Status+1,w
  4968  0127  008A               	movwf	10
  4969  0128  0820               	movf	_I2C_Status,w
  4970  0129  000A               	callw
  4971  012A  3181               	pagesel	$
  4972                           
  4973                           ; Switch size 1, requested type "space"
  4974                           ; Number of cases is 4, Range of values is 1 to 4
  4975                           ; switch strategies available:
  4976                           ; Name         Instructions Cycles
  4977                           ; simple_byte           13     7 (average)
  4978                           ; direct_byte           17     9 (fixed)
  4979                           ; jumptable            263     9 (fixed)
  4980                           ;	Chosen strategy is simple_byte
  4981  012B  3A01               	xorlw	1	; case 1
  4982  012C  1903               	skipnz
  4983  012D  291E               	goto	i1l2569
  4984  012E  3A03               	xorlw	3	; case 2
  4985  012F  1903               	skipnz
  4986  0130  2917               	goto	i1l2559
  4987  0131  3A01               	xorlw	1	; case 3
  4988  0132  1903               	skipnz
  4989  0133  2917               	goto	i1l2559
  4990  0134  3A07               	xorlw	7	; case 4
  4991  0135  1903               	skipnz
  4992  0136  291A               	goto	i1l2563
  4993  0137  291E               	goto	i1l2569
  4994  0138  0008               	return
  4995  0139                     __end_of_I2C_DO_TX_EMPTY:	
  4996                           
  4997                           	psect	text37
  4998  0311                     __ptext37:	
  4999 ;; *************** function _I2C_MasterSetIrq *****************
  5000 ;; Defined at:
  5001 ;;		line 647 in file "mcc_generated_files/i2c_master.c"
  5002 ;; Parameters:    Size  Location     Type
  5003 ;;		None
  5004 ;; Auto vars:     Size  Location     Type
  5005 ;;		None
  5006 ;; Return value:  Size  Location     Type
  5007 ;;                  1    wreg      void 
  5008 ;; Registers used:
  5009 ;;		None
  5010 ;; Tracked objects:
  5011 ;;		On entry : 0/0
  5012 ;;		On exit  : 0/0
  5013 ;;		Unchanged: 0/0
  5014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5015 ;;      Params:         0       0       0       0       0       0       0       0
  5016 ;;      Locals:         0       0       0       0       0       0       0       0
  5017 ;;      Temps:          0       0       0       0       0       0       0       0
  5018 ;;      Totals:         0       0       0       0       0       0       0       0
  5019 ;;Total ram usage:        0 bytes
  5020 ;; Hardware stack levels used:    1
  5021 ;; This function calls:
  5022 ;;		Nothing
  5023 ;; This function is called by:
  5024 ;;		_I2C_DO_TX_EMPTY
  5025 ;; This function uses a non-reentrant model
  5026 ;;
  5027                           
  5028                           
  5029                           ;psect for function _I2C_MasterSetIrq
  5030  0311                     _I2C_MasterSetIrq:	
  5031                           
  5032                           ;i2c_master.c: 649: PIR1bits.SSP1IF = 1;
  5033                           
  5034                           ;incstack = 0
  5035                           ; Regs used in _I2C_MasterSetIrq: []
  5036  0311  0020               	movlb	0	; select bank0
  5037  0312  1591               	bsf	17,3	;volatile
  5038  0313  0008               	return
  5039  0314                     __end_of_I2C_MasterSetIrq:	
  5040                           
  5041                           	psect	text38
  5042  02CA                     __ptext38:	
  5043 ;; *************** function _I2C_MasterIsNack *****************
  5044 ;; Defined at:
  5045 ;;		line 599 in file "mcc_generated_files/i2c_master.c"
  5046 ;; Parameters:    Size  Location     Type
  5047 ;;		None
  5048 ;; Auto vars:     Size  Location     Type
  5049 ;;		None
  5050 ;; Return value:  Size  Location     Type
  5051 ;;                  1    wreg      unsigned char 
  5052 ;; Registers used:
  5053 ;;		wreg, status,2, status,0
  5054 ;; Tracked objects:
  5055 ;;		On entry : 0/0
  5056 ;;		On exit  : 0/0
  5057 ;;		Unchanged: 0/0
  5058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5059 ;;      Params:         0       0       0       0       0       0       0       0
  5060 ;;      Locals:         0       0       0       0       0       0       0       0
  5061 ;;      Temps:          0       0       0       0       0       0       0       0
  5062 ;;      Totals:         0       0       0       0       0       0       0       0
  5063 ;;Total ram usage:        0 bytes
  5064 ;; Hardware stack levels used:    1
  5065 ;; This function calls:
  5066 ;;		Nothing
  5067 ;; This function is called by:
  5068 ;;		_I2C_MasterFsm
  5069 ;;		_I2C_DO_TX
  5070 ;; This function uses a non-reentrant model
  5071 ;;
  5072                           
  5073                           
  5074                           ;psect for function _I2C_MasterIsNack
  5075  02CA                     _I2C_MasterIsNack:	
  5076                           
  5077                           ;i2c_master.c: 601: return SSP1CON2bits.ACKSTAT;
  5078                           
  5079                           ;incstack = 0
  5080                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
  5081  02CA  0024               	movlb	4	; select bank4
  5082  02CB  0E16               	swapf	22,w	;volatile
  5083  02CC  0C89               	rrf	9,f
  5084  02CD  0C89               	rrf	9,f
  5085  02CE  3901               	andlw	1
  5086  02CF  0008               	return
  5087  02D0                     __end_of_I2C_MasterIsNack:	
  5088                           
  5089                           	psect	text39
  5090  02DA                     __ptext39:	
  5091 ;; *************** function _I2C_MasterSendTxData *****************
  5092 ;; Defined at:
  5093 ;;		line 569 in file "mcc_generated_files/i2c_master.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;  data            1    wreg     unsigned char 
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;  data            1    0[COMMON] unsigned char 
  5098 ;; Return value:  Size  Location     Type
  5099 ;;                  1    wreg      void 
  5100 ;; Registers used:
  5101 ;;		wreg
  5102 ;; Tracked objects:
  5103 ;;		On entry : 0/0
  5104 ;;		On exit  : 0/0
  5105 ;;		Unchanged: 0/0
  5106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5107 ;;      Params:         0       0       0       0       0       0       0       0
  5108 ;;      Locals:         1       0       0       0       0       0       0       0
  5109 ;;      Temps:          0       0       0       0       0       0       0       0
  5110 ;;      Totals:         1       0       0       0       0       0       0       0
  5111 ;;Total ram usage:        1 bytes
  5112 ;; Hardware stack levels used:    1
  5113 ;; This function calls:
  5114 ;;		Nothing
  5115 ;; This function is called by:
  5116 ;;		_I2C_DO_SEND_ADR_READ
  5117 ;;		_I2C_DO_SEND_ADR_WRITE
  5118 ;;		_I2C_DO_TX
  5119 ;; This function uses a non-reentrant model
  5120 ;;
  5121                           
  5122                           
  5123                           ;psect for function _I2C_MasterSendTxData
  5124  02DA                     _I2C_MasterSendTxData:	
  5125                           
  5126                           ;incstack = 0
  5127                           ; Regs used in _I2C_MasterSendTxData: [wreg]
  5128                           ;I2C_MasterSendTxData@data stored from wreg
  5129  02DA  00F0               	movwf	I2C_MasterSendTxData@data
  5130                           
  5131                           ;i2c_master.c: 571: SSP1BUF = data;
  5132  02DB  0870               	movf	I2C_MasterSendTxData@data,w
  5133  02DC  0024               	movlb	4	; select bank4
  5134  02DD  0091               	movwf	17	;volatile
  5135  02DE  0008               	return
  5136  02DF                     __end_of_I2C_MasterSendTxData:	
  5137                           
  5138                           	psect	text40
  5139  0303                     __ptext40:	
  5140 ;; *************** function _I2C_MasterSendAck *****************
  5141 ;; Defined at:
  5142 ;;		line 604 in file "mcc_generated_files/i2c_master.c"
  5143 ;; Parameters:    Size  Location     Type
  5144 ;;		None
  5145 ;; Auto vars:     Size  Location     Type
  5146 ;;		None
  5147 ;; Return value:  Size  Location     Type
  5148 ;;                  1    wreg      void 
  5149 ;; Registers used:
  5150 ;;		None
  5151 ;; Tracked objects:
  5152 ;;		On entry : 0/0
  5153 ;;		On exit  : 0/0
  5154 ;;		Unchanged: 0/0
  5155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5156 ;;      Params:         0       0       0       0       0       0       0       0
  5157 ;;      Locals:         0       0       0       0       0       0       0       0
  5158 ;;      Temps:          0       0       0       0       0       0       0       0
  5159 ;;      Totals:         0       0       0       0       0       0       0       0
  5160 ;;Total ram usage:        0 bytes
  5161 ;; Hardware stack levels used:    1
  5162 ;; This function calls:
  5163 ;;		Nothing
  5164 ;; This function is called by:
  5165 ;;		_I2C_DO_RX
  5166 ;;		_I2C_DO_RX_ACK
  5167 ;; This function uses a non-reentrant model
  5168 ;;
  5169                           
  5170                           
  5171                           ;psect for function _I2C_MasterSendAck
  5172  0303                     _I2C_MasterSendAck:	
  5173                           
  5174                           ;i2c_master.c: 606: SSP1CON2bits.ACKDT = 0;
  5175                           
  5176                           ;incstack = 0
  5177                           ; Regs used in _I2C_MasterSendAck: []
  5178  0303  0024               	movlb	4	; select bank4
  5179  0304  1296               	bcf	22,5	;volatile
  5180                           
  5181                           ;i2c_master.c: 607: SSP1CON2bits.ACKEN = 1;
  5182  0305  1616               	bsf	22,4	;volatile
  5183  0306  0008               	return
  5184  0307                     __end_of_I2C_MasterSendAck:	
  5185                           
  5186                           	psect	text41
  5187  0314                     __ptext41:	
  5188 ;; *************** function _I2C_MasterGetRxData *****************
  5189 ;; Defined at:
  5190 ;;		line 564 in file "mcc_generated_files/i2c_master.c"
  5191 ;; Parameters:    Size  Location     Type
  5192 ;;		None
  5193 ;; Auto vars:     Size  Location     Type
  5194 ;;		None
  5195 ;; Return value:  Size  Location     Type
  5196 ;;                  1    wreg      unsigned char 
  5197 ;; Registers used:
  5198 ;;		wreg
  5199 ;; Tracked objects:
  5200 ;;		On entry : 0/0
  5201 ;;		On exit  : 0/0
  5202 ;;		Unchanged: 0/0
  5203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5204 ;;      Params:         0       0       0       0       0       0       0       0
  5205 ;;      Locals:         0       0       0       0       0       0       0       0
  5206 ;;      Temps:          0       0       0       0       0       0       0       0
  5207 ;;      Totals:         0       0       0       0       0       0       0       0
  5208 ;;Total ram usage:        0 bytes
  5209 ;; Hardware stack levels used:    1
  5210 ;; This function calls:
  5211 ;;		Nothing
  5212 ;; This function is called by:
  5213 ;;		_I2C_DO_RX
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216                           
  5217                           
  5218                           ;psect for function _I2C_MasterGetRxData
  5219  0314                     _I2C_MasterGetRxData:	
  5220                           
  5221                           ;i2c_master.c: 566: return SSP1BUF;
  5222                           
  5223                           ;incstack = 0
  5224                           ; Regs used in _I2C_MasterGetRxData: [wreg]
  5225  0314  0024               	movlb	4	; select bank4
  5226  0315  0811               	movf	17,w	;volatile
  5227  0316  0008               	return
  5228  0317                     __end_of_I2C_MasterGetRxData:	
  5229                           
  5230                           	psect	text42
  5231  0307                     __ptext42:	
  5232 ;; *************** function _I2C_MasterSendNack *****************
  5233 ;; Defined at:
  5234 ;;		line 610 in file "mcc_generated_files/i2c_master.c"
  5235 ;; Parameters:    Size  Location     Type
  5236 ;;		None
  5237 ;; Auto vars:     Size  Location     Type
  5238 ;;		None
  5239 ;; Return value:  Size  Location     Type
  5240 ;;                  1    wreg      void 
  5241 ;; Registers used:
  5242 ;;		None
  5243 ;; Tracked objects:
  5244 ;;		On entry : 0/0
  5245 ;;		On exit  : 0/0
  5246 ;;		Unchanged: 0/0
  5247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5248 ;;      Params:         0       0       0       0       0       0       0       0
  5249 ;;      Locals:         0       0       0       0       0       0       0       0
  5250 ;;      Temps:          0       0       0       0       0       0       0       0
  5251 ;;      Totals:         0       0       0       0       0       0       0       0
  5252 ;;Total ram usage:        0 bytes
  5253 ;; Hardware stack levels used:    1
  5254 ;; This function calls:
  5255 ;;		Nothing
  5256 ;; This function is called by:
  5257 ;;		_I2C_DO_RX_NACK_STOP
  5258 ;;		_I2C_DO_RX_NACK_RESTART
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262                           
  5263                           ;psect for function _I2C_MasterSendNack
  5264  0307                     _I2C_MasterSendNack:	
  5265                           
  5266                           ;i2c_master.c: 612: SSP1CON2bits.ACKDT = 1;
  5267                           
  5268                           ;incstack = 0
  5269                           ; Regs used in _I2C_MasterSendNack: []
  5270  0307  0024               	movlb	4	; select bank4
  5271  0308  1696               	bsf	22,5	;volatile
  5272                           
  5273                           ;i2c_master.c: 613: SSP1CON2bits.ACKEN = 1;
  5274  0309  1616               	bsf	22,4	;volatile
  5275  030A  0008               	return
  5276  030B                     __end_of_I2C_MasterSendNack:	
  5277                           
  5278                           	psect	text43
  5279  0317                     __ptext43:	
  5280 ;; *************** function _I2C_MasterStartRx *****************
  5281 ;; Defined at:
  5282 ;;		line 584 in file "mcc_generated_files/i2c_master.c"
  5283 ;; Parameters:    Size  Location     Type
  5284 ;;		None
  5285 ;; Auto vars:     Size  Location     Type
  5286 ;;		None
  5287 ;; Return value:  Size  Location     Type
  5288 ;;                  1    wreg      void 
  5289 ;; Registers used:
  5290 ;;		None
  5291 ;; Tracked objects:
  5292 ;;		On entry : 0/0
  5293 ;;		On exit  : 0/0
  5294 ;;		Unchanged: 0/0
  5295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5296 ;;      Params:         0       0       0       0       0       0       0       0
  5297 ;;      Locals:         0       0       0       0       0       0       0       0
  5298 ;;      Temps:          0       0       0       0       0       0       0       0
  5299 ;;      Totals:         0       0       0       0       0       0       0       0
  5300 ;;Total ram usage:        0 bytes
  5301 ;; Hardware stack levels used:    1
  5302 ;; This function calls:
  5303 ;;		Nothing
  5304 ;; This function is called by:
  5305 ;;		_I2C_DO_RCEN
  5306 ;; This function uses a non-reentrant model
  5307 ;;
  5308                           
  5309                           
  5310                           ;psect for function _I2C_MasterStartRx
  5311  0317                     _I2C_MasterStartRx:	
  5312                           
  5313                           ;i2c_master.c: 586: SSP1CON2bits.RCEN = 1;
  5314                           
  5315                           ;incstack = 0
  5316                           ; Regs used in _I2C_MasterStartRx: []
  5317  0317  0024               	movlb	4	; select bank4
  5318  0318  1596               	bsf	22,3	;volatile
  5319  0319  0008               	return
  5320  031A                     __end_of_I2C_MasterStartRx:	
  5321                           
  5322                           	psect	text44
  5323  01D1                     __ptext44:	
  5324 ;; *************** function _rdBlkRegCompleteHandler *****************
  5325 ;; Defined at:
  5326 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
  5327 ;; Parameters:    Size  Location     Type
  5328 ;;  ptr             1    1[BANK0 ] PTR void 
  5329 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5330 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  5331 ;; Auto vars:     Size  Location     Type
  5332 ;;		None
  5333 ;; Return value:  Size  Location     Type
  5334 ;;                  1    wreg      enum E97
  5335 ;; Registers used:
  5336 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5337 ;; Tracked objects:
  5338 ;;		On entry : 0/0
  5339 ;;		On exit  : 0/0
  5340 ;;		Unchanged: 0/0
  5341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5342 ;;      Params:         0       1       0       0       0       0       0       0
  5343 ;;      Locals:         0       0       0       0       0       0       0       0
  5344 ;;      Temps:          0       0       0       0       0       0       0       0
  5345 ;;      Totals:         0       1       0       0       0       0       0       0
  5346 ;;Total ram usage:        1 bytes
  5347 ;; Hardware stack levels used:    1
  5348 ;; Hardware stack levels required when called:    2
  5349 ;; This function calls:
  5350 ;;		_I2C_SetBuffer
  5351 ;;		_I2C_SetDataCompleteCallback
  5352 ;; This function is called by:
  5353 ;;		_I2C_ReadDataBlock
  5354 ;;		_I2C_DO_TX
  5355 ;;		_I2C_DO_RX
  5356 ;;		_I2C_DO_TX_EMPTY
  5357 ;;		_I2C_DO_ADDRESS_NACK
  5358 ;;		_I2C_DO_RX_EMPTY
  5359 ;; This function uses a non-reentrant model
  5360 ;;
  5361                           
  5362                           
  5363                           ;psect for function _rdBlkRegCompleteHandler
  5364  01D1                     _rdBlkRegCompleteHandler:	
  5365                           
  5366                           ;i2c_master_example.c: 172: I2C_SetBuffer(((i2c_buffer_t *)ptr)->data,((i2c_buffer_t*)pt
      +                          r)->len);
  5367                           
  5368                           ;incstack = 0
  5369                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  5370  01D1  0020               	movlb	0	; select bank0
  5371  01D2  0847               	movf	rdBlkRegCompleteHandler@ptr,w
  5372  01D3  0086               	movwf	6
  5373  01D4  0187               	clrf	7
  5374  01D5  3F40               	moviw [0]fsr1
  5375  01D6  00F0               	movwf	I2C_SetBuffer@bufferSize
  5376  01D7  3F41               	moviw [1]fsr1
  5377  01D8  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  5378  01D9  0847               	movf	rdBlkRegCompleteHandler@ptr,w
  5379  01DA  3E02               	addlw	2
  5380  01DB  0086               	movwf	6
  5381  01DC  0187               	clrf	7
  5382  01DD  0801               	movf	1,w
  5383  01DE  3182  2251  3181   	fcall	_I2C_SetBuffer
  5384                           
  5385                           ;i2c_master_example.c: 173: I2C_SetDataCompleteCallback((0),(0));
  5386  01E1  3000               	movlw	0
  5387  01E2  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  5388  01E3  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  5389  01E4  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  5390  01E5  3182  225F         	fcall	_I2C_SetDataCompleteCallback
  5391                           
  5392                           ;i2c_master_example.c: 174: return I2C_RESTART_READ;
  5393  01E7  3002               	movlw	2
  5394  01E8  0008               	return
  5395  01E9                     __end_of_rdBlkRegCompleteHandler:	
  5396                           
  5397                           	psect	text45
  5398  020D                     __ptext45:	
  5399 ;; *************** function _wr1RegCompleteHandler *****************
  5400 ;; Defined at:
  5401 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
  5402 ;; Parameters:    Size  Location     Type
  5403 ;;  ptr             1    1[BANK0 ] PTR void 
  5404 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5405 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  5406 ;; Auto vars:     Size  Location     Type
  5407 ;;		None
  5408 ;; Return value:  Size  Location     Type
  5409 ;;                  1    wreg      enum E97
  5410 ;; Registers used:
  5411 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5412 ;; Tracked objects:
  5413 ;;		On entry : 0/0
  5414 ;;		On exit  : 0/0
  5415 ;;		Unchanged: 0/0
  5416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5417 ;;      Params:         0       1       0       0       0       0       0       0
  5418 ;;      Locals:         0       0       0       0       0       0       0       0
  5419 ;;      Temps:          0       0       0       0       0       0       0       0
  5420 ;;      Totals:         0       1       0       0       0       0       0       0
  5421 ;;Total ram usage:        1 bytes
  5422 ;; Hardware stack levels used:    1
  5423 ;; Hardware stack levels required when called:    2
  5424 ;; This function calls:
  5425 ;;		_I2C_SetBuffer
  5426 ;;		_I2C_SetDataCompleteCallback
  5427 ;; This function is called by:
  5428 ;;		_I2C_Write1ByteRegister
  5429 ;;		_I2C_DO_TX
  5430 ;;		_I2C_DO_RX
  5431 ;;		_I2C_DO_TX_EMPTY
  5432 ;;		_I2C_DO_ADDRESS_NACK
  5433 ;;		_I2C_DO_RX_EMPTY
  5434 ;; This function uses a non-reentrant model
  5435 ;;
  5436                           
  5437                           
  5438                           ;psect for function _wr1RegCompleteHandler
  5439  020D                     _wr1RegCompleteHandler:	
  5440                           
  5441                           ;i2c_master_example.c: 158: I2C_SetBuffer(ptr,1);
  5442                           
  5443                           ;incstack = 0
  5444                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  5445  020D  3001               	movlw	1
  5446  020E  00F0               	movwf	I2C_SetBuffer@bufferSize
  5447  020F  3000               	movlw	0
  5448  0210  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  5449  0211  0020               	movlb	0	; select bank0
  5450  0212  0847               	movf	wr1RegCompleteHandler@ptr,w
  5451  0213  3182  2251  3182   	fcall	_I2C_SetBuffer
  5452                           
  5453                           ;i2c_master_example.c: 159: I2C_SetDataCompleteCallback((0),(0));
  5454  0216  3000               	movlw	0
  5455  0217  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  5456  0218  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  5457  0219  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  5458  021A  3182  225F         	fcall	_I2C_SetDataCompleteCallback
  5459                           
  5460                           ;i2c_master_example.c: 160: return I2C_CONTINUE;
  5461  021C  3004               	movlw	4
  5462  021D  0008               	return
  5463  021E                     __end_of_wr1RegCompleteHandler:	
  5464                           
  5465                           	psect	text46
  5466  021E                     __ptext46:	
  5467 ;; *************** function _rd2RegCompleteHandler *****************
  5468 ;; Defined at:
  5469 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
  5470 ;; Parameters:    Size  Location     Type
  5471 ;;  ptr             1    1[BANK0 ] PTR void 
  5472 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5473 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;		None
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  1    wreg      enum E97
  5478 ;; Registers used:
  5479 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5485 ;;      Params:         0       1       0       0       0       0       0       0
  5486 ;;      Locals:         0       0       0       0       0       0       0       0
  5487 ;;      Temps:          0       0       0       0       0       0       0       0
  5488 ;;      Totals:         0       1       0       0       0       0       0       0
  5489 ;;Total ram usage:        1 bytes
  5490 ;; Hardware stack levels used:    1
  5491 ;; Hardware stack levels required when called:    2
  5492 ;; This function calls:
  5493 ;;		_I2C_SetBuffer
  5494 ;;		_I2C_SetDataCompleteCallback
  5495 ;; This function is called by:
  5496 ;;		_I2C_Read2ByteRegister
  5497 ;;		_I2C_DO_TX
  5498 ;;		_I2C_DO_RX
  5499 ;;		_I2C_DO_TX_EMPTY
  5500 ;;		_I2C_DO_ADDRESS_NACK
  5501 ;;		_I2C_DO_RX_EMPTY
  5502 ;; This function uses a non-reentrant model
  5503 ;;
  5504                           
  5505                           
  5506                           ;psect for function _rd2RegCompleteHandler
  5507  021E                     _rd2RegCompleteHandler:	
  5508                           
  5509                           ;i2c_master_example.c: 151: I2C_SetBuffer(ptr,2);
  5510                           
  5511                           ;incstack = 0
  5512                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  5513  021E  3002               	movlw	2
  5514  021F  00F0               	movwf	I2C_SetBuffer@bufferSize
  5515  0220  3000               	movlw	0
  5516  0221  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  5517  0222  0020               	movlb	0	; select bank0
  5518  0223  0847               	movf	rd2RegCompleteHandler@ptr,w
  5519  0224  3182  2251  3182   	fcall	_I2C_SetBuffer
  5520                           
  5521                           ;i2c_master_example.c: 152: I2C_SetDataCompleteCallback((0),(0));
  5522  0227  3000               	movlw	0
  5523  0228  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  5524  0229  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  5525  022A  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  5526  022B  3182  225F         	fcall	_I2C_SetDataCompleteCallback
  5527                           
  5528                           ;i2c_master_example.c: 153: return I2C_RESTART_READ;
  5529  022D  3002               	movlw	2
  5530  022E  0008               	return
  5531  022F                     __end_of_rd2RegCompleteHandler:	
  5532                           
  5533                           	psect	text47
  5534  022F                     __ptext47:	
  5535 ;; *************** function _rd1RegCompleteHandler *****************
  5536 ;; Defined at:
  5537 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
  5538 ;; Parameters:    Size  Location     Type
  5539 ;;  ptr             1    1[BANK0 ] PTR void 
  5540 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5541 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  5542 ;; Auto vars:     Size  Location     Type
  5543 ;;		None
  5544 ;; Return value:  Size  Location     Type
  5545 ;;                  1    wreg      enum E97
  5546 ;; Registers used:
  5547 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5548 ;; Tracked objects:
  5549 ;;		On entry : 0/0
  5550 ;;		On exit  : 0/0
  5551 ;;		Unchanged: 0/0
  5552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5553 ;;      Params:         0       1       0       0       0       0       0       0
  5554 ;;      Locals:         0       0       0       0       0       0       0       0
  5555 ;;      Temps:          0       0       0       0       0       0       0       0
  5556 ;;      Totals:         0       1       0       0       0       0       0       0
  5557 ;;Total ram usage:        1 bytes
  5558 ;; Hardware stack levels used:    1
  5559 ;; Hardware stack levels required when called:    2
  5560 ;; This function calls:
  5561 ;;		_I2C_SetBuffer
  5562 ;;		_I2C_SetDataCompleteCallback
  5563 ;; This function is called by:
  5564 ;;		_I2C_Read1ByteRegister
  5565 ;;		_I2C_DO_TX
  5566 ;;		_I2C_DO_RX
  5567 ;;		_I2C_DO_TX_EMPTY
  5568 ;;		_I2C_DO_ADDRESS_NACK
  5569 ;;		_I2C_DO_RX_EMPTY
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           
  5574                           ;psect for function _rd1RegCompleteHandler
  5575  022F                     _rd1RegCompleteHandler:	
  5576                           
  5577                           ;i2c_master_example.c: 144: I2C_SetBuffer(ptr,1);
  5578                           
  5579                           ;incstack = 0
  5580                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  5581  022F  3001               	movlw	1
  5582  0230  00F0               	movwf	I2C_SetBuffer@bufferSize
  5583  0231  3000               	movlw	0
  5584  0232  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  5585  0233  0020               	movlb	0	; select bank0
  5586  0234  0847               	movf	rd1RegCompleteHandler@ptr,w
  5587  0235  3182  2251  3182   	fcall	_I2C_SetBuffer
  5588                           
  5589                           ;i2c_master_example.c: 145: I2C_SetDataCompleteCallback((0),(0));
  5590  0238  3000               	movlw	0
  5591  0239  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  5592  023A  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  5593  023B  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  5594  023C  3182  225F         	fcall	_I2C_SetDataCompleteCallback
  5595                           
  5596                           ;i2c_master_example.c: 146: return I2C_RESTART_READ;
  5597  023E  3002               	movlw	2
  5598  023F  0008               	return
  5599  0240                     __end_of_rd1RegCompleteHandler:	
  5600                           
  5601                           	psect	text48
  5602  0320                     __ptext48:	
  5603 ;; *************** function _I2C_CallbackReturnReset *****************
  5604 ;; Defined at:
  5605 ;;		line 526 in file "mcc_generated_files/i2c_master.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;  funPtr          1    1[BANK0 ] PTR void 
  5608 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5609 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  5610 ;; Auto vars:     Size  Location     Type
  5611 ;;		None
  5612 ;; Return value:  Size  Location     Type
  5613 ;;                  1    wreg      enum E97
  5614 ;; Registers used:
  5615 ;;		wreg
  5616 ;; Tracked objects:
  5617 ;;		On entry : 0/0
  5618 ;;		On exit  : 0/0
  5619 ;;		Unchanged: 0/0
  5620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5621 ;;      Params:         0       1       0       0       0       0       0       0
  5622 ;;      Locals:         0       0       0       0       0       0       0       0
  5623 ;;      Temps:          0       0       0       0       0       0       0       0
  5624 ;;      Totals:         0       1       0       0       0       0       0       0
  5625 ;;Total ram usage:        1 bytes
  5626 ;; Hardware stack levels used:    1
  5627 ;; This function calls:
  5628 ;;		Nothing
  5629 ;; This function is called by:
  5630 ;;		_I2C_Open
  5631 ;;		_I2C_DO_TX
  5632 ;;		_I2C_DO_RX
  5633 ;;		_I2C_DO_TX_EMPTY
  5634 ;;		_I2C_DO_ADDRESS_NACK
  5635 ;;		_I2C_DO_RX_EMPTY
  5636 ;; This function uses a non-reentrant model
  5637 ;;
  5638                           
  5639                           
  5640                           ;psect for function _I2C_CallbackReturnReset
  5641  0320                     _I2C_CallbackReturnReset:	
  5642                           
  5643                           ;i2c_master.c: 528: return I2C_RESET_LINK;
  5644                           
  5645                           ;incstack = 0
  5646                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
  5647  0320  3005               	movlw	5
  5648  0321  0008               	return
  5649  0322                     __end_of_I2C_CallbackReturnReset:	
  5650                           
  5651                           	psect	text49
  5652  0322                     __ptext49:	
  5653 ;; *************** function _I2C_CallbackReturnStop *****************
  5654 ;; Defined at:
  5655 ;;		line 521 in file "mcc_generated_files/i2c_master.c"
  5656 ;; Parameters:    Size  Location     Type
  5657 ;;  funPtr          1    1[BANK0 ] PTR void 
  5658 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5659 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;		None
  5662 ;; Return value:  Size  Location     Type
  5663 ;;                  1    wreg      enum E97
  5664 ;; Registers used:
  5665 ;;		wreg
  5666 ;; Tracked objects:
  5667 ;;		On entry : 0/0
  5668 ;;		On exit  : 0/0
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5671 ;;      Params:         0       1       0       0       0       0       0       0
  5672 ;;      Locals:         0       0       0       0       0       0       0       0
  5673 ;;      Temps:          0       0       0       0       0       0       0       0
  5674 ;;      Totals:         0       1       0       0       0       0       0       0
  5675 ;;Total ram usage:        1 bytes
  5676 ;; Hardware stack levels used:    1
  5677 ;; This function calls:
  5678 ;;		Nothing
  5679 ;; This function is called by:
  5680 ;;		_I2C_SetCallback
  5681 ;;		_I2C_Open
  5682 ;;		_I2C_DO_TX
  5683 ;;		_I2C_DO_RX
  5684 ;;		_I2C_DO_TX_EMPTY
  5685 ;;		_I2C_DO_ADDRESS_NACK
  5686 ;;		_I2C_DO_RX_EMPTY
  5687 ;; This function uses a non-reentrant model
  5688 ;;
  5689                           
  5690                           
  5691                           ;psect for function _I2C_CallbackReturnStop
  5692  0322                     _I2C_CallbackReturnStop:	
  5693                           
  5694                           ;i2c_master.c: 523: return I2C_STOP;
  5695                           
  5696                           ;incstack = 0
  5697                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
  5698  0322  3001               	movlw	1
  5699  0323  0008               	return
  5700  0324                     __end_of_I2C_CallbackReturnStop:	
  5701                           
  5702                           	psect	text50
  5703  0240                     __ptext50:	
  5704 ;; *************** function _wr2RegCompleteHandler *****************
  5705 ;; Defined at:
  5706 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
  5707 ;; Parameters:    Size  Location     Type
  5708 ;;  ptr             1    1[BANK0 ] PTR void 
  5709 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5710 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  5711 ;; Auto vars:     Size  Location     Type
  5712 ;;		None
  5713 ;; Return value:  Size  Location     Type
  5714 ;;                  1    wreg      enum E97
  5715 ;; Registers used:
  5716 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5717 ;; Tracked objects:
  5718 ;;		On entry : 0/0
  5719 ;;		On exit  : 0/0
  5720 ;;		Unchanged: 0/0
  5721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5722 ;;      Params:         0       1       0       0       0       0       0       0
  5723 ;;      Locals:         0       0       0       0       0       0       0       0
  5724 ;;      Temps:          0       0       0       0       0       0       0       0
  5725 ;;      Totals:         0       1       0       0       0       0       0       0
  5726 ;;Total ram usage:        1 bytes
  5727 ;; Hardware stack levels used:    1
  5728 ;; Hardware stack levels required when called:    2
  5729 ;; This function calls:
  5730 ;;		_I2C_SetBuffer
  5731 ;;		_I2C_SetDataCompleteCallback
  5732 ;; This function is called by:
  5733 ;;		_I2C_Write2ByteRegister
  5734 ;;		_I2C_DO_TX
  5735 ;;		_I2C_DO_RX
  5736 ;;		_I2C_DO_TX_EMPTY
  5737 ;;		_I2C_DO_ADDRESS_NACK
  5738 ;;		_I2C_DO_RX_EMPTY
  5739 ;; This function uses a non-reentrant model
  5740 ;;
  5741                           
  5742                           
  5743                           ;psect for function _wr2RegCompleteHandler
  5744  0240                     _wr2RegCompleteHandler:	
  5745                           
  5746                           ;i2c_master_example.c: 165: I2C_SetBuffer(ptr,2);
  5747                           
  5748                           ;incstack = 0
  5749                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  5750  0240  3002               	movlw	2
  5751  0241  00F0               	movwf	I2C_SetBuffer@bufferSize
  5752  0242  3000               	movlw	0
  5753  0243  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  5754  0244  0020               	movlb	0	; select bank0
  5755  0245  0847               	movf	wr2RegCompleteHandler@ptr,w
  5756  0246  3182  2251  3182   	fcall	_I2C_SetBuffer
  5757                           
  5758                           ;i2c_master_example.c: 166: I2C_SetDataCompleteCallback((0),(0));
  5759  0249  3000               	movlw	0
  5760  024A  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  5761  024B  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  5762  024C  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  5763  024D  3182  225F         	fcall	_I2C_SetDataCompleteCallback
  5764                           
  5765                           ;i2c_master_example.c: 167: return I2C_CONTINUE;
  5766  024F  3004               	movlw	4
  5767  0250  0008               	return
  5768  0251                     __end_of_wr2RegCompleteHandler:	
  5769                           
  5770                           	psect	text51
  5771  025F                     __ptext51:	
  5772 ;; *************** function _I2C_SetDataCompleteCallback *****************
  5773 ;; Defined at:
  5774 ;;		line 274 in file "mcc_generated_files/i2c_master.c"
  5775 ;; Parameters:    Size  Location     Type
  5776 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
  5777 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), 
  5778 ;;		 -> rd1RegCompleteHandler(1), Absolute function(1), 
  5779 ;;  ptr             1    7[COMMON] PTR void 
  5780 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5781 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  5782 ;; Auto vars:     Size  Location     Type
  5783 ;;		None
  5784 ;; Return value:  Size  Location     Type
  5785 ;;                  1    wreg      void 
  5786 ;; Registers used:
  5787 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5788 ;; Tracked objects:
  5789 ;;		On entry : 0/0
  5790 ;;		On exit  : 0/0
  5791 ;;		Unchanged: 0/0
  5792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5793 ;;      Params:         3       0       0       0       0       0       0       0
  5794 ;;      Locals:         0       0       0       0       0       0       0       0
  5795 ;;      Temps:          0       1       0       0       0       0       0       0
  5796 ;;      Totals:         3       1       0       0       0       0       0       0
  5797 ;;Total ram usage:        4 bytes
  5798 ;; Hardware stack levels used:    1
  5799 ;; Hardware stack levels required when called:    1
  5800 ;; This function calls:
  5801 ;;		_I2C_SetCallback
  5802 ;; This function is called by:
  5803 ;;		_rd1RegCompleteHandler
  5804 ;;		_rd2RegCompleteHandler
  5805 ;;		_wr1RegCompleteHandler
  5806 ;;		_wr2RegCompleteHandler
  5807 ;;		_rdBlkRegCompleteHandler
  5808 ;;		_I2C_Read1ByteRegister
  5809 ;;		_I2C_Read2ByteRegister
  5810 ;;		_I2C_Write1ByteRegister
  5811 ;;		_I2C_Write2ByteRegister
  5812 ;;		_I2C_ReadDataBlock
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           
  5816                           
  5817                           ;psect for function _I2C_SetDataCompleteCallback
  5818  025F                     _I2C_SetDataCompleteCallback:	
  5819                           
  5820                           ;i2c_master.c: 276: I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  5821                           
  5822                           ;incstack = 0
  5823                           ; Regs used in _I2C_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  5824  025F  0876               	movf	I2C_SetDataCompleteCallback@cb+1,w
  5825  0260  00F1               	movwf	I2C_SetCallback@cb+1
  5826  0261  0875               	movf	I2C_SetDataCompleteCallback@cb,w
  5827  0262  00F0               	movwf	I2C_SetCallback@cb
  5828  0263  0877               	movf	I2C_SetDataCompleteCallback@ptr,w
  5829  0264  0020               	movlb	0	; select bank0
  5830  0265  00C6               	movwf	??_I2C_SetDataCompleteCallback
  5831  0266  0846               	movf	??_I2C_SetDataCompleteCallback,w
  5832  0267  00F2               	movwf	I2C_SetCallback@ptr
  5833  0268  3000               	movlw	0
  5834  0269  3181  2139         	fcall	_I2C_SetCallback
  5835  026B  0008               	return
  5836  026C                     __end_of_I2C_SetDataCompleteCallback:	
  5837                           
  5838                           	psect	text52
  5839  0139                     __ptext52:	
  5840 ;; *************** function _I2C_SetCallback *****************
  5841 ;; Defined at:
  5842 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
  5843 ;; Parameters:    Size  Location     Type
  5844 ;;  idx             1    wreg     enum E4239
  5845 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
  5846 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), 
  5847 ;;		 -> rd1RegCompleteHandler(1), Absolute function(1), 
  5848 ;;  ptr             1    2[COMMON] PTR void 
  5849 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5850 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  5851 ;; Auto vars:     Size  Location     Type
  5852 ;;  idx             1    4[COMMON] enum E4239
  5853 ;; Return value:  Size  Location     Type
  5854 ;;                  1    wreg      void 
  5855 ;; Registers used:
  5856 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5857 ;; Tracked objects:
  5858 ;;		On entry : 0/0
  5859 ;;		On exit  : 0/0
  5860 ;;		Unchanged: 0/0
  5861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5862 ;;      Params:         3       0       0       0       0       0       0       0
  5863 ;;      Locals:         1       0       0       0       0       0       0       0
  5864 ;;      Temps:          1       0       0       0       0       0       0       0
  5865 ;;      Totals:         5       0       0       0       0       0       0       0
  5866 ;;Total ram usage:        5 bytes
  5867 ;; Hardware stack levels used:    1
  5868 ;; This function calls:
  5869 ;;		Nothing
  5870 ;; This function is called by:
  5871 ;;		_I2C_SetDataCompleteCallback
  5872 ;;		_I2C_SetWriteCollisionCallback
  5873 ;;		_I2C_SetAddressNackCallback
  5874 ;;		_I2C_SetDataNackCallback
  5875 ;;		_I2C_SetTimeoutCallback
  5876 ;; This function uses a non-reentrant model
  5877 ;;
  5878                           
  5879                           
  5880                           ;psect for function _I2C_SetCallback
  5881  0139                     _I2C_SetCallback:	
  5882                           
  5883                           ;incstack = 0
  5884                           ; Regs used in _I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
  5885                           ;I2C_SetCallback@idx stored from wreg
  5886  0139  00F4               	movwf	I2C_SetCallback@idx
  5887                           
  5888                           ;i2c_master.c: 306: if(cb)
  5889  013A  0870               	movf	I2C_SetCallback@cb,w
  5890  013B  0471               	iorwf	I2C_SetCallback@cb+1,w
  5891  013C  1903               	btfsc	3,2
  5892  013D  294F               	goto	i1l2451
  5893                           
  5894                           ;i2c_master.c: 307: {
  5895                           ;i2c_master.c: 308: I2C_Status.callbackTable[idx] = cb;
  5896  013E  3574               	lslf	I2C_SetCallback@idx,w
  5897  013F  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  5898  0140  0086               	movwf	6
  5899  0141  0187               	clrf	7
  5900  0142  0870               	movf	I2C_SetCallback@cb,w
  5901  0143  3FC0               	movwi [0]fsr1
  5902  0144  0871               	movf	I2C_SetCallback@cb+1,w
  5903  0145  3FC1               	movwi [1]fsr1
  5904                           
  5905                           ;i2c_master.c: 309: I2C_Status.callbackPayload[idx] = ptr;
  5906  0146  0872               	movf	I2C_SetCallback@ptr,w
  5907  0147  00F3               	movwf	??_I2C_SetCallback
  5908  0148  0874               	movf	I2C_SetCallback@idx,w
  5909  0149  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  5910  014A  0086               	movwf	6
  5911  014B  0187               	clrf	7
  5912  014C  0873               	movf	??_I2C_SetCallback,w
  5913  014D  0081               	movwf	1
  5914                           
  5915                           ;i2c_master.c: 310: }
  5916  014E  0008               	return
  5917  014F                     i1l2451:	
  5918                           
  5919                           ;i2c_master.c: 311: else
  5920                           ;i2c_master.c: 312: {
  5921                           ;i2c_master.c: 313: I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  5922  014F  3574               	lslf	I2C_SetCallback@idx,w
  5923  0150  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  5924  0151  0086               	movwf	6
  5925  0152  0187               	clrf	7
  5926  0153  3022               	movlw	low _I2C_CallbackReturnStop
  5927  0154  3FC0               	movwi [0]fsr1
  5928  0155  3003               	movlw	high _I2C_CallbackReturnStop
  5929  0156  3FC1               	movwi [1]fsr1
  5930                           
  5931                           ;i2c_master.c: 314: I2C_Status.callbackPayload[idx] = (0);
  5932  0157  0874               	movf	I2C_SetCallback@idx,w
  5933  0158  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  5934  0159  0086               	movwf	6
  5935  015A  0187               	clrf	7
  5936  015B  0181               	clrf	1
  5937  015C  0008               	return
  5938  015D                     __end_of_I2C_SetCallback:	
  5939                           
  5940                           	psect	text53
  5941  0251                     __ptext53:	
  5942 ;; *************** function _I2C_SetBuffer *****************
  5943 ;; Defined at:
  5944 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
  5945 ;; Parameters:    Size  Location     Type
  5946 ;;  buffer          1    wreg     PTR void 
  5947 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
  5948 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
  5949 ;;		 -> I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  5950 ;;  bufferSize      2    0[COMMON] unsigned int 
  5951 ;; Auto vars:     Size  Location     Type
  5952 ;;  buffer          1    3[COMMON] PTR void 
  5953 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
  5954 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
  5955 ;;		 -> I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  5956 ;; Return value:  Size  Location     Type
  5957 ;;                  1    wreg      void 
  5958 ;; Registers used:
  5959 ;;		wreg
  5960 ;; Tracked objects:
  5961 ;;		On entry : 0/0
  5962 ;;		On exit  : 0/0
  5963 ;;		Unchanged: 0/0
  5964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5965 ;;      Params:         2       0       0       0       0       0       0       0
  5966 ;;      Locals:         1       0       0       0       0       0       0       0
  5967 ;;      Temps:          1       0       0       0       0       0       0       0
  5968 ;;      Totals:         4       0       0       0       0       0       0       0
  5969 ;;Total ram usage:        4 bytes
  5970 ;; Hardware stack levels used:    1
  5971 ;; This function calls:
  5972 ;;		Nothing
  5973 ;; This function is called by:
  5974 ;;		_rd1RegCompleteHandler
  5975 ;;		_rd2RegCompleteHandler
  5976 ;;		_wr1RegCompleteHandler
  5977 ;;		_wr2RegCompleteHandler
  5978 ;;		_rdBlkRegCompleteHandler
  5979 ;;		_I2C_Read1ByteRegister
  5980 ;;		_I2C_Read2ByteRegister
  5981 ;;		_I2C_Write1ByteRegister
  5982 ;;		_I2C_Write2ByteRegister
  5983 ;;		_I2C_WriteNBytes
  5984 ;;		_I2C_ReadNBytes
  5985 ;;		_I2C_ReadDataBlock
  5986 ;; This function uses a non-reentrant model
  5987 ;;
  5988                           
  5989                           
  5990                           ;psect for function _I2C_SetBuffer
  5991  0251                     _I2C_SetBuffer:	
  5992                           
  5993                           ;incstack = 0
  5994                           ; Regs used in _I2C_SetBuffer: [wreg]
  5995                           ;I2C_SetBuffer@buffer stored from wreg
  5996  0251  00F3               	movwf	I2C_SetBuffer@buffer
  5997                           
  5998                           ;i2c_master.c: 266: if(I2C_Status.bufferFree)
  5999  0252  0020               	movlb	0	; select bank0
  6000  0253  1DBC               	btfss	_I2C_Status+28,3
  6001  0254  0008               	return
  6002                           
  6003                           ;i2c_master.c: 267: {
  6004                           ;i2c_master.c: 268: I2C_Status.data_ptr = buffer;
  6005  0255  0873               	movf	I2C_SetBuffer@buffer,w
  6006  0256  00F2               	movwf	??_I2C_SetBuffer
  6007  0257  0872               	movf	??_I2C_SetBuffer,w
  6008  0258  00B7               	movwf	low ((_I2C_Status| 0+23))
  6009                           
  6010                           ;i2c_master.c: 269: I2C_Status.data_length = bufferSize;
  6011  0259  0871               	movf	I2C_SetBuffer@bufferSize+1,w
  6012  025A  00B9               	movwf	_I2C_Status+25
  6013  025B  0870               	movf	I2C_SetBuffer@bufferSize,w
  6014  025C  00B8               	movwf	_I2C_Status+24
  6015                           
  6016                           ;i2c_master.c: 270: I2C_Status.bufferFree = 0;
  6017  025D  11BC               	bcf	_I2C_Status+28,3
  6018  025E  0008               	return
  6019  025F                     __end_of_I2C_SetBuffer:	
  6020                           
  6021                           	psect	text54
  6022  031A                     __ptext54:	
  6023 ;; *************** function _I2C_MasterStop *****************
  6024 ;; Defined at:
  6025 ;;		line 594 in file "mcc_generated_files/i2c_master.c"
  6026 ;; Parameters:    Size  Location     Type
  6027 ;;		None
  6028 ;; Auto vars:     Size  Location     Type
  6029 ;;		None
  6030 ;; Return value:  Size  Location     Type
  6031 ;;                  1    wreg      void 
  6032 ;; Registers used:
  6033 ;;		None
  6034 ;; Tracked objects:
  6035 ;;		On entry : 0/0
  6036 ;;		On exit  : 0/0
  6037 ;;		Unchanged: 0/0
  6038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6039 ;;      Params:         0       0       0       0       0       0       0       0
  6040 ;;      Locals:         0       0       0       0       0       0       0       0
  6041 ;;      Temps:          0       0       0       0       0       0       0       0
  6042 ;;      Totals:         0       0       0       0       0       0       0       0
  6043 ;;Total ram usage:        0 bytes
  6044 ;; Hardware stack levels used:    1
  6045 ;; This function calls:
  6046 ;;		Nothing
  6047 ;; This function is called by:
  6048 ;;		_I2C_DO_SEND_STOP
  6049 ;; This function uses a non-reentrant model
  6050 ;;
  6051                           
  6052                           
  6053                           ;psect for function _I2C_MasterStop
  6054  031A                     _I2C_MasterStop:	
  6055                           
  6056                           ;i2c_master.c: 596: SSP1CON2bits.PEN = 1;
  6057                           
  6058                           ;incstack = 0
  6059                           ; Regs used in _I2C_MasterStop: []
  6060  031A  0024               	movlb	4	; select bank4
  6061  031B  1516               	bsf	22,2	;volatile
  6062  031C  0008               	return
  6063  031D                     __end_of_I2C_MasterStop:	
  6064                           
  6065                           	psect	text55
  6066  031D                     __ptext55:	
  6067 ;; *************** function _I2C_MasterEnableRestart *****************
  6068 ;; Defined at:
  6069 ;;		line 574 in file "mcc_generated_files/i2c_master.c"
  6070 ;; Parameters:    Size  Location     Type
  6071 ;;		None
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;		None
  6074 ;; Return value:  Size  Location     Type
  6075 ;;                  1    wreg      void 
  6076 ;; Registers used:
  6077 ;;		None
  6078 ;; Tracked objects:
  6079 ;;		On entry : 0/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6083 ;;      Params:         0       0       0       0       0       0       0       0
  6084 ;;      Locals:         0       0       0       0       0       0       0       0
  6085 ;;      Temps:          0       0       0       0       0       0       0       0
  6086 ;;      Totals:         0       0       0       0       0       0       0       0
  6087 ;;Total ram usage:        0 bytes
  6088 ;; Hardware stack levels used:    1
  6089 ;; This function calls:
  6090 ;;		Nothing
  6091 ;; This function is called by:
  6092 ;;		_I2C_DO_SEND_RESTART_READ
  6093 ;;		_I2C_DO_SEND_RESTART_WRITE
  6094 ;;		_I2C_DO_SEND_RESTART
  6095 ;;		_I2C_DO_RX_EMPTY
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           
  6100                           ;psect for function _I2C_MasterEnableRestart
  6101  031D                     _I2C_MasterEnableRestart:	
  6102                           
  6103                           ;i2c_master.c: 576: SSP1CON2bits.RSEN = 1;
  6104                           
  6105                           ;incstack = 0
  6106                           ; Regs used in _I2C_MasterEnableRestart: []
  6107  031D  0024               	movlb	4	; select bank4
  6108  031E  1496               	bsf	22,1	;volatile
  6109  031F  0008               	return
  6110  0320                     __end_of_I2C_MasterEnableRestart:	
  6111  007E                     btemp	set	126	;btemp
  6112  007E                     int$flags	set	126
  6113  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    32
    Data        0
    BSS         36
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80      2      40
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_DO_TX$1708$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_DO_RX$1714$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_DO_TX_EMPTY$1720$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_DO_RX_EMPTY$1726$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_DO_TX_EMPTY$1725	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_DO_TX_EMPTY$1720	PTR FTN(PTR void ,)enum E97 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), 

    I2C_DO_RX$1719	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_DO_RX$1714	PTR FTN(PTR void ,)enum E97 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), 

    I2C_DO_TX$1713	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_DO_TX$1708	PTR FTN(PTR void ,)enum E97 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), 

    I2C_MasterFsm$1707	const PTR FTN()enum E4221 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    S514$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    S1135$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0

    I2C_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E97 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), Absolute function(), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E97 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), Absolute function(), 

    I2C_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    S514$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    S514$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    S514$callbackTable	PTR FTN(PTR void ,)enum E97[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E97[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), 

    fsmStateTable	const PTR FTN()enum E4221[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR2_DefaultInterruptHandler(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _I2C_MasterIsr->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_DO_TX->_I2C_MasterSendTxData
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback

Critical Paths under _main in BANK0

    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     392
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     392
                     _ADC_Initialize
                  _EUSART_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      98
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0   88767
                                              7 COMMON     1     1      0
                   Absolute function *
                      _I2C_MasterIsr *
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR2_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterIsr                                        0     0      0   88767
                      _I2C_MasterFsm
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterFsm                                        3     3      0   88767
                                              4 COMMON     3     3      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX_EMPTY                                      1     1      0   22166
                                              0 COMMON     1     1      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX                                            3     3      0   22225
                                              1 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendTxData                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX                                            1     1      0   22166
                                              0 COMMON     1     1      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_ADDRESS_NACK                                  1     1      0   22166
                                              0 COMMON     1     1      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                1     0      1    4362
                                              1 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                1     0      1    4362
                                              1 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              1     0      1    4718
                                              1 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                1     0      1    4362
                                              1 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                1     0      1    4362
                                              1 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _I2C_SetDataCompleteCallback                          4     1      3    2979
                                              5 COMMON     3     0      3
                                              0 BANK0      1     1      0
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (10) _I2C_SetCallback                                     5     2      3    1117
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (9) _I2C_SetBuffer                                        4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterEnableRestart                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnStop                               1     0      1       0
                                              1 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnReset                              1     0      1       0
                                              1 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _I2C_MasterIsr *
     _I2C_MasterFsm
       _I2C_DO_ADDRESS_NACK *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
         _rd1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rd2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rdBlkRegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _wr1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _wr2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
       _I2C_DO_IDLE *
       _I2C_DO_RCEN *
         _I2C_MasterStartRx
       _I2C_DO_RESET *
       _I2C_DO_RX *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_RX_NACK_RESTART *
           _I2C_MasterSendNack
         _I2C_DO_RX_NACK_STOP *
           _I2C_MasterSendNack
         _I2C_MasterGetRxData *
         _I2C_MasterSendAck *
         _rd1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rd2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rdBlkRegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _wr1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _wr2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
       _I2C_DO_RX_ACK *
         _I2C_MasterSendAck
       _I2C_DO_RX_NACK_RESTART *
         _I2C_MasterSendNack
       _I2C_DO_RX_NACK_STOP *
         _I2C_MasterSendNack
       _I2C_DO_SEND_ADR_READ *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_ADR_WRITE *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_RESTART *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_RESTART_READ *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_RESTART_WRITE *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_STOP *
         _I2C_MasterStop
       _I2C_DO_TX *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART_READ *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_RESTART_WRITE *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
         _I2C_MasterIsNack *
         _I2C_MasterSendTxData *
         _rd1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rd2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rdBlkRegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _wr1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _wr2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
       _I2C_DO_TX_EMPTY *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
         _I2C_MasterSetIrq *
         _rd1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rd2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rdBlkRegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _wr1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _wr2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
       _I2C_MasterClearIrq *
       _I2C_MasterIsNack *
   _TMR2_ISR *
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      36       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2      28       6       50.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      36      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jun 23 14:23:42 2020

                       ??_I2C_DO_SEND_ADR_READ 0070                    __size_of_I2C_MasterSendNack 0004  
             __end_of_TMR2_SetInterruptHandler 02AC                        ??_I2C_DO_SEND_ADR_WRITE 0071  
                                  __CFG_CP$OFF 0000                          ??_I2C_DO_SEND_RESTART 0070  
                                  __CFG_LVP$ON 0000                                            l135 02E2  
                __size_of_I2C_MasterSendTxData 0005                                            _PR2 001B  
               ?_EUSART_SetFramingErrorHandler 0046                                _TMR2_Initialize 01E9  
                                 __CFG_BORV$LO 0000                                            wreg 0009  
                                 __CFG_IESO$ON 0000                       ??_I2C_CallbackReturnStop 0078  
                                 _I2C_DO_RESET 02D0                        ??_rd2RegCompleteHandler 0078  
                      __end_of_PWM1_Initialize 0291                                           _LATA 010C  
                                         _LATB 010D                                           _LATC 010E  
                                         _TMR2 001A                                           _WPUA 020C  
                                         _WPUB 020D                        ??_wr2RegCompleteHandler 0078  
                                 __CFG_WRT$OFF 0000                                  __CFG_FCMEN$ON 0000  
                                         _main 02DF                       ?_I2C_CallbackReturnReset 0047  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                  __CFG_BOREN$ON 0000  
                                         start 0030                                  __CFG_MCLRE$ON 0000  
             __size_of_rdBlkRegCompleteHandler 0018                                  _I2C_DO_TX$872 0072  
               __size_of_OSCILLATOR_Initialize 0006                                  _I2C_DO_RX_ACK 02EF  
                __end_of_OSCILLATOR_Initialize 02B2                                          ?_main 0070  
                                __CFG_WDTE$OFF 0000                                          _T2CON 001C  
                                        i1l610 002B                                          i1l603 0017  
                                        i1l605 0023                                          i1l382 006F  
                                        i1l398 00A8                                          _RCREG 0199  
                 __size_of_I2C_DO_RX_NACK_STOP 0004                                          _RCSTA 019D  
                            ??_I2C_DO_TX_EMPTY 0070                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _TXREG 019A                                          _TXSTA 019E  
                            __end_of_I2C_DO_RX 00C8                              __end_of_I2C_DO_TX 008E  
                             __end_of_TMR2_ISR 020D                                 _WDT_Initialize 02E3  
                       __size_of_I2C_MasterFsm 0027                         __size_of_I2C_MasterIsr 0003  
                      _I2C_MasterEnableRestart 031D                                          pclath 000A  
                             ?_I2C_SetCallback 0070                                          status 0003  
                                        wtemp0 007E                              ?_I2C_DO_SEND_STOP 0070  
                       __size_of_I2C_SetBuffer 000E                             ??_I2C_DO_SEND_STOP 0070  
                                _fsmStateTable 0180                                __initialization 0032  
                                 __end_of_main 02E3              __size_of_I2C_DO_SEND_RESTART_READ 0004  
                    ?_I2C_DO_SEND_RESTART_READ 0070                                 ?_I2C_DO_RX_ACK 0070  
                      __end_of_TMR2_Initialize 01FB                                 __CFG_LPBOR$OFF 0000  
                  ?_INTERRUPT_InterruptManager 0070                       _TMR2_SetInterruptHandler 02A6  
                                       ??_main 0048                              ?_I2C_MasterIsNack 0070  
                            ?_I2C_MasterSetIrq 0070                             ??_I2C_MasterIsNack 0070  
                       __end_of_WDT_Initialize 02E7                             ??_I2C_MasterSetIrq 0070  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 009D  
                                       _ADCON1 009E                                         _ADCON2 009F  
                   _EUSART_OverrunErrorHandler 0042                __end_of_I2C_CallbackReturnReset 0322  
                                       _ADRESH 009C                                         _ADRESL 009B  
              __size_of_I2C_CallbackReturnStop 0002                                         _APFCON 011D  
                I2C_SetDataCompleteCallback@cb 0075                                         _ANSELA 018C  
                                       _ANSELB 018D                                         _ANSELC 018E  
                                       _BORCON 0116                               ?_PWM1_Initialize 0070  
                                       i1l2513 0050                                         i1l2505 004A  
                                       i1l2601 00D9                                         i1l2451 014F  
                                       i1l2509 004D                                         i1l2527 0088  
                                       i1l2519 0053                                         i1l2545 00AA  
                                       i1l2563 011A                                         i1l2555 00B0  
                                       i1l2549 00AD                                         i1l2581 0164  
                                       i1l2559 0117                                         i1l2575 0121  
                                       i1l2591 016A                                         i1l2569 011E  
                                       i1l2585 0167                                         _PMADRH 0192  
                                       _PMADRL 0191                                         _PMDATH 0194  
                                       _PMDATL 0193                                         _PMCON2 0196  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                               __CFG_PWRTE$OFF 0000                            _I2C_MasterGetRxData 0314  
                                _I2C_MasterFsm 00C8                                  _I2C_MasterIsr 030B  
                               __CFG_STVREN$ON 0000                              I2C_SetCallback@cb 0070  
                      __size_of_I2C_MasterStop 0003                        __size_of_I2C_Initialize 0009  
                                _I2C_SetBuffer 0251                            _I2C_DO_ADDRESS_NACK 015D  
                         ?_I2C_MasterGetRxData 0070                                ?_WDT_Initialize 0070  
                    ??_I2C_MasterEnableRestart 0070       TMR2_SetInterruptHandler@InterruptHandler 0046  
                            _SYSTEM_Initialize 01B9                        __end_of__initialization 003F  
                        __end_of_TMR2_CallBack 0277                             ?_SYSTEM_Initialize 0070  
                         ?_I2C_DO_ADDRESS_NACK 0070                        _rdBlkRegCompleteHandler 01D1  
                               __pcstackCOMMON 0070                                 ?_I2C_MasterFsm 0070  
                               ?_I2C_MasterIsr 0070                                ??_I2C_DO_RX_ACK 0070  
                       _I2C_CallbackReturnStop 0322                            ??_SYSTEM_Initialize 0048  
                                    ?_TMR2_ISR 0070                               ?_TMR2_Initialize 0070  
                               ?_I2C_SetBuffer 0070                 __size_of_I2C_DO_SEND_ADR_WRITE 0007  
           __size_of_I2C_DO_SEND_RESTART_WRITE 0004                  __end_of_I2C_DO_SEND_ADR_WRITE 02A0  
                   ?_I2C_DO_SEND_RESTART_WRITE 0070                          ??_I2C_MasterGetRxData 0070  
                               _OPTION_REGbits 0095                     __end_of_I2C_MasterClearIrq 0311  
              ??_EUSART_SetOverrunErrorHandler 0048                      __end_of_SYSTEM_Initialize 01D1  
                            _I2C_MasterSendAck 0303                                     __pbssBANK0 0020  
                                ??_I2C_DO_IDLE 0070                 __size_of_rd2RegCompleteHandler 0011  
                                ??_I2C_DO_RCEN 0070                  __end_of_rd2RegCompleteHandler 022F  
                 __end_of_I2C_MasterSendTxData 02DF                             ?_I2C_MasterSendAck 0070  
                            _I2C_MasterStartRx 0317                 __size_of_wr2RegCompleteHandler 0011  
                        ??_I2C_DO_ADDRESS_NACK 0070                  __end_of_wr2RegCompleteHandler 0251  
                          _I2C_DO_RX_NACK_STOP 02EB                          _rd1RegCompleteHandler 022F  
                           ?_I2C_MasterStartRx 0070                     __end_of_I2C_MasterSendNack 030B  
                        _wr1RegCompleteHandler 020D                                     __pmaintext 02DF  
                          ??_I2C_MasterSendAck 0070                       rd1RegCompleteHandler@ptr 0047  
                  __end_of_I2C_DO_SEND_RESTART 02FB                                _I2C_DO_TX_EMPTY 0114  
                          I2C_SetBuffer@buffer 0073                                     ??_TMR2_ISR 0070  
                                   __pintentry 0004                            ??_I2C_MasterStartRx 0070  
                __size_of_I2C_DO_SEND_ADR_READ 0008                                        _BAUDCON 019F  
             __size_of_I2C_CallbackReturnReset 0002                 I2C_SetDataCompleteCallback@ptr 0077  
                      __size_of_ADC_Initialize 0009                       ??_I2C_DO_RX_NACK_RESTART 0070  
            __end_of_I2C_DO_SEND_RESTART_WRITE 02FF                           ?_I2C_DO_RX_NACK_STOP 0070  
                                      _PWM1DCH 0612                                        _PWM1DCL 0611  
                    __end_of_I2C_MasterSendAck 0307                                        _PWM1CON 0613  
                                      _SSP1ADD 0212                                        _SSP1BUF 0211  
                     ??_EUSART_SetErrorHandler 0048                      __end_of_I2C_MasterStartRx 031A  
                 ?_I2C_SetDataCompleteCallback 0075                                      _I2C_DO_RX 008E  
                                    _I2C_DO_TX 0043               __end_of_I2C_DO_SEND_RESTART_READ 0303  
                    ??_rdBlkRegCompleteHandler 0078                                ??_I2C_MasterFsm 0074  
                              ??_I2C_MasterIsr 0077                           _ADC_InterruptHandler 0078  
                   ??_TMR2_SetInterruptHandler 0048                            __end_of_I2C_DO_IDLE 02DA  
                          __end_of_I2C_DO_RCEN 02CA                                ??_I2C_SetBuffer 0072  
                      I2C_SetBuffer@bufferSize 0070                                 _I2C_MasterStop 031A  
                               _I2C_Initialize 0277                      __size_of_I2C_DO_SEND_STOP 0004  
                                      __ptext1 01B9                                        __ptext2 02E3  
                                      __ptext3 01E9                                        __ptext4 02A6  
                                      __ptext5 0289                                        __ptext6 01A0  
                                      __ptext7 02AC                                        __ptext8 0277  
                                      __ptext9 00EF                          ??_I2C_DO_RX_NACK_STOP 0070  
                        _OSCILLATOR_Initialize 02AC                                      _T2CONbits 001C  
                           I2C_SetCallback@idx 0074                       ??_PIN_MANAGER_Initialize 0046  
                I2C_CallbackReturnReset@funPtr 0047                             I2C_SetCallback@ptr 0072  
                     wr1RegCompleteHandler@ptr 0047                     __size_of_SYSTEM_Initialize 0018  
                                      clrloop0 02A1                           end_of_initialization 003F  
                                   ?_I2C_DO_RX 0070                                     ?_I2C_DO_TX 0070  
        __end_of_EUSART_SetOverrunErrorHandler 02B8         __size_of_EUSART_SetOverrunErrorHandler 0006  
                _EUSART_SetOverrunErrorHandler 02B2                      __size_of_I2C_MasterIsNack 0006  
                       ?_rd1RegCompleteHandler 0047                        __end_of_I2C_DO_TX_EMPTY 0139  
                    __size_of_I2C_MasterSetIrq 0003                              _EUSART_Initialize 00EF  
                       ?_wr1RegCompleteHandler 0047                             ?_EUSART_Initialize 0070  
                     __size_of_I2C_SetCallback 0024                                      _RCSTAbits 019D  
                       __end_of_I2C_MasterStop 031D                         __end_of_I2C_Initialize 0280  
                          ??_EUSART_Initialize 0048                               ??_WDT_Initialize 0046  
              __end_of_rdBlkRegCompleteHandler 01E9                           _I2C_MasterSendTxData 02DA  
              __size_of_I2C_DO_RX_NACK_RESTART 0004                               __CFG_FOSC$INTOSC 0000  
                   __size_of_I2C_MasterSendAck 0004                __size_of_EUSART_SetErrorHandler 0006  
                   __size_of_I2C_MasterStartRx 0003                      __end_of_EUSART_Initialize 0114  
                                  _I2C_DO_IDLE 02D5                                    _I2C_DO_RCEN 02C4  
                   rdBlkRegCompleteHandler@ptr 0047                                      _TXSTAbits 019E  
                      ?_I2C_CallbackReturnStop 0047                       _I2C_DO_SEND_RESTART_READ 02FF  
                     __size_of_PWM1_Initialize 0008                   I2C_CallbackReturnStop@funPtr 0047  
                              ?_I2C_MasterStop 0070                                ?_I2C_Initialize 0070  
         __end_of_TMR2_DefaultInterruptHandler 0325          __size_of_TMR2_DefaultInterruptHandler 0001  
                 _TMR2_DefaultInterruptHandler 0324                        _I2C_CallbackReturnReset 0320  
                   _EUSART_DefaultErrorHandler 0000           __size_of_I2C_SetDataCompleteCallback 000D  
                            __size_of_TMR2_ISR 0012                                 _ADC_Initialize 0280  
                        ?_I2C_MasterSendTxData 0070                         ?_OSCILLATOR_Initialize 0070  
                  ??_I2C_DO_SEND_RESTART_WRITE 0070                            start_initialization 0032  
              __size_of_PIN_MANAGER_Initialize 0019                                  ?_I2C_DO_RESET 0070  
                                  ??_I2C_DO_RX 0070                                    ??_I2C_DO_TX 0071  
               __end_of_I2C_CallbackReturnStop 0324                         _I2C_DO_RX_NACK_RESTART 02E7  
                             ?_I2C_DO_TX_EMPTY 0070                             _I2C_MasterClearIrq 030E  
               ?_EUSART_SetOverrunErrorHandler 0046                     _EUSART_FramingErrorHandler 0044  
                       _EUSART_SetErrorHandler 02BE                            ?_I2C_MasterClearIrq 0070  
                       __end_of_ADC_Initialize 0289                    __end_of_I2C_MasterGetRxData 0317  
                        __end_of_I2C_DO_RX_ACK 02F3                  ?_TMR2_DefaultInterruptHandler 0070  
                             _I2C_DO_SEND_STOP 02F3                              ??_I2C_SetCallback 0073  
                           _I2C_MasterSendNack 0307                       ?_I2C_MasterEnableRestart 0070  
                       __size_of_TMR2_CallBack 000B                          _I2C_DO_SEND_ADR_WRITE 0299  
                                  __pbssCOMMON 0078                                      ___latbits 0002  
                                __pcstackBANK0 0046                                 ??_I2C_DO_RESET 0070  
                     __size_of_TMR2_Initialize 0012                            ?_I2C_MasterSendNack 0070  
                 __end_of_I2C_DO_SEND_ADR_READ 0299                           ??_I2C_MasterClearIrq 0070  
                  __end_of_I2C_DO_ADDRESS_NACK 0180                               _I2C_MasterIsNack 02CA  
                   __size_of_EUSART_Initialize 0025                      _I2C_DO_SEND_RESTART_WRITE 02FB  
                             _I2C_MasterSetIrq 0311                                      __pnvBANK0 003E  
                        _rd2RegCompleteHandler 021E                          __end_of_fsmStateTable 01A0  
                       _PIN_MANAGER_Initialize 01A0                          _wr2RegCompleteHandler 0240  
                    ??_I2C_CallbackReturnReset 0078                           ??_I2C_MasterSendNack 0070  
                     rd2RegCompleteHandler@ptr 0047                                ?_ADC_Initialize 0070  
                       ??_I2C_MasterSendTxData 0070                              ??_PWM1_Initialize 0046  
                 ??_INTERRUPT_InterruptManager 0077                   __size_of_I2C_DO_SEND_RESTART 0004  
                      ??_rd1RegCompleteHandler 0078                        ??_wr1RegCompleteHandler 0078  
       EUSART_SetErrorHandler@interruptHandler 0046                                      clear_ram0 02A0  
                                _TMR2_CallBack 026C                                       _PIE1bits 0091  
                                     _PIE2bits 0092                              _eusartRxLastError 003D  
          __size_of_INTERRUPT_InterruptManager 002C                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0048                                       _PIR2bits 0012  
                        __end_of_I2C_MasterFsm 00EF                          __end_of_I2C_MasterIsr 030E  
                  __end_of_I2C_DO_RX_NACK_STOP 02EF                                       _SSP1CON1 0215  
                                     _SSP1CON2 0216              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _TMR2_ISR 01FB                __end_of_I2C_MasterEnableRestart 0320  
                                     _SSP1STAT 0214                          __end_of_I2C_SetBuffer 025F  
                                   _ADCON0bits 009D                         ?_I2C_DO_SEND_ADR_WRITE 0070  
                     I2C_MasterSendTxData@data 0070                 ??_TMR2_DefaultInterruptHandler 0070  
            __size_of_TMR2_SetInterruptHandler 0006                      ?_TMR2_SetInterruptHandler 0046  
                     wr2RegCompleteHandler@ptr 0047                     ??_I2C_DO_SEND_RESTART_READ 0070  
                     ?_rdBlkRegCompleteHandler 0047                                     _I2C_Status 0020  
                                 ?_I2C_DO_IDLE 0070                                   ?_I2C_DO_RCEN 0070  
                            ??_TMR2_Initialize 0048                         ?_rd2RegCompleteHandler 0047  
                               ?_TMR2_CallBack 0070                         ?_wr2RegCompleteHandler 0047  
                             ??_I2C_MasterStop 0070                               ??_I2C_Initialize 0046  
                         __end_of_I2C_DO_RESET 02D5                        ??_OSCILLATOR_Initialize 0046  
                          _EUSART_ErrorHandler 0040                           _I2C_DO_SEND_ADR_READ 0291  
                                     __ptext10 02B2                                       __ptext11 02B8  
                                     __ptext20 030E                                       __ptext12 02BE  
                                     __ptext21 015D                                       __ptext13 0280  
                                     __ptext30 02C4                                       __ptext22 02D0  
                                     __ptext31 008E                                       __ptext23 02E7  
                                     __ptext15 01FB                                       __ptext40 0303  
                                     __ptext32 0043                                       __ptext24 02EB  
                                     __ptext16 026C                                       __ptext41 0314  
                                     __ptext33 0299                                       __ptext25 02EF  
                                     __ptext17 0324                                       __ptext50 0240  
                                     __ptext42 0307                                       __ptext34 0291  
                                     __ptext26 02F3                                       __ptext18 030B  
                                     __ptext51 025F                                       __ptext43 0317  
                                     __ptext35 02D5                                       __ptext27 02F7  
                                     __ptext19 00C8                                       __ptext52 0139  
                                     __ptext44 01D1                                       __ptext36 0114  
                                     __ptext28 02FB                                       __ptext53 0251  
                                     __ptext45 020D                                       __ptext37 0311  
                                     __ptext29 02FF                                       __ptext54 031A  
                                     __ptext46 021E                                       __ptext38 02CA  
                                     __ptext55 031D                                       __ptext47 022F  
                                     __ptext39 02DA                                       __ptext48 0320  
                                     __ptext49 0322                                   _SSP1CON1bits 0215  
                                 _SSP1CON2bits 0216            __end_of_I2C_SetDataCompleteCallback 026C  
                  _I2C_SetDataCompleteCallback 025F                        ?_I2C_DO_RX_NACK_RESTART 0070  
                     __end_of_I2C_DO_SEND_STOP 02F7                                  __size_of_main 0004  
                      ?_EUSART_SetErrorHandler 0046                                _I2C_SetCallback 0139  
                ??_I2C_SetDataCompleteCallback 0046  EUSART_SetOverrunErrorHandler@interruptHandler 0046  
                                     int$flags 007E                          ?_I2C_DO_SEND_ADR_READ 0070  
           __end_of_INTERRUPT_InterruptManager 0030                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 02BE         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 02B8                                   _SSP1STATbits 0214  
                     __end_of_I2C_MasterIsNack 02D0                       __end_of_I2C_MasterSetIrq 0314  
                                   _INTCONbits 000B                 __end_of_I2C_DO_RX_NACK_RESTART 02EB  
                      __size_of_WDT_Initialize 0004                                       intlevel1 0000  
                              ??_TMR2_CallBack 0070               __size_of_I2C_MasterEnableRestart 0003  
                                   _PMCON1bits 0195                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 02C4                              __CFG_CLKOUTEN$OFF 0000  
                          _I2C_DO_SEND_RESTART 02F7                                _PWM1_Initialize 0289  
                             ??_ADC_Initialize 0046  EUSART_SetFramingErrorHandler@interruptHandler 0046  
                     __size_of_I2C_DO_TX_EMPTY 0025                                  __pstringtext1 0180  
                         ?_I2C_DO_SEND_RESTART 0070                          TMR2_ISR@CountCallBack 007A  
                 __size_of_I2C_MasterGetRxData 0003                    __size_of_I2C_MasterClearIrq 0003  
                      __end_of_I2C_SetCallback 015D                 __end_of_PIN_MANAGER_Initialize 01B9  
               __size_of_rd1RegCompleteHandler 0011                  __end_of_rd1RegCompleteHandler 0240  
                       __size_of_I2C_DO_RX_ACK 0004                 __size_of_wr1RegCompleteHandler 0011  
                        __size_of_I2C_DO_RESET 0005                  __end_of_wr1RegCompleteHandler 021E  
                        _TMR2_InterruptHandler 003E                          _MSSP_InterruptHandler 007C  
                 __size_of_I2C_DO_ADDRESS_NACK 0023                           __size_of_I2C_DO_IDLE 0005  
                         __size_of_I2C_DO_RCEN 0006                             __size_of_I2C_DO_RX 003A  
                           __size_of_I2C_DO_TX 004B  
